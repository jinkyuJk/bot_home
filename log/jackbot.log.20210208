[DEBUG|trader.py:7] 2021-02-08 08:50:02,636 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-08 08:50:06,603 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-08 08:50:19,933 > connected
[DEBUG|open_api.py:244] 2021-02-08 08:50:19,934 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 08:50:19,934 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 08:50:19,939 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 08:50:19,940 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 08:50:19,940 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 08:50:19,940 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 08:50:20,221 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 08:50:20,263 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 08:50:20,265 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 08:50:20,265 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 08:50:20,320 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-08 08:50:20,375 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 08:50:20,376 > 1
[DEBUG|open_api.py:290] 2021-02-08 08:50:21,220 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 08:50:21,220 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-08 08:50:21,221 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-08 08:50:21,221 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-08 08:50:21,222 > 000000495404194
[DEBUG|open_api.py:531] 2021-02-08 08:50:21,223 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 08:50:21,224 > 2
[DEBUG|open_api.py:290] 2021-02-08 08:50:21,265 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 08:50:21,265 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-08 08:50:21,267 > _opw00018!!!
[DEBUG|trader.py:114] 2021-02-08 08:50:21,576 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:21,582 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:21,884 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:21,884 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:22,186 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:22,186 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:22,489 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:22,489 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:22,790 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:22,790 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:23,093 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:23,093 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:23,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:23,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:23,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:23,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:23,998 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:23,998 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:24,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:24,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:24,601 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:24,601 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:24,902 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:24,902 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:25,204 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:25,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:25,508 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:25,508 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:25,811 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:25,811 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:26,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:26,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:26,414 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:26,414 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:26,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:26,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:27,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:27,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:27,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:27,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:27,622 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:27,622 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:27,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:27,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:28,225 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:28,225 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:28,527 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:28,527 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:28,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:28,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:29,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:29,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:29,433 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:29,433 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:29,735 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:29,735 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:30,037 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:30,037 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:30,340 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:30,340 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:30,641 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:30,641 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:30,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:30,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:31,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:31,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:31,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:31,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:31,849 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:31,849 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:32,151 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:32,151 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:32,453 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:32,453 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:32,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:32,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:33,056 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:33,056 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:33,359 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:33,359 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:33,662 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:33,662 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:33,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:33,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:34,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:34,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:34,567 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:34,567 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:34,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:34,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:35,172 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:35,172 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:35,474 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:35,474 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:35,777 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:35,777 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:36,079 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:36,079 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:36,381 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:36,381 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:36,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:36,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:36,984 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:36,984 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:37,286 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:37,286 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:37,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:37,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:37,892 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:37,892 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:38,194 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:38,194 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:38,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:38,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:38,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:38,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:39,100 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:39,100 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:39,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:39,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:39,703 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:39,703 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:40,006 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:40,006 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:40,308 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:40,308 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:40,610 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:40,610 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:40,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:40,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:41,215 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:41,215 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:41,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:41,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:41,819 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:41,819 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:42,121 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:42,121 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:42,425 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:42,425 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:42,727 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:42,727 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:43,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:43,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:43,331 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:43,331 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:43,633 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:43,633 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:43,935 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:43,935 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:44,238 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:44,238 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:44,539 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:44,539 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:44,842 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:44,842 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:45,144 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:45,144 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:45,446 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:45,446 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:45,749 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:45,749 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:46,051 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:46,051 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:46,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:46,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:46,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:46,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:46,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:46,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:47,259 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:47,259 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:47,562 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:47,562 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:47,865 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:47,865 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:48,166 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:48,166 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:48,468 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:48,468 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:48,770 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:48,770 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:49,073 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:49,073 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:49,375 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:49,375 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:49,677 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:49,677 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:49,979 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:49,979 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:50,282 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:50,282 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:50,583 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:50,583 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:50,885 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:50,885 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:51,186 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:51,186 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:51,489 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:51,489 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:51,792 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:51,792 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:52,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:52,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:52,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:52,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:52,697 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:52,697 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:52,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:52,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:53,300 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:53,300 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:53,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:53,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:53,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:53,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:54,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:54,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:54,508 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:54,508 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:54,810 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:54,810 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:55,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:55,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:55,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:55,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:55,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:55,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:56,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:56,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:56,321 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:56,321 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:56,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:56,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:56,925 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:56,925 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:57,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:57,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:57,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:57,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:57,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:57,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:58,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:58,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:58,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:58,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:58,737 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:58,737 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:59,040 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:59,040 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:59,342 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:59,342 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:59,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:59,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:50:59,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:50:59,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:00,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:00,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:00,552 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:00,552 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:00,854 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:00,854 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:01,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:01,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:01,458 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:01,458 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:01,760 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:01,760 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:02,062 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:02,062 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:02,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:02,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:02,666 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:02,666 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:02,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:02,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:03,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:03,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:03,573 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:03,573 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:03,875 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:03,875 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:04,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:04,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:04,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:04,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:04,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:04,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:05,082 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:05,082 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:05,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:05,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:05,686 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:05,686 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:05,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:05,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:06,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:06,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:06,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:06,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:06,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:06,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:07,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:07,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:07,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:07,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:07,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:07,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:08,101 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:08,101 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:08,403 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:08,403 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:08,705 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:08,705 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:09,008 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:09,008 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:09,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:09,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:09,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:09,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:09,914 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:09,914 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:10,216 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:10,216 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:10,518 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:10,518 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:10,820 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:10,820 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:11,122 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:11,122 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:11,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:11,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:11,725 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:11,725 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:12,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:12,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:12,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:12,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:12,631 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:12,631 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:12,934 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:12,934 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:13,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:13,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:13,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:13,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:13,839 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:13,839 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:14,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:14,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:14,444 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:14,444 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:14,747 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:14,747 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:15,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:15,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:15,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:15,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:15,655 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:15,655 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:15,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:15,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:16,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:16,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:16,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:16,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:16,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:16,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:17,165 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:17,165 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:17,468 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:17,468 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:17,770 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:17,770 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:18,072 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:18,072 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:18,374 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:18,374 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:18,678 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:18,678 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:18,980 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:18,980 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:19,282 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:19,282 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:19,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:19,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:19,885 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:19,885 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:20,187 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:20,187 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:20,489 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:20,489 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:20,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:20,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:21,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:21,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:21,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:21,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:21,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:21,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:21,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:21,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:22,302 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:22,302 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:22,604 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:22,604 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:22,907 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:22,907 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:23,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:23,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:23,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:23,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:23,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:23,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:24,116 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:24,116 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:24,417 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:24,417 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:24,718 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:24,718 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:25,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:25,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:25,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:25,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:25,625 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:25,625 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:25,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:25,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:26,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:26,230 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:26,531 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:26,531 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:26,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:26,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:27,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:27,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:27,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:27,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:27,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:27,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:28,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:28,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:28,345 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:28,345 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:28,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:28,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:28,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:28,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:29,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:29,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:29,552 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:29,552 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:29,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:29,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:30,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:30,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:30,458 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:30,458 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:30,761 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:30,761 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:31,063 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:31,063 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:31,366 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:31,366 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:31,668 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:31,668 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:31,970 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:31,970 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:32,273 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:32,273 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:32,575 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:32,575 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:32,877 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:32,877 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:33,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:33,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:33,481 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:33,481 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:33,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:33,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:34,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:34,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:34,388 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:34,388 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:34,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:34,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:34,994 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:34,994 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:35,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:35,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:35,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:35,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:35,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:35,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:36,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:36,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:36,502 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:36,502 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:36,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:36,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:37,106 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:37,106 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:37,410 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:37,410 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:37,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:37,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:38,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:38,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:38,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:38,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:38,617 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:38,617 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:38,918 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:38,918 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:39,221 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:39,221 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:39,524 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:39,524 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:39,826 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:39,826 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:40,129 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:40,129 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:40,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:40,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:40,733 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:40,733 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:41,035 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:41,035 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:41,337 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:41,337 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:41,640 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:41,640 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:41,941 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:41,941 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:42,244 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:42,244 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:42,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:42,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:42,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:42,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:43,149 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:43,149 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:43,451 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:43,451 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:43,753 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:43,753 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:44,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:44,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:44,358 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:44,358 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:44,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:44,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:44,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:44,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:45,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:45,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:45,564 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:45,564 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:45,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:45,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:46,168 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:46,168 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:46,469 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:46,469 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:46,773 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:46,773 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:47,075 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:47,075 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:47,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:47,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:47,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:47,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:47,982 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:47,982 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:48,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:48,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:48,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:48,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:48,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:48,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:49,191 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:49,191 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:49,493 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:49,493 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:49,794 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:49,794 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:50,097 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:50,097 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:50,398 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:50,398 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:50,700 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:50,700 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:51,002 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:51,002 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:51,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:51,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:51,608 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:51,608 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:51,911 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:51,911 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:52,212 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:52,212 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:52,513 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:52,513 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:52,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:52,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:53,117 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:53,117 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:53,418 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:53,418 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:53,720 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:53,720 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:54,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:54,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:54,325 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:54,325 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:54,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:54,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:54,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:54,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:55,232 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:55,232 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:55,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:55,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:55,835 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:55,835 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:56,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:56,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:56,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:56,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:56,742 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:56,742 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:57,046 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:57,046 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:57,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:57,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:57,650 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:57,650 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:57,952 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:57,952 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:58,255 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:58,255 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:58,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:58,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:58,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:58,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:59,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:59,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:59,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:59,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:51:59,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:51:59,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:00,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:00,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:00,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:00,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:00,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:00,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:00,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:00,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:01,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:01,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:01,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:01,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:01,882 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:01,882 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:02,184 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:02,184 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:02,486 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:02,486 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:02,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:02,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:03,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:03,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:03,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:03,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:03,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:03,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:03,998 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:03,998 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:04,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:04,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:04,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:04,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:04,904 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:04,904 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:05,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:05,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:05,509 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:05,509 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:05,812 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:05,812 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:06,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:06,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:06,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:06,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:06,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:06,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:07,019 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:07,019 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:07,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:07,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:07,624 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:07,624 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:07,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:07,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:08,228 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:08,228 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:08,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:08,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:08,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:08,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:09,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:09,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:09,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:09,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:09,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:09,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:10,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:10,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:10,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:10,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:10,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:10,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:10,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:10,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:11,248 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:11,248 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:11,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:11,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:11,851 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:11,851 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:12,153 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:12,153 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:12,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:12,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:12,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:12,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:13,061 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:13,061 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:13,363 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:13,363 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:13,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:13,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:13,966 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:13,966 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:14,268 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:14,268 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:14,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:14,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:14,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:14,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:15,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:15,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:15,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:15,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:15,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:15,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:16,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:16,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:16,382 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:16,382 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:16,684 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:16,684 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:16,986 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:16,986 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:17,289 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:17,289 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:17,591 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:17,591 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:17,893 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:17,893 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:18,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:18,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:18,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:18,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:18,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:18,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:19,100 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:19,100 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:19,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:19,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:19,705 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:19,705 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:20,007 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:20,007 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:20,309 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:20,309 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:20,611 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:20,611 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:20,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:20,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:21,215 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:21,215 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:21,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:21,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:21,819 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:21,819 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:22,121 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:22,121 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:22,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:22,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:22,725 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:22,725 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:23,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:23,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:23,328 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:23,328 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:23,630 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:23,630 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-08 08:52:25,066 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-08 08:52:29,029 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-08 08:52:33,106 > connected
[DEBUG|open_api.py:244] 2021-02-08 08:52:33,106 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 08:52:33,106 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 08:52:33,113 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 08:52:33,113 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 08:52:33,113 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 08:52:33,113 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 08:52:33,127 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 08:52:33,157 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 08:52:33,158 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 08:52:33,158 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 08:52:33,173 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 08:52:33,199 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-08 08:52:33,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:33,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:33,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:33,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:34,104 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:34,104 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:34,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:34,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:34,709 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:34,709 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:35,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:35,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:35,313 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:35,313 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:35,614 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:35,614 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:35,916 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:35,916 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:36,218 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:36,218 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:36,520 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:36,520 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:36,824 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:36,824 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:37,128 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:37,128 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:37,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:37,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:37,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:37,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:38,034 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:38,034 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:38,337 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:38,337 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:38,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:38,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:38,941 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:38,941 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:39,243 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:39,243 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:39,545 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:39,545 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:39,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:39,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:40,150 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:40,150 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:40,451 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:40,451 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:40,753 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:40,753 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:41,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:41,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:41,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:41,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:41,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:41,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:41,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:41,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:42,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:42,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:42,565 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:42,565 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:42,867 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:42,867 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:43,169 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:43,169 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:43,471 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:43,471 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:43,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:43,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:44,076 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:44,076 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:44,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:44,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:44,681 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:44,681 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:44,982 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:44,982 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:45,285 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:45,285 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:45,586 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:45,586 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:45,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:45,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:46,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:46,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:46,494 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:46,494 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:46,796 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:46,796 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:47,098 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:47,098 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:47,399 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:47,399 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:47,701 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:47,701 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:48,002 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:48,002 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:48,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:48,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:48,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:48,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:48,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:48,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:49,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:49,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:49,515 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:49,515 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:49,817 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:49,817 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:50,119 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:50,119 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:50,421 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:50,421 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:50,724 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:50,724 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:51,026 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:51,026 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:51,328 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:51,328 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:51,631 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:51,631 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:51,932 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:51,932 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:52,234 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:52,234 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:52,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:52,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:52,839 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:52,839 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:53,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:53,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:53,444 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:53,444 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:53,745 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:53,745 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:54,047 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:54,047 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:54,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:54,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:54,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:54,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:54,954 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:54,954 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:55,256 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:55,256 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:55,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:55,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:55,860 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:55,860 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:56,162 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:56,162 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:56,464 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:56,464 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:56,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:56,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:57,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:57,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:57,370 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:57,370 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:57,673 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:57,673 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:57,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:57,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:58,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:58,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:58,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:58,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:58,880 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:58,880 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:59,183 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:59,183 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:59,485 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:59,485 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:52:59,788 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:52:59,788 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:00,090 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:00,090 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:00,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:00,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:00,695 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:00,695 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:00,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:00,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:01,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:01,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:01,601 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:01,601 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:01,904 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:01,904 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:02,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:02,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:02,510 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:02,510 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:02,812 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:02,812 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:03,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:03,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:03,417 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:03,417 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:03,720 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:03,720 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:04,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:04,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:04,325 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:04,325 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:04,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:04,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:04,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:04,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:05,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:05,230 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:05,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:05,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:05,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:05,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:06,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:06,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:06,438 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:06,438 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:06,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:06,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:07,043 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:07,043 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:07,345 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:07,345 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:07,648 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:07,648 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:07,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:07,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:08,252 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:08,252 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:08,554 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:08,554 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:08,857 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:08,857 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:09,160 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:09,160 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:09,462 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:09,462 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:09,763 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:09,763 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:10,066 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:10,066 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:10,367 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:10,367 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:10,669 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:10,669 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:10,972 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:10,972 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:11,274 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:11,274 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:11,577 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:11,577 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:11,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:11,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:12,181 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:12,181 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:12,482 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:12,482 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:12,785 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:12,785 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:13,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:13,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:13,390 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:13,390 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:13,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:13,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:13,994 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:13,994 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:14,295 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:14,295 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:14,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:14,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:14,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:14,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:15,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:15,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:15,504 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:15,504 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:15,807 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:15,807 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:16,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:16,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:16,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:16,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:16,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:16,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:17,015 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:17,015 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:17,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:17,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:17,618 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:17,618 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:17,919 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:17,919 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:18,222 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:18,222 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:18,524 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:18,524 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:18,826 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:18,826 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:19,128 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:19,128 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:19,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:19,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:19,731 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:19,731 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:20,033 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:20,033 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:20,334 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:20,334 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:20,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:20,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:20,937 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:20,937 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:21,240 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:21,240 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:21,541 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:21,541 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:21,844 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:21,844 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:22,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:22,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:22,447 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:22,447 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:22,749 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:22,749 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:23,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:23,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:23,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:23,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:23,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:23,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:23,956 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:23,956 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:24,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:24,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:24,561 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:24,561 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:24,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:24,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:25,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:25,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:25,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:25,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:25,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:25,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:26,070 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:26,070 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:26,372 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:26,372 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:26,675 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:26,675 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:26,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:26,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:27,279 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:27,279 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:27,580 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:27,580 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:27,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:27,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:28,183 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:28,183 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:28,485 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:28,485 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:28,788 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:28,788 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:29,090 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:29,090 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:29,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:29,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:29,695 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:29,695 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:29,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:29,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:30,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:30,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:30,601 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:30,601 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:30,902 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:30,902 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:31,205 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:31,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:31,507 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:31,507 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:31,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:31,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:32,110 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:32,110 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:32,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:32,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:32,713 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:32,713 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:33,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:33,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:33,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:33,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:33,618 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:33,618 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:33,920 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:33,920 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:34,223 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:34,223 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:34,524 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:34,524 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:34,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:34,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:35,128 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:35,128 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:35,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:35,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:35,731 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:35,731 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:36,033 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:36,033 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:36,335 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:36,335 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:36,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:36,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:36,941 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:36,941 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:37,244 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:37,244 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:37,545 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:37,545 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:37,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:37,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:38,149 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:38,149 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:38,451 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:38,451 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:38,754 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:38,754 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:39,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:39,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:39,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:39,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:39,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:39,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:39,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:39,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:40,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:40,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:40,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:40,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:40,868 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:40,868 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:41,169 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:41,169 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:41,473 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:41,473 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:41,775 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:41,775 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:42,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:42,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:42,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:42,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:42,681 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:42,681 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:42,983 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:42,983 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:43,286 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:43,286 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:43,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:43,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:43,891 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:43,891 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:44,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:44,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:44,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:44,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:44,798 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:44,798 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:45,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:45,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:45,401 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:45,401 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:45,702 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:45,702 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:46,005 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:46,005 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:46,307 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:46,307 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:46,609 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:46,609 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:46,911 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:46,911 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:47,213 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:47,213 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:47,515 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:47,515 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:47,817 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:47,817 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:48,118 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:48,118 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:48,420 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:48,420 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:48,722 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:48,722 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:49,025 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:49,025 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:49,327 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:49,327 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:49,629 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:49,629 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:49,931 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:49,931 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:50,234 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:50,234 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:50,535 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:50,535 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:50,838 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:50,838 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:51,140 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:51,141 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:51,443 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:51,443 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:51,745 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:51,745 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:52,047 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:52,047 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:52,350 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:52,350 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:52,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:52,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:52,954 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:52,954 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:53,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:53,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:53,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:53,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:53,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:53,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:54,162 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:54,162 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:54,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:54,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:54,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:54,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:55,070 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:55,070 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:55,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:55,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:55,674 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:55,674 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:55,976 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:55,976 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:56,279 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:56,279 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:56,581 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:56,581 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:56,883 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:56,883 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:57,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:57,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:57,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:57,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:57,790 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:57,790 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:58,091 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:58,091 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:58,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:58,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:58,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:58,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:58,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:58,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:59,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:59,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:59,603 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:59,603 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:53:59,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:53:59,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:00,206 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:00,206 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:00,509 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:00,509 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:00,811 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:00,811 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:01,114 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:01,114 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:01,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:01,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:01,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:01,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:02,019 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:02,019 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:02,323 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:02,323 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:02,624 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:02,624 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:02,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:02,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:03,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:03,232 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:03,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:03,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:03,835 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:03,835 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:04,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:04,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:04,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:04,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:04,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:04,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:05,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:05,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:05,345 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:05,345 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:05,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:05,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:05,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:05,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:06,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:06,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:06,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:06,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:06,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:06,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:07,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:07,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:07,456 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:07,456 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:07,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:07,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:08,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:08,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:08,362 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:08,362 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:08,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:08,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:08,966 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:08,966 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:09,268 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:09,268 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:09,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:09,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:09,873 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:09,873 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:10,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:10,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:10,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:10,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:10,779 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:10,779 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:11,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:11,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:11,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:11,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:11,685 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:11,685 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:11,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:11,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:12,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:12,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:12,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:12,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:12,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:12,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:13,196 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:13,196 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:13,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:13,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:13,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:13,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:14,102 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:14,102 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:14,404 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:14,404 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:14,706 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:14,706 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:15,009 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:15,009 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:15,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:15,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:15,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:15,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:15,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:15,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:16,216 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:16,216 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:16,517 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:16,517 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:16,820 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:16,820 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:17,124 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:17,124 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:17,426 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:17,426 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:17,729 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:17,729 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:18,030 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:18,030 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:18,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:18,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:18,633 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:18,633 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:18,935 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:18,935 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:19,237 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:19,237 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:19,540 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:19,540 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:19,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:19,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:20,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:20,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:20,446 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:20,446 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:20,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:20,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:21,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:21,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:21,351 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:21,351 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:21,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:21,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:21,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:21,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:22,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:22,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:22,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:22,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:22,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:22,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:23,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:23,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:23,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:23,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:23,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:23,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:24,069 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:24,069 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:24,371 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:24,371 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:24,674 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:24,674 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:24,975 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:24,975 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:25,277 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:25,277 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:25,579 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:25,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:25,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:25,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:26,183 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:26,183 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:26,485 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:26,485 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:26,786 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:26,786 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:27,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:27,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:27,391 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:27,391 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:27,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:27,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:27,994 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:27,994 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:28,295 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:28,295 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:28,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:28,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:28,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:28,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:29,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:29,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:29,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:29,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:29,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:29,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:30,107 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:30,107 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:30,410 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:30,410 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:30,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:30,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:31,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:31,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:31,317 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:31,317 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:31,619 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:31,619 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:31,920 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:31,920 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:32,223 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:32,223 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:32,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:32,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:32,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:32,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:33,130 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:33,130 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:33,432 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:33,432 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:33,734 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:33,734 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:34,035 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:34,035 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:34,338 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:34,338 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:34,641 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:34,641 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:34,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:34,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:35,246 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:35,246 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:35,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:35,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:35,851 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:35,851 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:36,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:36,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:36,456 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:36,456 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:36,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:36,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:37,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:37,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:37,362 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:37,362 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:37,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:37,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:37,965 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:37,965 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:38,268 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:38,268 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:38,569 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:38,569 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:38,872 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:38,872 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:39,174 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:39,174 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:39,477 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:39,477 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:39,778 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:39,778 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:40,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:40,080 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:40,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:40,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:40,684 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:40,684 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:40,987 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:40,987 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:41,289 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:41,289 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:41,591 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:41,591 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:41,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:41,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:42,196 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:42,196 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:42,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:42,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:42,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:42,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:43,101 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:43,101 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:43,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:43,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:43,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:43,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:44,008 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:44,008 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:44,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:44,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:44,612 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:44,612 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:44,914 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:44,914 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:45,216 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:45,216 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-08 08:54:46,597 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-08 08:54:50,565 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-08 08:54:54,835 > connected
[DEBUG|open_api.py:244] 2021-02-08 08:54:54,835 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 08:54:54,835 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 08:54:54,837 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 08:54:54,837 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 08:54:54,837 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 08:54:54,837 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 08:54:54,850 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 08:54:54,882 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 08:54:54,882 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 08:54:54,882 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 08:54:54,900 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 08:54:54,929 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-08 08:54:55,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:55,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:55,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:55,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:55,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:55,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:56,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:56,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:56,440 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:56,440 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:56,743 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:56,743 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:57,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:57,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:57,347 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:57,347 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:57,648 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:57,648 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:57,950 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:57,950 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:58,252 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:58,252 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:58,555 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:58,555 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:58,859 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:58,859 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:59,161 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:59,161 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:59,464 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:59,464 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:54:59,765 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:54:59,765 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:00,067 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:00,067 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:00,368 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:00,368 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:00,671 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:00,671 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:00,973 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:00,973 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:01,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:01,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:01,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:01,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:01,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:01,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:02,181 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:02,181 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:02,482 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:02,482 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:02,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:02,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:03,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:03,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:03,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:03,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:03,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:03,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:03,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:03,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:04,294 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:04,294 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:04,597 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:04,597 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:04,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:04,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:05,201 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:05,201 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:05,503 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:05,503 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:05,805 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:05,805 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:06,107 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:06,107 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:06,410 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:06,410 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:06,711 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:06,711 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:07,013 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:07,013 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:07,317 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:07,317 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:07,618 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:07,618 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:07,920 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:07,920 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:08,222 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:08,222 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:08,525 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:08,525 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:08,826 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:08,826 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:09,128 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:09,128 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:09,429 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:09,429 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:09,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:09,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:10,035 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:10,035 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:10,337 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:10,337 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:10,640 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:10,640 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:10,942 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:10,942 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:11,244 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:11,244 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:11,546 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:11,546 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:11,849 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:11,849 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:12,151 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:12,151 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:12,454 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:12,454 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:12,756 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:12,756 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:13,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:13,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:13,361 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:13,361 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:13,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:13,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:13,966 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:13,966 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:14,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:14,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:14,573 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:14,573 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:14,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:14,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:15,177 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:15,177 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:15,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:15,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:15,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:15,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:16,083 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:16,083 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:16,386 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:16,386 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:16,689 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:16,689 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:16,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:16,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:17,292 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:17,292 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:17,594 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:17,594 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:17,896 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:17,896 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:18,199 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:18,199 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:18,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:18,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:18,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:18,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:19,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:19,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:19,408 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:19,408 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:19,711 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:19,711 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:20,013 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:20,013 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:20,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:20,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:20,618 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:20,618 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:20,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:20,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:21,224 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:21,224 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:21,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:21,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:21,828 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:21,828 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:22,129 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:22,129 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:22,431 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:22,431 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:22,733 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:22,733 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:23,035 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:23,035 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:23,337 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:23,337 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:23,640 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:23,640 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:23,942 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:23,942 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:24,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:24,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:24,546 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:24,546 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:24,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:24,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:25,149 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:25,149 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:25,452 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:25,452 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:25,754 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:25,754 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:26,056 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:26,056 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:26,359 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:26,359 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:26,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:26,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:26,963 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:26,963 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:27,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:27,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:27,567 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:27,567 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:27,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:27,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:28,172 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:28,172 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:28,476 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:28,476 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:28,779 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:28,779 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:29,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:29,080 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:29,382 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:29,382 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:29,683 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:29,683 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:29,985 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:29,985 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:30,288 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:30,288 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:30,590 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:30,590 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:30,893 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:30,893 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:31,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:31,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:31,497 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:31,497 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:31,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:31,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:32,101 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:32,101 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:32,404 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:32,404 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:32,706 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:32,706 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:33,009 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:33,009 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:33,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:33,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:33,612 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:33,612 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:33,913 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:33,913 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:34,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:34,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:34,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:34,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:34,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:34,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:35,119 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:35,119 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:35,420 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:35,420 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:35,723 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:35,723 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:36,024 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:36,024 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:36,326 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:36,326 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:36,628 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:36,628 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:36,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:36,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:37,232 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:37,232 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:37,534 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:37,534 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:37,836 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:37,836 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:38,138 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:38,138 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:38,441 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:38,441 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:38,745 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:38,745 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:39,048 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:39,048 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:39,350 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:39,350 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:39,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:39,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:39,955 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:39,955 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:40,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:40,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:40,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:40,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:40,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:40,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:41,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:41,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:41,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:41,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:41,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:41,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:42,067 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:42,067 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:42,370 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:42,370 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:42,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:42,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:42,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:42,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:43,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:43,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:43,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:43,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:43,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:43,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:44,183 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:44,183 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:44,485 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:44,485 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:44,788 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:44,788 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:45,091 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:45,091 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:45,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:45,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:45,695 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:45,695 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:45,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:45,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:46,298 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:46,298 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:46,600 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:46,600 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:46,901 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:46,901 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:47,203 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:47,203 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:47,506 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:47,506 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:47,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:47,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:48,111 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:48,111 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:48,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:48,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:48,714 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:48,714 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:49,017 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:49,017 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:49,318 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:49,318 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:49,619 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:49,619 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:49,922 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:49,922 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:50,223 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:50,223 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:50,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:50,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:50,828 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:50,828 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:51,131 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:51,131 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:51,433 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:51,433 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:51,735 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:51,735 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:52,037 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:52,037 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:52,340 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:52,340 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:52,643 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:52,643 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:52,944 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:52,944 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:53,246 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:53,246 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:53,549 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:53,549 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:53,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:53,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:54,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:54,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:54,453 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:54,453 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:54,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:54,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:55,058 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:55,058 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:55,361 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:55,361 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:55,663 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:55,663 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:55,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:55,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:56,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:56,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:56,568 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:56,568 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:56,870 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:56,870 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:57,174 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:57,174 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:57,476 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:57,476 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:57,779 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:57,779 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:58,082 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:58,082 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:58,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:58,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:58,685 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:58,685 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:58,987 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:58,987 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:59,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:59,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:59,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:59,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:55:59,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:55:59,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:00,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:00,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:00,497 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:00,497 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:00,798 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:00,798 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:01,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:01,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:01,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:01,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:01,705 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:01,705 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:02,008 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:02,008 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:02,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:02,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:02,612 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:02,612 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:02,914 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:02,914 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:03,215 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:03,215 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:03,517 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:03,517 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:03,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:03,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:04,120 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:04,120 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:04,422 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:04,422 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:04,725 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:04,725 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:05,026 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:05,026 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:05,328 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:05,328 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:05,630 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:05,630 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:05,931 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:05,931 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:06,233 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:06,233 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:06,536 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:06,536 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:06,838 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:06,838 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:07,141 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:07,141 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:07,442 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:07,442 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:07,744 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:07,744 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:08,045 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:08,045 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:08,347 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:08,347 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:08,649 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:08,649 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:08,952 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:08,952 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:09,254 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:09,254 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:09,556 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:09,556 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:09,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:09,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:10,161 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:10,161 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:10,463 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:10,463 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:10,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:10,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:11,066 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:11,066 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:11,367 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:11,367 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:11,670 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:11,670 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:11,972 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:11,972 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:12,274 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:12,274 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:12,576 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:12,576 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:12,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:12,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:13,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:13,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:13,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:13,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:13,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:13,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:14,087 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:14,087 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:14,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:14,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:14,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:14,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:14,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:14,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:15,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:15,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:15,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:15,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:15,904 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:15,904 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:16,206 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:16,206 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:16,507 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:16,507 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:16,810 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:16,810 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:17,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:17,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:17,414 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:17,414 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:17,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:17,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:18,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:18,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:18,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:18,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:18,622 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:18,622 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:18,923 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:18,923 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:19,225 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:19,225 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:19,527 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:19,527 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:19,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:19,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:20,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:20,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:20,435 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:20,435 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:20,738 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:20,738 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:21,040 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:21,040 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:21,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:21,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:21,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:21,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:21,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:21,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:22,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:22,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:22,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:22,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:22,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:22,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:23,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:23,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:23,458 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:23,458 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:23,760 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:23,760 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:24,061 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:24,061 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:24,365 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:24,365 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:24,667 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:24,667 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:24,968 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:24,968 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:25,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:25,270 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:25,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:25,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:25,873 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:25,873 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:26,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:26,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:26,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:26,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:26,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:26,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:27,083 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:27,083 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:27,385 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:27,385 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:27,687 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:27,687 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:27,989 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:27,989 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:28,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:28,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:28,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:28,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:28,896 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:28,896 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:29,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:29,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:29,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:29,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:29,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:29,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:30,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:30,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:30,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:30,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:30,710 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:30,710 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:31,012 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:31,012 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:31,314 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:31,314 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:31,617 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:31,617 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:31,919 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:31,919 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:32,221 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:32,221 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:32,522 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:32,522 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:32,825 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:32,825 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:33,129 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:33,129 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:33,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:33,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:33,733 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:33,733 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:34,034 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:34,034 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:34,336 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:34,336 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:34,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:34,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:34,941 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:34,941 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:35,243 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:35,243 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:35,546 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:35,546 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:35,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:35,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:36,150 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:36,150 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:36,452 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:36,452 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:36,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:36,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:37,056 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:37,056 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:37,358 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:37,358 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:37,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:37,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:37,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:37,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:38,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:38,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:38,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:38,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:38,868 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:38,868 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:39,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:39,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:39,473 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:39,473 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:39,776 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:39,776 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:40,078 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:40,078 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:40,380 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:40,380 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:40,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:40,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:40,983 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:40,983 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:41,285 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:41,285 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:41,587 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:41,587 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:41,889 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:41,889 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:42,192 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:42,192 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:42,494 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:42,494 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:42,796 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:42,796 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:43,098 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:43,098 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:43,400 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:43,400 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:43,702 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:43,702 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:44,004 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:44,004 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:44,307 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:44,307 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:44,609 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:44,609 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:44,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:44,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:45,213 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:45,213 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:45,514 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:45,514 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:45,816 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:45,816 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:46,118 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:46,118 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:46,420 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:46,420 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:46,724 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:46,724 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:47,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:47,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:47,329 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:47,329 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:47,630 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:47,630 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:47,932 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:47,932 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:48,234 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:48,234 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:48,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:48,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:48,841 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:48,841 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:49,143 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:49,143 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:49,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:49,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:49,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:49,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:50,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:50,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:50,350 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:50,350 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:50,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:50,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:50,955 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:50,955 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:51,257 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:51,257 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:51,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:51,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:51,860 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:51,860 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:52,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:52,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:52,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:52,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:52,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:52,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:53,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:53,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:53,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:53,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:53,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:53,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:53,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:53,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:54,277 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:54,277 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:54,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:54,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:54,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:54,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:55,182 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:55,182 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:55,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:55,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:55,786 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:55,786 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:56,089 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:56,089 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:56,391 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:56,391 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:56,693 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:56,693 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:56,995 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:56,995 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:57,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:57,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:57,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:57,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:57,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:57,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:58,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:58,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:58,506 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:58,506 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:58,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:58,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:59,111 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:59,111 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:59,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:59,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:56:59,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:56:59,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:00,017 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:00,017 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:00,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:00,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:00,621 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:00,621 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:00,923 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:00,923 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:01,226 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:01,226 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:01,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:01,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:01,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:01,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:02,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:02,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:02,435 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:02,435 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:02,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:02,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:03,039 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:03,039 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:03,342 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:03,342 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:03,644 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:03,644 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:03,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:03,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:04,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:04,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:04,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:04,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:04,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:04,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:05,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:05,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:05,456 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:05,456 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:05,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:05,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:06,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:06,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:06,363 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:06,363 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:06,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:06,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:06,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:06,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-08 08:57:08,473 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-08 08:57:12,435 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-08 08:57:16,397 > connected
[DEBUG|open_api.py:244] 2021-02-08 08:57:16,397 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 08:57:16,397 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 08:57:16,397 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 08:57:16,397 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 08:57:16,398 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 08:57:16,398 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 08:57:16,411 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 08:57:16,441 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 08:57:16,441 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 08:57:16,441 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 08:57:16,457 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 08:57:16,480 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-08 08:57:16,782 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:16,787 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:17,089 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:17,089 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:17,392 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:17,392 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:17,694 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:17,694 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:17,996 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:17,996 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:18,298 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:18,298 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:18,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:18,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:18,902 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:18,902 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:19,204 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:19,204 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:19,506 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:19,506 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:19,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:19,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:20,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:20,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:20,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:20,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:20,713 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:20,713 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:21,016 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:21,016 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:21,318 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:21,318 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:21,620 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:21,620 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:21,922 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:21,922 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:22,225 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:22,225 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:22,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:22,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:22,828 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:22,828 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:23,130 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:23,130 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:23,432 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:23,432 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:23,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:23,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:24,038 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:24,038 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:24,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:24,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:24,643 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:24,643 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:24,945 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:24,945 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:25,246 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:25,246 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:25,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:25,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:25,851 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:25,851 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:26,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:26,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:26,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:26,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:26,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:26,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:27,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:27,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:27,362 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:27,362 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:27,663 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:27,663 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:27,965 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:27,965 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:28,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:28,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:28,569 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:28,569 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:28,872 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:28,872 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:29,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:29,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:29,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:29,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:29,779 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:29,779 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:30,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:30,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:30,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:30,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:30,685 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:30,685 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:30,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:30,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:31,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:31,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:31,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:31,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:31,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:31,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:32,196 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:32,196 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:32,497 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:32,497 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:32,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:32,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:33,100 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:33,100 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:33,403 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:33,403 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:33,705 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:33,705 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:34,008 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:34,008 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:34,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:34,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:34,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:34,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:34,914 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:34,914 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:35,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:35,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:35,518 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:35,518 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:35,821 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:35,821 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:36,122 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:36,122 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:36,425 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:36,425 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:36,726 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:36,726 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:37,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:37,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:37,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:37,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:37,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:37,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:37,934 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:37,934 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:38,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:38,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:38,540 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:38,540 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:38,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:38,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:39,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:39,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:39,446 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:39,446 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:39,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:39,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:40,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:40,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:40,351 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:40,351 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:40,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:40,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:40,956 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:40,956 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:41,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:41,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:41,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:41,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:41,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:41,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:42,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:42,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:42,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:42,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:42,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:42,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:43,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:43,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:43,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:43,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:43,676 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:43,676 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:43,978 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:43,978 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:44,279 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:44,279 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:44,581 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:44,581 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:44,883 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:44,883 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:45,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:45,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:45,488 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:45,488 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:45,790 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:45,790 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:46,093 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:46,093 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:46,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:46,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:46,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:46,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:46,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:46,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:47,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:47,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:47,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:47,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:47,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:47,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:48,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:48,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:48,509 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:48,509 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:48,811 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:48,811 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:49,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:49,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:49,416 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:49,416 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:49,719 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:49,719 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:50,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:50,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:50,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:50,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:50,625 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:50,625 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:50,928 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:50,928 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:51,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:51,230 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:51,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:51,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:51,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:51,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:52,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:52,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:52,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:52,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:52,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:52,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:53,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:53,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:53,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:53,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:53,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:53,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:53,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:53,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:54,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:54,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:54,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:54,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:54,854 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:54,854 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:55,157 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:55,157 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:55,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:55,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:55,761 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:55,761 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:56,063 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:56,063 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:56,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:56,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:56,666 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:56,666 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:56,969 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:56,969 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:57,271 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:57,271 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:57,573 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:57,573 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:57,875 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:57,875 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:58,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:58,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:58,477 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:58,477 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:58,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:58,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:59,082 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:59,082 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:59,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:59,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:59,687 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:59,687 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:57:59,991 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:57:59,991 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:00,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:00,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:00,594 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:00,594 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:00,896 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:00,896 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:01,198 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:01,198 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:01,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:01,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:01,801 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:01,801 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:02,102 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:02,102 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:02,405 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:02,405 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:02,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:02,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:03,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:03,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:03,312 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:03,312 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:03,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:03,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:03,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:03,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:04,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:04,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:04,518 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:04,518 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:04,819 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:04,819 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:05,121 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:05,121 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:05,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:05,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:05,727 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:05,727 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:06,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:06,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:06,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:06,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:06,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:06,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:06,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:06,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:07,234 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:07,234 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:07,535 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:07,535 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:07,839 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:07,839 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:08,141 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:08,141 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:08,444 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:08,444 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:08,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:08,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:09,047 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:09,047 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:09,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:09,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:09,650 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:09,650 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:09,953 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:09,953 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:10,256 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:10,256 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:10,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:10,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:10,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:10,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:11,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:11,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:11,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:11,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:11,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:11,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:12,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:12,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:12,371 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:12,371 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:12,674 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:12,674 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:12,975 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:12,975 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:13,277 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:13,277 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:13,580 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:13,580 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:13,882 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:13,882 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:14,184 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:14,184 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:14,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:14,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:14,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:14,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:15,091 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:15,091 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:15,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:15,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:15,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:15,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:15,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:15,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:16,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:16,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:16,603 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:16,603 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:16,906 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:16,906 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:17,208 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:17,208 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:17,510 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:17,510 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:17,812 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:17,812 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:18,114 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:18,114 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:18,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:18,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:18,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:18,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:19,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:19,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:19,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:19,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:19,621 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:19,621 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:19,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:19,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:20,226 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:20,226 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:20,527 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:20,527 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:20,829 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:20,829 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:21,131 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:21,131 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:21,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:21,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:21,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:21,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:22,043 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:22,043 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:22,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:22,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:22,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:22,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:22,948 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:22,948 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:23,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:23,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:23,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:23,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:23,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:23,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:24,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:24,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:24,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:24,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:24,760 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:24,760 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:25,061 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:25,061 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:25,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:25,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:25,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:25,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:25,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:25,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:26,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:26,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:26,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:26,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:26,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:26,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:27,177 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:27,177 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:27,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:27,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:27,779 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:27,779 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:28,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:28,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:28,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:28,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:28,684 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:28,684 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:28,986 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:28,986 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:29,288 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:29,288 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:29,590 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:29,590 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:29,892 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:29,892 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:30,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:30,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:30,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:30,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:30,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:30,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:31,102 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:31,102 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:31,403 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:31,403 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:31,706 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:31,706 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:32,008 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:32,008 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:32,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:32,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:32,614 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:32,614 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:32,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:32,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:33,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:33,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:33,519 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:33,519 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:33,822 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:33,822 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:34,124 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:34,124 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:34,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:34,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:34,729 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:34,729 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:35,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:35,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:35,333 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:35,333 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:35,634 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:35,634 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:35,936 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:35,936 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:36,238 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:36,238 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:36,541 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:36,541 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:36,844 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:36,844 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:37,146 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:37,146 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:37,447 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:37,447 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:37,750 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:37,750 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:38,052 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:38,052 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:38,353 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:38,353 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:38,656 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:38,656 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:38,959 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:38,959 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:39,262 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:39,262 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:39,564 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:39,564 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:39,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:39,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:40,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:40,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:40,470 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:40,470 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:40,772 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:40,772 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:41,075 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:41,075 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:41,377 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:41,377 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:41,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:41,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:41,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:41,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:42,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:42,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:42,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:42,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:42,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:42,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:43,192 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:43,192 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:43,495 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:43,495 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:43,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:43,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:44,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:44,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:44,401 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:44,401 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:44,703 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:44,703 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:45,006 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:45,006 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:45,309 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:45,309 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:45,611 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:45,611 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:45,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:45,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:46,215 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:46,215 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:46,517 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:46,517 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:46,819 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:46,819 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:47,122 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:47,122 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:47,425 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:47,425 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:47,727 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:47,727 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:48,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:48,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:48,331 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:48,331 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:48,633 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:48,633 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:48,934 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:48,934 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:49,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:49,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:49,539 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:49,539 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:49,841 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:49,841 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:50,144 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:50,144 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:50,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:50,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:50,747 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:50,747 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:51,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:51,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:51,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:51,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:51,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:51,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:51,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:51,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:52,260 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:52,260 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:52,562 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:52,562 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:52,864 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:52,864 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:53,165 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:53,165 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:53,467 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:53,467 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:53,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:53,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:54,070 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:54,070 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:54,374 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:54,374 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:54,676 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:54,676 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:54,978 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:54,978 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:55,280 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:55,280 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:55,581 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:55,581 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:55,883 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:55,883 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:56,184 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:56,184 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:56,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:56,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:56,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:56,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:57,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:57,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:57,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:57,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:57,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:57,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:57,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:57,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:58,300 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:58,300 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:58,603 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:58,603 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:58,906 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:58,906 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:59,208 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:59,208 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:59,511 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:59,511 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:58:59,813 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:58:59,813 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:00,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:00,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:00,416 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:00,416 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:00,718 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:00,718 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:01,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:01,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:01,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:01,323 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:01,626 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:01,626 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:01,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:01,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:02,229 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:02,229 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:02,530 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:02,530 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:02,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:02,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:03,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:03,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:03,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:03,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:03,735 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:03,735 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:04,038 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:04,038 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:04,340 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:04,340 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:04,643 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:04,643 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:04,944 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:04,944 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:05,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:05,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:05,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:05,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:05,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:05,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:06,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:06,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:06,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:06,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:06,757 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:06,757 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:07,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:07,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:07,360 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:07,360 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:07,663 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:07,663 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:07,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:07,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:08,266 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:08,266 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:08,568 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:08,568 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:08,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:08,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:09,171 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:09,171 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:09,474 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:09,474 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:09,775 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:09,775 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:10,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:10,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:10,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:10,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:10,681 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:10,681 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:10,983 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:10,983 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:11,284 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:11,284 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:11,587 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:11,587 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:11,889 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:11,889 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:12,191 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:12,191 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:12,492 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:12,492 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:12,795 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:12,795 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:13,098 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:13,098 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:13,399 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:13,399 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:13,701 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:13,701 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:14,004 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:14,004 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:14,307 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:14,307 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:14,608 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:14,608 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:14,910 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:14,910 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:15,212 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:15,212 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:15,513 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:15,513 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:15,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:15,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:16,116 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:16,116 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:16,419 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:16,419 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:16,722 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:16,722 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:17,023 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:17,023 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:17,326 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:17,326 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:17,628 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:17,628 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:17,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:17,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:18,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:18,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:18,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:18,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:18,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:18,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:19,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:19,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:19,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:19,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:19,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:19,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:20,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:20,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:20,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:20,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:20,649 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:20,649 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:20,950 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:20,950 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:21,252 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:21,252 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:21,555 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:21,555 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:21,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:21,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:22,160 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:22,160 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:22,463 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:22,463 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:22,765 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:22,765 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:23,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:23,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:23,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:23,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:23,671 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:23,671 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:23,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:23,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:24,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:24,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:24,577 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:24,577 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:24,880 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:24,880 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:25,182 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:25,182 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:25,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:25,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:25,785 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:25,785 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:26,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:26,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:26,391 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:26,391 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:26,693 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:26,693 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:26,995 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:26,995 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:27,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:27,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:27,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:27,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:27,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:27,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:28,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:28,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:28,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:28,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:28,807 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:28,807 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:29,110 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:29,110 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:29,412 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:29,412 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-08 08:59:30,615 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-08 08:59:34,550 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-08 08:59:38,601 > connected
[DEBUG|open_api.py:244] 2021-02-08 08:59:38,601 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 08:59:38,602 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 08:59:38,602 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 08:59:38,602 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 08:59:38,602 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 08:59:38,602 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 08:59:38,616 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 08:59:38,642 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 08:59:38,643 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 08:59:38,643 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 08:59:38,658 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 08:59:38,685 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-08 08:59:38,987 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:38,987 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-08 08:59:39,289 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-08 08:59:39,289 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|open_api.py:303] 2021-02-08 15:32:17,082 > connected
[DEBUG|open_api.py:244] 2021-02-08 15:32:17,083 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 15:32:17,083 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 15:32:17,084 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 15:32:17,084 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 15:32:17,084 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 15:32:17,084 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 15:32:17,104 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 15:32:17,140 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 15:32:17,141 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 15:32:17,141 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 15:32:17,166 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 15:32:17,194 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 15:32:25,452 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:531] 2021-02-08 15:32:25,454 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 15:32:25,454 > 1
[DEBUG|open_api.py:290] 2021-02-08 15:32:35,644 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:32:35,644 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-08 15:32:35,647 > _opw00018!!!
[DEBUG|collector_api.py:259] 2021-02-08 15:33:13,852 > get_code_list
[DEBUG|collector_api.py:924] 2021-02-08 15:33:15,260 > py_check_balance!!!
[DEBUG|open_api.py:1124] 2021-02-08 15:33:15,261 > 2
[DEBUG|open_api.py:303] 2021-02-08 15:37:28,865 > connected
[DEBUG|open_api.py:244] 2021-02-08 15:37:28,865 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 15:37:28,865 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 15:37:28,870 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 15:37:28,870 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 15:37:28,871 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 15:37:28,871 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 15:37:28,886 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 15:37:28,920 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 15:37:28,921 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 15:37:28,921 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 15:37:28,946 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 15:37:28,975 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 15:37:31,465 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:924] 2021-02-08 15:37:31,467 > py_check_balance!!!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:31,467 > 1
[DEBUG|open_api.py:290] 2021-02-08 15:37:32,247 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:37:32,248 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-08 15:37:32,250 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-08 15:37:32,250 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-08 15:37:32,250 > 000000495404194
[DEBUG|open_api.py:1124] 2021-02-08 15:37:32,251 > 2
[DEBUG|open_api.py:290] 2021-02-08 15:37:32,294 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:37:32,294 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-08 15:37:32,296 > _opw00018!!!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:32,855 > 3
[DEBUG|open_api.py:290] 2021-02-08 15:37:32,888 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:37:32,888 >  조회가 완료되었습니다.
[DEBUG|open_api.py:1486] 2021-02-08 15:37:32,890 > _opt10074!!!
[DEBUG|open_api.py:1495] 2021-02-08 15:37:32,890 > today_profit
[DEBUG|open_api.py:1496] 2021-02-08 15:37:32,890 > 0
[DEBUG|collector_api.py:692] 2021-02-08 15:37:32,903 > self.open_api.today!!!!!!!!
[DEBUG|collector_api.py:693] 2021-02-08 15:37:32,903 > 20210208
[DEBUG|collector_api.py:723] 2021-02-08 15:37:32,946 > today_profit_list total_profitcut 이 비었다!!!! 
[DEBUG|collector_api.py:731] 2021-02-08 15:37:32,947 > today_profit_list total_losscut 이 비었다!!!! 
[DEBUG|collector_api.py:750] 2021-02-08 15:37:32,994 > jango_data rows!!!
[DEBUG|collector_api.py:751] 2021-02-08 15:37:32,994 > [('20201228',), ('20201229',), ('20201230',), ('20201231',), ('20210101',), ('20210102',), ('20210103',), ('20210104',), ('20210105',), ('20210106',), ('20210107',), ('20210108',), ('20210109',), ('20210110',), ('20210111',), ('20210112',), ('20210113',), ('20210114',), ('20210115',), ('20210118',), ('20210119',), ('20210120',), ('20210121',), ('20210122',), ('20210123',), ('20210125',), ('20210126',), ('20210127',), ('20210128',), ('20210129',), ('20210130',), ('20210201',), ('20210202',), ('20210203',), ('20210204',), ('20210205',), ('20210208',)]
[DEBUG|collector_api.py:753] 2021-02-08 15:37:32,995 > jango_data len(rows)!!!
[DEBUG|collector_api.py:755] 2021-02-08 15:37:32,996 > 37
[DEBUG|open_api.py:1458] 2021-02-08 15:37:33,893 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:33,894 > 4
[DEBUG|open_api.py:290] 2021-02-08 15:37:33,930 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:37:33,930 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-08 15:37:33,932 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-08 15:37:33,932 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-08 15:37:33,932 > 000000495404194
[DEBUG|open_api.py:531] 2021-02-08 15:37:33,933 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:34,496 > 5
[DEBUG|open_api.py:290] 2021-02-08 15:37:34,545 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:37:34,545 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-08 15:37:34,547 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-08 15:37:34,552 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-08 15:37:34,697 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-08 15:37:34,697 > []
[DEBUG|collector_api.py:588] 2021-02-08 15:37:34,701 > db_to_today_profit_list!!!
[DEBUG|open_api.py:1691] 2021-02-08 15:37:34,702 > reset_opt10073_output!!!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:35,098 > 6
[DEBUG|open_api.py:290] 2021-02-08 15:37:35,141 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-08 15:37:35,141 >  조회가 완료되었습니다.
[DEBUG|open_api.py:1588] 2021-02-08 15:37:35,142 > _opt10073!!!
[DEBUG|open_api.py:1609] 2021-02-08 15:37:35,142 > _opt10073 end!!!
[DEBUG|collector_api.py:606] 2021-02-08 15:37:35,143 > self.opt10073_output['multi']!!!!!
[DEBUG|collector_api.py:607] 2021-02-08 15:37:35,143 > []
[DEBUG|collector_api.py:629] 2021-02-08 15:37:35,146 > today_profit_item!!!
[DEBUG|collector_api.py:630] 2021-02-08 15:37:35,146 > Empty DataFrame
Columns: [date, code, code_name, amount, today_profit, earning_rate]
Index: []
[DEBUG|collector_api.py:180] 2021-02-08 15:37:35,157 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 15:37:35,199 > ++++++++++++++DSR++++++++++++++++++++1/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:35,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:35,715 > 7
[DEBUG|collector_api.py:200] 2021-02-08 15:37:36,029 > ++++++++++++++GS글로벌++++++++++++++++++++2/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:36,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:36,336 > 8
[DEBUG|collector_api.py:200] 2021-02-08 15:37:36,607 > ++++++++++++++HDC현대산업개발++++++++++++++++++++3/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:36,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:36,943 > 9
[DEBUG|collector_api.py:200] 2021-02-08 15:37:37,185 > ++++++++++++++KG케미칼++++++++++++++++++++4/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:37,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:37,550 > 10
[DEBUG|collector_api.py:200] 2021-02-08 15:37:37,813 > ++++++++++++++LG이노텍++++++++++++++++++++5/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:37,814 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:38,158 > 11
[DEBUG|collector_api.py:200] 2021-02-08 15:37:38,403 > ++++++++++++++LG전자++++++++++++++++++++6/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:38,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:38,766 > 12
[DEBUG|collector_api.py:200] 2021-02-08 15:37:39,040 > ++++++++++++++LG헬로비전++++++++++++++++++++7/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:39,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:39,373 > 13
[DEBUG|collector_api.py:200] 2021-02-08 15:37:39,618 > ++++++++++++++OCI++++++++++++++++++++8/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:39,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:39,981 > 14
[DEBUG|collector_api.py:200] 2021-02-08 15:37:40,243 > ++++++++++++++S&TC++++++++++++++++++++9/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:40,243 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:40,589 > 15
[DEBUG|collector_api.py:200] 2021-02-08 15:37:40,849 > ++++++++++++++S&T모티브++++++++++++++++++++10/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:40,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:41,196 > 16
[DEBUG|collector_api.py:200] 2021-02-08 15:37:41,439 > ++++++++++++++SK이노베이션++++++++++++++++++++11/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:41,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:41,803 > 17
[DEBUG|collector_api.py:200] 2021-02-08 15:37:42,053 > ++++++++++++++STX++++++++++++++++++++12/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:42,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:42,410 > 18
[DEBUG|collector_api.py:200] 2021-02-08 15:37:42,705 > ++++++++++++++YG PLUS++++++++++++++++++++13/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:42,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:43,018 > 19
[DEBUG|collector_api.py:200] 2021-02-08 15:37:43,266 > ++++++++++++++갤럭시아에스엠++++++++++++++++++++14/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:43,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:43,625 > 20
[DEBUG|collector_api.py:200] 2021-02-08 15:37:43,884 > ++++++++++++++고려아연++++++++++++++++++++15/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:43,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:44,233 > 21
[DEBUG|collector_api.py:200] 2021-02-08 15:37:44,487 > ++++++++++++++극동유화++++++++++++++++++++16/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:44,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:44,839 > 22
[DEBUG|collector_api.py:200] 2021-02-08 15:37:45,109 > ++++++++++++++까뮤이앤씨++++++++++++++++++++17/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:45,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:45,448 > 23
[DEBUG|collector_api.py:200] 2021-02-08 15:37:45,771 > ++++++++++++++남선알미늄++++++++++++++++++++18/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:45,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:46,055 > 24
[DEBUG|collector_api.py:200] 2021-02-08 15:37:46,325 > ++++++++++++++대덕전자++++++++++++++++++++19/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:46,325 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:46,662 > 25
[DEBUG|collector_api.py:200] 2021-02-08 15:37:46,848 > ++++++++++++++대영포장++++++++++++++++++++20/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:46,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:47,270 > 26
[DEBUG|collector_api.py:200] 2021-02-08 15:37:47,538 > ++++++++++++++대웅++++++++++++++++++++21/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:47,538 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:47,878 > 27
[DEBUG|collector_api.py:200] 2021-02-08 15:37:48,140 > ++++++++++++++대한유화++++++++++++++++++++22/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:48,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:48,486 > 28
[DEBUG|collector_api.py:200] 2021-02-08 15:37:48,756 > ++++++++++++++두산++++++++++++++++++++23/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:48,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:49,095 > 29
[DEBUG|collector_api.py:200] 2021-02-08 15:37:49,368 > ++++++++++++++두산밥캣++++++++++++++++++++24/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:49,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:49,703 > 30
[DEBUG|collector_api.py:200] 2021-02-08 15:37:49,940 > ++++++++++++++락앤락++++++++++++++++++++25/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:49,940 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:50,309 > 31
[DEBUG|collector_api.py:200] 2021-02-08 15:37:50,555 > ++++++++++++++롯데정보통신++++++++++++++++++++26/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:50,556 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:50,917 > 32
[DEBUG|collector_api.py:200] 2021-02-08 15:37:51,143 > ++++++++++++++마니커++++++++++++++++++++27/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:51,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:51,524 > 33
[DEBUG|collector_api.py:200] 2021-02-08 15:37:51,763 > ++++++++++++++만도++++++++++++++++++++28/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:51,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:52,131 > 34
[DEBUG|collector_api.py:200] 2021-02-08 15:37:52,372 > ++++++++++++++메리츠증권++++++++++++++++++++29/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:52,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:52,739 > 35
[DEBUG|collector_api.py:200] 2021-02-08 15:37:53,005 > ++++++++++++++모두투어리츠++++++++++++++++++++30/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:53,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:53,348 > 36
[DEBUG|collector_api.py:200] 2021-02-08 15:37:53,580 > ++++++++++++++부국증권++++++++++++++++++++31/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:53,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:53,955 > 37
[DEBUG|collector_api.py:200] 2021-02-08 15:37:54,232 > ++++++++++++++삼성SDI++++++++++++++++++++32/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:54,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:54,563 > 38
[DEBUG|collector_api.py:200] 2021-02-08 15:37:54,837 > ++++++++++++++삼성엔지니어링++++++++++++++++++++33/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:54,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:55,172 > 39
[DEBUG|collector_api.py:200] 2021-02-08 15:37:55,424 > ++++++++++++++삼성중공업++++++++++++++++++++34/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:55,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:55,780 > 40
[DEBUG|collector_api.py:200] 2021-02-08 15:37:56,045 > ++++++++++++++삼성출판사++++++++++++++++++++35/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:56,046 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:56,387 > 41
[DEBUG|collector_api.py:200] 2021-02-08 15:37:56,628 > ++++++++++++++삼성화재++++++++++++++++++++36/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:56,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:56,995 > 42
[DEBUG|collector_api.py:200] 2021-02-08 15:37:57,262 > ++++++++++++++삼양홀딩스++++++++++++++++++++37/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:57,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:57,602 > 43
[DEBUG|collector_api.py:200] 2021-02-08 15:37:57,885 > ++++++++++++++삼영전자++++++++++++++++++++38/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:57,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:58,209 > 44
[DEBUG|collector_api.py:200] 2021-02-08 15:37:58,477 > ++++++++++++++삼영화학++++++++++++++++++++39/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:58,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:58,815 > 45
[DEBUG|collector_api.py:200] 2021-02-08 15:37:59,078 > ++++++++++++++상상인증권++++++++++++++++++++40/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:59,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:37:59,423 > 46
[DEBUG|collector_api.py:200] 2021-02-08 15:37:59,686 > ++++++++++++++선도전기++++++++++++++++++++41/2895
[DEBUG|open_api.py:656] 2021-02-08 15:37:59,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:00,031 > 47
[DEBUG|collector_api.py:200] 2021-02-08 15:38:00,292 > ++++++++++++++선진++++++++++++++++++++42/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:00,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:00,638 > 48
[DEBUG|collector_api.py:200] 2021-02-08 15:38:00,890 > ++++++++++++++세방전지++++++++++++++++++++43/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:00,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:01,245 > 49
[DEBUG|collector_api.py:200] 2021-02-08 15:38:01,541 > ++++++++++++++세원셀론텍++++++++++++++++++++44/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:01,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:01,852 > 50
[DEBUG|collector_api.py:200] 2021-02-08 15:38:02,102 > ++++++++++++++신한알파리츠++++++++++++++++++++45/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:02,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:02,459 > 51
[DEBUG|collector_api.py:200] 2021-02-08 15:38:02,692 > ++++++++++++++신한지주++++++++++++++++++++46/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:02,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:03,066 > 52
[DEBUG|collector_api.py:200] 2021-02-08 15:38:03,326 > ++++++++++++++쌍용차++++++++++++++++++++47/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:03,326 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:03,672 > 53
[DEBUG|collector_api.py:200] 2021-02-08 15:38:03,928 > ++++++++++++++에넥스++++++++++++++++++++48/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:03,928 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:04,280 > 54
[DEBUG|collector_api.py:200] 2021-02-08 15:38:04,534 > ++++++++++++++영화금속++++++++++++++++++++49/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:04,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:04,889 > 55
[DEBUG|collector_api.py:200] 2021-02-08 15:38:05,156 > ++++++++++++++윌비스++++++++++++++++++++50/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:05,156 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:05,496 > 56
[DEBUG|collector_api.py:200] 2021-02-08 15:38:05,768 > ++++++++++++++유나이티드제약++++++++++++++++++++51/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:05,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:06,102 > 57
[DEBUG|collector_api.py:200] 2021-02-08 15:38:06,364 > ++++++++++++++인지컨트롤스++++++++++++++++++++52/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:06,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:06,710 > 58
[DEBUG|collector_api.py:200] 2021-02-08 15:38:06,989 > ++++++++++++++인터지스++++++++++++++++++++53/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:06,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:07,316 > 59
[DEBUG|collector_api.py:200] 2021-02-08 15:38:07,547 > ++++++++++++++일성건설++++++++++++++++++++54/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:07,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:07,923 > 60
[DEBUG|collector_api.py:200] 2021-02-08 15:38:08,190 > ++++++++++++++일진다이아++++++++++++++++++++55/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:08,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:08,531 > 61
[DEBUG|collector_api.py:200] 2021-02-08 15:38:08,790 > ++++++++++++++제일약품++++++++++++++++++++56/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:08,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:09,139 > 62
[DEBUG|collector_api.py:200] 2021-02-08 15:38:09,383 > ++++++++++++++제일연마++++++++++++++++++++57/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:09,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:09,746 > 63
[DEBUG|collector_api.py:200] 2021-02-08 15:38:09,984 > ++++++++++++++제일파마홀딩스++++++++++++++++++++58/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:09,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:10,354 > 64
[DEBUG|collector_api.py:200] 2021-02-08 15:38:10,624 > ++++++++++++++조흥++++++++++++++++++++59/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:10,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:10,961 > 65
[DEBUG|collector_api.py:200] 2021-02-08 15:38:11,231 > ++++++++++++++지역난방공사++++++++++++++++++++60/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:11,231 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:11,569 > 66
[DEBUG|collector_api.py:200] 2021-02-08 15:38:11,812 > ++++++++++++++진도++++++++++++++++++++61/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:11,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:12,176 > 67
[DEBUG|collector_api.py:200] 2021-02-08 15:38:12,411 > ++++++++++++++코오롱인더++++++++++++++++++++62/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:12,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:12,785 > 68
[DEBUG|collector_api.py:200] 2021-02-08 15:38:13,029 > ++++++++++++++키다리스튜디오++++++++++++++++++++63/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:13,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:13,391 > 69
[DEBUG|collector_api.py:200] 2021-02-08 15:38:13,664 > ++++++++++++++태경산업++++++++++++++++++++64/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:13,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:13,999 > 70
[DEBUG|collector_api.py:200] 2021-02-08 15:38:14,276 > ++++++++++++++태양금속++++++++++++++++++++65/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:14,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:14,607 > 71
[DEBUG|collector_api.py:200] 2021-02-08 15:38:14,867 > ++++++++++++++포스코강판++++++++++++++++++++66/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:14,867 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:15,215 > 72
[DEBUG|collector_api.py:200] 2021-02-08 15:38:15,457 > ++++++++++++++필룩스++++++++++++++++++++67/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:15,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:15,822 > 73
[DEBUG|collector_api.py:200] 2021-02-08 15:38:16,093 > ++++++++++++++한국공항++++++++++++++++++++68/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:16,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:16,429 > 74
[DEBUG|collector_api.py:200] 2021-02-08 15:38:16,715 > ++++++++++++++한국종합기술++++++++++++++++++++69/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:16,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:17,036 > 75
[DEBUG|collector_api.py:200] 2021-02-08 15:38:17,285 > ++++++++++++++한국패러랠++++++++++++++++++++70/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:17,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:17,643 > 76
[DEBUG|collector_api.py:200] 2021-02-08 15:38:17,908 > ++++++++++++++한솔로지스틱스++++++++++++++++++++71/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:17,909 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:18,252 > 77
[DEBUG|collector_api.py:200] 2021-02-08 15:38:18,508 > ++++++++++++++한일철강++++++++++++++++++++72/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:18,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:18,859 > 78
[DEBUG|collector_api.py:200] 2021-02-08 15:38:19,124 > ++++++++++++++한일현대시멘트++++++++++++++++++++73/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:19,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:19,467 > 79
[DEBUG|collector_api.py:200] 2021-02-08 15:38:19,749 > ++++++++++++++한창제지++++++++++++++++++++74/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:19,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:20,077 > 80
[DEBUG|collector_api.py:200] 2021-02-08 15:38:20,338 > ++++++++++++++한화생명++++++++++++++++++++75/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:20,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:20,683 > 81
[DEBUG|collector_api.py:200] 2021-02-08 15:38:20,926 > ++++++++++++++현대건설기계++++++++++++++++++++76/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:20,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:21,290 > 82
[DEBUG|collector_api.py:200] 2021-02-08 15:38:21,520 > ++++++++++++++현대모비스++++++++++++++++++++77/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:21,521 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:21,898 > 83
[DEBUG|collector_api.py:200] 2021-02-08 15:38:22,153 > ++++++++++++++현대엘리베이++++++++++++++++++++78/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:22,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:22,507 > 84
[DEBUG|collector_api.py:200] 2021-02-08 15:38:22,775 > ++++++++++++++현대차증권++++++++++++++++++++79/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:22,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:23,115 > 85
[DEBUG|collector_api.py:200] 2021-02-08 15:38:23,380 > ++++++++++++++호전실업++++++++++++++++++++80/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:23,380 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:23,722 > 86
[DEBUG|collector_api.py:200] 2021-02-08 15:38:23,957 > ++++++++++++++CJ CGV++++++++++++++++++++81/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:23,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:24,331 > 87
[DEBUG|collector_api.py:200] 2021-02-08 15:38:24,578 > ++++++++++++++CJ제일제당++++++++++++++++++++82/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:24,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:24,937 > 88
[DEBUG|collector_api.py:200] 2021-02-08 15:38:25,208 > ++++++++++++++DB금융투자++++++++++++++++++++83/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:25,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:25,545 > 89
[DEBUG|collector_api.py:200] 2021-02-08 15:38:25,810 > ++++++++++++++HDC현대EP++++++++++++++++++++84/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:25,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:26,153 > 90
[DEBUG|collector_api.py:200] 2021-02-08 15:38:26,394 > ++++++++++++++JW홀딩스++++++++++++++++++++85/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:26,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:26,760 > 91
[DEBUG|collector_api.py:200] 2021-02-08 15:38:27,017 > ++++++++++++++KB금융++++++++++++++++++++86/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:27,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:27,367 > 92
[DEBUG|collector_api.py:200] 2021-02-08 15:38:27,610 > ++++++++++++++KC코트렐++++++++++++++++++++87/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:27,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:27,973 > 93
[DEBUG|collector_api.py:200] 2021-02-08 15:38:28,219 > ++++++++++++++KPX케미칼++++++++++++++++++++88/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:28,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:28,581 > 94
[DEBUG|collector_api.py:200] 2021-02-08 15:38:28,838 > ++++++++++++++SG충방++++++++++++++++++++89/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:28,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:29,188 > 95
[DEBUG|collector_api.py:200] 2021-02-08 15:38:29,453 > ++++++++++++++금강공업++++++++++++++++++++90/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:29,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:29,796 > 96
[DEBUG|collector_api.py:200] 2021-02-08 15:38:30,078 > ++++++++++++++금호산업++++++++++++++++++++91/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:30,079 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:30,404 > 97
[DEBUG|collector_api.py:200] 2021-02-08 15:38:30,677 > ++++++++++++++금호전기++++++++++++++++++++92/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:30,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:31,010 > 98
[DEBUG|collector_api.py:200] 2021-02-08 15:38:31,283 > ++++++++++++++기업은행++++++++++++++++++++93/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:31,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:31,618 > 99
[DEBUG|collector_api.py:200] 2021-02-08 15:38:31,881 > ++++++++++++++남성++++++++++++++++++++94/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:31,881 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:32,225 > 100
[DEBUG|collector_api.py:200] 2021-02-08 15:38:32,473 > ++++++++++++++넷마블++++++++++++++++++++95/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:32,473 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:32,832 > 101
[DEBUG|collector_api.py:200] 2021-02-08 15:38:33,099 > ++++++++++++++대구백화점++++++++++++++++++++96/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:33,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:33,441 > 102
[DEBUG|collector_api.py:200] 2021-02-08 15:38:33,704 > ++++++++++++++대우건설++++++++++++++++++++97/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:33,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:34,047 > 103
[DEBUG|collector_api.py:200] 2021-02-08 15:38:34,310 > ++++++++++++++대원제약++++++++++++++++++++98/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:34,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:34,655 > 104
[DEBUG|collector_api.py:200] 2021-02-08 15:38:34,904 > ++++++++++++++대한방직++++++++++++++++++++99/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:34,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:35,262 > 105
[DEBUG|collector_api.py:200] 2021-02-08 15:38:35,519 > ++++++++++++++대한제당++++++++++++++++++++100/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:35,520 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:35,870 > 106
[DEBUG|collector_api.py:200] 2021-02-08 15:38:36,169 > ++++++++++++++대한해운++++++++++++++++++++101/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:36,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:36,479 > 107
[DEBUG|collector_api.py:200] 2021-02-08 15:38:36,755 > ++++++++++++++덕양산업++++++++++++++++++++102/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:36,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:37,087 > 108
[DEBUG|collector_api.py:200] 2021-02-08 15:38:37,337 > ++++++++++++++동원금속++++++++++++++++++++103/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:37,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:37,695 > 109
[DEBUG|collector_api.py:200] 2021-02-08 15:38:37,952 > ++++++++++++++두산인프라코어++++++++++++++++++++104/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:37,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:38,302 > 110
[DEBUG|collector_api.py:200] 2021-02-08 15:38:38,549 > ++++++++++++++디씨엠++++++++++++++++++++105/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:38,549 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:38,910 > 111
[DEBUG|collector_api.py:200] 2021-02-08 15:38:39,169 > ++++++++++++++디티알오토모티브++++++++++++++++++++106/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:39,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:39,518 > 112
[DEBUG|collector_api.py:200] 2021-02-08 15:38:39,777 > ++++++++++++++롯데손해보험++++++++++++++++++++107/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:39,777 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:40,124 > 113
[DEBUG|collector_api.py:200] 2021-02-08 15:38:40,371 > ++++++++++++++롯데제과++++++++++++++++++++108/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:40,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:40,733 > 114
[DEBUG|collector_api.py:200] 2021-02-08 15:38:40,969 > ++++++++++++++롯데칠성++++++++++++++++++++109/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:40,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:41,341 > 115
[DEBUG|collector_api.py:200] 2021-02-08 15:38:41,606 > ++++++++++++++롯데케미칼++++++++++++++++++++110/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:41,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:41,949 > 116
[DEBUG|collector_api.py:200] 2021-02-08 15:38:42,230 > ++++++++++++++롯데하이마트++++++++++++++++++++111/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:42,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:42,556 > 117
[DEBUG|collector_api.py:200] 2021-02-08 15:38:42,795 > ++++++++++++++미원홀딩스++++++++++++++++++++112/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:42,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:43,163 > 118
[DEBUG|collector_api.py:200] 2021-02-08 15:38:43,413 > ++++++++++++++백산++++++++++++++++++++113/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:43,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:43,771 > 119
[DEBUG|collector_api.py:200] 2021-02-08 15:38:44,028 > ++++++++++++++보락++++++++++++++++++++114/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:44,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:44,379 > 120
[DEBUG|collector_api.py:200] 2021-02-08 15:38:44,649 > ++++++++++++++사조대림++++++++++++++++++++115/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:44,649 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:44,986 > 121
[DEBUG|collector_api.py:200] 2021-02-08 15:38:45,268 > ++++++++++++++사조동아원++++++++++++++++++++116/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:45,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:45,594 > 122
[DEBUG|collector_api.py:200] 2021-02-08 15:38:45,864 > ++++++++++++++삼양식품++++++++++++++++++++117/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:45,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:46,201 > 123
[DEBUG|collector_api.py:200] 2021-02-08 15:38:46,483 > ++++++++++++++서원++++++++++++++++++++118/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:46,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:46,809 > 124
[DEBUG|collector_api.py:200] 2021-02-08 15:38:47,089 > ++++++++++++++세방++++++++++++++++++++119/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:47,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:47,416 > 125
[DEBUG|collector_api.py:200] 2021-02-08 15:38:47,704 > ++++++++++++++세아홀딩스++++++++++++++++++++120/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:47,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:48,022 > 126
[DEBUG|collector_api.py:200] 2021-02-08 15:38:48,300 > ++++++++++++++세이브존I&C++++++++++++++++++++121/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:48,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:48,630 > 127
[DEBUG|collector_api.py:200] 2021-02-08 15:38:48,885 > ++++++++++++++신송홀딩스++++++++++++++++++++122/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:48,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:49,238 > 128
[DEBUG|collector_api.py:200] 2021-02-08 15:38:49,477 > ++++++++++++++신일전자++++++++++++++++++++123/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:49,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:49,846 > 129
[DEBUG|collector_api.py:200] 2021-02-08 15:38:50,117 > ++++++++++++++신풍제약++++++++++++++++++++124/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:50,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:50,454 > 130
[DEBUG|collector_api.py:200] 2021-02-08 15:38:50,746 > ++++++++++++++써니전자++++++++++++++++++++125/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:50,746 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:51,063 > 131
[DEBUG|collector_api.py:200] 2021-02-08 15:38:51,337 > ++++++++++++++아이마켓코리아++++++++++++++++++++126/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:51,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:51,671 > 132
[DEBUG|collector_api.py:200] 2021-02-08 15:38:51,922 > ++++++++++++++IHQ++++++++++++++++++++127/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:51,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:52,278 > 133
[DEBUG|collector_api.py:200] 2021-02-08 15:38:52,542 > ++++++++++++++에이블씨엔씨++++++++++++++++++++128/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:52,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:52,885 > 134
[DEBUG|collector_api.py:200] 2021-02-08 15:38:53,157 > ++++++++++++++엔씨소프트++++++++++++++++++++129/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:53,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:53,493 > 135
[DEBUG|collector_api.py:200] 2021-02-08 15:38:53,743 > ++++++++++++++영보화학++++++++++++++++++++130/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:53,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:54,100 > 136
[DEBUG|collector_api.py:200] 2021-02-08 15:38:54,359 > ++++++++++++++영진약품++++++++++++++++++++131/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:54,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:54,707 > 137
[DEBUG|collector_api.py:200] 2021-02-08 15:38:54,976 > ++++++++++++++영풍++++++++++++++++++++132/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:54,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:55,315 > 138
[DEBUG|collector_api.py:200] 2021-02-08 15:38:55,574 > ++++++++++++++우리금융캐피탈++++++++++++++++++++133/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:55,574 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:55,923 > 139
[DEBUG|collector_api.py:200] 2021-02-08 15:38:56,178 > ++++++++++++++유니온머티리얼++++++++++++++++++++134/2895
[DEBUG|open_api.py:656] 2021-02-08 15:38:56,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:38:56,531 > 140
[DEBUG|open_api.py:303] 2021-02-08 15:42:44,919 > connected
[DEBUG|open_api.py:244] 2021-02-08 15:42:44,919 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 15:42:44,919 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 15:42:44,919 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 15:42:44,920 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 15:42:44,920 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 15:42:44,920 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 15:42:44,938 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 15:42:44,967 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 15:42:44,968 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 15:42:44,968 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 15:42:44,983 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 15:42:45,009 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 15:42:47,634 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 15:42:47,636 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 15:42:47,683 > ++++++++++++++유니온머티리얼++++++++++++++++++++134/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:47,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:47,684 > 1
[DEBUG|collector_api.py:200] 2021-02-08 15:42:48,816 > ++++++++++++++유유제약++++++++++++++++++++135/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:48,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:48,817 > 2
[DEBUG|collector_api.py:200] 2021-02-08 15:42:49,077 > ++++++++++++++유한양행++++++++++++++++++++136/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:49,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:49,425 > 3
[DEBUG|collector_api.py:200] 2021-02-08 15:42:49,724 > ++++++++++++++이마트++++++++++++++++++++137/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:49,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:50,034 > 4
[DEBUG|collector_api.py:200] 2021-02-08 15:42:50,288 > ++++++++++++++이수화학++++++++++++++++++++138/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:50,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:50,641 > 5
[DEBUG|collector_api.py:200] 2021-02-08 15:42:50,902 > ++++++++++++++이스타코++++++++++++++++++++139/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:50,902 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:51,249 > 6
[DEBUG|collector_api.py:200] 2021-02-08 15:42:51,524 > ++++++++++++++인천도시가스++++++++++++++++++++140/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:51,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:51,858 > 7
[DEBUG|collector_api.py:200] 2021-02-08 15:42:52,115 > ++++++++++++++일정실업++++++++++++++++++++141/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:52,115 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:52,467 > 8
[DEBUG|collector_api.py:200] 2021-02-08 15:42:52,726 > ++++++++++++++종근당홀딩스++++++++++++++++++++142/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:52,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:53,076 > 9
[DEBUG|collector_api.py:200] 2021-02-08 15:42:53,349 > ++++++++++++++지엠비코리아++++++++++++++++++++143/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:53,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:53,684 > 10
[DEBUG|collector_api.py:200] 2021-02-08 15:42:53,940 > ++++++++++++++진원생명과학++++++++++++++++++++144/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:53,940 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:54,293 > 11
[DEBUG|collector_api.py:200] 2021-02-08 15:42:54,569 > ++++++++++++++컨버즈++++++++++++++++++++145/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:54,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:54,900 > 12
[DEBUG|collector_api.py:200] 2021-02-08 15:42:55,147 > ++++++++++++++케이씨텍++++++++++++++++++++146/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:55,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:55,509 > 13
[DEBUG|collector_api.py:200] 2021-02-08 15:42:55,747 > ++++++++++++++코리아써키트++++++++++++++++++++147/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:55,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:56,118 > 14
[DEBUG|collector_api.py:200] 2021-02-08 15:42:56,391 > ++++++++++++++코스모화학++++++++++++++++++++148/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:56,392 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:56,726 > 15
[DEBUG|collector_api.py:200] 2021-02-08 15:42:57,012 > ++++++++++++++코아스++++++++++++++++++++149/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:57,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:57,334 > 16
[DEBUG|collector_api.py:200] 2021-02-08 15:42:57,567 > ++++++++++++++코오롱플라스틱++++++++++++++++++++150/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:57,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:57,941 > 17
[DEBUG|collector_api.py:200] 2021-02-08 15:42:58,189 > ++++++++++++++쿠쿠홀딩스++++++++++++++++++++151/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:58,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:58,549 > 18
[DEBUG|collector_api.py:200] 2021-02-08 15:42:58,783 > ++++++++++++++큐로++++++++++++++++++++152/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:58,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:59,156 > 19
[DEBUG|collector_api.py:200] 2021-02-08 15:42:59,409 > ++++++++++++++TBH글로벌++++++++++++++++++++153/2895
[DEBUG|open_api.py:656] 2021-02-08 15:42:59,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:42:59,765 > 20
[DEBUG|collector_api.py:200] 2021-02-08 15:43:00,017 > ++++++++++++++포스코케미칼++++++++++++++++++++154/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:00,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:00,373 > 21
[DEBUG|collector_api.py:200] 2021-02-08 15:43:00,619 > ++++++++++++++하이트론++++++++++++++++++++155/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:00,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:00,980 > 22
[DEBUG|collector_api.py:200] 2021-02-08 15:43:01,244 > ++++++++++++++한국금융지주++++++++++++++++++++156/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:01,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:01,588 > 23
[DEBUG|collector_api.py:200] 2021-02-08 15:43:01,828 > ++++++++++++++한국전자홀딩스++++++++++++++++++++157/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:01,829 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:02,194 > 24
[DEBUG|collector_api.py:200] 2021-02-08 15:43:02,451 > ++++++++++++++한국타이어앤테크놀로지++++++++++++++++++++158/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:02,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:02,802 > 25
[DEBUG|collector_api.py:200] 2021-02-08 15:43:03,069 > ++++++++++++++한국토지신탁++++++++++++++++++++159/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:03,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:03,410 > 26
[DEBUG|collector_api.py:200] 2021-02-08 15:43:03,654 > ++++++++++++++한국특수형강++++++++++++++++++++160/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:03,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:04,018 > 27
[DEBUG|collector_api.py:200] 2021-02-08 15:43:04,329 > ++++++++++++++한온시스템++++++++++++++++++++161/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:04,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:04,625 > 28
[DEBUG|collector_api.py:200] 2021-02-08 15:43:04,890 > ++++++++++++++한화솔루션++++++++++++++++++++162/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:04,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:05,233 > 29
[DEBUG|collector_api.py:200] 2021-02-08 15:43:05,504 > ++++++++++++++해태제과식품++++++++++++++++++++163/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:05,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:05,840 > 30
[DEBUG|collector_api.py:200] 2021-02-08 15:43:06,079 > ++++++++++++++현대에너지솔루션++++++++++++++++++++164/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:06,079 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:06,449 > 31
[DEBUG|collector_api.py:200] 2021-02-08 15:43:06,641 > ++++++++++++++현대위아++++++++++++++++++++165/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:06,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:07,058 > 32
[DEBUG|collector_api.py:200] 2021-02-08 15:43:07,306 > ++++++++++++++현대코퍼레이션홀딩스++++++++++++++++++++166/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:07,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:07,667 > 33
[DEBUG|collector_api.py:200] 2021-02-08 15:43:07,907 > ++++++++++++++호텔신라++++++++++++++++++++167/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:07,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:08,275 > 34
[DEBUG|collector_api.py:200] 2021-02-08 15:43:08,542 > ++++++++++++++화승인더++++++++++++++++++++168/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:08,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:08,883 > 35
[DEBUG|collector_api.py:200] 2021-02-08 15:43:09,147 > ++++++++++++++화천기공++++++++++++++++++++169/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:09,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:09,489 > 36
[DEBUG|collector_api.py:200] 2021-02-08 15:43:09,737 > ++++++++++++++환인제약++++++++++++++++++++170/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:09,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:10,096 > 37
[DEBUG|collector_api.py:200] 2021-02-08 15:43:10,366 > ++++++++++++++효성++++++++++++++++++++171/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:10,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:10,704 > 38
[DEBUG|collector_api.py:200] 2021-02-08 15:43:10,968 > ++++++++++++++효성화학++++++++++++++++++++172/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:10,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:11,311 > 39
[DEBUG|collector_api.py:200] 2021-02-08 15:43:11,545 > ++++++++++++++흥아해운++++++++++++++++++++173/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:11,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:11,919 > 40
[DEBUG|collector_api.py:200] 2021-02-08 15:43:12,206 > ++++++++++++++BGF리테일++++++++++++++++++++174/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:12,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:12,527 > 41
[DEBUG|collector_api.py:200] 2021-02-08 15:43:12,769 > ++++++++++++++BNK금융지주++++++++++++++++++++175/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:12,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:13,134 > 42
[DEBUG|collector_api.py:200] 2021-02-08 15:43:13,375 > ++++++++++++++DRB동일++++++++++++++++++++176/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:13,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:13,741 > 43
[DEBUG|collector_api.py:200] 2021-02-08 15:43:13,993 > ++++++++++++++GS건설++++++++++++++++++++177/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:13,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:14,348 > 44
[DEBUG|collector_api.py:200] 2021-02-08 15:43:14,600 > ++++++++++++++HDC아이콘트롤스++++++++++++++++++++178/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:14,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:14,956 > 45
[DEBUG|collector_api.py:200] 2021-02-08 15:43:15,198 > ++++++++++++++KTis++++++++++++++++++++179/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:15,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:15,564 > 46
[DEBUG|collector_api.py:200] 2021-02-08 15:43:15,804 > ++++++++++++++LG상사++++++++++++++++++++180/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:15,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:16,171 > 47
[DEBUG|collector_api.py:200] 2021-02-08 15:43:16,427 > ++++++++++++++MH에탄올++++++++++++++++++++181/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:16,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:16,779 > 48
[DEBUG|collector_api.py:200] 2021-02-08 15:43:17,044 > ++++++++++++++SBS++++++++++++++++++++182/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:17,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:17,388 > 49
[DEBUG|collector_api.py:200] 2021-02-08 15:43:17,639 > ++++++++++++++SBS미디어홀딩스++++++++++++++++++++183/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:17,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:17,996 > 50
[DEBUG|collector_api.py:200] 2021-02-08 15:43:18,249 > ++++++++++++++SK텔레콤++++++++++++++++++++184/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:18,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:18,603 > 51
[DEBUG|collector_api.py:200] 2021-02-08 15:43:18,861 > ++++++++++++++강원랜드++++++++++++++++++++185/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:18,861 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:19,210 > 52
[DEBUG|collector_api.py:200] 2021-02-08 15:43:19,467 > ++++++++++++++교보증권++++++++++++++++++++186/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:19,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:19,818 > 53
[DEBUG|collector_api.py:200] 2021-02-08 15:43:20,086 > ++++++++++++++국제약품++++++++++++++++++++187/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:20,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:20,425 > 54
[DEBUG|collector_api.py:200] 2021-02-08 15:43:20,738 > ++++++++++++++금양++++++++++++++++++++188/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:20,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:21,033 > 55
[DEBUG|collector_api.py:200] 2021-02-08 15:43:21,299 > ++++++++++++++넥센타이어++++++++++++++++++++189/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:21,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:21,639 > 56
[DEBUG|collector_api.py:200] 2021-02-08 15:43:21,904 > ++++++++++++++녹십자홀딩스++++++++++++++++++++190/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:21,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:22,246 > 57
[DEBUG|collector_api.py:200] 2021-02-08 15:43:22,505 > ++++++++++++++농심홀딩스++++++++++++++++++++191/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:22,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:22,854 > 58
[DEBUG|collector_api.py:200] 2021-02-08 15:43:23,105 > ++++++++++++++다스코++++++++++++++++++++192/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:23,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:23,462 > 59
[DEBUG|collector_api.py:200] 2021-02-08 15:43:23,703 > ++++++++++++++대교++++++++++++++++++++193/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:23,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:24,070 > 60
[DEBUG|collector_api.py:200] 2021-02-08 15:43:24,353 > ++++++++++++++대림건설++++++++++++++++++++194/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:24,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:24,678 > 61
[DEBUG|collector_api.py:200] 2021-02-08 15:43:24,944 > ++++++++++++++대웅제약++++++++++++++++++++195/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:24,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:25,286 > 62
[DEBUG|collector_api.py:200] 2021-02-08 15:43:25,545 > ++++++++++++++더존비즈온++++++++++++++++++++196/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:25,545 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:25,894 > 63
[DEBUG|collector_api.py:200] 2021-02-08 15:43:26,181 > ++++++++++++++덕성++++++++++++++++++++197/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:26,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:26,501 > 64
[DEBUG|collector_api.py:200] 2021-02-08 15:43:26,765 > ++++++++++++++동방아그로++++++++++++++++++++198/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:26,765 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:27,110 > 65
[DEBUG|collector_api.py:200] 2021-02-08 15:43:27,383 > ++++++++++++++동서++++++++++++++++++++199/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:27,384 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:27,718 > 66
[DEBUG|collector_api.py:200] 2021-02-08 15:43:27,991 > ++++++++++++++동성코퍼레이션++++++++++++++++++++200/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:27,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:28,326 > 67
[DEBUG|collector_api.py:200] 2021-02-08 15:43:28,566 > ++++++++++++++동아쏘시오홀딩스++++++++++++++++++++201/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:28,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:28,933 > 68
[DEBUG|collector_api.py:200] 2021-02-08 15:43:29,229 > ++++++++++++++동양++++++++++++++++++++202/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:29,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:29,541 > 69
[DEBUG|collector_api.py:200] 2021-02-08 15:43:29,818 > ++++++++++++++동양생명++++++++++++++++++++203/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:29,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:30,150 > 70
[DEBUG|collector_api.py:200] 2021-02-08 15:43:30,403 > ++++++++++++++동원산업++++++++++++++++++++204/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:30,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:30,757 > 71
[DEBUG|collector_api.py:200] 2021-02-08 15:43:31,016 > ++++++++++++++디아이++++++++++++++++++++205/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:31,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:31,365 > 72
[DEBUG|collector_api.py:200] 2021-02-08 15:43:31,623 > ++++++++++++++디와이++++++++++++++++++++206/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:31,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:31,973 > 73
[DEBUG|collector_api.py:200] 2021-02-08 15:43:32,248 > ++++++++++++++디피씨++++++++++++++++++++207/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:32,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:32,581 > 74
[DEBUG|collector_api.py:200] 2021-02-08 15:43:32,853 > ++++++++++++++롯데정밀화학++++++++++++++++++++208/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:32,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:33,190 > 75
[DEBUG|collector_api.py:200] 2021-02-08 15:43:33,454 > ++++++++++++++롯데푸드++++++++++++++++++++209/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:33,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:33,801 > 76
[DEBUG|collector_api.py:200] 2021-02-08 15:43:34,074 > ++++++++++++++맥쿼리인프라++++++++++++++++++++210/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:34,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:34,410 > 77
[DEBUG|collector_api.py:200] 2021-02-08 15:43:34,684 > ++++++++++++++메타랩스++++++++++++++++++++211/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:34,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:35,019 > 78
[DEBUG|collector_api.py:200] 2021-02-08 15:43:35,260 > ++++++++++++++명문제약++++++++++++++++++++212/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:35,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:35,627 > 79
[DEBUG|collector_api.py:200] 2021-02-08 15:43:35,864 > ++++++++++++++모토닉++++++++++++++++++++213/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:35,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:36,237 > 80
[DEBUG|collector_api.py:200] 2021-02-08 15:43:36,491 > ++++++++++++++미래에셋맵스리츠++++++++++++++++++++214/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:36,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:36,843 > 81
[DEBUG|collector_api.py:200] 2021-02-08 15:43:37,019 > ++++++++++++++미원화학++++++++++++++++++++215/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:37,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:37,450 > 82
[DEBUG|collector_api.py:200] 2021-02-08 15:43:37,674 > ++++++++++++++범양건영++++++++++++++++++++216/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:37,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:38,059 > 83
[DEBUG|collector_api.py:200] 2021-02-08 15:43:38,352 > ++++++++++++++베트남개발1++++++++++++++++++++217/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:38,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:38,667 > 84
[DEBUG|collector_api.py:200] 2021-02-08 15:43:38,909 > ++++++++++++++빙그레++++++++++++++++++++218/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:38,909 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:39,274 > 85
[DEBUG|collector_api.py:200] 2021-02-08 15:43:39,531 > ++++++++++++++삼성바이오로직스++++++++++++++++++++219/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:39,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:39,882 > 86
[DEBUG|collector_api.py:200] 2021-02-08 15:43:40,125 > ++++++++++++++삼성에스디에스++++++++++++++++++++220/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:40,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:40,488 > 87
[DEBUG|collector_api.py:200] 2021-02-08 15:43:40,725 > ++++++++++++++삼성증권++++++++++++++++++++221/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:40,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:41,095 > 88
[DEBUG|collector_api.py:200] 2021-02-08 15:43:41,354 > ++++++++++++++삼성카드++++++++++++++++++++222/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:41,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:41,703 > 89
[DEBUG|collector_api.py:200] 2021-02-08 15:43:41,955 > ++++++++++++++삼양통상++++++++++++++++++++223/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:41,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:42,310 > 90
[DEBUG|collector_api.py:200] 2021-02-08 15:43:42,576 > ++++++++++++++삼영무역++++++++++++++++++++224/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:42,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:42,918 > 91
[DEBUG|collector_api.py:200] 2021-02-08 15:43:43,182 > ++++++++++++++삼정펄프++++++++++++++++++++225/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:43,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:43,526 > 92
[DEBUG|collector_api.py:200] 2021-02-08 15:43:43,774 > ++++++++++++++샘표식품++++++++++++++++++++226/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:43,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:44,132 > 93
[DEBUG|collector_api.py:200] 2021-02-08 15:43:44,377 > ++++++++++++++서연이화++++++++++++++++++++227/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:44,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:44,739 > 94
[DEBUG|collector_api.py:200] 2021-02-08 15:43:44,973 > ++++++++++++++성보화학++++++++++++++++++++228/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:44,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:45,347 > 95
[DEBUG|collector_api.py:200] 2021-02-08 15:43:45,600 > ++++++++++++++세아제강++++++++++++++++++++229/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:45,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:45,955 > 96
[DEBUG|collector_api.py:200] 2021-02-08 15:43:46,214 > ++++++++++++++센트랄모텍++++++++++++++++++++230/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:46,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:46,562 > 97
[DEBUG|collector_api.py:200] 2021-02-08 15:43:46,766 > ++++++++++++++솔루스첨단소재++++++++++++++++++++231/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:46,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:47,169 > 98
[DEBUG|collector_api.py:200] 2021-02-08 15:43:47,367 > ++++++++++++++송원산업++++++++++++++++++++232/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:47,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:47,777 > 99
[DEBUG|collector_api.py:200] 2021-02-08 15:43:48,052 > ++++++++++++++신성이엔지++++++++++++++++++++233/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:48,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:48,385 > 100
[DEBUG|collector_api.py:200] 2021-02-08 15:43:48,644 > ++++++++++++++신세계인터내셔날++++++++++++++++++++234/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:48,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:48,993 > 101
[DEBUG|collector_api.py:200] 2021-02-08 15:43:49,247 > ++++++++++++++신세계푸드++++++++++++++++++++235/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:49,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:49,601 > 102
[DEBUG|collector_api.py:200] 2021-02-08 15:43:49,846 > ++++++++++++++신화실업++++++++++++++++++++236/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:49,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:50,207 > 103
[DEBUG|collector_api.py:200] 2021-02-08 15:43:50,511 > ++++++++++++++씨아이테크++++++++++++++++++++237/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:50,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:50,816 > 104
[DEBUG|collector_api.py:200] 2021-02-08 15:43:51,080 > ++++++++++++++아모레G++++++++++++++++++++238/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:51,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:51,423 > 105
[DEBUG|collector_api.py:200] 2021-02-08 15:43:51,703 > ++++++++++++++아세아시멘트++++++++++++++++++++239/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:51,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:52,032 > 106
[DEBUG|collector_api.py:200] 2021-02-08 15:43:52,271 > ++++++++++++++애경산업++++++++++++++++++++240/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:52,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:52,640 > 107
[DEBUG|collector_api.py:200] 2021-02-08 15:43:52,864 > ++++++++++++++에이플러스에셋++++++++++++++++++++241/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:52,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:53,247 > 108
[DEBUG|collector_api.py:200] 2021-02-08 15:43:53,424 > ++++++++++++++NHN++++++++++++++++++++242/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:53,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:53,854 > 109
[DEBUG|collector_api.py:200] 2021-02-08 15:43:54,082 > ++++++++++++++유니켐++++++++++++++++++++243/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:54,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:54,462 > 110
[DEBUG|collector_api.py:200] 2021-02-08 15:43:54,728 > ++++++++++++++유양디앤유++++++++++++++++++++244/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:54,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:55,070 > 111
[DEBUG|collector_api.py:200] 2021-02-08 15:43:55,372 > ++++++++++++++유화증권++++++++++++++++++++245/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:55,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:55,678 > 112
[DEBUG|collector_api.py:200] 2021-02-08 15:43:55,938 > ++++++++++++++이구산업++++++++++++++++++++246/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:55,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:56,285 > 113
[DEBUG|collector_api.py:200] 2021-02-08 15:43:56,555 > ++++++++++++++이월드++++++++++++++++++++247/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:56,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:56,894 > 114
[DEBUG|collector_api.py:200] 2021-02-08 15:43:57,152 > ++++++++++++++일성신약++++++++++++++++++++248/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:57,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:57,502 > 115
[DEBUG|collector_api.py:200] 2021-02-08 15:43:57,785 > ++++++++++++++제이에스코퍼레이션++++++++++++++++++++249/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:57,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:58,111 > 116
[DEBUG|collector_api.py:200] 2021-02-08 15:43:58,353 > ++++++++++++++제이준코스메틱++++++++++++++++++++250/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:58,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:58,719 > 117
[DEBUG|collector_api.py:200] 2021-02-08 15:43:58,991 > ++++++++++++++조비++++++++++++++++++++251/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:58,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:59,327 > 118
[DEBUG|collector_api.py:200] 2021-02-08 15:43:59,587 > ++++++++++++++조선선재++++++++++++++++++++252/2895
[DEBUG|open_api.py:656] 2021-02-08 15:43:59,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:43:59,933 > 119
[DEBUG|collector_api.py:200] 2021-02-08 15:44:00,198 > ++++++++++++++종근당바이오++++++++++++++++++++253/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:00,198 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:00,541 > 120
[DEBUG|collector_api.py:200] 2021-02-08 15:44:00,790 > ++++++++++++++지누스++++++++++++++++++++254/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:00,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:01,149 > 121
[DEBUG|collector_api.py:200] 2021-02-08 15:44:01,384 > ++++++++++++++진양화학++++++++++++++++++++255/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:01,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:01,756 > 122
[DEBUG|collector_api.py:200] 2021-02-08 15:44:01,999 > ++++++++++++++케이탑리츠++++++++++++++++++++256/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:01,999 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:02,365 > 123
[DEBUG|collector_api.py:200] 2021-02-08 15:44:02,595 > ++++++++++++++코람코에너지리츠++++++++++++++++++++257/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:02,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:02,973 > 124
[DEBUG|collector_api.py:200] 2021-02-08 15:44:03,157 > ++++++++++++++코스모신소재++++++++++++++++++++258/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:03,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:03,582 > 125
[DEBUG|collector_api.py:200] 2021-02-08 15:44:03,847 > ++++++++++++++코웨이++++++++++++++++++++259/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:03,847 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:04,191 > 126
[DEBUG|collector_api.py:200] 2021-02-08 15:44:04,459 > ++++++++++++++쿠쿠홈시스++++++++++++++++++++260/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:04,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:04,799 > 127
[DEBUG|collector_api.py:200] 2021-02-08 15:44:05,035 > ++++++++++++++키위미디어그룹++++++++++++++++++++261/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:05,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:05,406 > 128
[DEBUG|collector_api.py:200] 2021-02-08 15:44:05,667 > ++++++++++++++태평양물산++++++++++++++++++++262/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:05,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:06,013 > 129
[DEBUG|collector_api.py:200] 2021-02-08 15:44:06,312 > ++++++++++++++테이팩스++++++++++++++++++++263/2895
[DEBUG|open_api.py:656] 2021-02-08 15:44:06,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:44:06,621 > 130
[DEBUG|open_api.py:303] 2021-02-08 15:53:38,608 > connected
[DEBUG|open_api.py:244] 2021-02-08 15:53:38,613 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 15:53:38,614 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 15:53:38,615 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 15:53:38,615 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 15:53:38,616 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 15:53:38,616 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 15:53:38,629 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 15:53:38,667 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 15:53:38,668 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 15:53:38,668 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 15:53:38,686 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 15:53:38,730 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 15:53:41,524 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 15:53:41,525 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 15:53:41,568 > ++++++++++++++테이팩스++++++++++++++++++++263/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:41,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:41,571 > 1
[DEBUG|collector_api.py:200] 2021-02-08 15:53:42,769 > ++++++++++++++텔코웨어++++++++++++++++++++264/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:42,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:42,770 > 2
[DEBUG|collector_api.py:200] 2021-02-08 15:53:43,129 > ++++++++++++++티와이홀딩스++++++++++++++++++++265/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:43,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:43,379 > 3
[DEBUG|collector_api.py:200] 2021-02-08 15:53:43,539 > ++++++++++++++팜스코++++++++++++++++++++266/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:43,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:43,987 > 4
[DEBUG|collector_api.py:200] 2021-02-08 15:53:44,273 > ++++++++++++++퍼시스++++++++++++++++++++267/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:44,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:44,596 > 5
[DEBUG|collector_api.py:200] 2021-02-08 15:53:44,872 > ++++++++++++++풍산홀딩스++++++++++++++++++++268/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:44,872 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:45,205 > 6
[DEBUG|collector_api.py:200] 2021-02-08 15:53:45,525 > ++++++++++++++하이스틸++++++++++++++++++++269/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:45,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:45,819 > 7
[DEBUG|collector_api.py:200] 2021-02-08 15:53:46,069 > ++++++++++++++하이트진로++++++++++++++++++++270/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:46,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:46,428 > 8
[DEBUG|collector_api.py:200] 2021-02-08 15:53:46,715 > ++++++++++++++한국석유++++++++++++++++++++271/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:46,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:47,061 > 9
[DEBUG|collector_api.py:200] 2021-02-08 15:53:47,374 > ++++++++++++++한국수출포장++++++++++++++++++++272/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:47,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:47,696 > 10
[DEBUG|collector_api.py:200] 2021-02-08 15:53:47,957 > ++++++++++++++한국자산신탁++++++++++++++++++++273/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:47,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:48,305 > 11
[DEBUG|collector_api.py:200] 2021-02-08 15:53:48,563 > ++++++++++++++한국주강++++++++++++++++++++274/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:48,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:48,913 > 12
[DEBUG|collector_api.py:200] 2021-02-08 15:53:49,197 > ++++++++++++++한국콜마홀딩스++++++++++++++++++++275/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:49,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:49,520 > 13
[DEBUG|collector_api.py:200] 2021-02-08 15:53:49,822 > ++++++++++++++한국항공우주++++++++++++++++++++276/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:49,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:50,129 > 14
[DEBUG|collector_api.py:200] 2021-02-08 15:53:50,421 > ++++++++++++++한라홀딩스++++++++++++++++++++277/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:50,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:50,738 > 15
[DEBUG|collector_api.py:200] 2021-02-08 15:53:50,985 > ++++++++++++++한미사이언스++++++++++++++++++++278/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:50,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:51,344 > 16
[DEBUG|collector_api.py:200] 2021-02-08 15:53:51,614 > ++++++++++++++한샘++++++++++++++++++++279/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:51,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:51,951 > 17
[DEBUG|collector_api.py:200] 2021-02-08 15:53:52,228 > ++++++++++++++한솔홀딩스++++++++++++++++++++280/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:52,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:52,558 > 18
[DEBUG|collector_api.py:200] 2021-02-08 15:53:52,860 > ++++++++++++++한신기계++++++++++++++++++++281/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:52,860 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:53,165 > 19
[DEBUG|collector_api.py:200] 2021-02-08 15:53:53,449 > ++++++++++++++한화++++++++++++++++++++282/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:53,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:53,775 > 20
[DEBUG|collector_api.py:200] 2021-02-08 15:53:54,057 > ++++++++++++++한화에어로스페이스++++++++++++++++++++283/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:54,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:54,387 > 21
[DEBUG|collector_api.py:200] 2021-02-08 15:53:54,676 > ++++++++++++++현대차++++++++++++++++++++284/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:54,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:54,994 > 22
[DEBUG|collector_api.py:200] 2021-02-08 15:53:55,292 > ++++++++++++++현대퓨처넷++++++++++++++++++++285/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:55,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:55,603 > 23
[DEBUG|collector_api.py:200] 2021-02-08 15:53:55,859 > ++++++++++++++효성ITX++++++++++++++++++++286/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:55,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:56,212 > 24
[DEBUG|collector_api.py:200] 2021-02-08 15:53:56,585 > ++++++++++++++휴니드++++++++++++++++++++287/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:56,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:56,819 > 25
[DEBUG|collector_api.py:200] 2021-02-08 15:53:57,167 > ++++++++++++++CJ대한통운++++++++++++++++++++288/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:57,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:57,428 > 26
[DEBUG|collector_api.py:200] 2021-02-08 15:53:57,741 > ++++++++++++++DSR제강++++++++++++++++++++289/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:57,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:58,036 > 27
[DEBUG|collector_api.py:200] 2021-02-08 15:53:58,371 > ++++++++++++++ESR켄달스퀘어리츠++++++++++++++++++++290/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:58,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:58,645 > 28
[DEBUG|collector_api.py:200] 2021-02-08 15:53:58,818 > ++++++++++++++GKL++++++++++++++++++++291/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:58,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:59,254 > 29
[DEBUG|collector_api.py:200] 2021-02-08 15:53:59,528 > ++++++++++++++JW중외제약++++++++++++++++++++292/2895
[DEBUG|open_api.py:656] 2021-02-08 15:53:59,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:53:59,863 > 30
[DEBUG|collector_api.py:200] 2021-02-08 15:54:00,140 > ++++++++++++++KPX홀딩스++++++++++++++++++++293/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:00,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:00,471 > 31
[DEBUG|collector_api.py:200] 2021-02-08 15:54:00,793 > ++++++++++++++KSS해운++++++++++++++++++++294/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:00,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:01,079 > 32
[DEBUG|collector_api.py:200] 2021-02-08 15:54:01,346 > ++++++++++++++LF++++++++++++++++++++295/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:01,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:01,687 > 33
[DEBUG|collector_api.py:200] 2021-02-08 15:54:01,932 > ++++++++++++++LG하우시스++++++++++++++++++++296/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:01,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:02,296 > 34
[DEBUG|collector_api.py:200] 2021-02-08 15:54:02,564 > ++++++++++++++LG화학++++++++++++++++++++297/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:02,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:02,903 > 35
[DEBUG|collector_api.py:200] 2021-02-08 15:54:03,152 > ++++++++++++++LIG넥스원++++++++++++++++++++298/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:03,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:03,513 > 36
[DEBUG|collector_api.py:200] 2021-02-08 15:54:03,760 > ++++++++++++++LS++++++++++++++++++++299/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:03,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:04,122 > 37
[DEBUG|collector_api.py:200] 2021-02-08 15:54:04,391 > ++++++++++++++NAVER++++++++++++++++++++300/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:04,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:04,730 > 38
[DEBUG|collector_api.py:200] 2021-02-08 15:54:05,008 > ++++++++++++++NICE++++++++++++++++++++301/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:05,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:05,339 > 39
[DEBUG|collector_api.py:200] 2021-02-08 15:54:05,606 > ++++++++++++++NI스틸++++++++++++++++++++302/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:05,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:05,947 > 40
[DEBUG|collector_api.py:200] 2021-02-08 15:54:06,218 > ++++++++++++++SGC에너지++++++++++++++++++++303/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:06,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:06,555 > 41
[DEBUG|collector_api.py:200] 2021-02-08 15:54:06,820 > ++++++++++++++SH에너지화학++++++++++++++++++++304/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:06,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:07,162 > 42
[DEBUG|collector_api.py:200] 2021-02-08 15:54:07,450 > ++++++++++++++SK증권++++++++++++++++++++305/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:07,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:07,769 > 43
[DEBUG|collector_api.py:200] 2021-02-08 15:54:08,080 > ++++++++++++++SK하이닉스++++++++++++++++++++306/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:08,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:08,379 > 44
[DEBUG|collector_api.py:200] 2021-02-08 15:54:08,655 > ++++++++++++++경인양행++++++++++++++++++++307/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:08,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:08,986 > 45
[DEBUG|collector_api.py:200] 2021-02-08 15:54:09,241 > ++++++++++++++경인전자++++++++++++++++++++308/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:09,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:09,595 > 46
[DEBUG|collector_api.py:200] 2021-02-08 15:54:09,969 > ++++++++++++++국보++++++++++++++++++++309/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:09,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:10,203 > 47
[DEBUG|collector_api.py:200] 2021-02-08 15:54:10,485 > ++++++++++++++기신정기++++++++++++++++++++310/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:10,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:10,810 > 48
[DEBUG|collector_api.py:200] 2021-02-08 15:54:11,063 > ++++++++++++++녹십자++++++++++++++++++++311/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:11,063 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:11,418 > 49
[DEBUG|collector_api.py:200] 2021-02-08 15:54:11,690 > ++++++++++++++대덕++++++++++++++++++++312/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:11,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:12,026 > 50
[DEBUG|collector_api.py:200] 2021-02-08 15:54:12,300 > ++++++++++++++대동전자++++++++++++++++++++313/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:12,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:12,633 > 51
[DEBUG|collector_api.py:200] 2021-02-08 15:54:12,905 > ++++++++++++++대림B&Co++++++++++++++++++++314/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:12,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:13,243 > 52
[DEBUG|collector_api.py:200] 2021-02-08 15:54:13,571 > ++++++++++++++대양금속++++++++++++++++++++315/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:13,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:13,851 > 53
[DEBUG|collector_api.py:200] 2021-02-08 15:54:14,117 > ++++++++++++++대창++++++++++++++++++++316/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:14,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:14,458 > 54
[DEBUG|collector_api.py:200] 2021-02-08 15:54:14,736 > ++++++++++++++동국제강++++++++++++++++++++317/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:14,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:15,066 > 55
[DEBUG|collector_api.py:200] 2021-02-08 15:54:15,342 > ++++++++++++++동양물산++++++++++++++++++++318/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:15,342 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:15,674 > 56
[DEBUG|collector_api.py:200] 2021-02-08 15:54:15,938 > ++++++++++++++동화약품++++++++++++++++++++319/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:15,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:16,283 > 57
[DEBUG|collector_api.py:200] 2021-02-08 15:54:16,567 > ++++++++++++++두산중공업++++++++++++++++++++320/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:16,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:16,889 > 58
[DEBUG|collector_api.py:200] 2021-02-08 15:54:17,179 > ++++++++++++++DI동일++++++++++++++++++++321/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:17,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:17,501 > 59
[DEBUG|collector_api.py:200] 2021-02-08 15:54:17,773 > ++++++++++++++디아이씨++++++++++++++++++++322/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:17,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:18,109 > 60
[DEBUG|collector_api.py:200] 2021-02-08 15:54:18,377 > ++++++++++++++롯데관광개발++++++++++++++++++++323/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:18,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:18,718 > 61
[DEBUG|collector_api.py:200] 2021-02-08 15:54:18,967 > ++++++++++++++맵스리얼티1++++++++++++++++++++324/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:18,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:19,325 > 62
[DEBUG|collector_api.py:200] 2021-02-08 15:54:19,563 > ++++++++++++++명신산업++++++++++++++++++++325/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:19,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:19,933 > 63
[DEBUG|collector_api.py:200] 2021-02-08 15:54:20,102 > ++++++++++++++무학++++++++++++++++++++326/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:20,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:20,541 > 64
[DEBUG|collector_api.py:200] 2021-02-08 15:54:20,816 > ++++++++++++++미래아이앤지++++++++++++++++++++327/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:20,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:21,148 > 65
[DEBUG|collector_api.py:200] 2021-02-08 15:54:21,462 > ++++++++++++++바다로19호++++++++++++++++++++328/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:21,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:21,755 > 66
[DEBUG|collector_api.py:200] 2021-02-08 15:54:22,001 > ++++++++++++++부산주공++++++++++++++++++++329/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:22,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:22,362 > 67
[DEBUG|collector_api.py:200] 2021-02-08 15:54:22,629 > ++++++++++++++비케이탑스++++++++++++++++++++330/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:22,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:22,970 > 68
[DEBUG|collector_api.py:200] 2021-02-08 15:54:23,272 > ++++++++++++++사조씨푸드++++++++++++++++++++331/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:23,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:23,578 > 69
[DEBUG|collector_api.py:200] 2021-02-08 15:54:23,844 > ++++++++++++++삼성물산++++++++++++++++++++332/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:23,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:24,184 > 70
[DEBUG|collector_api.py:200] 2021-02-08 15:54:24,556 > ++++++++++++++삼성전자++++++++++++++++++++333/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:24,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:24,791 > 71
[DEBUG|collector_api.py:200] 2021-02-08 15:54:25,076 > ++++++++++++++삼성제약++++++++++++++++++++334/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:25,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:25,399 > 72
[DEBUG|collector_api.py:200] 2021-02-08 15:54:25,667 > ++++++++++++++삼원강재++++++++++++++++++++335/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:25,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:26,008 > 73
[DEBUG|collector_api.py:200] 2021-02-08 15:54:26,339 > ++++++++++++++삼익THK++++++++++++++++++++336/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:26,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:26,625 > 74
[DEBUG|collector_api.py:200] 2021-02-08 15:54:26,879 > ++++++++++++++삼일제약++++++++++++++++++++337/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:26,879 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:27,233 > 75
[DEBUG|collector_api.py:200] 2021-02-08 15:54:27,575 > ++++++++++++++삼진제약++++++++++++++++++++338/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:27,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:27,840 > 76
[DEBUG|collector_api.py:200] 2021-02-08 15:54:28,133 > ++++++++++++++삼화왕관++++++++++++++++++++339/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:28,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:28,450 > 77
[DEBUG|collector_api.py:200] 2021-02-08 15:54:28,804 > ++++++++++++++서연++++++++++++++++++++340/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:28,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:29,080 > 78
[DEBUG|collector_api.py:200] 2021-02-08 15:54:29,371 > ++++++++++++++선창산업++++++++++++++++++++341/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:29,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:29,689 > 79
[DEBUG|collector_api.py:200] 2021-02-08 15:54:29,948 > ++++++++++++++성신양회++++++++++++++++++++342/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:29,949 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:30,297 > 80
[DEBUG|collector_api.py:200] 2021-02-08 15:54:30,563 > ++++++++++++++세기상사++++++++++++++++++++343/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:30,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:30,905 > 81
[DEBUG|collector_api.py:200] 2021-02-08 15:54:31,187 > ++++++++++++++세아특수강++++++++++++++++++++344/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:31,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:31,512 > 82
[DEBUG|collector_api.py:200] 2021-02-08 15:54:31,784 > ++++++++++++++세우글로벌++++++++++++++++++++345/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:31,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:32,119 > 83
[DEBUG|collector_api.py:200] 2021-02-08 15:54:32,412 > ++++++++++++++세원정공++++++++++++++++++++346/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:32,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:32,728 > 84
[DEBUG|collector_api.py:200] 2021-02-08 15:54:32,992 > ++++++++++++++세진중공업++++++++++++++++++++347/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:32,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:33,335 > 85
[DEBUG|collector_api.py:200] 2021-02-08 15:54:33,579 > ++++++++++++++세화아이엠씨++++++++++++++++++++348/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:33,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:33,942 > 86
[DEBUG|collector_api.py:200] 2021-02-08 15:54:34,170 > ++++++++++++++셀트리온++++++++++++++++++++349/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:34,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:34,551 > 87
[DEBUG|collector_api.py:200] 2021-02-08 15:54:34,803 > ++++++++++++++신라교역++++++++++++++++++++350/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:34,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:35,159 > 88
[DEBUG|collector_api.py:200] 2021-02-08 15:54:35,469 > ++++++++++++++신성통상++++++++++++++++++++351/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:35,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:35,771 > 89
[DEBUG|collector_api.py:200] 2021-02-08 15:54:36,041 > ++++++++++++++신세계++++++++++++++++++++352/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:36,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:36,379 > 90
[DEBUG|collector_api.py:200] 2021-02-08 15:54:36,651 > ++++++++++++++아모레퍼시픽++++++++++++++++++++353/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:36,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:36,987 > 91
[DEBUG|collector_api.py:200] 2021-02-08 15:54:37,282 > ++++++++++++++아세아++++++++++++++++++++354/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:37,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:37,597 > 92
[DEBUG|collector_api.py:200] 2021-02-08 15:54:37,854 > ++++++++++++++아이에스동서++++++++++++++++++++355/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:37,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:38,205 > 93
[DEBUG|collector_api.py:200] 2021-02-08 15:54:38,495 > ++++++++++++++SJM++++++++++++++++++++356/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:38,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:38,813 > 94
[DEBUG|collector_api.py:200] 2021-02-08 15:54:39,074 > ++++++++++++++에이리츠++++++++++++++++++++357/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:39,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:39,423 > 95
[DEBUG|collector_api.py:200] 2021-02-08 15:54:39,779 > ++++++++++++++엔에스쇼핑++++++++++++++++++++358/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:39,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:40,032 > 96
[DEBUG|collector_api.py:200] 2021-02-08 15:54:40,289 > ++++++++++++++엔케이++++++++++++++++++++359/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:40,289 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:40,641 > 97
[DEBUG|collector_api.py:200] 2021-02-08 15:54:40,917 > ++++++++++++++NPC++++++++++++++++++++360/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:40,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:41,249 > 98
[DEBUG|collector_api.py:200] 2021-02-08 15:54:41,516 > ++++++++++++++영원무역++++++++++++++++++++361/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:41,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:41,855 > 99
[DEBUG|collector_api.py:200] 2021-02-08 15:54:42,146 > ++++++++++++++영원무역홀딩스++++++++++++++++++++362/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:42,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:42,463 > 100
[DEBUG|collector_api.py:200] 2021-02-08 15:54:42,731 > ++++++++++++++우리들휴브레인++++++++++++++++++++363/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:42,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:43,070 > 101
[DEBUG|collector_api.py:200] 2021-02-08 15:54:43,368 > ++++++++++++++우신시스템++++++++++++++++++++364/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:43,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:43,679 > 102
[DEBUG|collector_api.py:200] 2021-02-08 15:54:43,929 > ++++++++++++++우진++++++++++++++++++++365/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:43,929 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:44,286 > 103
[DEBUG|collector_api.py:200] 2021-02-08 15:54:44,541 > ++++++++++++++우진플라임++++++++++++++++++++366/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:44,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:44,895 > 104
[DEBUG|collector_api.py:200] 2021-02-08 15:54:45,175 > ++++++++++++++유니드++++++++++++++++++++367/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:45,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:45,503 > 105
[DEBUG|collector_api.py:200] 2021-02-08 15:54:45,760 > ++++++++++++++유진투자증권++++++++++++++++++++368/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:45,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:46,111 > 106
[DEBUG|collector_api.py:200] 2021-02-08 15:54:46,387 > ++++++++++++++이건산업++++++++++++++++++++369/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:46,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:46,719 > 107
[DEBUG|collector_api.py:200] 2021-02-08 15:54:46,985 > ++++++++++++++이노션++++++++++++++++++++370/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:46,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:47,326 > 108
[DEBUG|collector_api.py:200] 2021-02-08 15:54:47,581 > ++++++++++++++이연제약++++++++++++++++++++371/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:47,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:47,933 > 109
[DEBUG|collector_api.py:200] 2021-02-08 15:54:48,173 > ++++++++++++++인스코비++++++++++++++++++++372/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:48,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:48,541 > 110
[DEBUG|collector_api.py:200] 2021-02-08 15:54:48,837 > ++++++++++++++잇츠한불++++++++++++++++++++373/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:48,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:49,149 > 111
[DEBUG|collector_api.py:200] 2021-02-08 15:54:49,425 > ++++++++++++++조광페인트++++++++++++++++++++374/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:49,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:49,757 > 112
[DEBUG|collector_api.py:200] 2021-02-08 15:54:50,027 > ++++++++++++++조선내화++++++++++++++++++++375/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:50,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:50,365 > 113
[DEBUG|collector_api.py:200] 2021-02-08 15:54:50,660 > ++++++++++++++진에어++++++++++++++++++++376/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:50,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:50,973 > 114
[DEBUG|collector_api.py:200] 2021-02-08 15:54:51,264 > ++++++++++++++참엔지니어링++++++++++++++++++++377/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:51,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:51,581 > 115
[DEBUG|collector_api.py:200] 2021-02-08 15:54:51,948 > ++++++++++++++케이씨씨글라스++++++++++++++++++++378/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:51,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:52,189 > 116
[DEBUG|collector_api.py:200] 2021-02-08 15:54:52,401 > ++++++++++++++코오롱글로벌++++++++++++++++++++379/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:52,401 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:52,797 > 117
[DEBUG|collector_api.py:200] 2021-02-08 15:54:53,085 > ++++++++++++++태경케미컬++++++++++++++++++++380/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:53,085 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:53,405 > 118
[DEBUG|collector_api.py:200] 2021-02-08 15:54:53,665 > ++++++++++++++토니모리++++++++++++++++++++381/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:53,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:54,013 > 119
[DEBUG|collector_api.py:200] 2021-02-08 15:54:54,260 > ++++++++++++++페이퍼코리아++++++++++++++++++++382/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:54,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:54,620 > 120
[DEBUG|collector_api.py:200] 2021-02-08 15:54:54,878 > ++++++++++++++POSCO++++++++++++++++++++383/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:54,878 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:55,228 > 121
[DEBUG|collector_api.py:200] 2021-02-08 15:54:55,513 > ++++++++++++++폴루스바이오팜++++++++++++++++++++384/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:55,513 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:55,836 > 122
[DEBUG|collector_api.py:200] 2021-02-08 15:54:56,220 > ++++++++++++++하나제약++++++++++++++++++++385/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:56,220 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:56,494 > 123
[DEBUG|collector_api.py:200] 2021-02-08 15:54:56,735 > ++++++++++++++한국쉘석유++++++++++++++++++++386/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:56,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:57,101 > 124
[DEBUG|collector_api.py:200] 2021-02-08 15:54:57,375 > ++++++++++++++한국철강++++++++++++++++++++387/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:57,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:57,709 > 125
[DEBUG|collector_api.py:200] 2021-02-08 15:54:57,965 > ++++++++++++++한국화장품제조++++++++++++++++++++388/2895
[DEBUG|open_api.py:656] 2021-02-08 15:54:57,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:54:58,317 > 126
[DEBUG|open_api.py:303] 2021-02-08 15:59:16,202 > connected
[DEBUG|open_api.py:244] 2021-02-08 15:59:16,202 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 15:59:16,202 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 15:59:16,208 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 15:59:16,209 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 15:59:16,209 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 15:59:16,209 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 15:59:16,224 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 15:59:16,257 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 15:59:16,257 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 15:59:16,258 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 15:59:16,273 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 15:59:16,305 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 15:59:18,915 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 15:59:18,916 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 15:59:18,964 > ++++++++++++++한국화장품제조++++++++++++++++++++388/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:18,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:18,966 > 1
[DEBUG|collector_api.py:200] 2021-02-08 15:59:20,137 > ++++++++++++++한미글로벌++++++++++++++++++++389/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:20,137 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:20,138 > 2
[DEBUG|collector_api.py:200] 2021-02-08 15:59:20,406 > ++++++++++++++한솔PNS++++++++++++++++++++390/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:20,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:20,745 > 3
[DEBUG|collector_api.py:200] 2021-02-08 15:59:21,001 > ++++++++++++++한양증권++++++++++++++++++++391/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:21,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:21,353 > 4
[DEBUG|collector_api.py:200] 2021-02-08 15:59:21,632 > ++++++++++++++한진중공업++++++++++++++++++++392/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:21,632 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:21,960 > 5
[DEBUG|collector_api.py:200] 2021-02-08 15:59:22,207 > ++++++++++++++한진중공업홀딩스++++++++++++++++++++393/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:22,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:22,568 > 6
[DEBUG|collector_api.py:200] 2021-02-08 15:59:22,947 > ++++++++++++++현대일렉트릭++++++++++++++++++++394/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:22,947 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:23,176 > 7
[DEBUG|collector_api.py:200] 2021-02-08 15:59:23,449 > ++++++++++++++현대제철++++++++++++++++++++395/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:23,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:23,783 > 8
[DEBUG|collector_api.py:200] 2021-02-08 15:59:24,052 > ++++++++++++++황금에스티++++++++++++++++++++396/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:24,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:24,391 > 9
[DEBUG|collector_api.py:200] 2021-02-08 15:59:24,665 > ++++++++++++++AJ네트웍스++++++++++++++++++++397/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:24,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:25,000 > 10
[DEBUG|collector_api.py:200] 2021-02-08 15:59:25,252 > ++++++++++++++AK홀딩스++++++++++++++++++++398/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:25,252 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:25,607 > 11
[DEBUG|collector_api.py:200] 2021-02-08 15:59:25,862 > ++++++++++++++CJ++++++++++++++++++++399/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:25,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:26,215 > 12
[DEBUG|collector_api.py:200] 2021-02-08 15:59:26,478 > ++++++++++++++CJ씨푸드++++++++++++++++++++400/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:26,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:26,824 > 13
[DEBUG|collector_api.py:200] 2021-02-08 15:59:27,093 > ++++++++++++++DGB금융지주++++++++++++++++++++401/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:27,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:27,431 > 14
[DEBUG|collector_api.py:200] 2021-02-08 15:59:27,668 > ++++++++++++++E1++++++++++++++++++++402/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:27,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:28,040 > 15
[DEBUG|collector_api.py:200] 2021-02-08 15:59:28,293 > ++++++++++++++F&F++++++++++++++++++++403/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:28,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:28,649 > 16
[DEBUG|collector_api.py:200] 2021-02-08 15:59:28,918 > ++++++++++++++KEC++++++++++++++++++++404/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:28,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:29,258 > 17
[DEBUG|collector_api.py:200] 2021-02-08 15:59:29,519 > ++++++++++++++KISCO홀딩스++++++++++++++++++++405/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:29,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:29,866 > 18
[DEBUG|collector_api.py:200] 2021-02-08 15:59:30,143 > ++++++++++++++LG++++++++++++++++++++406/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:30,144 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:30,475 > 19
[DEBUG|collector_api.py:200] 2021-02-08 15:59:30,778 > ++++++++++++++LG디스플레이++++++++++++++++++++407/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:30,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:31,082 > 20
[DEBUG|collector_api.py:200] 2021-02-08 15:59:31,359 > ++++++++++++++LS전선아시아++++++++++++++++++++408/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:31,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:31,689 > 21
[DEBUG|collector_api.py:200] 2021-02-08 15:59:31,933 > ++++++++++++++NH프라임리츠++++++++++++++++++++409/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:31,933 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:32,297 > 22
[DEBUG|collector_api.py:200] 2021-02-08 15:59:32,506 > ++++++++++++++S&T중공업++++++++++++++++++++410/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:32,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:32,905 > 23
[DEBUG|collector_api.py:200] 2021-02-08 15:59:33,205 > ++++++++++++++S&T홀딩스++++++++++++++++++++411/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:33,206 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:33,515 > 24
[DEBUG|collector_api.py:200] 2021-02-08 15:59:33,774 > ++++++++++++++S-Oil++++++++++++++++++++412/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:33,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:34,123 > 25
[DEBUG|collector_api.py:200] 2021-02-08 15:59:34,404 > ++++++++++++++SK네트웍스++++++++++++++++++++413/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:34,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:34,730 > 26
[DEBUG|collector_api.py:200] 2021-02-08 15:59:35,032 > ++++++++++++++SK케미칼++++++++++++++++++++414/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:35,032 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:35,338 > 27
[DEBUG|collector_api.py:200] 2021-02-08 15:59:35,590 > ++++++++++++++경동인베스트++++++++++++++++++++415/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:35,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:35,946 > 28
[DEBUG|collector_api.py:200] 2021-02-08 15:59:36,194 > ++++++++++++++계룡건설++++++++++++++++++++416/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:36,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:36,555 > 29
[DEBUG|collector_api.py:200] 2021-02-08 15:59:36,813 > ++++++++++++++국동++++++++++++++++++++417/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:36,814 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:37,163 > 30
[DEBUG|collector_api.py:200] 2021-02-08 15:59:37,425 > ++++++++++++++남양유업++++++++++++++++++++418/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:37,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:37,771 > 31
[DEBUG|collector_api.py:200] 2021-02-08 15:59:38,044 > ++++++++++++++남해화학++++++++++++++++++++419/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:38,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:38,378 > 32
[DEBUG|collector_api.py:200] 2021-02-08 15:59:38,662 > ++++++++++++++노루페인트++++++++++++++++++++420/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:38,662 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:38,985 > 33
[DEBUG|collector_api.py:200] 2021-02-08 15:59:39,239 > ++++++++++++++대상++++++++++++++++++++421/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:39,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:39,594 > 34
[DEBUG|collector_api.py:200] 2021-02-08 15:59:39,880 > ++++++++++++++대성홀딩스++++++++++++++++++++422/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:39,881 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:40,201 > 35
[DEBUG|collector_api.py:200] 2021-02-08 15:59:40,485 > ++++++++++++++대한제강++++++++++++++++++++423/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:40,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:40,808 > 36
[DEBUG|collector_api.py:200] 2021-02-08 15:59:41,061 > ++++++++++++++대호에이엘++++++++++++++++++++424/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:41,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:41,417 > 37
[DEBUG|collector_api.py:200] 2021-02-08 15:59:41,666 > ++++++++++++++덴티움++++++++++++++++++++425/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:41,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:42,024 > 38
[DEBUG|collector_api.py:200] 2021-02-08 15:59:42,266 > ++++++++++++++동원F&B++++++++++++++++++++426/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:42,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:42,632 > 39
[DEBUG|collector_api.py:200] 2021-02-08 15:59:42,895 > ++++++++++++++두산퓨얼셀++++++++++++++++++++427/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:42,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:43,240 > 40
[DEBUG|collector_api.py:200] 2021-02-08 15:59:43,465 > ++++++++++++++만호제강++++++++++++++++++++428/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:43,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:43,847 > 41
[DEBUG|collector_api.py:200] 2021-02-08 15:59:44,113 > ++++++++++++++모나미++++++++++++++++++++429/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:44,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:44,455 > 42
[DEBUG|collector_api.py:200] 2021-02-08 15:59:44,735 > ++++++++++++++문배철강++++++++++++++++++++430/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:44,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:45,063 > 43
[DEBUG|collector_api.py:200] 2021-02-08 15:59:45,333 > ++++++++++++++미래에셋생명++++++++++++++++++++431/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:45,333 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:45,671 > 44
[DEBUG|collector_api.py:200] 2021-02-08 15:59:45,914 > ++++++++++++++미창석유++++++++++++++++++++432/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:45,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:46,278 > 45
[DEBUG|collector_api.py:200] 2021-02-08 15:59:46,556 > ++++++++++++++백광산업++++++++++++++++++++433/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:46,556 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:46,887 > 46
[DEBUG|collector_api.py:200] 2021-02-08 15:59:47,158 > ++++++++++++++벽산++++++++++++++++++++434/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:47,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:47,494 > 47
[DEBUG|collector_api.py:200] 2021-02-08 15:59:47,767 > ++++++++++++++부국철강++++++++++++++++++++435/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:47,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:48,102 > 48
[DEBUG|collector_api.py:200] 2021-02-08 15:59:48,377 > ++++++++++++++부산가스++++++++++++++++++++436/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:48,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:48,710 > 49
[DEBUG|collector_api.py:200] 2021-02-08 15:59:48,973 > ++++++++++++++비비안++++++++++++++++++++437/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:48,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:49,318 > 50
[DEBUG|collector_api.py:200] 2021-02-08 15:59:49,667 > ++++++++++++++비상교육++++++++++++++++++++438/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:49,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:49,926 > 51
[DEBUG|collector_api.py:200] 2021-02-08 15:59:50,174 > ++++++++++++++사조산업++++++++++++++++++++439/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:50,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:50,532 > 52
[DEBUG|collector_api.py:200] 2021-02-08 15:59:50,797 > ++++++++++++++삼부토건++++++++++++++++++++440/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:50,797 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:51,140 > 53
[DEBUG|collector_api.py:200] 2021-02-08 15:59:51,424 > ++++++++++++++삼성공조++++++++++++++++++++441/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:51,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:51,748 > 54
[DEBUG|collector_api.py:200] 2021-02-08 15:59:52,037 > ++++++++++++++삼성생명++++++++++++++++++++442/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:52,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:52,355 > 55
[DEBUG|collector_api.py:200] 2021-02-08 15:59:52,601 > ++++++++++++++삼성전기++++++++++++++++++++443/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:52,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:52,961 > 56
[DEBUG|collector_api.py:200] 2021-02-08 15:59:53,241 > ++++++++++++++삼양사++++++++++++++++++++444/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:53,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:53,568 > 57
[DEBUG|collector_api.py:200] 2021-02-08 15:59:53,819 > ++++++++++++++삼양패키징++++++++++++++++++++445/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:53,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:54,177 > 58
[DEBUG|collector_api.py:200] 2021-02-08 15:59:54,408 > ++++++++++++++삼일씨엔에스++++++++++++++++++++446/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:54,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:54,785 > 59
[DEBUG|collector_api.py:200] 2021-02-08 15:59:55,016 > ++++++++++++++삼화전기++++++++++++++++++++447/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:55,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:55,393 > 60
[DEBUG|collector_api.py:200] 2021-02-08 15:59:55,663 > ++++++++++++++샘표++++++++++++++++++++448/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:55,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:56,002 > 61
[DEBUG|collector_api.py:200] 2021-02-08 15:59:56,291 > ++++++++++++++서흥++++++++++++++++++++449/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:56,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:56,610 > 62
[DEBUG|collector_api.py:200] 2021-02-08 15:59:56,885 > ++++++++++++++세아베스틸++++++++++++++++++++450/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:56,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:57,217 > 63
[DEBUG|collector_api.py:200] 2021-02-08 15:59:57,490 > ++++++++++++++세하++++++++++++++++++++451/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:57,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:57,824 > 64
[DEBUG|collector_api.py:200] 2021-02-08 15:59:58,071 > ++++++++++++++수산중공업++++++++++++++++++++452/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:58,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:58,432 > 65
[DEBUG|collector_api.py:200] 2021-02-08 15:59:58,703 > ++++++++++++++신세계건설++++++++++++++++++++453/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:58,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:59,040 > 66
[DEBUG|collector_api.py:200] 2021-02-08 15:59:59,285 > ++++++++++++++신영와코루++++++++++++++++++++454/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:59,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 15:59:59,648 > 67
[DEBUG|collector_api.py:200] 2021-02-08 15:59:59,926 > ++++++++++++++신영증권++++++++++++++++++++455/2895
[DEBUG|open_api.py:656] 2021-02-08 15:59:59,926 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:00,255 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:00:00,532 > ++++++++++++++신원++++++++++++++++++++456/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:00,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:00,862 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:00:01,110 > ++++++++++++++신풍제지++++++++++++++++++++457/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:01,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:01,469 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:00:01,751 > ++++++++++++++에스엘++++++++++++++++++++458/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:01,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:02,077 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:00:02,363 > ++++++++++++++에이프로젠 KIC++++++++++++++++++++459/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:02,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:02,685 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:00:02,934 > ++++++++++++++엘브이엠씨홀딩스++++++++++++++++++++460/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:02,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:03,291 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:00:03,550 > ++++++++++++++LS ELECTRIC++++++++++++++++++++461/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:03,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:03,899 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:00:04,157 > ++++++++++++++오리온++++++++++++++++++++462/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:04,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:04,507 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:00:04,752 > ++++++++++++++우리금융지주++++++++++++++++++++463/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:04,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:05,116 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:00:05,379 > ++++++++++++++우성사료++++++++++++++++++++464/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:05,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:05,724 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:00:05,979 > ++++++++++++++웰바이오텍++++++++++++++++++++465/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:05,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:06,332 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:00:06,594 > ++++++++++++++유니온++++++++++++++++++++466/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:06,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:06,941 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:00:07,188 > ++++++++++++++유안타증권++++++++++++++++++++467/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:07,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:07,549 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:00:07,825 > ++++++++++++++일진전기++++++++++++++++++++468/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:07,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:08,157 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:00:08,424 > ++++++++++++++조광피혁++++++++++++++++++++469/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:08,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:08,765 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:00:09,024 > ++++++++++++++조일알미늄++++++++++++++++++++470/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:09,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:09,372 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:00:09,684 > ++++++++++++++진흥기업++++++++++++++++++++471/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:09,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:09,979 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:00:10,240 > ++++++++++++++카카오++++++++++++++++++++472/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:10,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:10,587 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:00:10,851 > ++++++++++++++KCTC++++++++++++++++++++473/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:10,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:11,194 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:00:11,469 > ++++++++++++++KT++++++++++++++++++++474/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:11,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:11,804 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:00:12,047 > ++++++++++++++코리안리++++++++++++++++++++475/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:12,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:12,411 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:00:12,684 > ++++++++++++++코스맥스비티아이++++++++++++++++++++476/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:12,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:13,019 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:00:13,283 > ++++++++++++++코오롱머티리얼++++++++++++++++++++477/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:13,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:13,626 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:00:13,873 > ++++++++++++++크라운제과++++++++++++++++++++478/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:13,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:14,234 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:00:14,466 > ++++++++++++++크라운해태홀딩스++++++++++++++++++++479/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:14,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:14,841 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:00:15,097 > ++++++++++++++키움증권++++++++++++++++++++480/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:15,098 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:15,449 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:00:15,723 > ++++++++++++++태림포장++++++++++++++++++++481/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:15,723 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:16,056 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:00:16,307 > ++++++++++++++태원물산++++++++++++++++++++482/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:16,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:16,664 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:00:16,927 > ++++++++++++++티에이치엔++++++++++++++++++++483/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:16,928 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:17,272 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:00:17,561 > ++++++++++++++팬오션++++++++++++++++++++484/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:17,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:17,880 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:00:18,155 > ++++++++++++++평화산업++++++++++++++++++++485/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:18,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:18,489 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:00:18,742 > ++++++++++++++피비파마++++++++++++++++++++486/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:18,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:19,098 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:00:19,260 > ++++++++++++++하나투어++++++++++++++++++++487/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:19,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:19,706 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:00:19,952 > ++++++++++++++하이골드12호++++++++++++++++++++488/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:19,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:20,313 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:00:20,554 > ++++++++++++++한국앤컴퍼니++++++++++++++++++++489/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:20,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:20,921 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:00:21,208 > ++++++++++++++한국프랜지++++++++++++++++++++490/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:21,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:21,529 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:00:21,818 > ++++++++++++++한독++++++++++++++++++++491/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:21,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:22,137 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:00:22,407 > ++++++++++++++한세엠케이++++++++++++++++++++492/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:22,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:22,744 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:00:22,981 > ++++++++++++++한솔제지++++++++++++++++++++493/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:22,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:23,352 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:00:23,593 > ++++++++++++++한솔케미칼++++++++++++++++++++494/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:23,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:23,959 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:00:24,225 > ++++++++++++++한솔테크닉스++++++++++++++++++++495/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:24,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:24,568 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:00:24,844 > ++++++++++++++한진++++++++++++++++++++496/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:24,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:25,176 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:00:25,453 > ++++++++++++++해성디에스++++++++++++++++++++497/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:25,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:25,784 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:00:26,029 > ++++++++++++++현대리바트++++++++++++++++++++498/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:26,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:26,391 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:00:26,659 > ++++++++++++++현대백화점++++++++++++++++++++499/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:26,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:26,999 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:00:27,261 > ++++++++++++++형지엘리트++++++++++++++++++++500/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:27,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:27,607 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:00:27,859 > ++++++++++++++혜인++++++++++++++++++++501/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:27,860 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:28,215 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:00:28,488 > ++++++++++++++화성산업++++++++++++++++++++502/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:28,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:28,822 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:00:29,077 > ++++++++++++++휴비스++++++++++++++++++++503/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:29,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:29,430 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:00:29,677 > ++++++++++++++BGF++++++++++++++++++++504/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:29,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:30,038 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:00:30,279 > ++++++++++++++CS홀딩스++++++++++++++++++++505/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:30,279 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:30,646 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:00:30,906 > ++++++++++++++DB++++++++++++++++++++506/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:30,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:31,254 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:00:31,535 > ++++++++++++++DL++++++++++++++++++++507/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:31,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:31,863 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:00:32,134 > ++++++++++++++GS리테일++++++++++++++++++++508/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:32,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:32,470 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:00:32,715 > ++++++++++++++HDC++++++++++++++++++++509/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:32,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:33,078 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:00:33,336 > ++++++++++++++JW생명과학++++++++++++++++++++510/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:33,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:33,686 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:00:33,912 > ++++++++++++++KC그린홀딩스++++++++++++++++++++511/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:33,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:34,294 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:00:34,561 > ++++++++++++++KR모터스++++++++++++++++++++512/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:34,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:34,902 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:00:35,159 > ++++++++++++++LG유플러스++++++++++++++++++++513/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:35,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:35,510 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:00:35,783 > ++++++++++++++SPC삼립++++++++++++++++++++514/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:35,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:36,117 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:00:36,379 > ++++++++++++++경농++++++++++++++++++++515/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:36,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:36,725 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:00:36,982 > ++++++++++++++경동도시가스++++++++++++++++++++516/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:36,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:37,335 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:00:37,606 > ++++++++++++++경방++++++++++++++++++++517/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:37,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:37,941 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:00:38,207 > ++++++++++++++고려제강++++++++++++++++++++518/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:38,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:38,549 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:00:38,817 > ++++++++++++++광동제약++++++++++++++++++++519/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:38,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:39,156 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:00:39,456 > ++++++++++++++광주신세계++++++++++++++++++++520/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:39,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:39,764 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:00:40,011 > ++++++++++++++국도화학++++++++++++++++++++521/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:40,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:40,370 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:00:40,649 > ++++++++++++++금비++++++++++++++++++++522/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:40,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:40,979 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:00:41,247 > ++++++++++++++금호타이어++++++++++++++++++++523/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:41,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:41,585 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:00:41,836 > ++++++++++++++대림통상++++++++++++++++++++524/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:41,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:42,192 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:00:42,457 > ++++++++++++++대신증권++++++++++++++++++++525/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:42,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:42,800 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:00:43,065 > ++++++++++++++대원강업++++++++++++++++++++526/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:43,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:43,407 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:00:43,693 > ++++++++++++++대원전선++++++++++++++++++++527/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:43,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:44,016 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:00:44,315 > ++++++++++++++대원화성++++++++++++++++++++528/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:44,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:44,624 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:00:44,882 > ++++++++++++++대유에이텍++++++++++++++++++++529/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:44,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:45,231 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:00:45,492 > ++++++++++++++더블유게임즈++++++++++++++++++++530/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:45,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:45,839 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:00:46,090 > ++++++++++++++동부건설++++++++++++++++++++531/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:46,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:46,447 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:00:46,720 > ++++++++++++++동성제약++++++++++++++++++++532/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:46,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:47,055 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:00:47,319 > ++++++++++++++동아에스티++++++++++++++++++++533/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:47,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:47,662 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:00:47,900 > ++++++++++++++동양고속++++++++++++++++++++534/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:47,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:48,270 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:00:48,526 > ++++++++++++++동양철관++++++++++++++++++++535/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:48,526 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:48,876 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:00:49,141 > ++++++++++++++동원수산++++++++++++++++++++536/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:49,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:49,484 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:00:49,758 > ++++++++++++++롯데쇼핑++++++++++++++++++++537/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:49,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:50,092 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:00:50,334 > ++++++++++++++메리츠화재++++++++++++++++++++538/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:50,334 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:50,702 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:00:50,957 > ++++++++++++++미원에스씨++++++++++++++++++++539/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:50,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:51,309 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:00:51,571 > ++++++++++++++부광약품++++++++++++++++++++540/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:51,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:51,917 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:00:52,173 > ++++++++++++++부산산업++++++++++++++++++++541/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:52,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:52,525 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:00:52,824 > ++++++++++++++삼익악기++++++++++++++++++++542/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:52,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:53,134 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:00:53,448 > ++++++++++++++삼천리++++++++++++++++++++543/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:53,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:53,741 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:00:54,004 > ++++++++++++++서울식품++++++++++++++++++++544/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:54,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:54,349 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:00:54,616 > ++++++++++++++성창기업지주++++++++++++++++++++545/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:54,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:54,957 > 158
[DEBUG|collector_api.py:200] 2021-02-08 16:00:55,238 > ++++++++++++++세종공업++++++++++++++++++++546/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:55,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:55,566 > 159
[DEBUG|collector_api.py:200] 2021-02-08 16:00:55,836 > ++++++++++++++솔루엠++++++++++++++++++++547/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:55,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:56,174 > 160
[DEBUG|collector_api.py:200] 2021-02-08 16:00:56,326 > ++++++++++++++시디즈++++++++++++++++++++548/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:56,326 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:56,782 > 161
[DEBUG|collector_api.py:200] 2021-02-08 16:00:57,012 > ++++++++++++++아시아나항공++++++++++++++++++++549/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:57,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:57,390 > 162
[DEBUG|collector_api.py:200] 2021-02-08 16:00:57,637 > ++++++++++++++알루코++++++++++++++++++++550/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:57,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:57,996 > 163
[DEBUG|collector_api.py:200] 2021-02-08 16:00:58,268 > ++++++++++++++SJM홀딩스++++++++++++++++++++551/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:58,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:58,604 > 164
[DEBUG|collector_api.py:200] 2021-02-08 16:00:58,861 > ++++++++++++++오뚜기++++++++++++++++++++552/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:58,861 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:59,212 > 165
[DEBUG|collector_api.py:200] 2021-02-08 16:00:59,484 > ++++++++++++++유성기업++++++++++++++++++++553/2895
[DEBUG|open_api.py:656] 2021-02-08 16:00:59,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:00:59,820 > 166
[DEBUG|collector_api.py:200] 2021-02-08 16:01:00,088 > ++++++++++++++이리츠코크렙++++++++++++++++++++554/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:00,088 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:00,430 > 167
[DEBUG|collector_api.py:200] 2021-02-08 16:01:00,678 > ++++++++++++++이수페타시스++++++++++++++++++++555/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:00,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:01,037 > 168
[DEBUG|collector_api.py:200] 2021-02-08 16:01:01,293 > ++++++++++++++이아이디++++++++++++++++++++556/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:01,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:01,643 > 169
[DEBUG|collector_api.py:200] 2021-02-08 16:01:01,902 > ++++++++++++++인디에프++++++++++++++++++++557/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:01,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:02,252 > 170
[DEBUG|collector_api.py:200] 2021-02-08 16:01:02,522 > ++++++++++++++일동홀딩스++++++++++++++++++++558/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:02,523 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:02,859 > 171
[DEBUG|collector_api.py:200] 2021-02-08 16:01:03,118 > ++++++++++++++일진홀딩스++++++++++++++++++++559/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:03,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:03,467 > 172
[DEBUG|collector_api.py:200] 2021-02-08 16:01:03,739 > ++++++++++++++자이에스앤디++++++++++++++++++++560/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:03,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:04,073 > 173
[DEBUG|collector_api.py:200] 2021-02-08 16:01:04,274 > ++++++++++++++자화전자++++++++++++++++++++561/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:04,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:04,681 > 174
[DEBUG|collector_api.py:200] 2021-02-08 16:01:04,920 > ++++++++++++++전방++++++++++++++++++++562/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:04,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:05,288 > 175
[DEBUG|collector_api.py:200] 2021-02-08 16:01:05,544 > ++++++++++++++제이알글로벌리츠++++++++++++++++++++563/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:05,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:05,894 > 176
[DEBUG|collector_api.py:200] 2021-02-08 16:01:06,064 > ++++++++++++++제이콘텐트리++++++++++++++++++++564/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:06,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:06,503 > 177
[DEBUG|collector_api.py:200] 2021-02-08 16:01:06,758 > ++++++++++++++제일기획++++++++++++++++++++565/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:06,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:07,110 > 178
[DEBUG|collector_api.py:200] 2021-02-08 16:01:07,365 > ++++++++++++++지투알++++++++++++++++++++566/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:07,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:07,718 > 179
[DEBUG|collector_api.py:200] 2021-02-08 16:01:07,970 > ++++++++++++++진양폴리++++++++++++++++++++567/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:07,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:08,328 > 180
[DEBUG|collector_api.py:200] 2021-02-08 16:01:08,629 > ++++++++++++++KCC++++++++++++++++++++568/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:08,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:08,936 > 181
[DEBUG|collector_api.py:200] 2021-02-08 16:01:09,202 > ++++++++++++++코스맥스++++++++++++++++++++569/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:09,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:09,544 > 182
[DEBUG|collector_api.py:200] 2021-02-08 16:01:09,781 > ++++++++++++++콤텍시스템++++++++++++++++++++570/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:09,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:10,151 > 183
[DEBUG|collector_api.py:200] 2021-02-08 16:01:10,472 > ++++++++++++++태경비케이++++++++++++++++++++571/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:10,472 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:10,759 > 184
[DEBUG|collector_api.py:200] 2021-02-08 16:01:11,051 > ++++++++++++++티웨이항공++++++++++++++++++++572/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:11,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:11,369 > 185
[DEBUG|collector_api.py:200] 2021-02-08 16:01:11,618 > ++++++++++++++퍼스텍++++++++++++++++++++573/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:11,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:11,978 > 186
[DEBUG|collector_api.py:200] 2021-02-08 16:01:12,259 > ++++++++++++++포스코인터내셔널++++++++++++++++++++574/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:12,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:12,587 > 187
[DEBUG|collector_api.py:200] 2021-02-08 16:01:12,843 > ++++++++++++++하이골드3호++++++++++++++++++++575/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:12,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:13,194 > 188
[DEBUG|collector_api.py:200] 2021-02-08 16:01:13,430 > ++++++++++++++한국ANKOR유전++++++++++++++++++++576/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:13,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:13,803 > 189
[DEBUG|collector_api.py:200] 2021-02-08 16:01:14,046 > ++++++++++++++한국내화++++++++++++++++++++577/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:14,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:14,412 > 190
[DEBUG|collector_api.py:200] 2021-02-08 16:01:14,672 > ++++++++++++++한국주철관++++++++++++++++++++578/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:14,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:15,020 > 191
[DEBUG|collector_api.py:200] 2021-02-08 16:01:15,302 > ++++++++++++++한국화장품++++++++++++++++++++579/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:15,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:15,628 > 192
[DEBUG|collector_api.py:200] 2021-02-08 16:01:15,875 > ++++++++++++++한라++++++++++++++++++++580/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:15,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:16,236 > 193
[DEBUG|collector_api.py:200] 2021-02-08 16:01:16,499 > ++++++++++++++한미반도체++++++++++++++++++++581/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:16,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:16,843 > 194
[DEBUG|collector_api.py:200] 2021-02-08 16:01:17,088 > ++++++++++++++한섬++++++++++++++++++++582/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:17,088 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:17,450 > 195
[DEBUG|collector_api.py:200] 2021-02-08 16:01:17,711 > ++++++++++++++한세실업++++++++++++++++++++583/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:17,712 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:18,058 > 196
[DEBUG|collector_api.py:200] 2021-02-08 16:01:18,301 > ++++++++++++++한솔홈데코++++++++++++++++++++584/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:18,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:18,666 > 197
[DEBUG|collector_api.py:200] 2021-02-08 16:01:18,923 > ++++++++++++++한올바이오파마++++++++++++++++++++585/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:18,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:19,273 > 198
[DEBUG|collector_api.py:200] 2021-02-08 16:01:19,558 > ++++++++++++++한전산업++++++++++++++++++++586/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:19,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:19,881 > 199
[DEBUG|collector_api.py:200] 2021-02-08 16:01:20,110 > ++++++++++++++한화손해보험++++++++++++++++++++587/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:20,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:20,488 > 200
[DEBUG|collector_api.py:200] 2021-02-08 16:01:20,775 > ++++++++++++++핸즈코퍼레이션++++++++++++++++++++588/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:20,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:21,095 > 201
[DEBUG|collector_api.py:200] 2021-02-08 16:01:21,337 > ++++++++++++++현대비앤지스틸++++++++++++++++++++589/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:21,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:21,701 > 202
[DEBUG|collector_api.py:200] 2021-02-08 16:01:21,966 > ++++++++++++++현대오토에버++++++++++++++++++++590/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:21,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:22,308 > 203
[DEBUG|collector_api.py:200] 2021-02-08 16:01:22,545 > ++++++++++++++화승엔터프라이즈++++++++++++++++++++591/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:22,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:22,916 > 204
[DEBUG|collector_api.py:200] 2021-02-08 16:01:23,163 > ++++++++++++++화인베스틸++++++++++++++++++++592/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:23,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:23,522 > 205
[DEBUG|collector_api.py:200] 2021-02-08 16:01:23,759 > ++++++++++++++화천기계++++++++++++++++++++593/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:23,759 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:24,130 > 206
[DEBUG|collector_api.py:200] 2021-02-08 16:01:24,443 > ++++++++++++++효성첨단소재++++++++++++++++++++594/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:24,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:24,738 > 207
[DEBUG|collector_api.py:200] 2021-02-08 16:01:24,978 > ++++++++++++++후성++++++++++++++++++++595/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:24,978 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:25,345 > 208
[DEBUG|collector_api.py:200] 2021-02-08 16:01:25,615 > ++++++++++++++휠라홀딩스++++++++++++++++++++596/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:25,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:25,953 > 209
[DEBUG|collector_api.py:200] 2021-02-08 16:01:26,221 > ++++++++++++++휴스틸++++++++++++++++++++597/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:26,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:26,561 > 210
[DEBUG|collector_api.py:200] 2021-02-08 16:01:26,835 > ++++++++++++++DB하이텍++++++++++++++++++++598/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:26,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:27,170 > 211
[DEBUG|collector_api.py:200] 2021-02-08 16:01:27,447 > ++++++++++++++DL이앤씨++++++++++++++++++++599/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:27,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:27,778 > 212
[DEBUG|collector_api.py:200] 2021-02-08 16:01:27,948 > ++++++++++++++HSD엔진++++++++++++++++++++600/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:27,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:28,385 > 213
[DEBUG|collector_api.py:200] 2021-02-08 16:01:28,633 > ++++++++++++++KG동부제철++++++++++++++++++++601/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:28,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:28,993 > 214
[DEBUG|collector_api.py:200] 2021-02-08 16:01:29,276 > ++++++++++++++KTB투자증권++++++++++++++++++++602/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:29,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:29,599 > 215
[DEBUG|collector_api.py:200] 2021-02-08 16:01:29,863 > ++++++++++++++KTcs++++++++++++++++++++603/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:29,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:30,208 > 216
[DEBUG|collector_api.py:200] 2021-02-08 16:01:30,453 > ++++++++++++++LG생활건강++++++++++++++++++++604/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:30,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:30,815 > 217
[DEBUG|collector_api.py:200] 2021-02-08 16:01:31,074 > ++++++++++++++SG세계물산++++++++++++++++++++605/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:31,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:31,423 > 218
[DEBUG|collector_api.py:200] 2021-02-08 16:01:31,687 > ++++++++++++++SIMPAC++++++++++++++++++++606/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:31,687 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:32,030 > 219
[DEBUG|collector_api.py:200] 2021-02-08 16:01:32,310 > ++++++++++++++SKC++++++++++++++++++++607/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:32,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:32,638 > 220
[DEBUG|collector_api.py:200] 2021-02-08 16:01:32,911 > ++++++++++++++SK가스++++++++++++++++++++608/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:32,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:33,247 > 221
[DEBUG|collector_api.py:200] 2021-02-08 16:01:33,512 > ++++++++++++++SK디앤디++++++++++++++++++++609/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:33,513 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:33,854 > 222
[DEBUG|collector_api.py:200] 2021-02-08 16:01:34,088 > ++++++++++++++SK렌터카++++++++++++++++++++610/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:34,088 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:34,462 > 223
[DEBUG|collector_api.py:200] 2021-02-08 16:01:34,704 > ++++++++++++++STX엔진++++++++++++++++++++611/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:34,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:35,069 > 224
[DEBUG|collector_api.py:200] 2021-02-08 16:01:35,309 > ++++++++++++++STX중공업++++++++++++++++++++612/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:35,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:35,677 > 225
[DEBUG|collector_api.py:200] 2021-02-08 16:01:35,915 > ++++++++++++++TCC스틸++++++++++++++++++++613/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:35,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:36,285 > 226
[DEBUG|collector_api.py:200] 2021-02-08 16:01:36,581 > ++++++++++++++가온전선++++++++++++++++++++614/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:36,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:36,893 > 227
[DEBUG|collector_api.py:200] 2021-02-08 16:01:37,154 > ++++++++++++++경보제약++++++++++++++++++++615/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:37,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:37,500 > 228
[DEBUG|collector_api.py:200] 2021-02-08 16:01:37,747 > ++++++++++++++계양전기++++++++++++++++++++616/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:37,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:38,111 > 229
[DEBUG|collector_api.py:200] 2021-02-08 16:01:38,371 > ++++++++++++++고려산업++++++++++++++++++++617/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:38,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:38,719 > 230
[DEBUG|collector_api.py:200] 2021-02-08 16:01:38,971 > ++++++++++++++광전자++++++++++++++++++++618/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:38,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:39,327 > 231
[DEBUG|collector_api.py:200] 2021-02-08 16:01:39,603 > ++++++++++++++기아차++++++++++++++++++++619/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:39,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:39,936 > 232
[DEBUG|collector_api.py:200] 2021-02-08 16:01:40,254 > ++++++++++++++넥센++++++++++++++++++++620/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:40,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:40,544 > 233
[DEBUG|collector_api.py:200] 2021-02-08 16:01:40,816 > ++++++++++++++넥스트사이언스++++++++++++++++++++621/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:40,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:41,153 > 234
[DEBUG|collector_api.py:200] 2021-02-08 16:01:41,430 > ++++++++++++++농심++++++++++++++++++++622/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:41,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:41,764 > 235
[DEBUG|collector_api.py:200] 2021-02-08 16:01:42,021 > ++++++++++++++다우기술++++++++++++++++++++623/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:42,021 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:42,371 > 236
[DEBUG|collector_api.py:200] 2021-02-08 16:01:42,630 > ++++++++++++++대성산업++++++++++++++++++++624/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:42,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:42,978 > 237
[DEBUG|collector_api.py:200] 2021-02-08 16:01:43,225 > ++++++++++++++대유플러스++++++++++++++++++++625/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:43,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:43,585 > 238
[DEBUG|collector_api.py:200] 2021-02-08 16:01:43,847 > ++++++++++++++대한전선++++++++++++++++++++626/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:43,847 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:44,194 > 239
[DEBUG|collector_api.py:200] 2021-02-08 16:01:44,483 > ++++++++++++++대한제분++++++++++++++++++++627/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:44,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:44,803 > 240
[DEBUG|collector_api.py:200] 2021-02-08 16:01:45,085 > ++++++++++++++대한항공++++++++++++++++++++628/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:45,085 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:45,410 > 241
[DEBUG|collector_api.py:200] 2021-02-08 16:01:45,688 > ++++++++++++++대한화섬++++++++++++++++++++629/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:45,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:46,018 > 242
[DEBUG|collector_api.py:200] 2021-02-08 16:01:46,292 > ++++++++++++++동남합성++++++++++++++++++++630/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:46,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:46,626 > 243
[DEBUG|collector_api.py:200] 2021-02-08 16:01:46,883 > ++++++++++++++동방++++++++++++++++++++631/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:46,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:47,236 > 244
[DEBUG|collector_api.py:200] 2021-02-08 16:01:47,506 > ++++++++++++++동아타이어++++++++++++++++++++632/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:47,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:47,844 > 245
[DEBUG|collector_api.py:200] 2021-02-08 16:01:48,078 > ++++++++++++++동양피스톤++++++++++++++++++++633/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:48,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:48,452 > 246
[DEBUG|collector_api.py:200] 2021-02-08 16:01:48,692 > ++++++++++++++동원시스템즈++++++++++++++++++++634/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:48,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:49,059 > 247
[DEBUG|collector_api.py:200] 2021-02-08 16:01:49,313 > ++++++++++++++디와이파워++++++++++++++++++++635/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:49,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:49,667 > 248
[DEBUG|collector_api.py:200] 2021-02-08 16:01:49,899 > ++++++++++++++롯데리츠++++++++++++++++++++636/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:49,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:50,275 > 249
[DEBUG|collector_api.py:200] 2021-02-08 16:01:50,492 > ++++++++++++++메리츠금융지주++++++++++++++++++++637/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:50,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:50,883 > 250
[DEBUG|collector_api.py:200] 2021-02-08 16:01:51,131 > ++++++++++++++무림P&P++++++++++++++++++++638/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:51,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:51,492 > 251
[DEBUG|collector_api.py:200] 2021-02-08 16:01:51,741 > ++++++++++++++미원상사++++++++++++++++++++639/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:51,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:52,100 > 252
[DEBUG|collector_api.py:200] 2021-02-08 16:01:52,368 > ++++++++++++++방림++++++++++++++++++++640/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:52,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:52,708 > 253
[DEBUG|collector_api.py:200] 2021-02-08 16:01:52,976 > ++++++++++++++보령제약++++++++++++++++++++641/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:52,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:53,316 > 254
[DEBUG|collector_api.py:200] 2021-02-08 16:01:53,589 > ++++++++++++++사조오양++++++++++++++++++++642/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:53,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:53,923 > 255
[DEBUG|collector_api.py:200] 2021-02-08 16:01:54,235 > ++++++++++++++삼아알미늄++++++++++++++++++++643/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:54,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:54,532 > 256
[DEBUG|collector_api.py:200] 2021-02-08 16:01:54,820 > ++++++++++++++삼호개발++++++++++++++++++++644/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:54,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:55,139 > 257
[DEBUG|collector_api.py:200] 2021-02-08 16:01:55,399 > ++++++++++++++삼화전자++++++++++++++++++++645/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:55,399 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:55,746 > 258
[DEBUG|collector_api.py:200] 2021-02-08 16:01:56,025 > ++++++++++++++삼화페인트++++++++++++++++++++646/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:56,025 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:56,355 > 259
[DEBUG|collector_api.py:200] 2021-02-08 16:01:56,647 > ++++++++++++++새론오토모티브++++++++++++++++++++647/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:56,647 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:56,962 > 260
[DEBUG|collector_api.py:200] 2021-02-08 16:01:57,201 > ++++++++++++++성문전자++++++++++++++++++++648/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:57,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:57,570 > 261
[DEBUG|collector_api.py:200] 2021-02-08 16:01:57,833 > ++++++++++++++세아제강지주++++++++++++++++++++649/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:57,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:58,178 > 262
[DEBUG|collector_api.py:200] 2021-02-08 16:01:58,452 > ++++++++++++++신세계 I&C++++++++++++++++++++650/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:58,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:58,786 > 263
[DEBUG|collector_api.py:200] 2021-02-08 16:01:59,040 > ++++++++++++++쌍방울++++++++++++++++++++651/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:59,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:01:59,398 > 264
[DEBUG|collector_api.py:200] 2021-02-08 16:01:59,655 > ++++++++++++++쌍용양회++++++++++++++++++++652/2895
[DEBUG|open_api.py:656] 2021-02-08 16:01:59,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:00,007 > 265
[DEBUG|collector_api.py:200] 2021-02-08 16:02:00,292 > ++++++++++++++아남전자++++++++++++++++++++653/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:00,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:00,614 > 266
[DEBUG|collector_api.py:200] 2021-02-08 16:02:00,886 > ++++++++++++++아세아제지++++++++++++++++++++654/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:00,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:01,221 > 267
[DEBUG|collector_api.py:200] 2021-02-08 16:02:01,511 > ++++++++++++++아시아나IDT++++++++++++++++++++655/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:01,512 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:01,829 > 268
[DEBUG|collector_api.py:200] 2021-02-08 16:02:02,064 > ++++++++++++++애경유화++++++++++++++++++++656/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:02,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:02,437 > 269
[DEBUG|collector_api.py:200] 2021-02-08 16:02:02,710 > ++++++++++++++에어부산++++++++++++++++++++657/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:02,711 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:03,044 > 270
[DEBUG|collector_api.py:200] 2021-02-08 16:02:03,281 > ++++++++++++++에이엔피++++++++++++++++++++658/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:03,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:03,652 > 271
[DEBUG|collector_api.py:200] 2021-02-08 16:02:03,911 > ++++++++++++++엔케이물산++++++++++++++++++++659/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:03,912 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:04,260 > 272
[DEBUG|collector_api.py:200] 2021-02-08 16:02:04,550 > ++++++++++++++영흥++++++++++++++++++++660/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:04,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:04,868 > 273
[DEBUG|collector_api.py:200] 2021-02-08 16:02:05,108 > ++++++++++++++오리엔트바이오++++++++++++++++++++661/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:05,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:05,474 > 274
[DEBUG|collector_api.py:200] 2021-02-08 16:02:05,756 > ++++++++++++++오리온홀딩스++++++++++++++++++++662/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:05,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:06,082 > 275
[DEBUG|collector_api.py:200] 2021-02-08 16:02:06,359 > ++++++++++++++용평리조트++++++++++++++++++++663/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:06,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:06,689 > 276
[DEBUG|collector_api.py:200] 2021-02-08 16:02:06,926 > ++++++++++++++웅진++++++++++++++++++++664/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:06,926 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:07,298 > 277
[DEBUG|collector_api.py:200] 2021-02-08 16:02:07,561 > ++++++++++++++원림++++++++++++++++++++665/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:07,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:07,906 > 278
[DEBUG|collector_api.py:200] 2021-02-08 16:02:08,168 > ++++++++++++++유니퀘스트++++++++++++++++++++666/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:08,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:08,514 > 279
[DEBUG|collector_api.py:200] 2021-02-08 16:02:08,779 > ++++++++++++++이엔플러스++++++++++++++++++++667/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:08,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:09,122 > 280
[DEBUG|collector_api.py:200] 2021-02-08 16:02:09,363 > ++++++++++++++이지스밸류리츠++++++++++++++++++++668/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:09,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:09,729 > 281
[DEBUG|collector_api.py:200] 2021-02-08 16:02:09,898 > ++++++++++++++인바이오젠++++++++++++++++++++669/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:09,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:10,338 > 282
[DEBUG|collector_api.py:200] 2021-02-08 16:02:10,598 > ++++++++++++++일동제약++++++++++++++++++++670/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:10,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:10,947 > 283
[DEBUG|collector_api.py:200] 2021-02-08 16:02:11,255 > ++++++++++++++일신석재++++++++++++++++++++671/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:11,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:11,556 > 284
[DEBUG|collector_api.py:200] 2021-02-08 16:02:11,845 > ++++++++++++++일양약품++++++++++++++++++++672/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:11,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:12,164 > 285
[DEBUG|collector_api.py:200] 2021-02-08 16:02:12,459 > ++++++++++++++주연테크++++++++++++++++++++673/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:12,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:12,771 > 286
[DEBUG|collector_api.py:200] 2021-02-08 16:02:13,015 > ++++++++++++++지코++++++++++++++++++++674/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:13,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:13,379 > 287
[DEBUG|collector_api.py:200] 2021-02-08 16:02:13,638 > ++++++++++++++진양산업++++++++++++++++++++675/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:13,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:13,987 > 288
[DEBUG|collector_api.py:200] 2021-02-08 16:02:14,264 > ++++++++++++++케이비아이동국실업++++++++++++++++++++676/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:14,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:14,595 > 289
[DEBUG|collector_api.py:200] 2021-02-08 16:02:14,872 > ++++++++++++++케이씨++++++++++++++++++++677/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:14,872 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:15,202 > 290
[DEBUG|collector_api.py:200] 2021-02-08 16:02:15,479 > ++++++++++++++스카이라이프++++++++++++++++++++678/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:15,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:15,810 > 291
[DEBUG|collector_api.py:200] 2021-02-08 16:02:16,047 > ++++++++++++++코오롱++++++++++++++++++++679/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:16,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:16,418 > 292
[DEBUG|collector_api.py:200] 2021-02-08 16:02:16,696 > ++++++++++++++티웨이홀딩스++++++++++++++++++++680/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:16,697 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:17,026 > 293
[DEBUG|collector_api.py:200] 2021-02-08 16:02:17,305 > ++++++++++++++파미셀++++++++++++++++++++681/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:17,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:17,635 > 294
[DEBUG|collector_api.py:200] 2021-02-08 16:02:17,900 > ++++++++++++++평화홀딩스++++++++++++++++++++682/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:17,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:18,242 > 295
[DEBUG|collector_api.py:200] 2021-02-08 16:02:18,526 > ++++++++++++++풀무원++++++++++++++++++++683/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:18,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:18,849 > 296
[DEBUG|collector_api.py:200] 2021-02-08 16:02:19,101 > ++++++++++++++하이트진로홀딩스++++++++++++++++++++684/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:19,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:19,457 > 297
[DEBUG|collector_api.py:200] 2021-02-08 16:02:19,728 > ++++++++++++++한국단자++++++++++++++++++++685/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:19,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:20,065 > 298
[DEBUG|collector_api.py:200] 2021-02-08 16:02:20,355 > ++++++++++++++한국조선해양++++++++++++++++++++686/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:20,356 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:20,673 > 299
[DEBUG|collector_api.py:200] 2021-02-08 16:02:20,925 > ++++++++++++++한국카본++++++++++++++++++++687/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:20,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:21,281 > 300
[DEBUG|collector_api.py:200] 2021-02-08 16:02:21,548 > ++++++++++++++한농화성++++++++++++++++++++688/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:21,549 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:21,889 > 301
[DEBUG|collector_api.py:200] 2021-02-08 16:02:22,130 > ++++++++++++++한미약품++++++++++++++++++++689/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:22,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:22,496 > 302
[DEBUG|collector_api.py:200] 2021-02-08 16:02:22,760 > ++++++++++++++한신공영++++++++++++++++++++690/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:22,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:23,104 > 303
[DEBUG|collector_api.py:200] 2021-02-08 16:02:23,370 > ++++++++++++++한익스프레스++++++++++++++++++++691/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:23,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:23,711 > 304
[DEBUG|collector_api.py:200] 2021-02-08 16:02:23,967 > ++++++++++++++한전기술++++++++++++++++++++692/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:23,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:24,320 > 305
[DEBUG|collector_api.py:200] 2021-02-08 16:02:24,571 > ++++++++++++++한화시스템++++++++++++++++++++693/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:24,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:24,928 > 306
[DEBUG|collector_api.py:200] 2021-02-08 16:02:25,117 > ++++++++++++++한화투자증권++++++++++++++++++++694/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:25,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:25,537 > 307
[DEBUG|collector_api.py:200] 2021-02-08 16:02:25,813 > ++++++++++++++현대글로비스++++++++++++++++++++695/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:25,814 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:26,144 > 308
[DEBUG|collector_api.py:200] 2021-02-08 16:02:26,401 > ++++++++++++++현대약품++++++++++++++++++++696/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:26,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:26,752 > 309
[DEBUG|collector_api.py:200] 2021-02-08 16:02:27,055 > ++++++++++++++현대중공업지주++++++++++++++++++++697/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:27,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:27,360 > 310
[DEBUG|collector_api.py:200] 2021-02-08 16:02:27,615 > ++++++++++++++현대해상++++++++++++++++++++698/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:27,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:27,970 > 311
[DEBUG|collector_api.py:200] 2021-02-08 16:02:28,233 > ++++++++++++++현대홈쇼핑++++++++++++++++++++699/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:28,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:28,578 > 312
[DEBUG|collector_api.py:200] 2021-02-08 16:02:28,853 > ++++++++++++++화승알앤에이++++++++++++++++++++700/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:28,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:29,186 > 313
[DEBUG|collector_api.py:200] 2021-02-08 16:02:29,464 > ++++++++++++++효성중공업++++++++++++++++++++701/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:29,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:29,796 > 314
[DEBUG|collector_api.py:200] 2021-02-08 16:02:30,033 > ++++++++++++++효성티앤씨++++++++++++++++++++702/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:30,034 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:30,405 > 315
[DEBUG|collector_api.py:200] 2021-02-08 16:02:30,654 > ++++++++++++++BYC++++++++++++++++++++703/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:30,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:31,013 > 316
[DEBUG|collector_api.py:200] 2021-02-08 16:02:31,277 > ++++++++++++++DB손해보험++++++++++++++++++++704/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:31,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:31,620 > 317
[DEBUG|collector_api.py:200] 2021-02-08 16:02:31,887 > ++++++++++++++GS++++++++++++++++++++705/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:31,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:32,228 > 318
[DEBUG|collector_api.py:200] 2021-02-08 16:02:32,502 > ++++++++++++++HMM++++++++++++++++++++706/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:32,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:32,836 > 319
[DEBUG|collector_api.py:200] 2021-02-08 16:02:33,090 > ++++++++++++++JB금융지주++++++++++++++++++++707/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:33,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:33,443 > 320
[DEBUG|collector_api.py:200] 2021-02-08 16:02:33,696 > ++++++++++++++LS네트웍스++++++++++++++++++++708/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:33,697 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:34,052 > 321
[DEBUG|collector_api.py:200] 2021-02-08 16:02:34,310 > ++++++++++++++NH투자증권++++++++++++++++++++709/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:34,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:34,659 > 322
[DEBUG|collector_api.py:200] 2021-02-08 16:02:34,923 > ++++++++++++++SK++++++++++++++++++++710/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:34,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:35,267 > 323
[DEBUG|collector_api.py:200] 2021-02-08 16:02:35,520 > ++++++++++++++SK디스커버리++++++++++++++++++++711/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:35,520 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:35,875 > 324
[DEBUG|collector_api.py:200] 2021-02-08 16:02:36,141 > ++++++++++++++WISCOM++++++++++++++++++++712/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:36,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:36,483 > 325
[DEBUG|collector_api.py:200] 2021-02-08 16:02:36,766 > ++++++++++++++강남제비스코++++++++++++++++++++713/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:36,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:37,090 > 326
[DEBUG|collector_api.py:200] 2021-02-08 16:02:37,370 > ++++++++++++++경동나비엔++++++++++++++++++++714/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:37,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:37,699 > 327
[DEBUG|collector_api.py:200] 2021-02-08 16:02:37,956 > ++++++++++++++광명전기++++++++++++++++++++715/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:37,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:38,307 > 328
[DEBUG|collector_api.py:200] 2021-02-08 16:02:38,578 > ++++++++++++++교촌에프앤비++++++++++++++++++++716/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:38,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:38,916 > 329
[DEBUG|collector_api.py:200] 2021-02-08 16:02:39,071 > ++++++++++++++그린케미칼++++++++++++++++++++717/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:39,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:39,523 > 330
[DEBUG|collector_api.py:200] 2021-02-08 16:02:39,778 > ++++++++++++++금호석유++++++++++++++++++++718/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:39,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:40,131 > 331
[DEBUG|collector_api.py:200] 2021-02-08 16:02:40,399 > ++++++++++++++금호에이치티++++++++++++++++++++719/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:40,400 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:40,739 > 332
[DEBUG|collector_api.py:200] 2021-02-08 16:02:40,976 > ++++++++++++++깨끗한나라++++++++++++++++++++720/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:40,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:41,346 > 333
[DEBUG|collector_api.py:200] 2021-02-08 16:02:41,698 > ++++++++++++++남광토건++++++++++++++++++++721/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:41,699 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:41,954 > 334
[DEBUG|collector_api.py:200] 2021-02-08 16:02:42,251 > ++++++++++++++노루홀딩스++++++++++++++++++++722/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:42,252 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:42,563 > 335
[DEBUG|collector_api.py:200] 2021-02-08 16:02:42,836 > ++++++++++++++대동공업++++++++++++++++++++723/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:42,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:43,172 > 336
[DEBUG|collector_api.py:200] 2021-02-08 16:02:43,437 > ++++++++++++++대상홀딩스++++++++++++++++++++724/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:43,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:43,779 > 337
[DEBUG|collector_api.py:200] 2021-02-08 16:02:44,033 > ++++++++++++++대성에너지++++++++++++++++++++725/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:44,034 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:44,389 > 338
[DEBUG|collector_api.py:200] 2021-02-08 16:02:44,640 > ++++++++++++++대우부품++++++++++++++++++++726/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:44,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:44,997 > 339
[DEBUG|collector_api.py:200] 2021-02-08 16:02:45,262 > ++++++++++++++대우조선해양++++++++++++++++++++727/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:45,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:45,606 > 340
[DEBUG|collector_api.py:200] 2021-02-08 16:02:45,853 > ++++++++++++++대창단조++++++++++++++++++++728/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:45,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:46,212 > 341
[DEBUG|collector_api.py:200] 2021-02-08 16:02:46,492 > ++++++++++++++대현++++++++++++++++++++729/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:46,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:46,819 > 342
[DEBUG|collector_api.py:200] 2021-02-08 16:02:47,082 > ++++++++++++++도화엔지니어링++++++++++++++++++++730/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:47,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:47,427 > 343
[DEBUG|collector_api.py:200] 2021-02-08 16:02:47,672 > ++++++++++++++동성화학++++++++++++++++++++731/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:47,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:48,034 > 344
[DEBUG|collector_api.py:200] 2021-02-08 16:02:48,292 > ++++++++++++++동아지질++++++++++++++++++++732/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:48,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:48,642 > 345
[DEBUG|collector_api.py:200] 2021-02-08 16:02:48,889 > ++++++++++++++동일고무벨트++++++++++++++++++++733/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:48,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:49,250 > 346
[DEBUG|collector_api.py:200] 2021-02-08 16:02:49,483 > ++++++++++++++동일산업++++++++++++++++++++734/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:49,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:49,856 > 347
[DEBUG|collector_api.py:200] 2021-02-08 16:02:50,108 > ++++++++++++++동일제강++++++++++++++++++++735/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:50,108 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:50,466 > 348
[DEBUG|collector_api.py:200] 2021-02-08 16:02:50,700 > ++++++++++++++두올++++++++++++++++++++736/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:50,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:51,073 > 349
[DEBUG|collector_api.py:200] 2021-02-08 16:02:51,314 > ++++++++++++++드림텍++++++++++++++++++++737/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:51,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:51,682 > 350
[DEBUG|collector_api.py:200] 2021-02-08 16:02:51,892 > ++++++++++++++롯데지주++++++++++++++++++++738/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:51,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:52,290 > 351
[DEBUG|collector_api.py:200] 2021-02-08 16:02:52,546 > ++++++++++++++모나리자++++++++++++++++++++739/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:52,547 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:52,899 > 352
[DEBUG|collector_api.py:200] 2021-02-08 16:02:53,156 > ++++++++++++++무림페이퍼++++++++++++++++++++740/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:53,156 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:53,507 > 353
[DEBUG|collector_api.py:200] 2021-02-08 16:02:53,775 > ++++++++++++++미래산업++++++++++++++++++++741/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:53,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:54,115 > 354
[DEBUG|collector_api.py:200] 2021-02-08 16:02:54,380 > ++++++++++++++미래에셋대우++++++++++++++++++++742/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:54,380 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:54,723 > 355
[DEBUG|collector_api.py:200] 2021-02-08 16:02:54,995 > ++++++++++++++보해양조++++++++++++++++++++743/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:54,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:55,330 > 356
[DEBUG|collector_api.py:200] 2021-02-08 16:02:55,608 > ++++++++++++++빅히트++++++++++++++++++++744/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:55,608 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:55,939 > 357
[DEBUG|collector_api.py:200] 2021-02-08 16:02:56,093 > ++++++++++++++삼화콘덴서++++++++++++++++++++745/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:56,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:56,546 > 358
[DEBUG|collector_api.py:200] 2021-02-08 16:02:56,825 > ++++++++++++++상신브레이크++++++++++++++++++++746/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:56,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:57,155 > 359
[DEBUG|collector_api.py:200] 2021-02-08 16:02:57,417 > ++++++++++++++서울가스++++++++++++++++++++747/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:57,418 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:57,762 > 360
[DEBUG|collector_api.py:200] 2021-02-08 16:02:58,048 > ++++++++++++++성안++++++++++++++++++++748/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:58,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:58,370 > 361
[DEBUG|collector_api.py:200] 2021-02-08 16:02:58,632 > ++++++++++++++센트럴인사이트++++++++++++++++++++749/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:58,633 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:58,977 > 362
[DEBUG|collector_api.py:200] 2021-02-08 16:02:59,256 > ++++++++++++++신대양제지++++++++++++++++++++750/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:59,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:02:59,585 > 363
[DEBUG|collector_api.py:200] 2021-02-08 16:02:59,843 > ++++++++++++++신도리코++++++++++++++++++++751/2895
[DEBUG|open_api.py:656] 2021-02-08 16:02:59,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:00,193 > 364
[DEBUG|collector_api.py:200] 2021-02-08 16:03:00,460 > ++++++++++++++신흥++++++++++++++++++++752/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:00,461 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:00,802 > 365
[DEBUG|collector_api.py:200] 2021-02-08 16:03:01,051 > ++++++++++++++쎌마테라퓨틱스++++++++++++++++++++753/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:01,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:01,409 > 366
[DEBUG|collector_api.py:200] 2021-02-08 16:03:01,678 > ++++++++++++++씨에스윈드++++++++++++++++++++754/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:01,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:02,016 > 367
[INFO|collector_api.py:445] 2021-02-08 16:03:02,146 > 112610 씨에스윈드의 액면분할/증자 등의 이유로 수정주가가 달라져서 처음부터 다시 콜렉팅
[INFO|collector_api.py:447] 2021-02-08 16:03:02,147 > daily_craw와 min_craw 삭제 중..
[INFO|collector_api.py:455] 2021-02-08 16:03:02,227 > 삭제 완료
[DEBUG|open_api.py:656] 2021-02-08 16:03:02,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:02,625 > 368
[DEBUG|open_api.py:696] 2021-02-08 16:03:02,720 > 씨에스윈드 테이블이 daily_craw db 에 없다. 새로 생성! 
[DEBUG|open_api.py:1124] 2021-02-08 16:03:03,234 > 369
[DEBUG|open_api.py:1124] 2021-02-08 16:03:03,841 > 370
[INFO|collector_api.py:557] 2021-02-08 16:03:04,350 > daily_craw.씨에스윈드 업데이트 완료 112610
[INFO|collector_api.py:558] 2021-02-08 16:03:04,350 > daily_buy_list 업데이트 중..
[INFO|collector_api.py:565] 2021-02-08 16:03:04,374 > 112610 씨에스윈드 - daily_buy_list.`20190102` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,430 > 112610 씨에스윈드 - daily_buy_list.`20190103` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,470 > 112610 씨에스윈드 - daily_buy_list.`20190104` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,509 > 112610 씨에스윈드 - daily_buy_list.`20190107` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,547 > 112610 씨에스윈드 - daily_buy_list.`20190108` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,587 > 112610 씨에스윈드 - daily_buy_list.`20190109` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,626 > 112610 씨에스윈드 - daily_buy_list.`20190110` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,666 > 112610 씨에스윈드 - daily_buy_list.`20190111` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,706 > 112610 씨에스윈드 - daily_buy_list.`20190114` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,745 > 112610 씨에스윈드 - daily_buy_list.`20190115` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,783 > 112610 씨에스윈드 - daily_buy_list.`20190116` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,822 > 112610 씨에스윈드 - daily_buy_list.`20190117` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,875 > 112610 씨에스윈드 - daily_buy_list.`20190118` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,913 > 112610 씨에스윈드 - daily_buy_list.`20190121` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:04,957 > 112610 씨에스윈드 - daily_buy_list.`20190122` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,003 > 112610 씨에스윈드 - daily_buy_list.`20190123` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,041 > 112610 씨에스윈드 - daily_buy_list.`20190124` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,087 > 112610 씨에스윈드 - daily_buy_list.`20190125` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,126 > 112610 씨에스윈드 - daily_buy_list.`20190128` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,164 > 112610 씨에스윈드 - daily_buy_list.`20190129` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,247 > 112610 씨에스윈드 - daily_buy_list.`20190130` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,311 > 112610 씨에스윈드 - daily_buy_list.`20190131` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,370 > 112610 씨에스윈드 - daily_buy_list.`20190201` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,427 > 112610 씨에스윈드 - daily_buy_list.`20190207` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,488 > 112610 씨에스윈드 - daily_buy_list.`20190208` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,553 > 112610 씨에스윈드 - daily_buy_list.`20190211` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,615 > 112610 씨에스윈드 - daily_buy_list.`20190212` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,661 > 112610 씨에스윈드 - daily_buy_list.`20190213` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,706 > 112610 씨에스윈드 - daily_buy_list.`20190214` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,748 > 112610 씨에스윈드 - daily_buy_list.`20190215` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,787 > 112610 씨에스윈드 - daily_buy_list.`20190218` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,829 > 112610 씨에스윈드 - daily_buy_list.`20190219` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,868 > 112610 씨에스윈드 - daily_buy_list.`20190220` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,909 > 112610 씨에스윈드 - daily_buy_list.`20190221` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,951 > 112610 씨에스윈드 - daily_buy_list.`20190222` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:05,987 > 112610 씨에스윈드 - daily_buy_list.`20190225` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,029 > 112610 씨에스윈드 - daily_buy_list.`20190226` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,092 > 112610 씨에스윈드 - daily_buy_list.`20190227` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,134 > 112610 씨에스윈드 - daily_buy_list.`20190228` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,186 > 112610 씨에스윈드 - daily_buy_list.`20190304` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,238 > 112610 씨에스윈드 - daily_buy_list.`20190305` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,298 > 112610 씨에스윈드 - daily_buy_list.`20190306` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,381 > 112610 씨에스윈드 - daily_buy_list.`20190307` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,426 > 112610 씨에스윈드 - daily_buy_list.`20190308` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,469 > 112610 씨에스윈드 - daily_buy_list.`20190311` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,514 > 112610 씨에스윈드 - daily_buy_list.`20190312` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,557 > 112610 씨에스윈드 - daily_buy_list.`20190313` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,602 > 112610 씨에스윈드 - daily_buy_list.`20190314` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,646 > 112610 씨에스윈드 - daily_buy_list.`20190315` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,689 > 112610 씨에스윈드 - daily_buy_list.`20190318` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,733 > 112610 씨에스윈드 - daily_buy_list.`20190319` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,776 > 112610 씨에스윈드 - daily_buy_list.`20190320` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,822 > 112610 씨에스윈드 - daily_buy_list.`20190321` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,871 > 112610 씨에스윈드 - daily_buy_list.`20190322` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,912 > 112610 씨에스윈드 - daily_buy_list.`20190325` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:06,959 > 112610 씨에스윈드 - daily_buy_list.`20190326` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,003 > 112610 씨에스윈드 - daily_buy_list.`20190327` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,053 > 112610 씨에스윈드 - daily_buy_list.`20190328` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,091 > 112610 씨에스윈드 - daily_buy_list.`20190329` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,132 > 112610 씨에스윈드 - daily_buy_list.`20190401` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,174 > 112610 씨에스윈드 - daily_buy_list.`20190402` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,261 > 112610 씨에스윈드 - daily_buy_list.`20190403` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,310 > 112610 씨에스윈드 - daily_buy_list.`20190404` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,357 > 112610 씨에스윈드 - daily_buy_list.`20190405` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,402 > 112610 씨에스윈드 - daily_buy_list.`20190408` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,440 > 112610 씨에스윈드 - daily_buy_list.`20190409` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,478 > 112610 씨에스윈드 - daily_buy_list.`20190410` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,517 > 112610 씨에스윈드 - daily_buy_list.`20190411` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,554 > 112610 씨에스윈드 - daily_buy_list.`20190412` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,594 > 112610 씨에스윈드 - daily_buy_list.`20190415` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,635 > 112610 씨에스윈드 - daily_buy_list.`20190416` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,676 > 112610 씨에스윈드 - daily_buy_list.`20190417` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,716 > 112610 씨에스윈드 - daily_buy_list.`20190418` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,758 > 112610 씨에스윈드 - daily_buy_list.`20190419` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,798 > 112610 씨에스윈드 - daily_buy_list.`20190422` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,837 > 112610 씨에스윈드 - daily_buy_list.`20190423` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,875 > 112610 씨에스윈드 - daily_buy_list.`20190424` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,911 > 112610 씨에스윈드 - daily_buy_list.`20190425` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,952 > 112610 씨에스윈드 - daily_buy_list.`20190426` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:07,991 > 112610 씨에스윈드 - daily_buy_list.`20190429` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,029 > 112610 씨에스윈드 - daily_buy_list.`20190430` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,066 > 112610 씨에스윈드 - daily_buy_list.`20190502` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,107 > 112610 씨에스윈드 - daily_buy_list.`20190503` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,148 > 112610 씨에스윈드 - daily_buy_list.`20190507` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,200 > 112610 씨에스윈드 - daily_buy_list.`20190508` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,269 > 112610 씨에스윈드 - daily_buy_list.`20190509` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,339 > 112610 씨에스윈드 - daily_buy_list.`20190510` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,400 > 112610 씨에스윈드 - daily_buy_list.`20190513` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,460 > 112610 씨에스윈드 - daily_buy_list.`20190514` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,532 > 112610 씨에스윈드 - daily_buy_list.`20190515` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,576 > 112610 씨에스윈드 - daily_buy_list.`20190516` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,620 > 112610 씨에스윈드 - daily_buy_list.`20190517` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,664 > 112610 씨에스윈드 - daily_buy_list.`20190520` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,707 > 112610 씨에스윈드 - daily_buy_list.`20190521` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,749 > 112610 씨에스윈드 - daily_buy_list.`20190522` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,792 > 112610 씨에스윈드 - daily_buy_list.`20190523` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,829 > 112610 씨에스윈드 - daily_buy_list.`20190524` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,869 > 112610 씨에스윈드 - daily_buy_list.`20190527` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,912 > 112610 씨에스윈드 - daily_buy_list.`20190528` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:08,957 > 112610 씨에스윈드 - daily_buy_list.`20190529` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,000 > 112610 씨에스윈드 - daily_buy_list.`20190530` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,043 > 112610 씨에스윈드 - daily_buy_list.`20190531` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,104 > 112610 씨에스윈드 - daily_buy_list.`20190603` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,173 > 112610 씨에스윈드 - daily_buy_list.`20190604` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,238 > 112610 씨에스윈드 - daily_buy_list.`20190605` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,317 > 112610 씨에스윈드 - daily_buy_list.`20190607` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,390 > 112610 씨에스윈드 - daily_buy_list.`20190610` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,435 > 112610 씨에스윈드 - daily_buy_list.`20190611` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,480 > 112610 씨에스윈드 - daily_buy_list.`20190612` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,528 > 112610 씨에스윈드 - daily_buy_list.`20190613` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,575 > 112610 씨에스윈드 - daily_buy_list.`20190614` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,624 > 112610 씨에스윈드 - daily_buy_list.`20190617` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,669 > 112610 씨에스윈드 - daily_buy_list.`20190618` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,714 > 112610 씨에스윈드 - daily_buy_list.`20190619` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,770 > 112610 씨에스윈드 - daily_buy_list.`20190620` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,815 > 112610 씨에스윈드 - daily_buy_list.`20190621` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,858 > 112610 씨에스윈드 - daily_buy_list.`20190624` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,899 > 112610 씨에스윈드 - daily_buy_list.`20190625` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,939 > 112610 씨에스윈드 - daily_buy_list.`20190626` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:09,979 > 112610 씨에스윈드 - daily_buy_list.`20190627` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,018 > 112610 씨에스윈드 - daily_buy_list.`20190628` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,056 > 112610 씨에스윈드 - daily_buy_list.`20190701` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,097 > 112610 씨에스윈드 - daily_buy_list.`20190702` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,137 > 112610 씨에스윈드 - daily_buy_list.`20190703` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,200 > 112610 씨에스윈드 - daily_buy_list.`20190704` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,254 > 112610 씨에스윈드 - daily_buy_list.`20190705` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,310 > 112610 씨에스윈드 - daily_buy_list.`20190708` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,370 > 112610 씨에스윈드 - daily_buy_list.`20190709` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,413 > 112610 씨에스윈드 - daily_buy_list.`20190710` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,456 > 112610 씨에스윈드 - daily_buy_list.`20190711` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,494 > 112610 씨에스윈드 - daily_buy_list.`20190712` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,534 > 112610 씨에스윈드 - daily_buy_list.`20190715` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,577 > 112610 씨에스윈드 - daily_buy_list.`20190716` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,616 > 112610 씨에스윈드 - daily_buy_list.`20190717` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,656 > 112610 씨에스윈드 - daily_buy_list.`20190718` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,697 > 112610 씨에스윈드 - daily_buy_list.`20190719` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,736 > 112610 씨에스윈드 - daily_buy_list.`20190722` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,777 > 112610 씨에스윈드 - daily_buy_list.`20190723` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,816 > 112610 씨에스윈드 - daily_buy_list.`20190724` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,858 > 112610 씨에스윈드 - daily_buy_list.`20190725` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,899 > 112610 씨에스윈드 - daily_buy_list.`20190726` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,938 > 112610 씨에스윈드 - daily_buy_list.`20190729` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:10,982 > 112610 씨에스윈드 - daily_buy_list.`20190730` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,022 > 112610 씨에스윈드 - daily_buy_list.`20190731` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,061 > 112610 씨에스윈드 - daily_buy_list.`20190801` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,101 > 112610 씨에스윈드 - daily_buy_list.`20190802` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,138 > 112610 씨에스윈드 - daily_buy_list.`20190805` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,186 > 112610 씨에스윈드 - daily_buy_list.`20190806` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,239 > 112610 씨에스윈드 - daily_buy_list.`20190807` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,297 > 112610 씨에스윈드 - daily_buy_list.`20190808` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,355 > 112610 씨에스윈드 - daily_buy_list.`20190809` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,415 > 112610 씨에스윈드 - daily_buy_list.`20190812` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,478 > 112610 씨에스윈드 - daily_buy_list.`20190813` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,531 > 112610 씨에스윈드 - daily_buy_list.`20190814` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,577 > 112610 씨에스윈드 - daily_buy_list.`20190816` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,623 > 112610 씨에스윈드 - daily_buy_list.`20190819` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,667 > 112610 씨에스윈드 - daily_buy_list.`20190820` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,707 > 112610 씨에스윈드 - daily_buy_list.`20190821` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,749 > 112610 씨에스윈드 - daily_buy_list.`20190822` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,795 > 112610 씨에스윈드 - daily_buy_list.`20190823` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,838 > 112610 씨에스윈드 - daily_buy_list.`20190826` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,883 > 112610 씨에스윈드 - daily_buy_list.`20190827` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,930 > 112610 씨에스윈드 - daily_buy_list.`20190828` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:11,979 > 112610 씨에스윈드 - daily_buy_list.`20190829` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,026 > 112610 씨에스윈드 - daily_buy_list.`20190830` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,070 > 112610 씨에스윈드 - daily_buy_list.`20190902` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,114 > 112610 씨에스윈드 - daily_buy_list.`20190903` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,163 > 112610 씨에스윈드 - daily_buy_list.`20190904` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,264 > 112610 씨에스윈드 - daily_buy_list.`20190905` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,334 > 112610 씨에스윈드 - daily_buy_list.`20190906` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,381 > 112610 씨에스윈드 - daily_buy_list.`20190909` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,425 > 112610 씨에스윈드 - daily_buy_list.`20190910` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,472 > 112610 씨에스윈드 - daily_buy_list.`20190911` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,513 > 112610 씨에스윈드 - daily_buy_list.`20190916` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,551 > 112610 씨에스윈드 - daily_buy_list.`20190917` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,591 > 112610 씨에스윈드 - daily_buy_list.`20190918` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,649 > 112610 씨에스윈드 - daily_buy_list.`20190919` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,690 > 112610 씨에스윈드 - daily_buy_list.`20190920` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,730 > 112610 씨에스윈드 - daily_buy_list.`20190923` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,777 > 112610 씨에스윈드 - daily_buy_list.`20190924` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,821 > 112610 씨에스윈드 - daily_buy_list.`20190925` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,863 > 112610 씨에스윈드 - daily_buy_list.`20190926` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,905 > 112610 씨에스윈드 - daily_buy_list.`20190927` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,946 > 112610 씨에스윈드 - daily_buy_list.`20190930` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:12,987 > 112610 씨에스윈드 - daily_buy_list.`20191001` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,024 > 112610 씨에스윈드 - daily_buy_list.`20191002` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,063 > 112610 씨에스윈드 - daily_buy_list.`20191004` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,104 > 112610 씨에스윈드 - daily_buy_list.`20191007` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,142 > 112610 씨에스윈드 - daily_buy_list.`20191008` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,209 > 112610 씨에스윈드 - daily_buy_list.`20191010` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,272 > 112610 씨에스윈드 - daily_buy_list.`20191011` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,330 > 112610 씨에스윈드 - daily_buy_list.`20191014` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,395 > 112610 씨에스윈드 - daily_buy_list.`20191015` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,447 > 112610 씨에스윈드 - daily_buy_list.`20191016` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,511 > 112610 씨에스윈드 - daily_buy_list.`20191017` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,557 > 112610 씨에스윈드 - daily_buy_list.`20191018` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,607 > 112610 씨에스윈드 - daily_buy_list.`20191021` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,648 > 112610 씨에스윈드 - daily_buy_list.`20191022` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,684 > 112610 씨에스윈드 - daily_buy_list.`20191023` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,720 > 112610 씨에스윈드 - daily_buy_list.`20191024` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,764 > 112610 씨에스윈드 - daily_buy_list.`20191025` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,803 > 112610 씨에스윈드 - daily_buy_list.`20191028` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,841 > 112610 씨에스윈드 - daily_buy_list.`20191029` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,878 > 112610 씨에스윈드 - daily_buy_list.`20191030` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,918 > 112610 씨에스윈드 - daily_buy_list.`20191031` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:13,959 > 112610 씨에스윈드 - daily_buy_list.`20191101` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,000 > 112610 씨에스윈드 - daily_buy_list.`20191104` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,041 > 112610 씨에스윈드 - daily_buy_list.`20191105` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,082 > 112610 씨에스윈드 - daily_buy_list.`20191106` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,123 > 112610 씨에스윈드 - daily_buy_list.`20191107` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,158 > 112610 씨에스윈드 - daily_buy_list.`20191108` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,214 > 112610 씨에스윈드 - daily_buy_list.`20191111` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,296 > 112610 씨에스윈드 - daily_buy_list.`20191112` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,357 > 112610 씨에스윈드 - daily_buy_list.`20191113` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,422 > 112610 씨에스윈드 - daily_buy_list.`20191114` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,470 > 112610 씨에스윈드 - daily_buy_list.`20191115` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,512 > 112610 씨에스윈드 - daily_buy_list.`20191118` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,555 > 112610 씨에스윈드 - daily_buy_list.`20191119` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,599 > 112610 씨에스윈드 - daily_buy_list.`20191120` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,642 > 112610 씨에스윈드 - daily_buy_list.`20191121` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,690 > 112610 씨에스윈드 - daily_buy_list.`20191122` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,737 > 112610 씨에스윈드 - daily_buy_list.`20191125` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,781 > 112610 씨에스윈드 - daily_buy_list.`20191126` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,824 > 112610 씨에스윈드 - daily_buy_list.`20191127` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,870 > 112610 씨에스윈드 - daily_buy_list.`20191128` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,916 > 112610 씨에스윈드 - daily_buy_list.`20191129` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:14,957 > 112610 씨에스윈드 - daily_buy_list.`20191202` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,004 > 112610 씨에스윈드 - daily_buy_list.`20191203` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,046 > 112610 씨에스윈드 - daily_buy_list.`20191204` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,094 > 112610 씨에스윈드 - daily_buy_list.`20191205` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,130 > 112610 씨에스윈드 - daily_buy_list.`20191206` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,175 > 112610 씨에스윈드 - daily_buy_list.`20191209` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,272 > 112610 씨에스윈드 - daily_buy_list.`20191210` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,323 > 112610 씨에스윈드 - daily_buy_list.`20191211` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,366 > 112610 씨에스윈드 - daily_buy_list.`20191212` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,407 > 112610 씨에스윈드 - daily_buy_list.`20191213` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,467 > 112610 씨에스윈드 - daily_buy_list.`20191216` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,525 > 112610 씨에스윈드 - daily_buy_list.`20191217` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,562 > 112610 씨에스윈드 - daily_buy_list.`20191218` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,603 > 112610 씨에스윈드 - daily_buy_list.`20191219` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,643 > 112610 씨에스윈드 - daily_buy_list.`20191220` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,684 > 112610 씨에스윈드 - daily_buy_list.`20191223` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,720 > 112610 씨에스윈드 - daily_buy_list.`20191224` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,759 > 112610 씨에스윈드 - daily_buy_list.`20191226` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,802 > 112610 씨에스윈드 - daily_buy_list.`20191227` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,843 > 112610 씨에스윈드 - daily_buy_list.`20191230` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,881 > 112610 씨에스윈드 - daily_buy_list.`20200102` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,920 > 112610 씨에스윈드 - daily_buy_list.`20200103` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:15,960 > 112610 씨에스윈드 - daily_buy_list.`20200106` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,003 > 112610 씨에스윈드 - daily_buy_list.`20200107` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,042 > 112610 씨에스윈드 - daily_buy_list.`20200108` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,080 > 112610 씨에스윈드 - daily_buy_list.`20200109` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,119 > 112610 씨에스윈드 - daily_buy_list.`20200110` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,158 > 112610 씨에스윈드 - daily_buy_list.`20200113` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,257 > 112610 씨에스윈드 - daily_buy_list.`20200114` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,314 > 112610 씨에스윈드 - daily_buy_list.`20200115` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,371 > 112610 씨에스윈드 - daily_buy_list.`20200116` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,431 > 112610 씨에스윈드 - daily_buy_list.`20200117` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,491 > 112610 씨에스윈드 - daily_buy_list.`20200120` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,555 > 112610 씨에스윈드 - daily_buy_list.`20200121` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,603 > 112610 씨에스윈드 - daily_buy_list.`20200122` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,647 > 112610 씨에스윈드 - daily_buy_list.`20200123` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,691 > 112610 씨에스윈드 - daily_buy_list.`20200128` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,728 > 112610 씨에스윈드 - daily_buy_list.`20200129` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,769 > 112610 씨에스윈드 - daily_buy_list.`20200130` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,810 > 112610 씨에스윈드 - daily_buy_list.`20200131` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,849 > 112610 씨에스윈드 - daily_buy_list.`20200203` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,891 > 112610 씨에스윈드 - daily_buy_list.`20200204` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,931 > 112610 씨에스윈드 - daily_buy_list.`20200205` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:16,972 > 112610 씨에스윈드 - daily_buy_list.`20200206` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,011 > 112610 씨에스윈드 - daily_buy_list.`20200207` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,050 > 112610 씨에스윈드 - daily_buy_list.`20200210` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,089 > 112610 씨에스윈드 - daily_buy_list.`20200211` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,128 > 112610 씨에스윈드 - daily_buy_list.`20200212` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,169 > 112610 씨에스윈드 - daily_buy_list.`20200213` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,230 > 112610 씨에스윈드 - daily_buy_list.`20200214` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,289 > 112610 씨에스윈드 - daily_buy_list.`20200217` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,349 > 112610 씨에스윈드 - daily_buy_list.`20200218` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,428 > 112610 씨에스윈드 - daily_buy_list.`20200219` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,472 > 112610 씨에스윈드 - daily_buy_list.`20200220` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,517 > 112610 씨에스윈드 - daily_buy_list.`20200221` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,559 > 112610 씨에스윈드 - daily_buy_list.`20200224` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,606 > 112610 씨에스윈드 - daily_buy_list.`20200225` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,649 > 112610 씨에스윈드 - daily_buy_list.`20200226` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,695 > 112610 씨에스윈드 - daily_buy_list.`20200227` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,738 > 112610 씨에스윈드 - daily_buy_list.`20200228` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,780 > 112610 씨에스윈드 - daily_buy_list.`20200302` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,823 > 112610 씨에스윈드 - daily_buy_list.`20200303` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,868 > 112610 씨에스윈드 - daily_buy_list.`20200304` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,915 > 112610 씨에스윈드 - daily_buy_list.`20200305` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,958 > 112610 씨에스윈드 - daily_buy_list.`20200306` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:17,999 > 112610 씨에스윈드 - daily_buy_list.`20200309` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,040 > 112610 씨에스윈드 - daily_buy_list.`20200310` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,087 > 112610 씨에스윈드 - daily_buy_list.`20200311` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,127 > 112610 씨에스윈드 - daily_buy_list.`20200312` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,172 > 112610 씨에스윈드 - daily_buy_list.`20200313` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,259 > 112610 씨에스윈드 - daily_buy_list.`20200316` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,320 > 112610 씨에스윈드 - daily_buy_list.`20200317` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,371 > 112610 씨에스윈드 - daily_buy_list.`20200318` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,419 > 112610 씨에스윈드 - daily_buy_list.`20200319` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,457 > 112610 씨에스윈드 - daily_buy_list.`20200320` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,496 > 112610 씨에스윈드 - daily_buy_list.`20200323` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,539 > 112610 씨에스윈드 - daily_buy_list.`20200324` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,581 > 112610 씨에스윈드 - daily_buy_list.`20200325` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,621 > 112610 씨에스윈드 - daily_buy_list.`20200326` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,688 > 112610 씨에스윈드 - daily_buy_list.`20200327` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,751 > 112610 씨에스윈드 - daily_buy_list.`20200330` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,794 > 112610 씨에스윈드 - daily_buy_list.`20200331` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,839 > 112610 씨에스윈드 - daily_buy_list.`20200401` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,884 > 112610 씨에스윈드 - daily_buy_list.`20200402` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,924 > 112610 씨에스윈드 - daily_buy_list.`20200403` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:18,962 > 112610 씨에스윈드 - daily_buy_list.`20200406` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,001 > 112610 씨에스윈드 - daily_buy_list.`20200407` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,041 > 112610 씨에스윈드 - daily_buy_list.`20200408` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,082 > 112610 씨에스윈드 - daily_buy_list.`20200409` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,119 > 112610 씨에스윈드 - daily_buy_list.`20200410` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,159 > 112610 씨에스윈드 - daily_buy_list.`20200413` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,230 > 112610 씨에스윈드 - daily_buy_list.`20200414` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,315 > 112610 씨에스윈드 - daily_buy_list.`20200416` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,379 > 112610 씨에스윈드 - daily_buy_list.`20200417` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,440 > 112610 씨에스윈드 - daily_buy_list.`20200420` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,503 > 112610 씨에스윈드 - daily_buy_list.`20200421` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,552 > 112610 씨에스윈드 - daily_buy_list.`20200422` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,597 > 112610 씨에스윈드 - daily_buy_list.`20200423` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,643 > 112610 씨에스윈드 - daily_buy_list.`20200424` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,680 > 112610 씨에스윈드 - daily_buy_list.`20200427` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,720 > 112610 씨에스윈드 - daily_buy_list.`20200428` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,760 > 112610 씨에스윈드 - daily_buy_list.`20200429` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,798 > 112610 씨에스윈드 - daily_buy_list.`20200504` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,838 > 112610 씨에스윈드 - daily_buy_list.`20200506` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,877 > 112610 씨에스윈드 - daily_buy_list.`20200507` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,916 > 112610 씨에스윈드 - daily_buy_list.`20200508` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,958 > 112610 씨에스윈드 - daily_buy_list.`20200511` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:19,999 > 112610 씨에스윈드 - daily_buy_list.`20200512` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,037 > 112610 씨에스윈드 - daily_buy_list.`20200513` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,079 > 112610 씨에스윈드 - daily_buy_list.`20200514` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,124 > 112610 씨에스윈드 - daily_buy_list.`20200515` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,168 > 112610 씨에스윈드 - daily_buy_list.`20200518` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,234 > 112610 씨에스윈드 - daily_buy_list.`20200519` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,295 > 112610 씨에스윈드 - daily_buy_list.`20200520` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,378 > 112610 씨에스윈드 - daily_buy_list.`20200521` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,422 > 112610 씨에스윈드 - daily_buy_list.`20200522` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,467 > 112610 씨에스윈드 - daily_buy_list.`20200525` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,510 > 112610 씨에스윈드 - daily_buy_list.`20200526` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,552 > 112610 씨에스윈드 - daily_buy_list.`20200527` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,595 > 112610 씨에스윈드 - daily_buy_list.`20200528` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,642 > 112610 씨에스윈드 - daily_buy_list.`20200529` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,686 > 112610 씨에스윈드 - daily_buy_list.`20200601` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,727 > 112610 씨에스윈드 - daily_buy_list.`20200602` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,763 > 112610 씨에스윈드 - daily_buy_list.`20200603` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,809 > 112610 씨에스윈드 - daily_buy_list.`20200604` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,850 > 112610 씨에스윈드 - daily_buy_list.`20200605` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,889 > 112610 씨에스윈드 - daily_buy_list.`20200608` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,928 > 112610 씨에스윈드 - daily_buy_list.`20200609` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:20,970 > 112610 씨에스윈드 - daily_buy_list.`20200610` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,008 > 112610 씨에스윈드 - daily_buy_list.`20200611` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,048 > 112610 씨에스윈드 - daily_buy_list.`20200612` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,090 > 112610 씨에스윈드 - daily_buy_list.`20200615` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,133 > 112610 씨에스윈드 - daily_buy_list.`20200616` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,179 > 112610 씨에스윈드 - daily_buy_list.`20200617` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,239 > 112610 씨에스윈드 - daily_buy_list.`20200618` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,301 > 112610 씨에스윈드 - daily_buy_list.`20200619` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,365 > 112610 씨에스윈드 - daily_buy_list.`20200622` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,426 > 112610 씨에스윈드 - daily_buy_list.`20200623` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,472 > 112610 씨에스윈드 - daily_buy_list.`20200624` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,516 > 112610 씨에스윈드 - daily_buy_list.`20200625` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,555 > 112610 씨에스윈드 - daily_buy_list.`20200626` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,596 > 112610 씨에스윈드 - daily_buy_list.`20200629` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,637 > 112610 씨에스윈드 - daily_buy_list.`20200630` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,696 > 112610 씨에스윈드 - daily_buy_list.`20200701` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,754 > 112610 씨에스윈드 - daily_buy_list.`20200702` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,792 > 112610 씨에스윈드 - daily_buy_list.`20200703` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,833 > 112610 씨에스윈드 - daily_buy_list.`20200706` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,876 > 112610 씨에스윈드 - daily_buy_list.`20200707` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,915 > 112610 씨에스윈드 - daily_buy_list.`20200708` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,954 > 112610 씨에스윈드 - daily_buy_list.`20200709` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:21,994 > 112610 씨에스윈드 - daily_buy_list.`20200710` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,032 > 112610 씨에스윈드 - daily_buy_list.`20200713` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,072 > 112610 씨에스윈드 - daily_buy_list.`20200714` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,112 > 112610 씨에스윈드 - daily_buy_list.`20200715` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,152 > 112610 씨에스윈드 - daily_buy_list.`20200716` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,201 > 112610 씨에스윈드 - daily_buy_list.`20200717` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,283 > 112610 씨에스윈드 - daily_buy_list.`20200720` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,340 > 112610 씨에스윈드 - daily_buy_list.`20200721` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,401 > 112610 씨에스윈드 - daily_buy_list.`20200722` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,456 > 112610 씨에스윈드 - daily_buy_list.`20200723` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,535 > 112610 씨에스윈드 - daily_buy_list.`20200724` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,575 > 112610 씨에스윈드 - daily_buy_list.`20200727` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,621 > 112610 씨에스윈드 - daily_buy_list.`20200728` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,664 > 112610 씨에스윈드 - daily_buy_list.`20200729` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,709 > 112610 씨에스윈드 - daily_buy_list.`20200730` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,761 > 112610 씨에스윈드 - daily_buy_list.`20200731` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,807 > 112610 씨에스윈드 - daily_buy_list.`20200803` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,857 > 112610 씨에스윈드 - daily_buy_list.`20200804` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,904 > 112610 씨에스윈드 - daily_buy_list.`20200805` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,946 > 112610 씨에스윈드 - daily_buy_list.`20200806` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:22,993 > 112610 씨에스윈드 - daily_buy_list.`20200807` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,037 > 112610 씨에스윈드 - daily_buy_list.`20200810` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,075 > 112610 씨에스윈드 - daily_buy_list.`20200811` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,114 > 112610 씨에스윈드 - daily_buy_list.`20200812` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,154 > 112610 씨에스윈드 - daily_buy_list.`20200813` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,248 > 112610 씨에스윈드 - daily_buy_list.`20200814` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,302 > 112610 씨에스윈드 - daily_buy_list.`20200818` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,348 > 112610 씨에스윈드 - daily_buy_list.`20200819` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,392 > 112610 씨에스윈드 - daily_buy_list.`20200820` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,430 > 112610 씨에스윈드 - daily_buy_list.`20200821` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,471 > 112610 씨에스윈드 - daily_buy_list.`20200824` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,516 > 112610 씨에스윈드 - daily_buy_list.`20200825` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,557 > 112610 씨에스윈드 - daily_buy_list.`20200826` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,599 > 112610 씨에스윈드 - daily_buy_list.`20200827` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,638 > 112610 씨에스윈드 - daily_buy_list.`20200828` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,680 > 112610 씨에스윈드 - daily_buy_list.`20200831` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,723 > 112610 씨에스윈드 - daily_buy_list.`20200901` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,762 > 112610 씨에스윈드 - daily_buy_list.`20200902` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,801 > 112610 씨에스윈드 - daily_buy_list.`20200903` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,843 > 112610 씨에스윈드 - daily_buy_list.`20200904` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,885 > 112610 씨에스윈드 - daily_buy_list.`20200907` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,924 > 112610 씨에스윈드 - daily_buy_list.`20200908` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:23,967 > 112610 씨에스윈드 - daily_buy_list.`20200909` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,006 > 112610 씨에스윈드 - daily_buy_list.`20200910` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,044 > 112610 씨에스윈드 - daily_buy_list.`20200911` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,084 > 112610 씨에스윈드 - daily_buy_list.`20200914` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,124 > 112610 씨에스윈드 - daily_buy_list.`20200915` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,171 > 112610 씨에스윈드 - daily_buy_list.`20200916` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,227 > 112610 씨에스윈드 - daily_buy_list.`20200917` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,283 > 112610 씨에스윈드 - daily_buy_list.`20200918` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,367 > 112610 씨에스윈드 - daily_buy_list.`20200921` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,428 > 112610 씨에스윈드 - daily_buy_list.`20200922` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,483 > 112610 씨에스윈드 - daily_buy_list.`20200923` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,549 > 112610 씨에스윈드 - daily_buy_list.`20200924` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,636 > 112610 씨에스윈드 - daily_buy_list.`20200925` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,693 > 112610 씨에스윈드 - daily_buy_list.`20200928` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,738 > 112610 씨에스윈드 - daily_buy_list.`20200929` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,782 > 112610 씨에스윈드 - daily_buy_list.`20201005` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,823 > 112610 씨에스윈드 - daily_buy_list.`20201006` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,866 > 112610 씨에스윈드 - daily_buy_list.`20201007` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,902 > 112610 씨에스윈드 - daily_buy_list.`20201008` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,947 > 112610 씨에스윈드 - daily_buy_list.`20201012` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:24,986 > 112610 씨에스윈드 - daily_buy_list.`20201013` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,026 > 112610 씨에스윈드 - daily_buy_list.`20201014` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,067 > 112610 씨에스윈드 - daily_buy_list.`20201015` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,110 > 112610 씨에스윈드 - daily_buy_list.`20201016` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,149 > 112610 씨에스윈드 - daily_buy_list.`20201019` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,215 > 112610 씨에스윈드 - daily_buy_list.`20201020` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,276 > 112610 씨에스윈드 - daily_buy_list.`20201021` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,341 > 112610 씨에스윈드 - daily_buy_list.`20201022` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,410 > 112610 씨에스윈드 - daily_buy_list.`20201023` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,460 > 112610 씨에스윈드 - daily_buy_list.`20201026` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,506 > 112610 씨에스윈드 - daily_buy_list.`20201027` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,551 > 112610 씨에스윈드 - daily_buy_list.`20201028` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,595 > 112610 씨에스윈드 - daily_buy_list.`20201029` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,635 > 112610 씨에스윈드 - daily_buy_list.`20201030` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,678 > 112610 씨에스윈드 - daily_buy_list.`20201102` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,720 > 112610 씨에스윈드 - daily_buy_list.`20201103` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,760 > 112610 씨에스윈드 - daily_buy_list.`20201104` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,808 > 112610 씨에스윈드 - daily_buy_list.`20201105` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,849 > 112610 씨에스윈드 - daily_buy_list.`20201106` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,891 > 112610 씨에스윈드 - daily_buy_list.`20201109` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,931 > 112610 씨에스윈드 - daily_buy_list.`20201110` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:25,972 > 112610 씨에스윈드 - daily_buy_list.`20201111` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,011 > 112610 씨에스윈드 - daily_buy_list.`20201112` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,051 > 112610 씨에스윈드 - daily_buy_list.`20201113` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,092 > 112610 씨에스윈드 - daily_buy_list.`20201116` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,131 > 112610 씨에스윈드 - daily_buy_list.`20201117` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,177 > 112610 씨에스윈드 - daily_buy_list.`20201118` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,253 > 112610 씨에스윈드 - daily_buy_list.`20201119` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,320 > 112610 씨에스윈드 - daily_buy_list.`20201120` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,383 > 112610 씨에스윈드 - daily_buy_list.`20201123` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,433 > 112610 씨에스윈드 - daily_buy_list.`20201124` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,482 > 112610 씨에스윈드 - daily_buy_list.`20201125` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,524 > 112610 씨에스윈드 - daily_buy_list.`20201126` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,564 > 112610 씨에스윈드 - daily_buy_list.`20201127` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,605 > 112610 씨에스윈드 - daily_buy_list.`20201130` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,643 > 112610 씨에스윈드 - daily_buy_list.`20201201` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,679 > 112610 씨에스윈드 - daily_buy_list.`20201202` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,723 > 112610 씨에스윈드 - daily_buy_list.`20201203` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,762 > 112610 씨에스윈드 - daily_buy_list.`20201204` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,803 > 112610 씨에스윈드 - daily_buy_list.`20201207` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,845 > 112610 씨에스윈드 - daily_buy_list.`20201208` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,888 > 112610 씨에스윈드 - daily_buy_list.`20201209` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,931 > 112610 씨에스윈드 - daily_buy_list.`20201210` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:26,972 > 112610 씨에스윈드 - daily_buy_list.`20201211` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,015 > 112610 씨에스윈드 - daily_buy_list.`20201214` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,052 > 112610 씨에스윈드 - daily_buy_list.`20201215` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,090 > 112610 씨에스윈드 - daily_buy_list.`20201216` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,127 > 112610 씨에스윈드 - daily_buy_list.`20201217` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,170 > 112610 씨에스윈드 - daily_buy_list.`20201218` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,238 > 112610 씨에스윈드 - daily_buy_list.`20201221` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,303 > 112610 씨에스윈드 - daily_buy_list.`20201222` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,360 > 112610 씨에스윈드 - daily_buy_list.`20201223` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,417 > 112610 씨에스윈드 - daily_buy_list.`20201224` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,496 > 112610 씨에스윈드 - daily_buy_list.`20201228` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,543 > 112610 씨에스윈드 - daily_buy_list.`20201229` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,586 > 112610 씨에스윈드 - daily_buy_list.`20201230` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,627 > 112610 씨에스윈드 - daily_buy_list.`20210104` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,669 > 112610 씨에스윈드 - daily_buy_list.`20210105` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,740 > 112610 씨에스윈드 - daily_buy_list.`20210106` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,793 > 112610 씨에스윈드 - daily_buy_list.`20210107` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,835 > 112610 씨에스윈드 - daily_buy_list.`20210108` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,878 > 112610 씨에스윈드 - daily_buy_list.`20210111` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,921 > 112610 씨에스윈드 - daily_buy_list.`20210112` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:27,967 > 112610 씨에스윈드 - daily_buy_list.`20210113` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,016 > 112610 씨에스윈드 - daily_buy_list.`20210114` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,063 > 112610 씨에스윈드 - daily_buy_list.`20210115` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,105 > 112610 씨에스윈드 - daily_buy_list.`20210118` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,144 > 112610 씨에스윈드 - daily_buy_list.`20210119` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,188 > 112610 씨에스윈드 - daily_buy_list.`20210120` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,278 > 112610 씨에스윈드 - daily_buy_list.`20210121` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,331 > 112610 씨에스윈드 - daily_buy_list.`20210122` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,389 > 112610 씨에스윈드 - daily_buy_list.`20210125` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,471 > 112610 씨에스윈드 - daily_buy_list.`20210126` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,515 > 112610 씨에스윈드 - daily_buy_list.`20210127` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,561 > 112610 씨에스윈드 - daily_buy_list.`20210128` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,607 > 112610 씨에스윈드 - daily_buy_list.`20210129` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,653 > 112610 씨에스윈드 - daily_buy_list.`20210201` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,704 > 112610 씨에스윈드 - daily_buy_list.`20210202` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,752 > 112610 씨에스윈드 - daily_buy_list.`20210203` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,797 > 112610 씨에스윈드 - daily_buy_list.`20210204` 업데이트
[INFO|collector_api.py:565] 2021-02-08 16:03:28,841 > 112610 씨에스윈드 - daily_buy_list.`20210205` 업데이트
[INFO|collector_api.py:575] 2021-02-08 16:03:28,890 > daily_buy_list 업데이트 완료
[DEBUG|collector_api.py:200] 2021-02-08 16:03:28,908 > ++++++++++++++에스원++++++++++++++++++++755/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:28,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:28,909 > 371
[DEBUG|collector_api.py:200] 2021-02-08 16:03:29,226 > ++++++++++++++SK바이오팜++++++++++++++++++++756/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:29,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:29,518 > 372
[DEBUG|collector_api.py:200] 2021-02-08 16:03:29,704 > ++++++++++++++에쓰씨엔지니어링++++++++++++++++++++757/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:29,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:30,126 > 373
[DEBUG|collector_api.py:200] 2021-02-08 16:03:30,385 > ++++++++++++++에이프로젠제약++++++++++++++++++++758/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:30,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:30,733 > 374
[DEBUG|collector_api.py:200] 2021-02-08 16:03:31,013 > ++++++++++++++영풍제지++++++++++++++++++++759/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:31,014 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:31,342 > 375
[DEBUG|collector_api.py:200] 2021-02-08 16:03:31,611 > ++++++++++++++예스코홀딩스++++++++++++++++++++760/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:31,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:31,951 > 376
[DEBUG|collector_api.py:200] 2021-02-08 16:03:32,219 > ++++++++++++++우리들제약++++++++++++++++++++761/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:32,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:32,559 > 377
[DEBUG|collector_api.py:200] 2021-02-08 16:03:32,837 > ++++++++++++++우리종금++++++++++++++++++++762/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:32,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:33,167 > 378
[DEBUG|collector_api.py:200] 2021-02-08 16:03:33,459 > ++++++++++++++우진아이엔에스++++++++++++++++++++763/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:33,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:33,775 > 379
[DEBUG|collector_api.py:200] 2021-02-08 16:03:34,011 > ++++++++++++++웅진씽크빅++++++++++++++++++++764/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:34,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:34,383 > 380
[DEBUG|collector_api.py:200] 2021-02-08 16:03:34,644 > ++++++++++++++유수홀딩스++++++++++++++++++++765/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:34,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:34,991 > 381
[DEBUG|collector_api.py:200] 2021-02-08 16:03:35,311 > ++++++++++++++유엔젤++++++++++++++++++++766/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:35,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:35,599 > 382
[DEBUG|collector_api.py:200] 2021-02-08 16:03:35,887 > ++++++++++++++율촌화학++++++++++++++++++++767/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:35,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:36,212 > 383
[DEBUG|collector_api.py:200] 2021-02-08 16:03:36,497 > ++++++++++++++이지스레지던스리츠++++++++++++++++++++768/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:36,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:36,821 > 384
[DEBUG|collector_api.py:200] 2021-02-08 16:03:37,002 > ++++++++++++++이화산업++++++++++++++++++++769/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:37,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:37,429 > 385
[DEBUG|collector_api.py:200] 2021-02-08 16:03:37,740 > ++++++++++++++인팩++++++++++++++++++++770/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:37,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:38,037 > 386
[DEBUG|collector_api.py:200] 2021-02-08 16:03:38,302 > ++++++++++++++일신방직++++++++++++++++++++771/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:38,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:38,645 > 387
[DEBUG|collector_api.py:200] 2021-02-08 16:03:38,941 > ++++++++++++++일진디스플++++++++++++++++++++772/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:38,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:39,253 > 388
[DEBUG|collector_api.py:200] 2021-02-08 16:03:39,535 > ++++++++++++++일진머티리얼즈++++++++++++++++++++773/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:39,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:39,861 > 389
[DEBUG|collector_api.py:200] 2021-02-08 16:03:40,112 > ++++++++++++++제주은행++++++++++++++++++++774/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:40,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:40,468 > 390
[DEBUG|collector_api.py:200] 2021-02-08 16:03:40,747 > ++++++++++++++제주항공++++++++++++++++++++775/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:40,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:41,076 > 391
[DEBUG|collector_api.py:200] 2021-02-08 16:03:41,329 > ++++++++++++++종근당++++++++++++++++++++776/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:41,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:41,684 > 392
[DEBUG|collector_api.py:200] 2021-02-08 16:03:41,945 > ++++++++++++++진양홀딩스++++++++++++++++++++777/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:41,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:42,291 > 393
[DEBUG|collector_api.py:200] 2021-02-08 16:03:42,542 > ++++++++++++++천일고속++++++++++++++++++++778/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:42,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:42,899 > 394
[DEBUG|collector_api.py:200] 2021-02-08 16:03:43,169 > ++++++++++++++체시스++++++++++++++++++++779/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:43,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:43,506 > 395
[DEBUG|collector_api.py:200] 2021-02-08 16:03:43,774 > ++++++++++++++카프로++++++++++++++++++++780/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:43,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:44,114 > 396
[DEBUG|collector_api.py:200] 2021-02-08 16:03:44,383 > ++++++++++++++KT&G++++++++++++++++++++781/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:44,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:44,721 > 397
[DEBUG|collector_api.py:200] 2021-02-08 16:03:44,978 > ++++++++++++++태광산업++++++++++++++++++++782/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:44,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:45,328 > 398
[DEBUG|collector_api.py:200] 2021-02-08 16:03:45,598 > ++++++++++++++태영건설++++++++++++++++++++783/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:45,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:45,937 > 399
[DEBUG|collector_api.py:200] 2021-02-08 16:03:46,198 > ++++++++++++++풍산++++++++++++++++++++784/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:46,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:46,545 > 400
[DEBUG|collector_api.py:200] 2021-02-08 16:03:46,801 > ++++++++++++++하나금융지주++++++++++++++++++++785/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:46,802 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:47,152 > 401
[DEBUG|collector_api.py:200] 2021-02-08 16:03:47,406 > ++++++++++++++한국가스공사++++++++++++++++++++786/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:47,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:47,760 > 402
[DEBUG|collector_api.py:200] 2021-02-08 16:03:48,004 > ++++++++++++++한국전력++++++++++++++++++++787/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:48,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:48,368 > 403
[DEBUG|collector_api.py:200] 2021-02-08 16:03:48,642 > ++++++++++++++한국콜마++++++++++++++++++++788/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:48,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:48,976 > 404
[DEBUG|collector_api.py:200] 2021-02-08 16:03:49,268 > ++++++++++++++한성기업++++++++++++++++++++789/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:49,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:49,584 > 405
[DEBUG|collector_api.py:200] 2021-02-08 16:03:49,845 > ++++++++++++++한세예스24홀딩스++++++++++++++++++++790/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:49,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:50,192 > 406
[DEBUG|collector_api.py:200] 2021-02-08 16:03:50,471 > ++++++++++++++한일시멘트++++++++++++++++++++791/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:50,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:50,800 > 407
[DEBUG|collector_api.py:200] 2021-02-08 16:03:51,050 > ++++++++++++++한일홀딩스++++++++++++++++++++792/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:51,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:51,408 > 408
[DEBUG|collector_api.py:200] 2021-02-08 16:03:51,688 > ++++++++++++++한전KPS++++++++++++++++++++793/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:51,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:52,015 > 409
[DEBUG|collector_api.py:200] 2021-02-08 16:03:52,290 > ++++++++++++++한진칼++++++++++++++++++++794/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:52,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:52,623 > 410
[DEBUG|collector_api.py:200] 2021-02-08 16:03:52,910 > ++++++++++++++한창++++++++++++++++++++795/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:52,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:53,232 > 411
[DEBUG|collector_api.py:200] 2021-02-08 16:03:53,500 > ++++++++++++++현대건설++++++++++++++++++++796/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:53,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:53,838 > 412
[DEBUG|collector_api.py:200] 2021-02-08 16:03:54,122 > ++++++++++++++현대그린푸드++++++++++++++++++++797/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:54,122 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:54,445 > 413
[DEBUG|collector_api.py:200] 2021-02-08 16:03:54,738 > ++++++++++++++현대로템++++++++++++++++++++798/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:54,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:55,053 > 414
[DEBUG|collector_api.py:200] 2021-02-08 16:03:55,309 > ++++++++++++++현대미포조선++++++++++++++++++++799/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:55,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:55,660 > 415
[DEBUG|collector_api.py:200] 2021-02-08 16:03:55,935 > ++++++++++++++현대상사++++++++++++++++++++800/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:55,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:56,268 > 416
[DEBUG|collector_api.py:200] 2021-02-08 16:03:56,583 > ++++++++++++++화신++++++++++++++++++++801/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:56,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:56,877 > 417
[DEBUG|collector_api.py:200] 2021-02-08 16:03:57,142 > ++++++++++++++휴켐스++++++++++++++++++++802/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:57,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:57,485 > 418
[DEBUG|collector_api.py:200] 2021-02-08 16:03:57,744 > ++++++++++++++흥국화재++++++++++++++++++++803/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:57,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:58,093 > 419
[DEBUG|collector_api.py:200] 2021-02-08 16:03:58,388 > ++++++++++++++EDGC++++++++++++++++++++804/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:58,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:58,700 > 420
[DEBUG|collector_api.py:200] 2021-02-08 16:03:58,934 > ++++++++++++++GST++++++++++++++++++++805/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:58,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:59,309 > 421
[DEBUG|collector_api.py:200] 2021-02-08 16:03:59,565 > ++++++++++++++GS홈쇼핑++++++++++++++++++++806/2895
[DEBUG|open_api.py:656] 2021-02-08 16:03:59,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:03:59,916 > 422
[DEBUG|collector_api.py:200] 2021-02-08 16:04:00,182 > ++++++++++++++IBKS제13호스팩++++++++++++++++++++807/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:00,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:00,525 > 423
[DEBUG|collector_api.py:200] 2021-02-08 16:04:00,719 > ++++++++++++++ITX-AI++++++++++++++++++++808/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:00,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:01,133 > 424
[DEBUG|collector_api.py:200] 2021-02-08 16:04:01,383 > ++++++++++++++JW신약++++++++++++++++++++809/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:01,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:01,741 > 425
[DEBUG|collector_api.py:200] 2021-02-08 16:04:02,007 > ++++++++++++++KH바텍++++++++++++++++++++810/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:02,007 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:02,350 > 426
[DEBUG|collector_api.py:200] 2021-02-08 16:04:02,626 > ++++++++++++++SK5호스팩++++++++++++++++++++811/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:02,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:02,959 > 427
[DEBUG|collector_api.py:200] 2021-02-08 16:04:03,146 > ++++++++++++++SK6호스팩++++++++++++++++++++812/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:03,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:03,566 > 428
[DEBUG|collector_api.py:200] 2021-02-08 16:04:03,754 > ++++++++++++++YW++++++++++++++++++++813/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:03,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:04,174 > 429
[DEBUG|collector_api.py:200] 2021-02-08 16:04:04,425 > ++++++++++++++경창산업++++++++++++++++++++814/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:04,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:04,783 > 430
[DEBUG|collector_api.py:200] 2021-02-08 16:04:05,052 > ++++++++++++++고려시멘트++++++++++++++++++++815/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:05,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:05,391 > 431
[DEBUG|collector_api.py:200] 2021-02-08 16:04:05,664 > ++++++++++++++골프존++++++++++++++++++++816/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:05,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:06,000 > 432
[DEBUG|collector_api.py:200] 2021-02-08 16:04:06,244 > ++++++++++++++구영테크++++++++++++++++++++817/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:06,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:06,607 > 433
[DEBUG|collector_api.py:200] 2021-02-08 16:04:06,871 > ++++++++++++++국순당++++++++++++++++++++818/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:06,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:07,215 > 434
[DEBUG|collector_api.py:200] 2021-02-08 16:04:07,512 > ++++++++++++++그리티++++++++++++++++++++819/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:07,513 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:07,823 > 435
[DEBUG|collector_api.py:200] 2021-02-08 16:04:08,058 > ++++++++++++++나노브릭++++++++++++++++++++820/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:08,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:08,432 > 436
[DEBUG|collector_api.py:200] 2021-02-08 16:04:08,646 > ++++++++++++++네스엠++++++++++++++++++++821/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:08,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:09,040 > 437
[DEBUG|collector_api.py:200] 2021-02-08 16:04:09,311 > ++++++++++++++네오티스++++++++++++++++++++822/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:09,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:09,647 > 438
[DEBUG|collector_api.py:200] 2021-02-08 16:04:09,886 > ++++++++++++++네이처셀++++++++++++++++++++823/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:09,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:10,260 > 439
[DEBUG|collector_api.py:200] 2021-02-08 16:04:10,542 > ++++++++++++++녹십자셀++++++++++++++++++++824/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:10,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:10,868 > 440
[DEBUG|collector_api.py:200] 2021-02-08 16:04:11,125 > ++++++++++++++뉴인텍++++++++++++++++++++825/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:11,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:11,478 > 441
[DEBUG|collector_api.py:200] 2021-02-08 16:04:11,771 > ++++++++++++++뉴프렉스++++++++++++++++++++826/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:11,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:12,087 > 442
[DEBUG|collector_api.py:200] 2021-02-08 16:04:12,335 > ++++++++++++++대봉엘에스++++++++++++++++++++827/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:12,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:12,694 > 443
[DEBUG|collector_api.py:200] 2021-02-08 16:04:12,967 > ++++++++++++++대신밸런스제9호스팩++++++++++++++++++++828/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:12,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:13,303 > 444
[DEBUG|collector_api.py:200] 2021-02-08 16:04:13,474 > ++++++++++++++대유++++++++++++++++++++829/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:13,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:13,912 > 445
[DEBUG|collector_api.py:200] 2021-02-08 16:04:14,169 > ++++++++++++++대유에이피++++++++++++++++++++830/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:14,169 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:14,520 > 446
[DEBUG|collector_api.py:200] 2021-02-08 16:04:14,749 > ++++++++++++++대주산업++++++++++++++++++++831/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:14,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:15,127 > 447
[DEBUG|collector_api.py:200] 2021-02-08 16:04:15,403 > ++++++++++++++대한약품++++++++++++++++++++832/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:15,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:15,737 > 448
[DEBUG|collector_api.py:200] 2021-02-08 16:04:15,995 > ++++++++++++++동구바이오제약++++++++++++++++++++833/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:15,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:16,344 > 449
[DEBUG|collector_api.py:200] 2021-02-08 16:04:16,612 > ++++++++++++++동방선기++++++++++++++++++++834/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:16,612 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:16,952 > 450
[DEBUG|collector_api.py:200] 2021-02-08 16:04:17,202 > ++++++++++++++디에이테크놀로지++++++++++++++++++++835/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:17,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:17,561 > 451
[DEBUG|collector_api.py:200] 2021-02-08 16:04:17,814 > ++++++++++++++디에이피++++++++++++++++++++836/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:17,815 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:18,169 > 452
[DEBUG|collector_api.py:200] 2021-02-08 16:04:18,426 > ++++++++++++++디엔에이링크++++++++++++++++++++837/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:18,426 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:18,777 > 453
[DEBUG|collector_api.py:200] 2021-02-08 16:04:19,021 > ++++++++++++++디엔에프++++++++++++++++++++838/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:19,021 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:19,384 > 454
[DEBUG|collector_api.py:200] 2021-02-08 16:04:19,651 > ++++++++++++++디지틀조선++++++++++++++++++++839/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:19,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:19,991 > 455
[DEBUG|collector_api.py:200] 2021-02-08 16:04:20,299 > ++++++++++++++룽투코리아++++++++++++++++++++840/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:20,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:20,600 > 456
[DEBUG|collector_api.py:200] 2021-02-08 16:04:20,859 > ++++++++++++++링크제니시스++++++++++++++++++++841/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:20,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:21,208 > 457
[DEBUG|collector_api.py:200] 2021-02-08 16:04:21,459 > ++++++++++++++메디톡스++++++++++++++++++++842/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:21,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:21,815 > 458
[DEBUG|collector_api.py:200] 2021-02-08 16:04:22,062 > ++++++++++++++메이슨캐피탈++++++++++++++++++++843/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:22,062 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:22,423 > 459
[DEBUG|collector_api.py:200] 2021-02-08 16:04:22,679 > ++++++++++++++메탈라이프++++++++++++++++++++844/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:22,679 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:23,031 > 460
[DEBUG|collector_api.py:200] 2021-02-08 16:04:23,273 > ++++++++++++++모두투어++++++++++++++++++++845/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:23,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:23,638 > 461
[DEBUG|collector_api.py:200] 2021-02-08 16:04:23,886 > ++++++++++++++모비스++++++++++++++++++++846/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:23,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:24,245 > 462
[DEBUG|collector_api.py:200] 2021-02-08 16:04:24,495 > ++++++++++++++모트렉스++++++++++++++++++++847/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:24,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:24,853 > 463
[DEBUG|collector_api.py:200] 2021-02-08 16:04:25,088 > ++++++++++++++미래SCI++++++++++++++++++++848/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:25,088 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:25,461 > 464
[DEBUG|collector_api.py:200] 2021-02-08 16:04:25,729 > ++++++++++++++미스터블루++++++++++++++++++++849/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:25,729 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:26,069 > 465
[DEBUG|collector_api.py:200] 2021-02-08 16:04:26,317 > ++++++++++++++미코바이오메드++++++++++++++++++++850/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:26,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:26,677 > 466
[DEBUG|collector_api.py:200] 2021-02-08 16:04:26,920 > ++++++++++++++바디텍메드++++++++++++++++++++851/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:26,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:27,285 > 467
[DEBUG|collector_api.py:200] 2021-02-08 16:04:27,524 > ++++++++++++++바이넥스++++++++++++++++++++852/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:27,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:27,893 > 468
[DEBUG|collector_api.py:200] 2021-02-08 16:04:28,152 > ++++++++++++++브랜드엑스코퍼레이션++++++++++++++++++++853/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:28,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:28,502 > 469
[DEBUG|collector_api.py:200] 2021-02-08 16:04:28,686 > ++++++++++++++삼보판지++++++++++++++++++++854/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:28,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:29,110 > 470
[DEBUG|collector_api.py:200] 2021-02-08 16:04:29,363 > ++++++++++++++삼본전자++++++++++++++++++++855/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:29,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:29,718 > 471
[DEBUG|collector_api.py:200] 2021-02-08 16:04:29,966 > ++++++++++++++삼아제약++++++++++++++++++++856/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:29,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:30,326 > 472
[DEBUG|collector_api.py:200] 2021-02-08 16:04:30,603 > ++++++++++++++상지카일룸++++++++++++++++++++857/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:30,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:30,933 > 473
[DEBUG|collector_api.py:200] 2021-02-08 16:04:31,208 > ++++++++++++++서암기계공업++++++++++++++++++++858/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:31,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:31,541 > 474
[DEBUG|collector_api.py:200] 2021-02-08 16:04:31,804 > ++++++++++++++선진뷰티사이언스++++++++++++++++++++859/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:31,805 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:32,149 > 475
[DEBUG|collector_api.py:200] 2021-02-08 16:04:32,304 > ++++++++++++++성창오토텍++++++++++++++++++++860/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:32,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:32,756 > 476
[DEBUG|collector_api.py:200] 2021-02-08 16:04:32,997 > ++++++++++++++세보엠이씨++++++++++++++++++++861/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:32,997 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:33,365 > 477
[DEBUG|collector_api.py:200] 2021-02-08 16:04:33,626 > ++++++++++++++세종메디칼++++++++++++++++++++862/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:33,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:33,973 > 478
[DEBUG|collector_api.py:200] 2021-02-08 16:04:34,208 > ++++++++++++++세코닉스++++++++++++++++++++863/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:34,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:34,580 > 479
[DEBUG|collector_api.py:200] 2021-02-08 16:04:34,839 > ++++++++++++++셀루메드++++++++++++++++++++864/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:34,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:35,189 > 480
[DEBUG|collector_api.py:200] 2021-02-08 16:04:35,439 > ++++++++++++++셀바스헬스케어++++++++++++++++++++865/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:35,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:35,797 > 481
[DEBUG|collector_api.py:200] 2021-02-08 16:04:36,027 > ++++++++++++++셀트리온제약++++++++++++++++++++866/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:36,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:36,405 > 482
[DEBUG|collector_api.py:200] 2021-02-08 16:04:36,655 > ++++++++++++++소리바다++++++++++++++++++++867/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:36,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:37,013 > 483
[DEBUG|collector_api.py:200] 2021-02-08 16:04:37,286 > ++++++++++++++스튜디오산타클로스++++++++++++++++++++868/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:37,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:37,621 > 484
[DEBUG|collector_api.py:200] 2021-02-08 16:04:37,866 > ++++++++++++++스페코++++++++++++++++++++869/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:37,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:38,228 > 485
[DEBUG|collector_api.py:200] 2021-02-08 16:04:38,484 > ++++++++++++++승일++++++++++++++++++++870/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:38,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:38,835 > 486
[DEBUG|collector_api.py:200] 2021-02-08 16:04:39,082 > ++++++++++++++시스웍++++++++++++++++++++871/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:39,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:39,442 > 487
[DEBUG|collector_api.py:200] 2021-02-08 16:04:39,714 > ++++++++++++++심텍++++++++++++++++++++872/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:39,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:40,050 > 488
[DEBUG|collector_api.py:200] 2021-02-08 16:04:40,299 > ++++++++++++++쌍용정보통신++++++++++++++++++++873/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:40,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:40,657 > 489
[DEBUG|collector_api.py:200] 2021-02-08 16:04:40,895 > ++++++++++++++씨유메디칼++++++++++++++++++++874/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:40,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:41,265 > 490
[DEBUG|collector_api.py:200] 2021-02-08 16:04:41,511 > ++++++++++++++씨케이에이치++++++++++++++++++++875/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:41,512 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:41,871 > 491
[DEBUG|collector_api.py:200] 2021-02-08 16:04:42,139 > ++++++++++++++아나패스++++++++++++++++++++876/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:42,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:42,480 > 492
[DEBUG|collector_api.py:200] 2021-02-08 16:04:42,739 > ++++++++++++++아이센스++++++++++++++++++++877/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:42,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:43,088 > 493
[DEBUG|collector_api.py:200] 2021-02-08 16:04:43,337 > ++++++++++++++아이씨디++++++++++++++++++++878/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:43,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:43,696 > 494
[DEBUG|collector_api.py:200] 2021-02-08 16:04:43,948 > ++++++++++++++아이씨케이++++++++++++++++++++879/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:43,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:303] 2021-02-08 16:04:55,627 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:04:55,628 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:04:55,628 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:04:55,635 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:04:55,635 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:04:55,636 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:04:55,636 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:04:55,647 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:04:55,679 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:04:55,679 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:04:55,679 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:04:55,696 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:04:55,728 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:04:58,300 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:04:58,302 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:04:58,339 > ++++++++++++++아이씨케이++++++++++++++++++++879/2895
[DEBUG|open_api.py:656] 2021-02-08 16:04:58,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:04:58,341 > 1
[DEBUG|open_api.py:303] 2021-02-08 16:10:23,214 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:10:23,214 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:10:23,215 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:10:23,221 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:10:23,221 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:10:23,221 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:10:23,221 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:10:23,234 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:10:23,266 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:10:23,266 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:10:23,267 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:10:23,295 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:10:23,325 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:10:26,027 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:10:26,028 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:10:26,078 > ++++++++++++++아이씨케이++++++++++++++++++++879/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:26,079 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:26,081 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:10:27,177 > ++++++++++++++아이오케이++++++++++++++++++++880/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:27,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:27,180 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:10:27,425 > ++++++++++++++아이원스++++++++++++++++++++881/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:27,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:27,788 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:10:28,032 > ++++++++++++++아이즈비전++++++++++++++++++++882/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:28,032 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:28,395 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:10:28,668 > ++++++++++++++아이티센++++++++++++++++++++883/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:28,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:29,003 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:10:29,244 > ++++++++++++++알리코제약++++++++++++++++++++884/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:29,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:29,610 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:10:29,890 > ++++++++++++++알에프세미++++++++++++++++++++885/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:29,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:30,219 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:10:30,476 > ++++++++++++++알에프텍++++++++++++++++++++886/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:30,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:30,827 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:10:31,073 > ++++++++++++++애니플러스++++++++++++++++++++887/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:31,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:31,435 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:10:31,661 > ++++++++++++++어보브반도체++++++++++++++++++++888/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:31,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:32,043 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:10:32,292 > ++++++++++++++에스아이리소스++++++++++++++++++++889/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:32,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:32,650 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:10:32,905 > ++++++++++++++에스앤더블류++++++++++++++++++++890/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:32,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:33,258 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:10:33,496 > ++++++++++++++에스앤에스텍++++++++++++++++++++891/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:33,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:33,866 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:10:34,111 > ++++++++++++++에스에너지++++++++++++++++++++892/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:34,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:34,473 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:10:34,726 > ++++++++++++++에스코넥++++++++++++++++++++893/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:34,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:35,080 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:10:35,315 > ++++++++++++++에쎈테크++++++++++++++++++++894/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:35,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:35,688 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:10:35,948 > ++++++++++++++에이루트++++++++++++++++++++895/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:35,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:36,297 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:10:36,538 > ++++++++++++++에이스토리++++++++++++++++++++896/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:36,538 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:36,904 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:10:37,105 > ++++++++++++++에이티넘인베스트++++++++++++++++++++897/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:37,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:37,511 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:10:37,768 > ++++++++++++++엑사이엔씨++++++++++++++++++++898/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:37,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:38,119 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:10:38,385 > ++++++++++++++엑세스바이오++++++++++++++++++++899/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:38,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:38,728 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:10:39,000 > ++++++++++++++엑스큐어++++++++++++++++++++900/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:39,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:39,335 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:10:39,577 > ++++++++++++++엑시콘++++++++++++++++++++901/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:39,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:39,944 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:10:40,184 > ++++++++++++++엔피케이++++++++++++++++++++902/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:40,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:40,551 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:10:40,812 > ++++++++++++++엠게임++++++++++++++++++++903/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:40,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:41,158 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:10:41,423 > ++++++++++++++엠벤처투자++++++++++++++++++++904/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:41,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:41,766 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:10:42,035 > ++++++++++++++엠씨넥스++++++++++++++++++++905/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:42,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:42,373 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:10:42,646 > ++++++++++++++영화테크++++++++++++++++++++906/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:42,647 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:42,981 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:10:43,222 > ++++++++++++++오공++++++++++++++++++++907/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:43,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:43,588 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:10:43,843 > ++++++++++++++오스템임플란트++++++++++++++++++++908/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:43,843 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:44,196 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:10:44,458 > ++++++++++++++오픈베이스++++++++++++++++++++909/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:44,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:44,804 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:10:45,072 > ++++++++++++++옵티시스++++++++++++++++++++910/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:45,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:45,410 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:10:45,655 > ++++++++++++++와이지-원++++++++++++++++++++911/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:45,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:46,019 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:10:46,270 > ++++++++++++++우리바이오++++++++++++++++++++912/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:46,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:46,626 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:10:46,881 > ++++++++++++++원익QnC++++++++++++++++++++913/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:46,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:47,234 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:10:47,488 > ++++++++++++++원익큐브++++++++++++++++++++914/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:47,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:47,842 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:10:48,103 > ++++++++++++++원풍물산++++++++++++++++++++915/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:48,103 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:48,449 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:10:48,717 > ++++++++++++++웨이브일렉트로++++++++++++++++++++916/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:48,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:49,057 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:10:49,299 > ++++++++++++++웰크론++++++++++++++++++++917/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:49,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:49,665 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:10:49,940 > ++++++++++++++위지트++++++++++++++++++++918/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:49,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:50,273 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:10:50,541 > ++++++++++++++유니온커뮤니티++++++++++++++++++++919/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:50,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:50,881 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:10:51,123 > ++++++++++++++유니테크노++++++++++++++++++++920/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:51,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:51,488 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:10:51,730 > ++++++++++++++유비쿼스홀딩스++++++++++++++++++++921/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:51,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:52,094 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:10:52,354 > ++++++++++++++유신++++++++++++++++++++922/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:52,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:52,701 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:10:52,958 > ++++++++++++++유안타제5호스팩++++++++++++++++++++923/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:52,958 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:53,308 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:10:53,498 > ++++++++++++++유안타제7호스팩++++++++++++++++++++924/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:53,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:53,916 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:10:54,073 > ++++++++++++++유진스팩5호++++++++++++++++++++925/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:54,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:54,524 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:10:54,717 > ++++++++++++++유테크++++++++++++++++++++926/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:54,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:55,130 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:10:55,375 > ++++++++++++++유티아이++++++++++++++++++++927/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:55,376 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:55,738 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:10:55,983 > ++++++++++++++이스트소프트++++++++++++++++++++928/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:55,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:56,344 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:10:56,601 > ++++++++++++++이스트아시아홀딩스++++++++++++++++++++929/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:56,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:56,951 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:10:57,175 > ++++++++++++++이엠네트웍스++++++++++++++++++++930/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:57,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:57,558 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:10:57,823 > ++++++++++++++이엠넷++++++++++++++++++++931/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:57,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:58,166 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:10:58,465 > ++++++++++++++이지바이오++++++++++++++++++++932/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:58,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:58,774 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:10:58,984 > ++++++++++++++인베니아++++++++++++++++++++933/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:58,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:59,383 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:10:59,633 > ++++++++++++++인텍플러스++++++++++++++++++++934/2895
[DEBUG|open_api.py:656] 2021-02-08 16:10:59,633 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:10:59,990 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:11:00,232 > ++++++++++++++자비스++++++++++++++++++++935/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:00,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:00,597 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:11:00,852 > ++++++++++++++자이글++++++++++++++++++++936/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:00,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:01,206 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:11:01,445 > ++++++++++++++장원테크++++++++++++++++++++937/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:01,446 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:01,813 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:11:02,052 > ++++++++++++++정상제이엘에스++++++++++++++++++++938/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:02,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:02,421 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:11:02,673 > ++++++++++++++제넨바이오++++++++++++++++++++939/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:02,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:03,030 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:11:03,289 > ++++++++++++++제우스++++++++++++++++++++940/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:03,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:03,637 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:11:03,916 > ++++++++++++++제이엠티++++++++++++++++++++941/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:03,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:04,243 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:11:04,487 > ++++++++++++++제일제강++++++++++++++++++++942/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:04,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:04,851 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:11:05,095 > ++++++++++++++제주반도체++++++++++++++++++++943/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:05,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:05,458 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:11:05,708 > ++++++++++++++젬백스++++++++++++++++++++944/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:05,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:06,066 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:11:06,306 > ++++++++++++++조아제약++++++++++++++++++++945/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:06,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:06,673 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:11:06,935 > ++++++++++++++주성엔지니어링++++++++++++++++++++946/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:06,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:07,281 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:11:07,546 > ++++++++++++++지엔씨에너지++++++++++++++++++++947/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:07,547 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:07,889 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:11:08,130 > ++++++++++++++지엔코++++++++++++++++++++948/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:08,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:08,495 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:11:08,753 > ++++++++++++++캐스텍코리아++++++++++++++++++++949/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:08,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:09,104 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:11:09,352 > ++++++++++++++케이비제20호스팩++++++++++++++++++++950/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:09,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:09,710 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:11:09,901 > ++++++++++++++케이피엠테크++++++++++++++++++++951/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:09,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:10,318 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:11:10,563 > ++++++++++++++케이피티유++++++++++++++++++++952/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:10,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:10,924 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:11:11,171 > ++++++++++++++켄코아에어로스페이스++++++++++++++++++++953/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:11,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:11,531 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:11:11,753 > ++++++++++++++코렌++++++++++++++++++++954/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:11,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:12,138 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:11:12,369 > ++++++++++++++코프라++++++++++++++++++++955/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:12,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:12,746 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:11:13,001 > ++++++++++++++크로바하이텍++++++++++++++++++++956/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:13,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:13,354 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:11:13,629 > ++++++++++++++클리노믹스++++++++++++++++++++957/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:13,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:13,961 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:11:14,113 > ++++++++++++++키네마스터++++++++++++++++++++958/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:14,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:14,568 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:11:14,811 > ++++++++++++++토탈소프트++++++++++++++++++++959/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:14,811 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:15,175 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:11:15,422 > ++++++++++++++트루윈++++++++++++++++++++960/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:15,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:15,783 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:11:16,030 > ++++++++++++++특수건설++++++++++++++++++++961/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:16,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:16,390 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:11:16,663 > ++++++++++++++티앤알바이오팹++++++++++++++++++++962/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:16,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:16,998 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:11:17,232 > ++++++++++++++티에스이++++++++++++++++++++963/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:17,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:17,606 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:11:17,883 > ++++++++++++++파라텍++++++++++++++++++++964/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:17,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:18,213 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:11:18,470 > ++++++++++++++파세코++++++++++++++++++++965/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:18,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:18,822 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:11:19,065 > ++++++++++++++파커스++++++++++++++++++++966/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:19,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:19,428 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:11:19,672 > ++++++++++++++패션플랫폼++++++++++++++++++++967/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:19,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:20,035 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:11:20,265 > ++++++++++++++푸드웰++++++++++++++++++++968/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:20,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:20,643 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:11:20,927 > ++++++++++++++프로스테믹스++++++++++++++++++++969/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:20,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:21,251 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:11:21,492 > ++++++++++++++프리시젼바이오++++++++++++++++++++970/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:21,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:21,858 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:11:22,008 > ++++++++++++++피델릭스++++++++++++++++++++971/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:22,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:22,466 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:11:22,725 > ++++++++++++++피에스엠씨++++++++++++++++++++972/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:22,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:23,072 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:11:23,320 > ++++++++++++++하나금융15호스팩++++++++++++++++++++973/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:23,320 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:23,679 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:11:23,904 > ++++++++++++++하나기술++++++++++++++++++++974/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:23,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:24,287 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:11:24,452 > ++++++++++++++하이즈항공++++++++++++++++++++975/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:24,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:24,902 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:11:25,163 > ++++++++++++++한국맥널티++++++++++++++++++++976/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:25,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:25,509 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:11:25,749 > ++++++++++++++한국코퍼레이션++++++++++++++++++++977/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:25,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:26,117 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:11:26,367 > ++++++++++++++한양디지텍++++++++++++++++++++978/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:26,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:26,725 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:11:26,984 > ++++++++++++++한일진공++++++++++++++++++++979/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:26,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:27,332 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:11:27,579 > ++++++++++++++한일화학++++++++++++++++++++980/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:27,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:27,940 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:11:28,192 > ++++++++++++++해성산업++++++++++++++++++++981/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:28,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:28,550 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:11:28,822 > ++++++++++++++현대바이오++++++++++++++++++++982/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:28,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:29,158 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:11:29,433 > ++++++++++++++화성밸브++++++++++++++++++++983/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:29,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:29,766 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:11:30,051 > ++++++++++++++휴맥스++++++++++++++++++++984/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:30,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:30,373 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:11:30,617 > ++++++++++++++APS홀딩스++++++++++++++++++++985/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:30,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:30,980 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:11:31,239 > ++++++++++++++CJ ENM++++++++++++++++++++986/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:31,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:31,587 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:11:31,856 > ++++++++++++++CMG제약++++++++++++++++++++987/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:31,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:32,196 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:11:32,483 > ++++++++++++++CS++++++++++++++++++++988/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:32,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:32,805 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:11:33,065 > ++++++++++++++CSA 코스믹++++++++++++++++++++989/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:33,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:33,411 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:11:33,682 > ++++++++++++++DB금융스팩8호++++++++++++++++++++990/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:33,682 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:34,019 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:11:34,185 > ++++++++++++++EG++++++++++++++++++++991/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:34,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:34,627 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:11:34,885 > ++++++++++++++HRS++++++++++++++++++++992/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:34,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:35,235 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:11:35,504 > ++++++++++++++NICE평가정보++++++++++++++++++++993/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:35,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:35,843 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:11:36,099 > ++++++++++++++PN풍년++++++++++++++++++++994/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:36,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:36,451 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:11:36,720 > ++++++++++++++SCI평가정보++++++++++++++++++++995/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:36,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:37,059 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:11:37,312 > ++++++++++++++SM C&C++++++++++++++++++++996/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:37,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:37,667 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:11:37,934 > ++++++++++++++TS트릴리온++++++++++++++++++++997/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:37,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:38,276 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:11:38,482 > ++++++++++++++UCI++++++++++++++++++++998/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:38,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:38,883 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:11:39,125 > ++++++++++++++감마누++++++++++++++++++++999/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:39,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:39,491 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:11:39,731 > ++++++++++++++강스템바이오텍++++++++++++++++++++1000/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:39,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:40,100 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:11:40,340 > ++++++++++++++게임빌++++++++++++++++++++1001/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:40,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:40,706 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:11:40,948 > ++++++++++++++경남바이오파마++++++++++++++++++++1002/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:40,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:41,314 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:11:41,558 > ++++++++++++++경남제약헬스케어++++++++++++++++++++1003/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:41,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:41,921 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:11:42,158 > ++++++++++++++고영++++++++++++++++++++1004/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:42,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:42,529 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:11:42,800 > ++++++++++++++광림++++++++++++++++++++1005/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:42,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:43,137 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:11:43,397 > ++++++++++++++국영지앤엠++++++++++++++++++++1006/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:43,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:43,744 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:11:44,023 > ++++++++++++++나노엔텍++++++++++++++++++++1007/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:44,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:44,352 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:11:44,620 > ++++++++++++++나이벡++++++++++++++++++++1008/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:44,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:44,960 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:11:45,210 > ++++++++++++++남화토건++++++++++++++++++++1009/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:45,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:45,568 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:11:45,805 > ++++++++++++++네오팜++++++++++++++++++++1010/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:45,806 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:46,176 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:11:46,415 > ++++++++++++++넥스턴++++++++++++++++++++1011/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:46,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:46,783 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:11:47,042 > ++++++++++++++넥스틴++++++++++++++++++++1012/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:47,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:47,391 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:11:47,576 > ++++++++++++++넵튠++++++++++++++++++++1013/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:47,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:48,000 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:11:48,237 > ++++++++++++++녹원씨엔아이++++++++++++++++++++1014/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:48,238 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:48,608 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:11:48,843 > ++++++++++++++누리텔레콤++++++++++++++++++++1015/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:48,843 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:49,215 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:11:49,479 > ++++++++++++++뉴파워프라즈마++++++++++++++++++++1016/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:49,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:49,822 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:11:50,069 > ++++++++++++++대성파인텍++++++++++++++++++++1017/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:50,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:50,429 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:11:50,679 > ++++++++++++++대아티아이++++++++++++++++++++1018/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:50,680 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:51,037 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:11:51,308 > ++++++++++++++대주전자재료++++++++++++++++++++1019/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:51,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:51,645 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:11:51,908 > ++++++++++++++대창솔루션++++++++++++++++++++1020/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:51,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:52,254 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:11:52,498 > ++++++++++++++덕산네오룩스++++++++++++++++++++1021/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:52,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:52,860 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:11:53,104 > ++++++++++++++동국S&C++++++++++++++++++++1022/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:53,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:53,467 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:11:53,707 > ++++++++++++++동아엘텍++++++++++++++++++++1023/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:53,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:54,076 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:11:54,332 > ++++++++++++++듀오백++++++++++++++++++++1024/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:54,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:54,684 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:11:54,945 > ++++++++++++++디알텍++++++++++++++++++++1025/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:54,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:55,291 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:11:55,533 > ++++++++++++++디엠티++++++++++++++++++++1026/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:55,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:55,900 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:11:56,138 > ++++++++++++++디오++++++++++++++++++++1027/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:56,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:56,508 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:11:56,756 > ++++++++++++++딜리++++++++++++++++++++1028/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:56,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:57,115 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:11:57,355 > ++++++++++++++럭슬++++++++++++++++++++1029/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:57,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:57,723 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:11:57,989 > ++++++++++++++레드캡투어++++++++++++++++++++1030/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:57,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:58,331 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:11:58,586 > ++++++++++++++레이언스++++++++++++++++++++1031/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:58,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:58,938 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:11:59,184 > ++++++++++++++로보로보++++++++++++++++++++1032/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:59,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:11:59,545 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:11:59,807 > ++++++++++++++매일홀딩스++++++++++++++++++++1033/2895
[DEBUG|open_api.py:656] 2021-02-08 16:11:59,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:12:00,153 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:12:00,423 > ++++++++++++++머큐리++++++++++++++++++++1034/2895
[DEBUG|open_api.py:656] 2021-02-08 16:12:00,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:12:00,762 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:12:01,011 > ++++++++++++++메디앙스++++++++++++++++++++1035/2895
[DEBUG|open_api.py:656] 2021-02-08 16:12:01,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:12:01,370 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:12:01,748 > ++++++++++++++메타바이오메드++++++++++++++++++++1036/2895
[DEBUG|open_api.py:656] 2021-02-08 16:12:01,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:12:01,978 > 158
[DEBUG|open_api.py:303] 2021-02-08 16:15:52,254 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:15:52,255 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:15:52,255 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:15:52,256 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:15:52,256 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:15:52,256 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:15:52,256 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:15:52,271 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:15:52,304 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:15:52,305 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:15:52,305 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:15:52,322 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:15:52,477 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:15:55,234 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:15:55,235 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:15:55,288 > ++++++++++++++메타바이오메드++++++++++++++++++++1036/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:55,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:55,291 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:15:56,494 > ++++++++++++++멕아이씨에스++++++++++++++++++++1037/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:56,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:56,496 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:15:56,732 > ++++++++++++++명성티엔에스++++++++++++++++++++1038/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:56,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:57,104 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:15:57,323 > ++++++++++++++무림SP++++++++++++++++++++1039/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:57,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:57,711 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:15:58,050 > ++++++++++++++미래에셋대우스팩3호++++++++++++++++++++1040/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:58,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:58,319 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:15:58,526 > ++++++++++++++미래에셋벤처투자++++++++++++++++++++1041/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:58,526 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:58,928 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:15:59,145 > ++++++++++++++박셀바이오++++++++++++++++++++1042/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:59,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:15:59,536 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:15:59,720 > ++++++++++++++부스타++++++++++++++++++++1043/2895
[DEBUG|open_api.py:656] 2021-02-08 16:15:59,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:00,144 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:16:00,453 > ++++++++++++++비즈니스온++++++++++++++++++++1044/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:00,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:00,770 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:16:01,148 > ++++++++++++++비트컴퓨터++++++++++++++++++++1045/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:01,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:01,379 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:16:01,660 > ++++++++++++++사람인에이치알++++++++++++++++++++1046/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:01,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:01,987 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:16:02,256 > ++++++++++++++삼륭물산++++++++++++++++++++1047/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:02,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:02,601 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:16:02,888 > ++++++++++++++삼양옵틱스++++++++++++++++++++1048/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:02,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:03,217 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:16:03,463 > ++++++++++++++삼일++++++++++++++++++++1049/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:03,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:03,824 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:16:04,118 > ++++++++++++++삼일기업공사++++++++++++++++++++1050/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:04,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:04,432 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:16:04,698 > ++++++++++++++삼지전자++++++++++++++++++++1051/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:04,698 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:05,041 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:16:05,306 > ++++++++++++++삼진++++++++++++++++++++1052/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:05,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:05,649 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:16:05,943 > ++++++++++++++상보++++++++++++++++++++1053/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:05,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:06,256 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:16:06,499 > ++++++++++++++상신이디피++++++++++++++++++++1054/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:06,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:06,863 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:16:07,220 > ++++++++++++++서린바이오++++++++++++++++++++1055/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:07,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:07,471 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:16:07,735 > ++++++++++++++서호전기++++++++++++++++++++1056/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:07,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:08,079 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:16:08,343 > ++++++++++++++세경하이테크++++++++++++++++++++1057/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:08,343 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:08,687 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:16:08,899 > ++++++++++++++세명전기++++++++++++++++++++1058/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:08,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:09,296 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:16:09,562 > ++++++++++++++셀바스AI++++++++++++++++++++1059/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:09,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:09,905 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:16:10,143 > ++++++++++++++손오공++++++++++++++++++++1060/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:10,144 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:10,513 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:16:10,783 > ++++++++++++++솔루에타++++++++++++++++++++1061/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:10,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:11,120 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:16:11,379 > ++++++++++++++수성++++++++++++++++++++1062/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:11,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:11,726 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:16:12,017 > ++++++++++++++슈프리마++++++++++++++++++++1063/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:12,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:12,334 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:16:12,561 > ++++++++++++++스튜디오드래곤++++++++++++++++++++1064/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:12,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:12,942 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:16:13,187 > ++++++++++++++신라젠++++++++++++++++++++1065/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:13,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:13,550 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:16:13,794 > ++++++++++++++신영스팩5호++++++++++++++++++++1066/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:13,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:14,156 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:16:14,357 > ++++++++++++++신한제6호스팩++++++++++++++++++++1067/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:14,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:14,764 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:16:14,963 > ++++++++++++++쎄트렉아이++++++++++++++++++++1068/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:14,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:15,372 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:16:15,613 > ++++++++++++++씨앤투스성진++++++++++++++++++++1069/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:15,614 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:15,979 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:16:16,129 > ++++++++++++++아가방컴퍼니++++++++++++++++++++1070/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:16,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:16,587 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:16:16,875 > ++++++++++++++아모텍++++++++++++++++++++1071/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:16,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:17,193 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:16:17,540 > ++++++++++++++아미코젠++++++++++++++++++++1072/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:17,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:17,803 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:16:18,146 > ++++++++++++++아이에이++++++++++++++++++++1073/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:18,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:18,418 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:16:18,667 > ++++++++++++++아이에이네트웍스++++++++++++++++++++1074/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:18,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:19,025 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:16:19,369 > ++++++++++++++아이퀘스트++++++++++++++++++++1075/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:19,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:19,645 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:16:19,837 > ++++++++++++++액트로++++++++++++++++++++1076/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:19,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:20,252 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:16:20,484 > ++++++++++++++앱코++++++++++++++++++++1077/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:20,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:20,860 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:16:21,020 > ++++++++++++++에스에스알++++++++++++++++++++1078/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:21,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:21,467 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:16:21,715 > ++++++++++++++에스제이그룹++++++++++++++++++++1079/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:21,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:22,077 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:16:22,333 > ++++++++++++++에스제이케이++++++++++++++++++++1080/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:22,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:22,686 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:16:22,925 > ++++++++++++++에스티팜++++++++++++++++++++1081/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:22,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:23,293 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:16:23,545 > ++++++++++++++에이씨티++++++++++++++++++++1082/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:23,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:23,902 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:16:24,266 > ++++++++++++++에프알텍++++++++++++++++++++1083/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:24,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:24,511 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:16:24,754 > ++++++++++++++에프에스티++++++++++++++++++++1084/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:24,755 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:25,118 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:16:25,380 > ++++++++++++++엠에프엠코리아++++++++++++++++++++1085/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:25,380 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:25,726 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:16:25,985 > ++++++++++++++영신금속++++++++++++++++++++1086/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:25,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:26,335 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:16:26,599 > ++++++++++++++예림당++++++++++++++++++++1087/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:26,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:26,943 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:16:27,190 > ++++++++++++++오성첨단소재++++++++++++++++++++1088/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:27,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:27,551 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:16:27,850 > ++++++++++++++와이더플래닛++++++++++++++++++++1089/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:27,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:28,159 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:16:28,330 > ++++++++++++++우리손에프앤지++++++++++++++++++++1090/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:28,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:28,767 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:16:29,027 > ++++++++++++++우림기계++++++++++++++++++++1091/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:29,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:29,376 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:16:29,629 > ++++++++++++++우수AMS++++++++++++++++++++1092/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:29,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:29,984 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:16:30,326 > ++++++++++++++원일특강++++++++++++++++++++1093/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:30,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:30,636 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:16:30,908 > ++++++++++++++윈하이텍++++++++++++++++++++1094/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:30,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:31,244 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:16:31,487 > ++++++++++++++윌링스++++++++++++++++++++1095/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:31,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:31,853 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:16:32,075 > ++++++++++++++유니테스트++++++++++++++++++++1096/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:32,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:32,461 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:16:32,749 > ++++++++++++++유바이오로직스++++++++++++++++++++1097/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:32,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:33,071 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:16:33,311 > ++++++++++++++유안타제6호스팩++++++++++++++++++++1098/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:33,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:33,680 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:16:33,889 > ++++++++++++++육일씨엔에쓰++++++++++++++++++++1099/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:33,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:34,288 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:16:34,584 > ++++++++++++++이글루시큐리티++++++++++++++++++++1100/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:34,586 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:34,899 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:16:35,164 > ++++++++++++++이글벳++++++++++++++++++++1101/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:35,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:35,508 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:16:35,750 > ++++++++++++++이녹스++++++++++++++++++++1102/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:35,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:36,116 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:16:36,370 > ++++++++++++++이랜시스++++++++++++++++++++1103/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:36,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:36,725 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:16:37,028 > ++++++++++++++이베스트스팩5호++++++++++++++++++++1104/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:37,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:37,333 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:16:37,529 > ++++++++++++++이에스에이++++++++++++++++++++1105/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:37,530 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:37,941 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:16:38,231 > ++++++++++++++이엠앤아이++++++++++++++++++++1106/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:38,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:38,552 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:16:38,887 > ++++++++++++++이엠텍++++++++++++++++++++1107/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:38,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:39,164 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:16:39,453 > ++++++++++++++이즈미디어++++++++++++++++++++1108/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:39,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:39,774 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:16:40,047 > ++++++++++++++이지케어텍++++++++++++++++++++1109/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:40,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:40,382 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:16:40,619 > ++++++++++++++인바디++++++++++++++++++++1110/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:40,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:40,991 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:16:41,254 > ++++++++++++++인선이엔티++++++++++++++++++++1111/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:41,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:41,599 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:16:41,897 > ++++++++++++++인포마크++++++++++++++++++++1112/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:41,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:42,208 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:16:42,455 > ++++++++++++++인포바인++++++++++++++++++++1113/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:42,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:42,816 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:16:43,113 > ++++++++++++++인포뱅크++++++++++++++++++++1114/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:43,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:43,424 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:16:43,697 > ++++++++++++++잉크테크++++++++++++++++++++1115/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:43,697 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:44,033 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:16:44,274 > ++++++++++++++전진바이오팜++++++++++++++++++++1116/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:44,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:44,641 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:16:44,905 > ++++++++++++++정다운++++++++++++++++++++1117/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:44,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:45,248 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:16:45,517 > ++++++++++++++제놀루션++++++++++++++++++++1118/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:45,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:45,857 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:16:46,133 > ++++++++++++++제이스텍++++++++++++++++++++1119/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:46,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:46,465 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:16:46,716 > ++++++++++++++제이엘케이++++++++++++++++++++1120/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:46,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:47,073 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:16:47,258 > ++++++++++++++제일바이오++++++++++++++++++++1121/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:47,258 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:47,680 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:16:47,936 > ++++++++++++++젬백스지오++++++++++++++++++++1122/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:47,937 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:48,287 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:16:48,557 > ++++++++++++++조이맥스++++++++++++++++++++1123/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:48,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:48,895 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:16:49,143 > ++++++++++++++조이시티++++++++++++++++++++1124/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:49,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:49,503 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:16:49,761 > ++++++++++++++지니뮤직++++++++++++++++++++1125/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:49,762 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:50,109 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:16:50,369 > ++++++++++++++지니언스++++++++++++++++++++1126/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:50,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:50,717 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:16:50,952 > ++++++++++++++지란지교시큐리티++++++++++++++++++++1127/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:50,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:51,325 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:16:51,573 > ++++++++++++++지스마트글로벌++++++++++++++++++++1128/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:51,574 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:51,932 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:16:52,175 > ++++++++++++++지티지웰니스++++++++++++++++++++1129/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:52,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:52,539 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:16:52,773 > ++++++++++++++참좋은여행++++++++++++++++++++1130/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:52,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:53,147 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:16:53,388 > ++++++++++++++천보++++++++++++++++++++1131/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:53,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:53,754 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:16:53,984 > ++++++++++++++초록뱀++++++++++++++++++++1132/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:53,985 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:54,360 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:16:54,624 > ++++++++++++++컴투스++++++++++++++++++++1133/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:54,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:54,967 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:16:55,210 > ++++++++++++++케이비제19호스팩++++++++++++++++++++1134/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:55,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:55,574 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:16:55,791 > ++++++++++++++케이씨피드++++++++++++++++++++1135/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:55,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:56,182 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:16:56,434 > ++++++++++++++케이엔더블유++++++++++++++++++++1136/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:56,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:56,790 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:16:57,033 > ++++++++++++++코데즈컴바인++++++++++++++++++++1137/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:57,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:57,397 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:16:57,645 > ++++++++++++++코리아센터++++++++++++++++++++1138/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:57,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:58,003 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:16:58,196 > ++++++++++++++코메론++++++++++++++++++++1139/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:58,196 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:58,610 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:16:58,895 > ++++++++++++++코미팜++++++++++++++++++++1140/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:58,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:59,218 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:16:59,458 > ++++++++++++++코아시아++++++++++++++++++++1141/2895
[DEBUG|open_api.py:656] 2021-02-08 16:16:59,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:16:59,824 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:17:00,090 > ++++++++++++++코오롱생명과학++++++++++++++++++++1142/2895
[DEBUG|open_api.py:656] 2021-02-08 16:17:00,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:17:00,433 > 107
[DEBUG|open_api.py:303] 2021-02-08 16:21:27,331 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:21:27,332 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:21:27,332 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:21:27,338 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:21:27,338 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:21:27,339 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:21:27,339 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:21:27,353 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:21:27,386 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:21:27,386 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:21:27,387 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:21:27,403 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:21:27,433 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:21:30,018 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:21:30,019 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:21:30,057 > ++++++++++++++코오롱생명과학++++++++++++++++++++1142/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:30,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:30,058 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:21:31,228 > ++++++++++++++코웰패션++++++++++++++++++++1143/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:31,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:31,230 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:21:31,490 > ++++++++++++++코위버++++++++++++++++++++1144/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:31,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:31,838 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:21:32,106 > ++++++++++++++큐브엔터++++++++++++++++++++1145/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:32,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:32,446 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:21:32,676 > ++++++++++++++크리스탈지노믹스++++++++++++++++++++1146/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:32,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:33,053 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:21:33,296 > ++++++++++++++클리오++++++++++++++++++++1147/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:33,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:33,660 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:21:33,903 > ++++++++++++++키움제5호스팩++++++++++++++++++++1148/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:33,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:34,267 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:21:34,484 > ++++++++++++++테고사이언스++++++++++++++++++++1149/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:34,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:34,876 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:21:35,114 > ++++++++++++++테라사이언스++++++++++++++++++++1150/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:35,115 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:35,484 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:21:35,731 > ++++++++++++++테라젠이텍스++++++++++++++++++++1151/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:35,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:36,090 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:21:36,329 > ++++++++++++++테스나++++++++++++++++++++1152/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:36,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:36,698 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:21:36,972 > ++++++++++++++티에스아이++++++++++++++++++++1153/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:36,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:37,305 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:21:37,531 > ++++++++++++++파루++++++++++++++++++++1154/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:37,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:37,913 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:21:38,153 > ++++++++++++++파멥신++++++++++++++++++++1155/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:38,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:38,520 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:21:38,754 > ++++++++++++++파수++++++++++++++++++++1156/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:38,755 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:39,127 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:21:39,369 > ++++++++++++++파인디지털++++++++++++++++++++1157/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:39,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:39,735 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:21:39,987 > ++++++++++++++팬엔터테인먼트++++++++++++++++++++1158/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:39,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:40,343 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:21:40,585 > ++++++++++++++펌텍코리아++++++++++++++++++++1159/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:40,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:40,949 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:21:41,180 > ++++++++++++++풍강++++++++++++++++++++1160/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:41,180 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:41,557 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:21:41,802 > ++++++++++++++플레이디++++++++++++++++++++1161/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:41,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:42,164 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:21:42,343 > ++++++++++++++피앤이솔루션++++++++++++++++++++1162/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:42,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:42,771 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:21:43,016 > ++++++++++++++피에스텍++++++++++++++++++++1163/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:43,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:43,379 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:21:43,630 > ++++++++++++++피엔티++++++++++++++++++++1164/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:43,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:43,988 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:21:44,233 > ++++++++++++++핌스++++++++++++++++++++1165/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:44,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:44,594 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:21:44,752 > ++++++++++++++핑거++++++++++++++++++++1166/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:44,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:45,203 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:21:45,378 > ++++++++++++++하나마이크론++++++++++++++++++++1167/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:45,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:45,811 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:21:46,062 > ++++++++++++++한국경제TV++++++++++++++++++++1168/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:46,063 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:46,418 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:21:46,710 > ++++++++++++++한국기업평가++++++++++++++++++++1169/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:46,711 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:47,026 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:21:47,301 > ++++++++++++++한국바이오젠++++++++++++++++++++1170/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:47,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:47,633 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:21:47,839 > ++++++++++++++한국비엔씨++++++++++++++++++++1171/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:47,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:48,240 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:21:48,473 > ++++++++++++++한국아트라스비엑스++++++++++++++++++++1172/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:48,473 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:48,848 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:21:49,103 > ++++++++++++++한국알콜++++++++++++++++++++1173/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:49,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:49,456 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:21:49,732 > ++++++++++++++한국전자금융++++++++++++++++++++1174/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:49,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:50,064 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:21:50,314 > ++++++++++++++한국정보인증++++++++++++++++++++1175/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:50,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:50,671 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:21:50,919 > ++++++++++++++한국정보통신++++++++++++++++++++1176/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:50,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:51,278 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:21:51,532 > ++++++++++++++한국팩키지++++++++++++++++++++1177/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:51,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:51,885 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:21:52,147 > ++++++++++++++한글과컴퓨터++++++++++++++++++++1178/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:52,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:52,493 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:21:52,754 > ++++++++++++++한일단조++++++++++++++++++++1179/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:52,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:53,101 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:21:53,359 > ++++++++++++++한컴위드++++++++++++++++++++1180/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:53,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:53,709 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:21:53,953 > ++++++++++++++한탑++++++++++++++++++++1181/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:53,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:54,317 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:21:54,572 > ++++++++++++++현진소재++++++++++++++++++++1182/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:54,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:54,925 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:21:55,166 > ++++++++++++++형지I&C++++++++++++++++++++1183/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:55,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:55,533 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:21:55,769 > ++++++++++++++휴네시온++++++++++++++++++++1184/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:55,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:56,141 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:21:56,370 > ++++++++++++++휴맥스홀딩스++++++++++++++++++++1185/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:56,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:56,749 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:21:57,003 > ++++++++++++++흥국에프엔비++++++++++++++++++++1186/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:57,003 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:57,356 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:21:57,591 > ++++++++++++++EMW++++++++++++++++++++1187/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:57,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:57,964 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:21:58,211 > ++++++++++++++JTC++++++++++++++++++++1188/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:58,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:58,572 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:21:58,811 > ++++++++++++++KCC건설++++++++++++++++++++1189/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:58,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:59,181 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:21:59,422 > ++++++++++++++KCI++++++++++++++++++++1190/2895
[DEBUG|open_api.py:656] 2021-02-08 16:21:59,422 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:21:59,788 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:22:00,039 > ++++++++++++++KD++++++++++++++++++++1191/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:00,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:00,395 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:22:00,636 > ++++++++++++++KG ETS++++++++++++++++++++1192/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:00,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:01,002 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:22:01,250 > ++++++++++++++KG모빌리언스++++++++++++++++++++1193/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:01,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:01,609 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:22:01,870 > ++++++++++++++NEW++++++++++++++++++++1194/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:01,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:02,218 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:22:02,462 > ++++++++++++++SBI핀테크솔루션즈++++++++++++++++++++1195/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:02,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:02,826 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:22:03,110 > ++++++++++++++SGA솔루션즈++++++++++++++++++++1196/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:03,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:03,434 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:22:03,688 > ++++++++++++++SM Life Design++++++++++++++++++++1197/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:03,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:04,042 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:22:04,286 > ++++++++++++++W홀딩컴퍼니++++++++++++++++++++1198/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:04,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:04,650 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:22:04,904 > ++++++++++++++교보8호스팩++++++++++++++++++++1199/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:04,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:05,258 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:22:05,485 > ++++++++++++++교보9호스팩++++++++++++++++++++1200/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:05,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:05,866 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:22:06,058 > ++++++++++++++국전약품++++++++++++++++++++1201/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:06,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:06,474 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:22:06,699 > ++++++++++++++나노신소재++++++++++++++++++++1202/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:06,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:07,082 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:22:07,323 > ++++++++++++++나인테크++++++++++++++++++++1203/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:07,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:07,689 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:22:07,927 > ++++++++++++++네패스아크++++++++++++++++++++1204/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:07,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:08,295 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:22:08,455 > ++++++++++++++넥스트아이++++++++++++++++++++1205/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:08,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:08,903 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:22:09,142 > ++++++++++++++넥슨지티++++++++++++++++++++1206/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:09,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:09,511 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:22:09,754 > ++++++++++++++노터스++++++++++++++++++++1207/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:09,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:10,118 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:22:10,310 > ++++++++++++++누리플랜++++++++++++++++++++1208/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:10,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:10,725 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:22:10,972 > ++++++++++++++뉴로스++++++++++++++++++++1209/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:10,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:11,333 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:22:11,597 > ++++++++++++++뉴프라이드++++++++++++++++++++1210/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:11,597 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:11,942 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:22:12,188 > ++++++++++++++다산네트웍스++++++++++++++++++++1211/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:12,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:12,549 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:22:12,810 > ++++++++++++++다원시스++++++++++++++++++++1212/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:12,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:13,156 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:22:13,400 > ++++++++++++++대명소노시즌++++++++++++++++++++1213/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:13,400 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:13,763 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:22:14,040 > ++++++++++++++대성미생물++++++++++++++++++++1214/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:14,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:14,370 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:22:14,615 > ++++++++++++++대원산업++++++++++++++++++++1215/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:14,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:14,977 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:22:15,240 > ++++++++++++++더블유에스아이++++++++++++++++++++1216/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:15,241 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:15,583 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:22:15,812 > ++++++++++++++덕신하우징++++++++++++++++++++1217/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:15,813 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:16,191 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:22:16,423 > ++++++++++++++덴티스++++++++++++++++++++1218/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:16,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:16,799 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:22:17,041 > ++++++++++++++동신건설++++++++++++++++++++1219/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:17,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:17,407 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:22:17,709 > ++++++++++++++동일기연++++++++++++++++++++1220/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:17,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:18,013 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:22:18,266 > ++++++++++++++드림어스컴퍼니++++++++++++++++++++1221/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:18,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:18,621 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:22:18,868 > ++++++++++++++디지아이++++++++++++++++++++1222/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:18,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:19,228 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:22:19,479 > ++++++++++++++디지털대성++++++++++++++++++++1223/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:19,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:19,836 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:22:20,094 > ++++++++++++++디티앤씨++++++++++++++++++++1224/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:20,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:20,444 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:22:20,701 > ++++++++++++++라이브플렉스++++++++++++++++++++1225/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:20,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:21,052 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:22:21,297 > ++++++++++++++램테크놀러지++++++++++++++++++++1226/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:21,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:21,658 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:22:21,901 > ++++++++++++++레고켐바이오++++++++++++++++++++1227/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:21,902 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:22,267 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:22:22,499 > ++++++++++++++레몬++++++++++++++++++++1228/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:22,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:22,873 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:22:23,050 > ++++++++++++++로보스타++++++++++++++++++++1229/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:23,050 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:23,480 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:22:23,723 > ++++++++++++++리드코프++++++++++++++++++++1230/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:23,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:24,087 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:22:24,353 > ++++++++++++++메디콕스++++++++++++++++++++1231/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:24,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:24,693 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:22:24,957 > ++++++++++++++메디포스트++++++++++++++++++++1232/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:24,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:25,301 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:22:25,536 > ++++++++++++++미래에셋대우스팩4호++++++++++++++++++++1233/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:25,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:25,909 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:22:26,114 > ++++++++++++++미래컴퍼니++++++++++++++++++++1234/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:26,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:26,518 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:22:26,769 > ++++++++++++++바이브컴퍼니++++++++++++++++++++1235/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:26,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:27,126 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:22:27,277 > ++++++++++++++바이오니아++++++++++++++++++++1236/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:27,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:27,735 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:22:27,983 > ++++++++++++++베뉴지++++++++++++++++++++1237/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:27,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:28,341 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:22:28,595 > ++++++++++++++보라티알++++++++++++++++++++1238/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:28,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:28,949 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:22:29,208 > ++++++++++++++부방++++++++++++++++++++1239/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:29,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:29,556 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:22:29,811 > ++++++++++++++브리지텍++++++++++++++++++++1240/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:29,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:30,165 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:22:30,408 > ++++++++++++++삼진엘앤디++++++++++++++++++++1241/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:30,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:30,771 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:22:31,037 > ++++++++++++++삼천리자전거++++++++++++++++++++1242/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:31,038 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:31,379 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:22:31,631 > ++++++++++++++삼현철강++++++++++++++++++++1243/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:31,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:31,987 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:22:32,250 > ++++++++++++++서산++++++++++++++++++++1244/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:32,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:32,594 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:22:32,886 > ++++++++++++++서진오토모티브++++++++++++++++++++1245/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:32,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:33,202 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:22:33,445 > ++++++++++++++성우테크론++++++++++++++++++++1246/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:33,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:33,809 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:22:34,064 > ++++++++++++++성우하이텍++++++++++++++++++++1247/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:34,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:34,418 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:22:34,677 > ++++++++++++++세운메디칼++++++++++++++++++++1248/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:34,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:35,026 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:22:35,277 > ++++++++++++++세종텔레콤++++++++++++++++++++1249/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:35,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:35,635 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:22:35,896 > ++++++++++++++셀리버리++++++++++++++++++++1250/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:35,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:36,244 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:22:36,471 > ++++++++++++++솔고바이오++++++++++++++++++++1251/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:36,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:36,851 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:22:37,092 > ++++++++++++++솔본++++++++++++++++++++1252/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:37,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:37,458 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:22:37,744 > ++++++++++++++수산아이앤티++++++++++++++++++++1253/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:37,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:38,066 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:22:38,303 > ++++++++++++++슈펙스비앤피++++++++++++++++++++1254/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:38,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:38,672 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:22:38,928 > ++++++++++++++슈피겐코리아++++++++++++++++++++1255/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:38,928 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:39,281 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:22:39,522 > ++++++++++++++스카이이앤엠++++++++++++++++++++1256/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:39,523 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:39,889 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:22:40,145 > ++++++++++++++스킨앤스킨++++++++++++++++++++1257/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:40,145 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:40,497 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:22:40,720 > ++++++++++++++시공테크++++++++++++++++++++1258/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:40,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:41,105 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:22:41,352 > ++++++++++++++시그네틱스++++++++++++++++++++1259/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:41,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:41,713 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:22:41,981 > ++++++++++++++시큐브++++++++++++++++++++1260/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:41,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:42,320 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:22:42,566 > ++++++++++++++신도기연++++++++++++++++++++1261/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:42,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:42,927 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:22:43,112 > ++++++++++++++신테카바이오++++++++++++++++++++1262/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:43,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:43,535 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:22:43,717 > ++++++++++++++실리콘웍스++++++++++++++++++++1263/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:43,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:44,143 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:22:44,380 > ++++++++++++++쎄노텍++++++++++++++++++++1264/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:44,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:44,752 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:22:44,986 > ++++++++++++++쎄미시스코++++++++++++++++++++1265/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:44,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:45,360 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:22:45,595 > ++++++++++++++씨엠에스에듀++++++++++++++++++++1266/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:45,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:45,968 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:22:46,220 > ++++++++++++++씨큐브++++++++++++++++++++1267/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:46,220 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:46,575 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:22:46,836 > ++++++++++++++아비코전자++++++++++++++++++++1268/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:46,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:47,184 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:22:47,419 > ++++++++++++++아이디피++++++++++++++++++++1269/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:47,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:47,791 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:22:47,969 > ++++++++++++++아이톡시++++++++++++++++++++1270/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:47,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:48,399 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:22:48,701 > ++++++++++++++아진산업++++++++++++++++++++1271/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:48,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:49,007 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:22:49,250 > ++++++++++++++아프리카TV++++++++++++++++++++1272/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:49,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:49,613 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:22:49,856 > ++++++++++++++알체라++++++++++++++++++++1273/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:49,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:50,220 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:22:50,372 > ++++++++++++++알티캐스트++++++++++++++++++++1274/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:50,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:50,828 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:22:51,072 > ++++++++++++++애니젠++++++++++++++++++++1275/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:51,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:51,435 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:22:51,662 > ++++++++++++++액션스퀘어++++++++++++++++++++1276/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:51,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:52,042 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:22:52,281 > ++++++++++++++앤디포스++++++++++++++++++++1277/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:52,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:52,649 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:22:52,895 > ++++++++++++++앱클론++++++++++++++++++++1278/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:52,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:53,255 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:22:53,482 > ++++++++++++++에스와이++++++++++++++++++++1279/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:53,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:53,863 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:22:54,105 > ++++++++++++++에스트래픽++++++++++++++++++++1280/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:54,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:54,470 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:22:54,719 > ++++++++++++++에스퓨얼셀++++++++++++++++++++1281/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:54,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:55,078 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:22:55,335 > ++++++++++++++에이디칩스++++++++++++++++++++1282/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:55,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:55,685 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:22:55,923 > ++++++++++++++에이비엘바이오++++++++++++++++++++1283/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:55,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:56,293 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:22:56,505 > ++++++++++++++에이스침대++++++++++++++++++++1284/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:56,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:56,901 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:22:57,172 > ++++++++++++++에이아이비트++++++++++++++++++++1285/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:57,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:57,508 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:22:57,770 > ++++++++++++++에이치시티++++++++++++++++++++1286/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:57,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:58,116 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:22:58,359 > ++++++++++++++에이텍티앤++++++++++++++++++++1287/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:58,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:58,722 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:22:58,955 > ++++++++++++++에이팸++++++++++++++++++++1288/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:58,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:59,330 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:22:59,573 > ++++++++++++++엑셈++++++++++++++++++++1289/2895
[DEBUG|open_api.py:656] 2021-02-08 16:22:59,574 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:22:59,937 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:23:00,183 > ++++++++++++++엔브이에이치코리아++++++++++++++++++++1290/2895
[DEBUG|open_api.py:656] 2021-02-08 16:23:00,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:23:00,545 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:23:00,783 > ++++++++++++++엔지켐생명과학++++++++++++++++++++1291/2895
[DEBUG|open_api.py:656] 2021-02-08 16:23:00,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:23:01,151 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:23:01,401 > ++++++++++++++엔케이맥스++++++++++++++++++++1292/2895
[DEBUG|open_api.py:656] 2021-02-08 16:23:01,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:23:01,759 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:23:02,016 > ++++++++++++++엔텔스++++++++++++++++++++1293/2895
[DEBUG|open_api.py:656] 2021-02-08 16:23:02,016 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:23:02,368 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:23:02,642 > ++++++++++++++엘디티++++++++++++++++++++1294/2895
[DEBUG|open_api.py:656] 2021-02-08 16:23:02,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:23:02,976 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:23:03,231 > ++++++++++++++엘컴텍++++++++++++++++++++1295/2895
[DEBUG|open_api.py:656] 2021-02-08 16:23:03,231 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:23:03,583 > 154
[DEBUG|open_api.py:303] 2021-02-08 16:26:56,205 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:26:56,206 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:26:56,206 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:26:56,212 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:26:56,212 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:26:56,212 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:26:56,213 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:26:56,228 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:26:56,261 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:26:56,261 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:26:56,261 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:26:56,276 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:26:56,309 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:26:58,800 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:26:58,802 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:26:58,844 > ++++++++++++++엘컴텍++++++++++++++++++++1295/2895
[DEBUG|open_api.py:656] 2021-02-08 16:26:58,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:26:58,845 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:26:59,952 > ++++++++++++++영림원소프트랩++++++++++++++++++++1296/2895
[DEBUG|open_api.py:656] 2021-02-08 16:26:59,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:26:59,954 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:27:00,123 > ++++++++++++++예스티++++++++++++++++++++1297/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:00,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:00,563 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:27:00,815 > ++++++++++++++오스테오닉++++++++++++++++++++1298/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:00,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:01,171 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:27:01,426 > ++++++++++++++오텍++++++++++++++++++++1299/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:01,426 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:01,778 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:27:02,033 > ++++++++++++++와이즈버즈++++++++++++++++++++1300/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:02,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:02,387 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:27:02,619 > ++++++++++++++원익머트리얼즈++++++++++++++++++++1301/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:02,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:02,994 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:27:03,257 > ++++++++++++++원풍++++++++++++++++++++1302/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:03,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:03,603 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:27:03,875 > ++++++++++++++웹젠++++++++++++++++++++1303/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:03,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:04,210 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:27:04,465 > ++++++++++++++위닉스++++++++++++++++++++1304/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:04,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:04,818 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:27:05,077 > ++++++++++++++위메이드++++++++++++++++++++1305/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:05,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:05,425 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:27:05,695 > ++++++++++++++유비벨록스++++++++++++++++++++1306/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:05,695 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:06,034 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:27:06,281 > ++++++++++++++유비쿼스++++++++++++++++++++1307/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:06,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:06,641 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:27:06,874 > ++++++++++++++유안타제4호스팩++++++++++++++++++++1308/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:06,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:07,249 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:27:07,470 > ++++++++++++++유진테크++++++++++++++++++++1309/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:07,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:07,857 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:27:08,107 > ++++++++++++++이건홀딩스++++++++++++++++++++1310/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:08,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:08,464 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:27:08,716 > ++++++++++++++이노와이어리스++++++++++++++++++++1311/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:08,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:09,072 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:27:09,351 > ++++++++++++++이녹스첨단소재++++++++++++++++++++1312/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:09,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:09,680 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:27:09,923 > ++++++++++++++이랜텍++++++++++++++++++++1313/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:09,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:10,286 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:27:10,524 > ++++++++++++++이미지스++++++++++++++++++++1314/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:10,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:10,894 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:27:11,136 > ++++++++++++++이수앱지스++++++++++++++++++++1315/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:11,137 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:11,502 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:27:11,749 > ++++++++++++++인산가++++++++++++++++++++1316/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:11,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:12,108 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:27:12,364 > ++++++++++++++인성정보++++++++++++++++++++1317/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:12,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:12,716 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:27:12,965 > ++++++++++++++인탑스++++++++++++++++++++1318/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:12,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:13,323 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:27:13,589 > ++++++++++++++인터파크++++++++++++++++++++1319/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:13,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:13,931 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:27:14,227 > ++++++++++++++인텔리안테크++++++++++++++++++++1320/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:14,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:14,540 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:27:14,792 > ++++++++++++++자안++++++++++++++++++++1321/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:14,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:15,147 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:27:15,389 > ++++++++++++++재영솔루텍++++++++++++++++++++1322/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:15,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:15,754 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:27:16,058 > ++++++++++++++제낙스++++++++++++++++++++1323/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:16,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:16,362 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:27:16,606 > ++++++++++++++제이앤티씨++++++++++++++++++++1324/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:16,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:16,969 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:27:17,171 > ++++++++++++++제이티++++++++++++++++++++1325/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:17,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:17,577 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:27:17,828 > ++++++++++++++지더블유바이텍++++++++++++++++++++1326/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:17,829 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:18,185 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:27:18,429 > ++++++++++++++진바이오텍++++++++++++++++++++1327/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:18,429 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:18,792 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:27:19,041 > ++++++++++++++진성티이씨++++++++++++++++++++1328/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:19,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:19,400 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:27:19,640 > ++++++++++++++카이노스메드++++++++++++++++++++1329/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:19,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:20,006 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:27:20,253 > ++++++++++++++캐리소프트++++++++++++++++++++1330/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:20,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:20,613 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:27:20,813 > ++++++++++++++캔서롭++++++++++++++++++++1331/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:20,814 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:21,221 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:27:21,471 > ++++++++++++++캠시스++++++++++++++++++++1332/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:21,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:21,828 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:27:22,083 > ++++++++++++++케이비제18호스팩++++++++++++++++++++1333/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:22,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:22,436 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:27:22,641 > ++++++++++++++케이엠더블유++++++++++++++++++++1334/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:22,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:23,043 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:27:23,304 > ++++++++++++++케이피에프++++++++++++++++++++1335/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:23,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:23,650 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:27:23,894 > ++++++++++++++코닉글로리++++++++++++++++++++1336/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:23,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:24,257 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:27:24,503 > ++++++++++++++코드네이처++++++++++++++++++++1337/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:24,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:24,864 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:27:25,129 > ++++++++++++++코디엠++++++++++++++++++++1338/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:25,129 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:25,472 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:27:25,702 > ++++++++++++++코리아에셋투자증권++++++++++++++++++++1339/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:25,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:26,079 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:27:26,289 > ++++++++++++++코미코++++++++++++++++++++1340/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:26,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:26,687 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:27:26,920 > ++++++++++++++코이즈++++++++++++++++++++1341/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:26,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:27,294 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:27:27,522 > ++++++++++++++큐브앤컴퍼니++++++++++++++++++++1342/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:27,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:27,903 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:27:28,150 > ++++++++++++++키이스트++++++++++++++++++++1343/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:28,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:28,510 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:27:28,756 > ++++++++++++++탑엔지니어링++++++++++++++++++++1344/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:28,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:29,116 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:27:29,371 > ++++++++++++++태웅로직스++++++++++++++++++++1345/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:29,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:29,726 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:27:29,921 > ++++++++++++++텔콘RF제약++++++++++++++++++++1346/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:29,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:30,334 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:27:30,578 > ++++++++++++++토비스++++++++++++++++++++1347/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:30,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:30,941 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:27:31,194 > ++++++++++++++티라유텍++++++++++++++++++++1348/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:31,194 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:31,549 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:27:31,808 > ++++++++++++++티엘비++++++++++++++++++++1349/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:31,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:32,156 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:27:32,317 > ++++++++++++++파라다이스++++++++++++++++++++1350/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:32,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:32,763 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:27:33,024 > ++++++++++++++파버나인++++++++++++++++++++1351/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:33,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:33,371 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:27:33,609 > ++++++++++++++파워넷++++++++++++++++++++1352/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:33,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:33,978 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:27:34,217 > ++++++++++++++팍스넷++++++++++++++++++++1353/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:34,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:34,588 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:27:34,830 > ++++++++++++++프로텍++++++++++++++++++++1354/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:34,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:35,195 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:27:35,462 > ++++++++++++++피에스케이++++++++++++++++++++1355/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:35,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:35,804 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:27:36,036 > ++++++++++++++픽셀플러스++++++++++++++++++++1356/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:36,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:36,413 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:27:36,643 > ++++++++++++++필옵틱스++++++++++++++++++++1357/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:36,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:37,022 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:27:37,259 > ++++++++++++++하나금융14호스팩++++++++++++++++++++1358/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:37,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:37,629 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:27:37,824 > ++++++++++++++하나금융16호스팩++++++++++++++++++++1359/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:37,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:38,237 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:27:38,417 > ++++++++++++++한국캐피탈++++++++++++++++++++1360/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:38,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:38,845 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:27:39,092 > ++++++++++++++한류타임즈++++++++++++++++++++1361/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:39,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:39,451 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:27:39,695 > ++++++++++++++한일네트웍스++++++++++++++++++++1362/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:39,695 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:40,060 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:27:40,364 > ++++++++++++++해마로푸드서비스++++++++++++++++++++1363/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:40,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:40,668 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:27:40,904 > ++++++++++++++헬릭스미스++++++++++++++++++++1364/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:40,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:41,275 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:27:41,520 > ++++++++++++++휴먼엔++++++++++++++++++++1365/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:41,520 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:41,882 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:27:42,153 > ++++++++++++++희림++++++++++++++++++++1366/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:42,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:42,490 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:27:42,743 > ++++++++++++++DSC인베스트먼트++++++++++++++++++++1367/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:42,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:43,098 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:27:43,357 > ++++++++++++++KB오토시스++++++++++++++++++++1368/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:43,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:43,707 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:27:43,953 > ++++++++++++++KMH++++++++++++++++++++1369/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:43,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:44,314 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:27:44,561 > ++++++++++++++MP한강++++++++++++++++++++1370/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:44,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:44,922 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:27:45,196 > ++++++++++++++NHN벅스++++++++++++++++++++1371/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:45,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:45,530 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:27:45,767 > ++++++++++++++SDN++++++++++++++++++++1372/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:45,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:46,139 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:27:46,385 > ++++++++++++++SK4호스팩++++++++++++++++++++1373/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:46,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:46,746 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:27:46,986 > ++++++++++++++SK머티리얼즈++++++++++++++++++++1374/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:46,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:47,353 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:27:47,599 > ++++++++++++++SNK++++++++++++++++++++1375/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:47,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:47,960 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:27:48,181 > ++++++++++++++WI++++++++++++++++++++1376/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:48,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:48,568 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:27:48,895 > ++++++++++++++가비아++++++++++++++++++++1377/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:48,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:49,176 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:27:49,442 > ++++++++++++++경남스틸++++++++++++++++++++1378/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:49,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:49,783 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:27:50,053 > ++++++++++++++국일신동++++++++++++++++++++1379/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:50,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:50,392 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:27:50,662 > ++++++++++++++글로벌텍스프리++++++++++++++++++++1380/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:50,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:51,000 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:27:51,248 > ++++++++++++++글로본++++++++++++++++++++1381/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:51,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:51,607 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:27:51,860 > ++++++++++++++나노++++++++++++++++++++1382/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:51,861 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:52,215 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:27:52,469 > ++++++++++++++네오셈++++++++++++++++++++1383/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:52,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:52,823 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:27:53,093 > ++++++++++++++네오위즈홀딩스++++++++++++++++++++1384/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:53,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:53,431 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:27:53,683 > ++++++++++++++네이블++++++++++++++++++++1385/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:53,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:54,037 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:27:54,285 > ++++++++++++++넥스트BT++++++++++++++++++++1386/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:54,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:54,645 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:27:54,893 > ++++++++++++++노바렉스++++++++++++++++++++1387/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:54,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:55,252 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:27:55,489 > ++++++++++++++대신밸런스제7호스팩++++++++++++++++++++1388/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:55,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:55,859 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:27:56,095 > ++++++++++++++대양전기공업++++++++++++++++++++1389/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:56,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:56,469 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:27:56,705 > ++++++++++++++대원++++++++++++++++++++1390/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:56,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:57,078 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:27:57,324 > ++++++++++++++대한뉴팜++++++++++++++++++++1391/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:57,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:57,684 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:27:57,964 > ++++++++++++++더블유에프엠++++++++++++++++++++1392/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:57,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:58,291 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:27:58,553 > ++++++++++++++덕산테코피아++++++++++++++++++++1393/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:58,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:58,899 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:27:59,152 > ++++++++++++++덕산하이메탈++++++++++++++++++++1394/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:59,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:27:59,507 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:27:59,766 > ++++++++++++++동국제약++++++++++++++++++++1395/2895
[DEBUG|open_api.py:656] 2021-02-08 16:27:59,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:00,116 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:28:00,359 > ++++++++++++++동진쎄미켐++++++++++++++++++++1396/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:00,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:00,722 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:28:00,997 > ++++++++++++++디바이스이엔지++++++++++++++++++++1397/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:00,997 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:01,331 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:28:01,588 > ++++++++++++++디알젬++++++++++++++++++++1398/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:01,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:01,939 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:28:02,188 > ++++++++++++++디에스티++++++++++++++++++++1399/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:02,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:02,546 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:28:02,820 > ++++++++++++++라이온켐텍++++++++++++++++++++1400/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:02,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:03,157 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:28:03,483 > ++++++++++++++레이크머티리얼즈++++++++++++++++++++1401/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:03,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:03,770 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:28:04,012 > ++++++++++++++레인보우로보틱스++++++++++++++++++++1402/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:04,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:04,378 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:28:04,564 > ++++++++++++++로지시스++++++++++++++++++++1403/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:04,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:04,985 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:28:05,252 > ++++++++++++++릭스솔루션++++++++++++++++++++1404/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:05,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:05,594 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:28:05,863 > ++++++++++++++링네트++++++++++++++++++++1405/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:05,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:06,202 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:28:06,478 > ++++++++++++++마이크로프랜드++++++++++++++++++++1406/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:06,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:06,810 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:28:07,092 > ++++++++++++++매직마이크로++++++++++++++++++++1407/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:07,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:07,417 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:28:07,659 > ++++++++++++++메가스터디교육++++++++++++++++++++1408/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:07,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:08,024 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:28:08,266 > ++++++++++++++메드팩토++++++++++++++++++++1409/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:08,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:08,631 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:28:08,832 > ++++++++++++++모헨즈++++++++++++++++++++1410/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:08,832 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:09,239 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:28:09,499 > ++++++++++++++미코++++++++++++++++++++1411/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:09,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:09,847 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:28:10,110 > ++++++++++++++민앤지++++++++++++++++++++1412/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:10,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:10,455 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:28:10,690 > ++++++++++++++바른손이앤에이++++++++++++++++++++1413/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:10,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:11,063 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:28:11,323 > ++++++++++++++바이온++++++++++++++++++++1414/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:11,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:11,671 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:28:11,924 > ++++++++++++++베노홀딩스++++++++++++++++++++1415/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:11,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:12,279 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:28:12,528 > ++++++++++++++비디아이++++++++++++++++++++1416/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:12,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:12,888 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:28:13,140 > ++++++++++++++비보존 헬스케어++++++++++++++++++++1417/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:13,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:13,495 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:28:13,752 > ++++++++++++++비에이치아이++++++++++++++++++++1418/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:13,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:14,103 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:28:14,352 > ++++++++++++++새로닉스++++++++++++++++++++1419/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:14,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:14,710 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:28:14,962 > ++++++++++++++서연탑메탈++++++++++++++++++++1420/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:14,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:15,319 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:28:15,583 > ++++++++++++++서울반도체++++++++++++++++++++1421/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:15,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:15,926 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:28:16,183 > ++++++++++++++서울전자통신++++++++++++++++++++1422/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:16,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:16,534 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:28:16,794 > ++++++++++++++서원인텍++++++++++++++++++++1423/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:16,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:17,141 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:28:17,394 > ++++++++++++++선데이토즈++++++++++++++++++++1424/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:17,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:17,750 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:28:17,998 > ++++++++++++++성호전자++++++++++++++++++++1425/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:17,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:18,357 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:28:18,604 > ++++++++++++++세틀뱅크++++++++++++++++++++1426/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:18,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:18,966 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:28:19,185 > ++++++++++++++센코++++++++++++++++++++1427/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:19,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:19,573 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:28:19,729 > ++++++++++++++슈프리마에이치큐++++++++++++++++++++1428/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:19,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:20,181 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:28:20,474 > ++++++++++++++스타플렉스++++++++++++++++++++1429/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:20,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:20,789 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:28:21,029 > ++++++++++++++시노펙스++++++++++++++++++++1430/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:21,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:21,395 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:28:21,656 > ++++++++++++++신라에스지++++++++++++++++++++1431/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:21,656 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:22,003 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:28:22,271 > ++++++++++++++신원종합개발++++++++++++++++++++1432/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:22,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:22,611 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:28:22,871 > ++++++++++++++신한제7호스팩++++++++++++++++++++1433/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:22,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:23,220 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:28:23,368 > ++++++++++++++신흥에스이씨++++++++++++++++++++1434/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:23,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:23,829 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:28:24,104 > ++++++++++++++씨앤지하이테크++++++++++++++++++++1435/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:24,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:24,438 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:28:24,666 > ++++++++++++++씨티씨바이오++++++++++++++++++++1436/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:24,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:25,045 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:28:25,295 > ++++++++++++++아스타++++++++++++++++++++1437/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:25,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:25,653 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:28:25,892 > ++++++++++++++아시아종묘++++++++++++++++++++1438/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:25,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:26,261 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:28:26,504 > ++++++++++++++아우딘퓨쳐스++++++++++++++++++++1439/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:26,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:26,870 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:28:27,109 > ++++++++++++++아이엘사이언스++++++++++++++++++++1440/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:27,110 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:27,478 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:28:27,701 > ++++++++++++++아이진++++++++++++++++++++1441/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:27,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:28,085 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:28:28,317 > ++++++++++++++아이큐어++++++++++++++++++++1442/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:28,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:28,693 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:28:28,934 > ++++++++++++++아이크래프트++++++++++++++++++++1443/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:28,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:29,300 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:28:29,547 > ++++++++++++++안트로젠++++++++++++++++++++1444/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:29,547 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:29,907 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:28:30,162 > ++++++++++++++알에스오토메이션++++++++++++++++++++1445/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:30,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:30,516 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:28:30,758 > ++++++++++++++에스디생명공학++++++++++++++++++++1446/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:30,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:31,124 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:28:31,369 > ++++++++++++++에스씨엠생명과학++++++++++++++++++++1447/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:31,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:31,731 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:28:31,910 > ++++++++++++++에스앤씨엔진그룹++++++++++++++++++++1448/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:31,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:32,339 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:28:32,606 > ++++++++++++++에스텍파마++++++++++++++++++++1449/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:32,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:32,947 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:28:33,209 > ++++++++++++++에이비프로바이오++++++++++++++++++++1450/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:33,209 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:33,554 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:28:33,798 > ++++++++++++++에이스테크++++++++++++++++++++1451/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:33,799 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:34,162 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:28:34,424 > ++++++++++++++에이치엔티++++++++++++++++++++1452/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:34,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:34,770 > 158
[DEBUG|collector_api.py:200] 2021-02-08 16:28:35,018 > ++++++++++++++에이치엘사이언스++++++++++++++++++++1453/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:35,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:35,378 > 159
[DEBUG|collector_api.py:200] 2021-02-08 16:28:35,612 > ++++++++++++++에이치엠씨제4호스팩++++++++++++++++++++1454/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:35,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:35,985 > 160
[DEBUG|collector_api.py:200] 2021-02-08 16:28:36,157 > ++++++++++++++에이티세미콘++++++++++++++++++++1455/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:36,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:36,592 > 161
[DEBUG|collector_api.py:200] 2021-02-08 16:28:36,902 > ++++++++++++++에이팩트++++++++++++++++++++1456/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:36,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:37,201 > 162
[DEBUG|collector_api.py:200] 2021-02-08 16:28:37,437 > ++++++++++++++에이프로젠 H&G++++++++++++++++++++1457/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:37,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:37,809 > 163
[DEBUG|collector_api.py:200] 2021-02-08 16:28:38,050 > ++++++++++++++에코플라스틱++++++++++++++++++++1458/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:38,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:38,416 > 164
[DEBUG|collector_api.py:200] 2021-02-08 16:28:38,651 > ++++++++++++++엔에스++++++++++++++++++++1459/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:38,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:39,023 > 165
[DEBUG|collector_api.py:200] 2021-02-08 16:28:39,276 > ++++++++++++++엔에스엔++++++++++++++++++++1460/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:39,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:39,632 > 166
[DEBUG|collector_api.py:200] 2021-02-08 16:28:39,890 > ++++++++++++++엔지스테크널러지++++++++++++++++++++1461/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:39,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:40,241 > 167
[DEBUG|collector_api.py:200] 2021-02-08 16:28:40,490 > ++++++++++++++엔피디++++++++++++++++++++1462/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:40,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:40,849 > 168
[DEBUG|collector_api.py:200] 2021-02-08 16:28:41,041 > ++++++++++++++엘아이에스++++++++++++++++++++1463/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:41,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:41,457 > 169
[DEBUG|collector_api.py:200] 2021-02-08 16:28:41,713 > ++++++++++++++엘앤씨바이오++++++++++++++++++++1464/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:41,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:42,065 > 170
[DEBUG|collector_api.py:200] 2021-02-08 16:28:42,299 > ++++++++++++++엘오티베큠++++++++++++++++++++1465/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:42,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:42,674 > 171
[DEBUG|collector_api.py:200] 2021-02-08 16:28:42,919 > ++++++++++++++엠브레인++++++++++++++++++++1466/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:42,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:43,281 > 172
[DEBUG|collector_api.py:200] 2021-02-08 16:28:43,451 > ++++++++++++++엠투아이++++++++++++++++++++1467/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:43,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:43,890 > 173
[DEBUG|collector_api.py:200] 2021-02-08 16:28:44,067 > ++++++++++++++엠플러스++++++++++++++++++++1468/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:44,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:44,498 > 174
[DEBUG|collector_api.py:200] 2021-02-08 16:28:44,727 > ++++++++++++++예스24++++++++++++++++++++1469/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:44,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:45,106 > 175
[DEBUG|collector_api.py:200] 2021-02-08 16:28:45,359 > ++++++++++++++오가닉티코스메틱++++++++++++++++++++1470/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:45,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:45,714 > 176
[DEBUG|collector_api.py:200] 2021-02-08 16:28:45,950 > ++++++++++++++오하임아이엔티++++++++++++++++++++1471/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:45,950 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:46,323 > 177
[DEBUG|collector_api.py:200] 2021-02-08 16:28:46,538 > ++++++++++++++옵트론텍++++++++++++++++++++1472/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:46,538 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:46,930 > 178
[DEBUG|collector_api.py:200] 2021-02-08 16:28:47,183 > ++++++++++++++옵티팜++++++++++++++++++++1473/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:47,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:47,538 > 179
[DEBUG|collector_api.py:200] 2021-02-08 16:28:47,771 > ++++++++++++++와이솔++++++++++++++++++++1474/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:47,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:48,146 > 180
[DEBUG|collector_api.py:200] 2021-02-08 16:28:48,390 > ++++++++++++++와이아이케이++++++++++++++++++++1475/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:48,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:48,754 > 181
[DEBUG|collector_api.py:200] 2021-02-08 16:28:48,997 > ++++++++++++++우노앤컴퍼니++++++++++++++++++++1476/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:48,997 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:49,361 > 182
[DEBUG|collector_api.py:200] 2021-02-08 16:28:49,598 > ++++++++++++++우리산업홀딩스++++++++++++++++++++1477/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:49,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:49,969 > 183
[DEBUG|collector_api.py:200] 2021-02-08 16:28:50,253 > ++++++++++++++우양++++++++++++++++++++1478/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:50,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:50,576 > 184
[DEBUG|collector_api.py:200] 2021-02-08 16:28:50,773 > ++++++++++++++우진비앤지++++++++++++++++++++1479/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:50,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:51,185 > 185
[DEBUG|collector_api.py:200] 2021-02-08 16:28:51,434 > ++++++++++++++원익++++++++++++++++++++1480/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:51,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:51,793 > 186
[DEBUG|collector_api.py:200] 2021-02-08 16:28:52,049 > ++++++++++++++유성티엔에스++++++++++++++++++++1481/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:52,049 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:52,401 > 187
[DEBUG|collector_api.py:200] 2021-02-08 16:28:52,680 > ++++++++++++++유에스티++++++++++++++++++++1482/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:52,681 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:53,009 > 188
[DEBUG|collector_api.py:200] 2021-02-08 16:28:53,270 > ++++++++++++++이루온++++++++++++++++++++1483/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:53,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:53,617 > 189
[DEBUG|collector_api.py:200] 2021-02-08 16:28:53,862 > ++++++++++++++이엔에프테크놀로지++++++++++++++++++++1484/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:53,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:54,223 > 190
[DEBUG|collector_api.py:200] 2021-02-08 16:28:54,474 > ++++++++++++++이엘피++++++++++++++++++++1485/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:54,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:54,833 > 191
[DEBUG|collector_api.py:200] 2021-02-08 16:28:55,093 > ++++++++++++++이지홀딩스++++++++++++++++++++1486/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:55,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:55,440 > 192
[DEBUG|collector_api.py:200] 2021-02-08 16:28:55,694 > ++++++++++++++이트론++++++++++++++++++++1487/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:55,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:56,048 > 193
[DEBUG|collector_api.py:200] 2021-02-08 16:28:56,307 > ++++++++++++++인터엠++++++++++++++++++++1488/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:56,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:56,655 > 194
[DEBUG|collector_api.py:200] 2021-02-08 16:28:56,912 > ++++++++++++++인터플렉스++++++++++++++++++++1489/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:56,912 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:57,264 > 195
[DEBUG|collector_api.py:200] 2021-02-08 16:28:57,510 > ++++++++++++++전파기지국++++++++++++++++++++1490/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:57,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:57,873 > 196
[DEBUG|collector_api.py:200] 2021-02-08 16:28:58,256 > ++++++++++++++제너셈++++++++++++++++++++1491/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:58,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:58,481 > 197
[DEBUG|collector_api.py:200] 2021-02-08 16:28:58,744 > ++++++++++++++제넥신++++++++++++++++++++1492/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:58,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:59,091 > 198
[DEBUG|collector_api.py:200] 2021-02-08 16:28:59,337 > ++++++++++++++제노레이++++++++++++++++++++1493/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:59,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:28:59,698 > 199
[DEBUG|collector_api.py:200] 2021-02-08 16:28:59,947 > ++++++++++++++제로투세븐++++++++++++++++++++1494/2895
[DEBUG|open_api.py:656] 2021-02-08 16:28:59,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:00,305 > 200
[DEBUG|collector_api.py:200] 2021-02-08 16:29:00,565 > ++++++++++++++제룡전기++++++++++++++++++++1495/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:00,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:00,913 > 201
[DEBUG|collector_api.py:200] 2021-02-08 16:29:01,229 > ++++++++++++++제이씨현시스템++++++++++++++++++++1496/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:01,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:01,521 > 202
[DEBUG|collector_api.py:200] 2021-02-08 16:29:01,795 > ++++++++++++++조광ILI++++++++++++++++++++1497/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:01,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:02,131 > 203
[DEBUG|collector_api.py:200] 2021-02-08 16:29:02,397 > ++++++++++++++칩스앤미디어++++++++++++++++++++1498/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:02,397 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:02,738 > 204
[DEBUG|collector_api.py:200] 2021-02-08 16:29:02,991 > ++++++++++++++컴퍼니케이++++++++++++++++++++1499/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:02,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:03,346 > 205
[DEBUG|collector_api.py:200] 2021-02-08 16:29:03,557 > ++++++++++++++케이사인++++++++++++++++++++1500/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:03,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:03,955 > 206
[DEBUG|collector_api.py:200] 2021-02-08 16:29:04,259 > ++++++++++++++케이씨에스++++++++++++++++++++1501/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:04,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:04,561 > 207
[DEBUG|collector_api.py:200] 2021-02-08 16:29:04,812 > ++++++++++++++케이아이엔엑스++++++++++++++++++++1502/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:04,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:05,169 > 208
[DEBUG|collector_api.py:200] 2021-02-08 16:29:05,414 > ++++++++++++++켐온++++++++++++++++++++1503/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:05,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:05,775 > 209
[DEBUG|collector_api.py:200] 2021-02-08 16:29:06,013 > ++++++++++++++코맥스++++++++++++++++++++1504/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:06,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:06,383 > 210
[DEBUG|collector_api.py:200] 2021-02-08 16:29:06,645 > ++++++++++++++코세스++++++++++++++++++++1505/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:06,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:06,990 > 211
[DEBUG|collector_api.py:200] 2021-02-08 16:29:07,252 > ++++++++++++++코스메카코리아++++++++++++++++++++1506/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:07,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:07,598 > 212
[DEBUG|collector_api.py:200] 2021-02-08 16:29:07,859 > ++++++++++++++코스온++++++++++++++++++++1507/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:07,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:08,206 > 213
[DEBUG|collector_api.py:200] 2021-02-08 16:29:08,447 > ++++++++++++++코엔텍++++++++++++++++++++1508/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:08,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:08,813 > 214
[DEBUG|collector_api.py:200] 2021-02-08 16:29:09,119 > ++++++++++++++코텍++++++++++++++++++++1509/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:09,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:09,422 > 215
[DEBUG|collector_api.py:200] 2021-02-08 16:29:09,676 > ++++++++++++++콜마비앤에이치++++++++++++++++++++1510/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:09,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:10,031 > 216
[DEBUG|collector_api.py:200] 2021-02-08 16:29:10,295 > ++++++++++++++큐캐피탈++++++++++++++++++++1511/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:10,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:10,639 > 217
[DEBUG|collector_api.py:200] 2021-02-08 16:29:10,907 > ++++++++++++++타이거일렉++++++++++++++++++++1512/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:10,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:11,247 > 218
[DEBUG|collector_api.py:200] 2021-02-08 16:29:11,473 > ++++++++++++++태광++++++++++++++++++++1513/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:11,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:11,855 > 219
[DEBUG|collector_api.py:200] 2021-02-08 16:29:12,159 > ++++++++++++++티로보틱스++++++++++++++++++++1514/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:12,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:12,468 > 220
[DEBUG|collector_api.py:200] 2021-02-08 16:29:12,773 > ++++++++++++++티앤엘++++++++++++++++++++1515/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:12,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:13,079 > 221
[DEBUG|collector_api.py:200] 2021-02-08 16:29:13,249 > ++++++++++++++파마리서치프로덕트++++++++++++++++++++1516/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:13,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:13,685 > 222
[DEBUG|collector_api.py:200] 2021-02-08 16:29:13,942 > ++++++++++++++파인디앤씨++++++++++++++++++++1517/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:13,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:14,293 > 223
[DEBUG|collector_api.py:200] 2021-02-08 16:29:14,543 > ++++++++++++++파인텍++++++++++++++++++++1518/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:14,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:14,902 > 224
[DEBUG|collector_api.py:200] 2021-02-08 16:29:15,158 > ++++++++++++++펩트론++++++++++++++++++++1519/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:15,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:15,510 > 225
[DEBUG|collector_api.py:200] 2021-02-08 16:29:15,752 > ++++++++++++++포스링크++++++++++++++++++++1520/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:15,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:16,119 > 226
[DEBUG|collector_api.py:200] 2021-02-08 16:29:16,387 > ++++++++++++++풍국주정++++++++++++++++++++1521/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:16,387 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:16,727 > 227
[DEBUG|collector_api.py:200] 2021-02-08 16:29:17,013 > ++++++++++++++퓨쳐스트림네트웍스++++++++++++++++++++1522/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:17,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:17,334 > 228
[DEBUG|collector_api.py:200] 2021-02-08 16:29:17,570 > ++++++++++++++퓨쳐켐++++++++++++++++++++1523/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:17,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:17,942 > 229
[DEBUG|collector_api.py:200] 2021-02-08 16:29:18,192 > ++++++++++++++피씨디렉트++++++++++++++++++++1524/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:18,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:18,549 > 230
[DEBUG|collector_api.py:200] 2021-02-08 16:29:18,817 > ++++++++++++++피에스케이홀딩스++++++++++++++++++++1525/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:18,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:19,175 > 231
[DEBUG|collector_api.py:200] 2021-02-08 16:29:19,507 > ++++++++++++++피플바이오++++++++++++++++++++1526/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:19,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:19,808 > 232
[DEBUG|collector_api.py:200] 2021-02-08 16:29:19,970 > ++++++++++++++하이로닉++++++++++++++++++++1527/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:19,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:20,415 > 233
[DEBUG|collector_api.py:200] 2021-02-08 16:29:20,653 > ++++++++++++++하이소닉++++++++++++++++++++1528/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:20,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:21,023 > 234
[DEBUG|collector_api.py:200] 2021-02-08 16:29:21,283 > ++++++++++++++한국유니온제약++++++++++++++++++++1529/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:21,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:21,632 > 235
[DEBUG|collector_api.py:200] 2021-02-08 16:29:21,863 > ++++++++++++++한국컴퓨터++++++++++++++++++++1530/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:21,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:22,240 > 236
[DEBUG|collector_api.py:200] 2021-02-08 16:29:22,481 > ++++++++++++++한국테크놀로지++++++++++++++++++++1531/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:22,482 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:22,848 > 237
[DEBUG|collector_api.py:200] 2021-02-08 16:29:23,176 > ++++++++++++++한송네오텍++++++++++++++++++++1532/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:23,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:23,456 > 238
[DEBUG|collector_api.py:200] 2021-02-08 16:29:23,688 > ++++++++++++++한일사료++++++++++++++++++++1533/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:23,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:24,064 > 239
[DEBUG|collector_api.py:200] 2021-02-08 16:29:24,347 > ++++++++++++++헝셩그룹++++++++++++++++++++1534/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:24,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:24,672 > 240
[DEBUG|collector_api.py:200] 2021-02-08 16:29:24,967 > ++++++++++++++화일약품++++++++++++++++++++1535/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:24,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:25,281 > 241
[DEBUG|collector_api.py:200] 2021-02-08 16:29:25,563 > ++++++++++++++효성오앤비++++++++++++++++++++1536/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:25,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:25,888 > 242
[DEBUG|collector_api.py:200] 2021-02-08 16:29:26,172 > ++++++++++++++휴온스++++++++++++++++++++1537/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:26,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:26,495 > 243
[DEBUG|collector_api.py:200] 2021-02-08 16:29:26,738 > ++++++++++++++휴젤++++++++++++++++++++1538/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:26,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:27,102 > 244
[DEBUG|collector_api.py:200] 2021-02-08 16:29:27,349 > ++++++++++++++CNH++++++++++++++++++++1539/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:27,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:27,709 > 245
[DEBUG|collector_api.py:200] 2021-02-08 16:29:27,983 > ++++++++++++++DMS++++++++++++++++++++1540/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:27,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:28,319 > 246
[DEBUG|collector_api.py:200] 2021-02-08 16:29:28,583 > ++++++++++++++GH신소재++++++++++++++++++++1541/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:28,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:28,926 > 247
[DEBUG|collector_api.py:200] 2021-02-08 16:29:29,213 > ++++++++++++++IBKS제14호스팩++++++++++++++++++++1542/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:29,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:29,538 > 248
[DEBUG|collector_api.py:200] 2021-02-08 16:29:29,721 > ++++++++++++++KBI메탈++++++++++++++++++++1543/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:29,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:30,146 > 249
[DEBUG|collector_api.py:200] 2021-02-08 16:29:30,422 > ++++++++++++++KMH하이텍++++++++++++++++++++1544/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:30,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:30,753 > 250
[DEBUG|collector_api.py:200] 2021-02-08 16:29:31,140 > ++++++++++++++KNN++++++++++++++++++++1545/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:31,140 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:31,362 > 251
[DEBUG|collector_api.py:200] 2021-02-08 16:29:31,610 > ++++++++++++++KPX생명과학++++++++++++++++++++1546/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:31,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:31,970 > 252
[DEBUG|collector_api.py:200] 2021-02-08 16:29:32,311 > ++++++++++++++KTH++++++++++++++++++++1547/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:32,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:32,578 > 253
[DEBUG|collector_api.py:200] 2021-02-08 16:29:32,876 > ++++++++++++++KT서브마린++++++++++++++++++++1548/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:32,879 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:33,187 > 254
[DEBUG|collector_api.py:200] 2021-02-08 16:29:33,471 > ++++++++++++++SBS콘텐츠허브++++++++++++++++++++1549/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:33,472 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:33,797 > 255
[DEBUG|collector_api.py:200] 2021-02-08 16:29:34,093 > ++++++++++++++SG&G++++++++++++++++++++1550/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:34,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:34,407 > 256
[DEBUG|collector_api.py:200] 2021-02-08 16:29:34,669 > ++++++++++++++SGA++++++++++++++++++++1551/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:34,669 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:35,014 > 257
[DEBUG|collector_api.py:200] 2021-02-08 16:29:35,296 > ++++++++++++++SV인베스트먼트++++++++++++++++++++1552/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:35,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:35,621 > 258
[DEBUG|collector_api.py:200] 2021-02-08 16:29:35,875 > ++++++++++++++TPC++++++++++++++++++++1553/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:35,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:36,236 > 259
[DEBUG|collector_api.py:200] 2021-02-08 16:29:36,509 > ++++++++++++++TS인베스트먼트++++++++++++++++++++1554/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:36,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:36,863 > 260
[DEBUG|collector_api.py:200] 2021-02-08 16:29:37,113 > ++++++++++++++YBM넷++++++++++++++++++++1555/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:37,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:37,473 > 261
[DEBUG|collector_api.py:200] 2021-02-08 16:29:37,733 > ++++++++++++++iMBC++++++++++++++++++++1556/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:37,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:38,083 > 262
[DEBUG|collector_api.py:200] 2021-02-08 16:29:38,369 > ++++++++++++++가온미디어++++++++++++++++++++1557/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:38,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:38,691 > 263
[DEBUG|collector_api.py:200] 2021-02-08 16:29:38,967 > ++++++++++++++경동제약++++++++++++++++++++1558/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:38,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:39,299 > 264
[DEBUG|collector_api.py:200] 2021-02-08 16:29:39,590 > ++++++++++++++골든센츄리++++++++++++++++++++1559/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:39,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:39,907 > 265
[DEBUG|collector_api.py:200] 2021-02-08 16:29:40,187 > ++++++++++++++광진윈텍++++++++++++++++++++1560/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:40,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:40,516 > 266
[DEBUG|collector_api.py:200] 2021-02-08 16:29:40,789 > ++++++++++++++국보디자인++++++++++++++++++++1561/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:40,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:41,124 > 267
[DEBUG|collector_api.py:200] 2021-02-08 16:29:41,405 > ++++++++++++++나스미디어++++++++++++++++++++1562/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:41,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:41,734 > 268
[DEBUG|collector_api.py:200] 2021-02-08 16:29:41,991 > ++++++++++++++나이스정보통신++++++++++++++++++++1563/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:41,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:42,343 > 269
[DEBUG|collector_api.py:200] 2021-02-08 16:29:42,613 > ++++++++++++++남화산업++++++++++++++++++++1564/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:42,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:42,952 > 270
[DEBUG|collector_api.py:200] 2021-02-08 16:29:43,184 > ++++++++++++++네오오토++++++++++++++++++++1565/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:43,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:43,559 > 271
[DEBUG|collector_api.py:200] 2021-02-08 16:29:43,812 > ++++++++++++++네오위즈++++++++++++++++++++1566/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:43,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:44,168 > 272
[DEBUG|collector_api.py:200] 2021-02-08 16:29:44,433 > ++++++++++++++네오크레마++++++++++++++++++++1567/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:44,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:44,776 > 273
[DEBUG|collector_api.py:200] 2021-02-08 16:29:44,995 > ++++++++++++++넷게임즈++++++++++++++++++++1568/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:44,996 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:45,386 > 274
[DEBUG|collector_api.py:200] 2021-02-08 16:29:45,639 > ++++++++++++++노랑풍선++++++++++++++++++++1569/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:45,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:45,994 > 275
[DEBUG|collector_api.py:200] 2021-02-08 16:29:46,217 > ++++++++++++++노바텍++++++++++++++++++++1570/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:46,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:46,602 > 276
[DEBUG|collector_api.py:200] 2021-02-08 16:29:46,836 > ++++++++++++++뉴보텍++++++++++++++++++++1571/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:46,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:47,209 > 277
[DEBUG|collector_api.py:200] 2021-02-08 16:29:47,463 > ++++++++++++++다날++++++++++++++++++++1572/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:47,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:47,818 > 278
[DEBUG|collector_api.py:200] 2021-02-08 16:29:48,067 > ++++++++++++++대원미디어++++++++++++++++++++1573/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:48,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:48,426 > 279
[DEBUG|collector_api.py:200] 2021-02-08 16:29:48,735 > ++++++++++++++대한과학++++++++++++++++++++1574/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:48,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:49,034 > 280
[DEBUG|collector_api.py:200] 2021-02-08 16:29:49,312 > ++++++++++++++대호피앤씨++++++++++++++++++++1575/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:49,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:49,651 > 281
[DEBUG|collector_api.py:200] 2021-02-08 16:29:49,926 > ++++++++++++++대화제약++++++++++++++++++++1576/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:49,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:50,259 > 282
[DEBUG|collector_api.py:200] 2021-02-08 16:29:50,504 > ++++++++++++++동아화성++++++++++++++++++++1577/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:50,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:50,867 > 283
[DEBUG|collector_api.py:200] 2021-02-08 16:29:51,159 > ++++++++++++++동양파일++++++++++++++++++++1578/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:51,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:51,474 > 284
[DEBUG|collector_api.py:200] 2021-02-08 16:29:51,718 > ++++++++++++++디앤씨미디어++++++++++++++++++++1579/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:51,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:52,082 > 285
[DEBUG|collector_api.py:200] 2021-02-08 16:29:52,346 > ++++++++++++++디오스텍++++++++++++++++++++1580/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:52,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:52,691 > 286
[DEBUG|collector_api.py:200] 2021-02-08 16:29:52,943 > ++++++++++++++디이엔티++++++++++++++++++++1581/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:52,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:53,298 > 287
[DEBUG|collector_api.py:200] 2021-02-08 16:29:53,569 > ++++++++++++++라닉스++++++++++++++++++++1582/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:53,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:53,907 > 288
[DEBUG|collector_api.py:200] 2021-02-08 16:29:54,123 > ++++++++++++++라온피플++++++++++++++++++++1583/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:54,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:54,516 > 289
[DEBUG|collector_api.py:200] 2021-02-08 16:29:54,730 > ++++++++++++++라이트론++++++++++++++++++++1584/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:54,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:55,125 > 290
[DEBUG|collector_api.py:200] 2021-02-08 16:29:55,427 > ++++++++++++++랩지노믹스++++++++++++++++++++1585/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:55,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:55,734 > 291
[DEBUG|collector_api.py:200] 2021-02-08 16:29:55,979 > ++++++++++++++로스웰++++++++++++++++++++1586/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:55,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:56,342 > 292
[DEBUG|collector_api.py:200] 2021-02-08 16:29:56,569 > ++++++++++++++리더스코스메틱++++++++++++++++++++1587/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:56,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:56,950 > 293
[DEBUG|collector_api.py:200] 2021-02-08 16:29:57,182 > ++++++++++++++리메드++++++++++++++++++++1588/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:57,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:57,557 > 294
[DEBUG|collector_api.py:200] 2021-02-08 16:29:57,814 > ++++++++++++++린드먼아시아++++++++++++++++++++1589/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:57,815 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:58,166 > 295
[DEBUG|collector_api.py:200] 2021-02-08 16:29:58,405 > ++++++++++++++마니커에프앤지++++++++++++++++++++1590/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:58,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:58,775 > 296
[DEBUG|collector_api.py:200] 2021-02-08 16:29:58,977 > ++++++++++++++메가엠디++++++++++++++++++++1591/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:58,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:59,382 > 297
[DEBUG|collector_api.py:200] 2021-02-08 16:29:59,626 > ++++++++++++++메카로++++++++++++++++++++1592/2895
[DEBUG|open_api.py:656] 2021-02-08 16:29:59,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:29:59,990 > 298
[DEBUG|collector_api.py:200] 2021-02-08 16:30:00,242 > ++++++++++++++모베이스++++++++++++++++++++1593/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:00,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:00,597 > 299
[DEBUG|collector_api.py:200] 2021-02-08 16:30:00,876 > ++++++++++++++모아텍++++++++++++++++++++1594/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:00,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:01,205 > 300
[DEBUG|collector_api.py:200] 2021-02-08 16:30:01,474 > ++++++++++++++바이오스마트++++++++++++++++++++1595/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:01,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:01,815 > 301
[DEBUG|collector_api.py:200] 2021-02-08 16:30:02,094 > ++++++++++++++베셀++++++++++++++++++++1596/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:02,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:02,424 > 302
[DEBUG|collector_api.py:200] 2021-02-08 16:30:02,667 > ++++++++++++++보광산업++++++++++++++++++++1597/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:02,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:03,031 > 303
[DEBUG|collector_api.py:200] 2021-02-08 16:30:03,272 > ++++++++++++++본느++++++++++++++++++++1598/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:03,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:03,640 > 304
[DEBUG|collector_api.py:200] 2021-02-08 16:30:03,873 > ++++++++++++++브릿지바이오테라퓨틱스++++++++++++++++++++1599/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:03,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:04,247 > 305
[DEBUG|collector_api.py:200] 2021-02-08 16:30:04,442 > ++++++++++++++블러썸엠앤씨++++++++++++++++++++1600/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:04,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:04,855 > 306
[DEBUG|collector_api.py:200] 2021-02-08 16:30:05,093 > ++++++++++++++비엠티++++++++++++++++++++1601/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:05,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:05,464 > 307
[DEBUG|collector_api.py:200] 2021-02-08 16:30:05,718 > ++++++++++++++비츠로셀++++++++++++++++++++1602/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:05,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:06,071 > 308
[DEBUG|collector_api.py:200] 2021-02-08 16:30:06,312 > ++++++++++++++삼보모터스++++++++++++++++++++1603/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:06,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:06,678 > 309
[DEBUG|collector_api.py:200] 2021-02-08 16:30:06,921 > ++++++++++++++삼영엠텍++++++++++++++++++++1604/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:06,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:07,285 > 310
[DEBUG|collector_api.py:200] 2021-02-08 16:30:07,543 > ++++++++++++++삼천당제약++++++++++++++++++++1605/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:07,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:07,892 > 311
[DEBUG|collector_api.py:200] 2021-02-08 16:30:08,169 > ++++++++++++++삼화네트웍스++++++++++++++++++++1606/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:08,169 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:08,501 > 312
[DEBUG|collector_api.py:200] 2021-02-08 16:30:08,758 > ++++++++++++++샘코++++++++++++++++++++1607/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:08,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:09,109 > 313
[DEBUG|collector_api.py:200] 2021-02-08 16:30:09,351 > ++++++++++++++서울바이오시스++++++++++++++++++++1608/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:09,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:09,716 > 314
[DEBUG|collector_api.py:200] 2021-02-08 16:30:09,924 > ++++++++++++++서울옥션++++++++++++++++++++1609/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:09,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:10,324 > 315
[DEBUG|collector_api.py:200] 2021-02-08 16:30:10,570 > ++++++++++++++서한++++++++++++++++++++1610/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:10,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:10,931 > 316
[DEBUG|collector_api.py:200] 2021-02-08 16:30:11,231 > ++++++++++++++성도이엔지++++++++++++++++++++1611/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:11,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:11,538 > 317
[DEBUG|collector_api.py:200] 2021-02-08 16:30:11,788 > ++++++++++++++성우전자++++++++++++++++++++1612/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:11,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:12,146 > 318
[DEBUG|collector_api.py:200] 2021-02-08 16:30:12,402 > ++++++++++++++세동++++++++++++++++++++1613/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:12,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:12,754 > 319
[DEBUG|collector_api.py:200] 2021-02-08 16:30:13,020 > ++++++++++++++세미콘라이트++++++++++++++++++++1614/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:13,021 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:13,363 > 320
[DEBUG|collector_api.py:200] 2021-02-08 16:30:13,602 > ++++++++++++++세원++++++++++++++++++++1615/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:13,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:13,970 > 321
[DEBUG|collector_api.py:200] 2021-02-08 16:30:14,228 > ++++++++++++++세원물산++++++++++++++++++++1616/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:14,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:14,579 > 322
[DEBUG|collector_api.py:200] 2021-02-08 16:30:14,846 > ++++++++++++++센트럴바이오++++++++++++++++++++1617/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:14,847 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:15,186 > 323
[DEBUG|collector_api.py:200] 2021-02-08 16:30:15,426 > ++++++++++++++소룩스++++++++++++++++++++1618/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:15,426 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:15,795 > 324
[DEBUG|collector_api.py:200] 2021-02-08 16:30:15,965 > ++++++++++++++소프트캠프++++++++++++++++++++1619/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:15,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:16,403 > 325
[DEBUG|collector_api.py:200] 2021-02-08 16:30:16,650 > ++++++++++++++솔브레인++++++++++++++++++++1620/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:16,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:17,010 > 326
[DEBUG|collector_api.py:200] 2021-02-08 16:30:17,192 > ++++++++++++++스카이문스테크놀로지++++++++++++++++++++1621/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:17,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:17,618 > 327
[DEBUG|collector_api.py:200] 2021-02-08 16:30:17,872 > ++++++++++++++시너지이노베이션++++++++++++++++++++1622/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:17,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:18,225 > 328
[DEBUG|collector_api.py:200] 2021-02-08 16:30:18,468 > ++++++++++++++시티랩스++++++++++++++++++++1623/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:18,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:18,833 > 329
[DEBUG|collector_api.py:200] 2021-02-08 16:30:19,105 > ++++++++++++++신성델타테크++++++++++++++++++++1624/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:19,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:19,441 > 330
[DEBUG|collector_api.py:200] 2021-02-08 16:30:19,685 > ++++++++++++++신화인터텍++++++++++++++++++++1625/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:19,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:20,050 > 331
[DEBUG|collector_api.py:200] 2021-02-08 16:30:20,306 > ++++++++++++++싸이토젠++++++++++++++++++++1626/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:20,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:20,656 > 332
[DEBUG|collector_api.py:200] 2021-02-08 16:30:20,886 > ++++++++++++++아이컴포넌트++++++++++++++++++++1627/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:20,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:21,264 > 333
[DEBUG|collector_api.py:200] 2021-02-08 16:30:21,508 > ++++++++++++++아즈텍WB++++++++++++++++++++1628/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:21,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:21,871 > 334
[DEBUG|collector_api.py:200] 2021-02-08 16:30:22,120 > ++++++++++++++안랩++++++++++++++++++++1629/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:22,121 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:22,478 > 335
[DEBUG|collector_api.py:200] 2021-02-08 16:30:22,738 > ++++++++++++++알서포트++++++++++++++++++++1630/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:22,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:23,086 > 336
[DEBUG|collector_api.py:200] 2021-02-08 16:30:23,341 > ++++++++++++++액트++++++++++++++++++++1631/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:23,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:23,693 > 337
[DEBUG|collector_api.py:200] 2021-02-08 16:30:23,937 > ++++++++++++++에너토크++++++++++++++++++++1632/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:23,937 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:24,301 > 338
[DEBUG|collector_api.py:200] 2021-02-08 16:30:24,534 > ++++++++++++++에버다임++++++++++++++++++++1633/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:24,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:24,909 > 339
[DEBUG|collector_api.py:200] 2021-02-08 16:30:25,151 > ++++++++++++++에스넷++++++++++++++++++++1634/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:25,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:25,517 > 340
[DEBUG|collector_api.py:200] 2021-02-08 16:30:25,767 > ++++++++++++++에스디시스템++++++++++++++++++++1635/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:25,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:26,125 > 341
[DEBUG|collector_api.py:200] 2021-02-08 16:30:26,421 > ++++++++++++++에스에이엠티++++++++++++++++++++1636/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:26,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:26,733 > 342
[DEBUG|collector_api.py:200] 2021-02-08 16:30:27,046 > ++++++++++++++에스티큐브++++++++++++++++++++1637/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:27,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:27,342 > 343
[DEBUG|collector_api.py:200] 2021-02-08 16:30:27,599 > ++++++++++++++에스피지++++++++++++++++++++1638/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:27,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:27,951 > 344
[DEBUG|collector_api.py:200] 2021-02-08 16:30:28,204 > ++++++++++++++에이프로++++++++++++++++++++1639/2895
[DEBUG|open_api.py:656] 2021-02-08 16:30:28,205 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:30:28,558 > 345
[DEBUG|open_api.py:303] 2021-02-08 16:32:39,021 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:32:39,021 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:32:39,021 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:32:39,028 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:32:39,028 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:32:39,028 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:32:39,028 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:32:39,044 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:32:39,088 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:32:39,088 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:32:39,089 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:32:39,105 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:32:39,143 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:32:41,755 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:32:41,756 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:32:41,803 > ++++++++++++++에이프로++++++++++++++++++++1639/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:41,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:41,804 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:32:42,875 > ++++++++++++++에이피티씨++++++++++++++++++++1640/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:42,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:42,876 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:32:43,115 > ++++++++++++++에코마케팅++++++++++++++++++++1641/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:43,116 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:43,484 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:32:43,719 > ++++++++++++++에코바이오++++++++++++++++++++1642/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:43,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:44,092 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:32:44,339 > ++++++++++++++에코캡++++++++++++++++++++1643/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:44,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:44,700 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:32:44,934 > ++++++++++++++에프앤가이드++++++++++++++++++++1644/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:44,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:45,309 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:32:45,554 > ++++++++++++++에프앤리퍼블릭++++++++++++++++++++1645/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:45,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:45,917 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:32:46,166 > ++++++++++++++에프엔에스테크++++++++++++++++++++1646/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:46,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:46,524 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:32:46,774 > ++++++++++++++엔바이오니아++++++++++++++++++++1647/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:46,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:47,132 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:32:47,359 > ++++++++++++++엔에이치스팩13호++++++++++++++++++++1648/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:47,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:47,740 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:32:47,957 > ++++++++++++++엘엠에스++++++++++++++++++++1649/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:47,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:48,347 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:32:48,611 > ++++++++++++++엠아이텍++++++++++++++++++++1650/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:48,612 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:48,955 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:32:49,186 > ++++++++++++++엠에스오토텍++++++++++++++++++++1651/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:49,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:49,564 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:32:49,826 > ++++++++++++++엠케이전자++++++++++++++++++++1652/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:49,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:50,172 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:32:50,437 > ++++++++++++++오르비텍++++++++++++++++++++1653/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:50,437 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:50,780 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:32:51,053 > ++++++++++++++오이솔루션++++++++++++++++++++1654/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:51,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:51,391 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:32:51,670 > ++++++++++++++올리패스++++++++++++++++++++1655/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:51,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:51,999 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:32:52,196 > ++++++++++++++와이엠씨++++++++++++++++++++1656/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:52,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:52,607 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:32:52,841 > ++++++++++++++와이엠티++++++++++++++++++++1657/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:52,842 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:53,214 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:32:53,459 > ++++++++++++++와이제이엠게임즈++++++++++++++++++++1658/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:53,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:53,821 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:32:54,068 > ++++++++++++++와이팜++++++++++++++++++++1659/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:54,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:54,428 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:32:54,590 > ++++++++++++++우리넷++++++++++++++++++++1660/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:54,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:55,035 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:32:55,294 > ++++++++++++++우리조명++++++++++++++++++++1661/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:55,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:55,644 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:32:55,913 > ++++++++++++++원익IPS++++++++++++++++++++1662/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:55,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:56,251 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:32:56,504 > ++++++++++++++위세아이텍++++++++++++++++++++1663/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:56,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:56,859 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:32:57,103 > ++++++++++++++유니슨++++++++++++++++++++1664/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:57,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:57,466 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:32:57,773 > ++++++++++++++유니크++++++++++++++++++++1665/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:57,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:58,074 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:32:58,346 > ++++++++++++++유아이디++++++++++++++++++++1666/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:58,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:58,682 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:32:58,939 > ++++++++++++++유아이엘++++++++++++++++++++1667/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:58,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:59,290 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:32:59,539 > ++++++++++++++이상네트웍스++++++++++++++++++++1668/2895
[DEBUG|open_api.py:656] 2021-02-08 16:32:59,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:32:59,898 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:33:00,157 > ++++++++++++++이엠코리아++++++++++++++++++++1669/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:00,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:00,505 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:33:00,754 > ++++++++++++++이오플로우++++++++++++++++++++1670/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:00,755 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:01,114 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:33:01,316 > ++++++++++++++이큐셀++++++++++++++++++++1671/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:01,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:01,721 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:33:01,950 > ++++++++++++++이퓨쳐++++++++++++++++++++1672/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:01,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:02,328 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:33:02,578 > ++++++++++++++이화공영++++++++++++++++++++1673/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:02,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:02,936 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:33:03,193 > ++++++++++++++인피니트헬스케어++++++++++++++++++++1674/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:03,193 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:03,545 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:33:03,790 > ++++++++++++++일신바이오++++++++++++++++++++1675/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:03,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:04,152 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:33:04,416 > ++++++++++++++잉글우드랩++++++++++++++++++++1676/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:04,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:04,761 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:33:05,008 > ++++++++++++++정원엔시스++++++++++++++++++++1677/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:05,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:05,369 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:33:05,620 > ++++++++++++++제이씨케미칼++++++++++++++++++++1678/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:05,621 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:05,976 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:33:06,245 > ++++++++++++++젬백스링크++++++++++++++++++++1679/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:06,246 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:06,585 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:33:06,830 > ++++++++++++++좋은사람들++++++++++++++++++++1680/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:06,831 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:07,193 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:33:07,482 > ++++++++++++++줌인터넷++++++++++++++++++++1681/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:07,482 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:07,801 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:33:08,047 > ++++++++++++++중앙백신++++++++++++++++++++1682/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:08,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:08,409 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:33:08,655 > ++++++++++++++지놈앤컴퍼니++++++++++++++++++++1683/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:08,656 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:09,017 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:33:09,235 > ++++++++++++++지트리비앤티++++++++++++++++++++1684/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:09,235 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:09,625 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:33:09,877 > ++++++++++++++카스++++++++++++++++++++1685/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:09,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:10,233 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:33:10,510 > ++++++++++++++카카오게임즈++++++++++++++++++++1686/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:10,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:10,842 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:33:11,018 > ++++++++++++++카페24++++++++++++++++++++1687/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:11,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:11,450 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:33:11,692 > ++++++++++++++케이비17호스팩++++++++++++++++++++1688/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:11,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:12,058 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:33:12,277 > ++++++++++++++케이에스피++++++++++++++++++++1689/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:12,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:12,664 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:33:12,918 > ++++++++++++++큐리언트++++++++++++++++++++1690/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:12,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:13,272 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:33:13,518 > ++++++++++++++크리스탈신소재++++++++++++++++++++1691/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:13,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:13,880 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:33:14,151 > ++++++++++++++크린앤사이언스++++++++++++++++++++1692/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:14,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:14,487 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:33:14,745 > ++++++++++++++클래시스++++++++++++++++++++1693/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:14,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:15,095 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:33:15,341 > ++++++++++++++태웅++++++++++++++++++++1694/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:15,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:15,704 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:33:15,962 > ++++++++++++++테라셈++++++++++++++++++++1695/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:15,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:16,312 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:33:16,558 > ++++++++++++++토박스코리아++++++++++++++++++++1696/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:16,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:16,920 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:33:17,173 > ++++++++++++++티사이언티픽++++++++++++++++++++1697/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:17,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:17,527 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:33:17,768 > ++++++++++++++티씨케이++++++++++++++++++++1698/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:17,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:18,136 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:33:18,391 > ++++++++++++++티케이케미칼++++++++++++++++++++1699/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:18,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:18,742 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:33:19,007 > ++++++++++++++팅크웨어++++++++++++++++++++1700/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:19,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:19,350 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:33:19,592 > ++++++++++++++팜스토리++++++++++++++++++++1701/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:19,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:19,958 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:33:20,221 > ++++++++++++++포인트모바일++++++++++++++++++++1702/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:20,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:20,565 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:33:20,723 > ++++++++++++++푸드나무++++++++++++++++++++1703/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:20,723 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:21,173 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:33:21,399 > ++++++++++++++푸른저축은행++++++++++++++++++++1704/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:21,399 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:21,780 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:33:22,029 > ++++++++++++++프리엠스++++++++++++++++++++1705/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:22,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:22,388 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:33:22,641 > ++++++++++++++플랜티넷++++++++++++++++++++1706/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:22,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:22,996 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:33:23,296 > ++++++++++++++피제이메탈++++++++++++++++++++1707/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:23,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:23,605 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:33:23,845 > ++++++++++++++하나머티리얼즈++++++++++++++++++++1708/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:23,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:24,211 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:33:24,452 > ++++++++++++++한국선재++++++++++++++++++++1709/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:24,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:24,818 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:33:25,104 > ++++++++++++++한국전자인증++++++++++++++++++++1710/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:25,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:25,427 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:33:25,706 > ++++++++++++++한국큐빅++++++++++++++++++++1711/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:25,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:26,036 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:33:26,337 > ++++++++++++++한국파마++++++++++++++++++++1712/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:26,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:26,647 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:33:26,833 > ++++++++++++++한독크린텍++++++++++++++++++++1713/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:26,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:27,256 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:33:27,466 > ++++++++++++++한화플러스제1호스팩++++++++++++++++++++1714/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:27,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:27,864 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:33:28,083 > ++++++++++++++현대사료++++++++++++++++++++1715/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:28,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:28,472 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:33:28,744 > ++++++++++++++현우산업++++++++++++++++++++1716/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:28,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:29,081 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:33:29,369 > ++++++++++++++홈캐스트++++++++++++++++++++1717/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:29,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:29,690 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:33:30,003 > ++++++++++++++휴메딕스++++++++++++++++++++1718/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:30,003 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:30,299 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:33:30,561 > ++++++++++++++휴온스글로벌++++++++++++++++++++1719/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:30,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:30,908 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:33:31,162 > ++++++++++++++흥구석유++++++++++++++++++++1720/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:31,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:31,516 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:33:31,797 > ++++++++++++++3S++++++++++++++++++++1721/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:31,797 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:32,125 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:33:32,415 > ++++++++++++++CJ프레시웨이++++++++++++++++++++1722/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:32,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:32,733 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:33:33,002 > ++++++++++++++JYP Ent.++++++++++++++++++++1723/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:33,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:33,340 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:33:33,606 > ++++++++++++++RFHIC++++++++++++++++++++1724/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:33,606 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:33,947 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:33:34,211 > ++++++++++++++강원++++++++++++++++++++1725/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:34,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:34,556 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:33:34,823 > ++++++++++++++경남제약++++++++++++++++++++1726/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:34,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:35,166 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:33:35,433 > ++++++++++++++고려신용정보++++++++++++++++++++1727/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:35,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:35,775 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:33:36,049 > ++++++++++++++고바이오랩++++++++++++++++++++1728/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:36,049 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:36,384 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:33:36,544 > ++++++++++++++골드퍼시픽++++++++++++++++++++1729/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:36,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:36,992 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:33:37,271 > ++++++++++++++광진실업++++++++++++++++++++1730/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:37,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:37,601 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:33:37,864 > ++++++++++++++그린플러스++++++++++++++++++++1731/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:37,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:38,209 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:33:38,482 > ++++++++++++++기산텔레콤++++++++++++++++++++1732/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:38,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:38,818 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:33:39,082 > ++++++++++++++나무기술++++++++++++++++++++1733/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:39,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:39,426 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:33:39,669 > ++++++++++++++나이스디앤비++++++++++++++++++++1734/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:39,669 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:40,033 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:33:40,293 > ++++++++++++++네패스++++++++++++++++++++1735/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:40,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:40,642 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:33:40,917 > ++++++++++++++대동금속++++++++++++++++++++1736/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:40,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:41,248 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:33:41,528 > ++++++++++++++대림제지++++++++++++++++++++1737/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:41,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:41,856 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:33:42,215 > ++++++++++++++대신정보통신++++++++++++++++++++1738/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:42,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:42,470 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:33:42,740 > ++++++++++++++대한그린파워++++++++++++++++++++1739/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:42,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:43,079 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:33:43,336 > ++++++++++++++동국알앤에스++++++++++++++++++++1740/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:43,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:43,685 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:33:43,937 > ++++++++++++++동우팜투테이블++++++++++++++++++++1741/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:43,938 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:44,295 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:33:44,567 > ++++++++++++++동운아나텍++++++++++++++++++++1742/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:44,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:44,903 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:33:45,196 > ++++++++++++++드림씨아이에스++++++++++++++++++++1743/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:45,196 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:45,513 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:33:45,716 > ++++++++++++++디아이티++++++++++++++++++++1744/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:45,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:46,122 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:33:46,400 > ++++++++++++++디에이치피코리아++++++++++++++++++++1745/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:46,400 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:46,731 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:33:46,993 > ++++++++++++++디케이락++++++++++++++++++++1746/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:46,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:47,339 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:33:47,602 > ++++++++++++++디케이앤디++++++++++++++++++++1747/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:47,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:47,948 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:33:48,196 > ++++++++++++++디케이티++++++++++++++++++++1748/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:48,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:48,556 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:33:48,781 > ++++++++++++++라온시큐어++++++++++++++++++++1749/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:48,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:49,163 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:33:49,465 > ++++++++++++++라파스++++++++++++++++++++1750/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:49,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:49,771 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:33:49,979 > ++++++++++++++리노스++++++++++++++++++++1751/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:49,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:50,377 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:33:50,637 > ++++++++++++++리더스 기술투자++++++++++++++++++++1752/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:50,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:50,985 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:33:51,234 > ++++++++++++++마이크로컨텍솔++++++++++++++++++++1753/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:51,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:51,595 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:33:51,841 > ++++++++++++++메지온++++++++++++++++++++1754/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:51,841 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:52,201 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:33:52,458 > ++++++++++++++모다이노칩++++++++++++++++++++1755/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:52,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:52,808 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:33:53,070 > ++++++++++++++모베이스전자++++++++++++++++++++1756/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:53,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:53,417 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:33:53,658 > ++++++++++++++모비릭스++++++++++++++++++++1757/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:53,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:54,024 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:33:54,207 > ++++++++++++++미디어젠++++++++++++++++++++1758/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:54,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:54,631 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:33:54,887 > ++++++++++++++미래나노텍++++++++++++++++++++1759/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:54,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:55,240 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:33:55,611 > ++++++++++++++미래에셋대우스팩 5호++++++++++++++++++++1760/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:55,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:55,943 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:33:56,130 > ++++++++++++++미래테크놀로지++++++++++++++++++++1761/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:56,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:56,551 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:33:56,813 > ++++++++++++++미투젠++++++++++++++++++++1762/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:56,813 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:57,169 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:33:57,448 > ++++++++++++++바이오리더스++++++++++++++++++++1763/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:57,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:57,782 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:33:58,020 > ++++++++++++++바텍++++++++++++++++++++1764/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:58,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:58,390 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:33:58,653 > ++++++++++++++뷰웍스++++++++++++++++++++1765/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:58,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:58,998 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:33:59,263 > ++++++++++++++브레인콘텐츠++++++++++++++++++++1766/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:59,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:33:59,607 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:33:59,855 > ++++++++++++++블루콤++++++++++++++++++++1767/2895
[DEBUG|open_api.py:656] 2021-02-08 16:33:59,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:00,215 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:34:00,476 > ++++++++++++++비덴트++++++++++++++++++++1768/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:00,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:00,824 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:34:01,070 > ++++++++++++++비에이치++++++++++++++++++++1769/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:01,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:01,432 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:34:01,719 > ++++++++++++++비올++++++++++++++++++++1770/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:01,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:02,039 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:34:02,228 > ++++++++++++++비츠로테크++++++++++++++++++++1771/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:02,229 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:02,647 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:34:02,901 > ++++++++++++++비피도++++++++++++++++++++1772/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:02,902 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:03,254 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:34:03,479 > ++++++++++++++빅텍++++++++++++++++++++1773/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:03,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:03,862 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:34:04,166 > ++++++++++++++삼강엠앤티++++++++++++++++++++1774/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:04,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:04,470 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:34:04,707 > ++++++++++++++삼보산업++++++++++++++++++++1775/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:04,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:05,077 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:34:05,356 > ++++++++++++++삼표시멘트++++++++++++++++++++1776/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:05,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:05,684 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:34:05,936 > ++++++++++++++상상인이안1호스팩++++++++++++++++++++1777/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:05,937 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:06,292 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:34:06,549 > ++++++++++++++상아프론테크++++++++++++++++++++1778/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:06,549 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:06,901 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:34:07,163 > ++++++++++++++서부T&D++++++++++++++++++++1779/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:07,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:07,510 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:34:07,772 > ++++++++++++++석경에이티++++++++++++++++++++1780/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:07,772 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:08,118 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:34:08,302 > ++++++++++++++선광++++++++++++++++++++1781/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:08,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:08,724 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:34:08,983 > ++++++++++++++세진티에스++++++++++++++++++++1782/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:08,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:09,333 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:34:09,598 > ++++++++++++++세화피앤씨++++++++++++++++++++1783/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:09,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:09,941 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:34:10,190 > ++++++++++++++셀레믹스++++++++++++++++++++1784/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:10,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:10,549 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:34:10,709 > ++++++++++++++셀리드++++++++++++++++++++1785/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:10,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:11,156 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:34:11,372 > ++++++++++++++소마젠(Reg.S)++++++++++++++++++++1786/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:11,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:11,764 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:34:11,926 > ++++++++++++++수젠텍++++++++++++++++++++1787/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:11,926 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:12,371 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:34:12,611 > ++++++++++++++스맥++++++++++++++++++++1788/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:12,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:12,977 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:34:13,214 > ++++++++++++++신라섬유++++++++++++++++++++1789/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:13,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:13,586 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:34:13,864 > ++++++++++++++신화콘텍++++++++++++++++++++1790/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:13,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:14,195 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:34:14,463 > ++++++++++++++쎄니트++++++++++++++++++++1791/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:14,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:14,803 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:34:15,057 > ++++++++++++++씨씨에스++++++++++++++++++++1792/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:15,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:15,412 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:34:15,667 > ++++++++++++++씨엔플러스++++++++++++++++++++1793/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:15,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:16,019 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:34:16,295 > ++++++++++++++씨젠++++++++++++++++++++1794/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:16,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:16,627 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:34:16,878 > ++++++++++++++아리온++++++++++++++++++++1795/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:16,879 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:17,236 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:34:17,507 > ++++++++++++++아시아경제++++++++++++++++++++1796/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:17,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:17,844 > 158
[DEBUG|collector_api.py:200] 2021-02-08 16:34:18,207 > ++++++++++++++아이디스홀딩스++++++++++++++++++++1797/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:18,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:18,454 > 159
[DEBUG|collector_api.py:200] 2021-02-08 16:34:18,694 > ++++++++++++++아이쓰리시스템++++++++++++++++++++1798/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:18,695 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:19,061 > 160
[DEBUG|collector_api.py:200] 2021-02-08 16:34:19,298 > ++++++++++++++아주IB투자++++++++++++++++++++1799/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:19,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:19,668 > 161
[DEBUG|collector_api.py:200] 2021-02-08 16:34:19,905 > ++++++++++++++안국약품++++++++++++++++++++1800/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:19,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:20,276 > 162
[DEBUG|collector_api.py:200] 2021-02-08 16:34:20,539 > ++++++++++++++알테오젠++++++++++++++++++++1801/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:20,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:20,885 > 163
[DEBUG|collector_api.py:200] 2021-02-08 16:34:21,138 > ++++++++++++++알톤스포츠++++++++++++++++++++1802/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:21,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:21,493 > 164
[DEBUG|collector_api.py:200] 2021-02-08 16:34:21,767 > ++++++++++++++알파홀딩스++++++++++++++++++++1803/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:21,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:22,101 > 165
[DEBUG|collector_api.py:200] 2021-02-08 16:34:22,374 > ++++++++++++++압타바이오++++++++++++++++++++1804/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:22,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:22,710 > 166
[DEBUG|collector_api.py:200] 2021-02-08 16:34:22,953 > ++++++++++++++야스++++++++++++++++++++1805/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:22,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:23,318 > 167
[DEBUG|collector_api.py:200] 2021-02-08 16:34:23,578 > ++++++++++++++에스맥++++++++++++++++++++1806/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:23,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:23,927 > 168
[DEBUG|collector_api.py:200] 2021-02-08 16:34:24,172 > ++++++++++++++에스에이티++++++++++++++++++++1807/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:24,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:24,534 > 169
[DEBUG|collector_api.py:200] 2021-02-08 16:34:24,793 > ++++++++++++++에스엔유++++++++++++++++++++1808/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:24,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:25,143 > 170
[DEBUG|collector_api.py:200] 2021-02-08 16:34:25,393 > ++++++++++++++에스엠코어++++++++++++++++++++1809/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:25,393 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:25,751 > 171
[DEBUG|collector_api.py:200] 2021-02-08 16:34:26,008 > ++++++++++++++에스티오++++++++++++++++++++1810/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:26,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:26,360 > 172
[DEBUG|collector_api.py:200] 2021-02-08 16:34:26,632 > ++++++++++++++에이치엘비++++++++++++++++++++1811/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:26,633 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:26,970 > 173
[DEBUG|collector_api.py:200] 2021-02-08 16:34:27,245 > ++++++++++++++에이테크솔루션++++++++++++++++++++1812/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:27,246 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:27,579 > 174
[DEBUG|collector_api.py:200] 2021-02-08 16:34:27,822 > ++++++++++++++에코마이스터++++++++++++++++++++1813/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:27,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:28,186 > 175
[DEBUG|collector_api.py:200] 2021-02-08 16:34:28,431 > ++++++++++++++에프엔씨엔터++++++++++++++++++++1814/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:28,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:28,794 > 176
[DEBUG|collector_api.py:200] 2021-02-08 16:34:29,032 > ++++++++++++++엔시트론++++++++++++++++++++1815/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:29,032 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:29,402 > 177
[DEBUG|collector_api.py:200] 2021-02-08 16:34:29,639 > ++++++++++++++엔에프씨++++++++++++++++++++1816/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:29,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:30,009 > 178
[DEBUG|collector_api.py:200] 2021-02-08 16:34:30,188 > ++++++++++++++엘비세미콘++++++++++++++++++++1817/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:30,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:30,617 > 179
[DEBUG|collector_api.py:200] 2021-02-08 16:34:30,883 > ++++++++++++++엘이티++++++++++++++++++++1818/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:30,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:31,225 > 180
[DEBUG|collector_api.py:200] 2021-02-08 16:34:31,420 > ++++++++++++++엠에스씨++++++++++++++++++++1819/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:31,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:31,833 > 181
[DEBUG|collector_api.py:200] 2021-02-08 16:34:32,092 > ++++++++++++++엠젠플러스++++++++++++++++++++1820/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:32,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:32,442 > 182
[DEBUG|collector_api.py:200] 2021-02-08 16:34:32,704 > ++++++++++++++연우++++++++++++++++++++1821/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:32,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:33,050 > 183
[DEBUG|collector_api.py:200] 2021-02-08 16:34:33,345 > ++++++++++++++오디텍++++++++++++++++++++1822/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:33,345 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:33,658 > 184
[DEBUG|collector_api.py:200] 2021-02-08 16:34:33,905 > ++++++++++++++오상자이엘++++++++++++++++++++1823/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:33,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:34,265 > 185
[DEBUG|collector_api.py:200] 2021-02-08 16:34:34,518 > ++++++++++++++오킨스전자++++++++++++++++++++1824/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:34,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:34,874 > 186
[DEBUG|collector_api.py:200] 2021-02-08 16:34:35,115 > ++++++++++++++와이엔텍++++++++++++++++++++1825/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:35,116 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:35,482 > 187
[DEBUG|collector_api.py:200] 2021-02-08 16:34:35,736 > ++++++++++++++와이오엠++++++++++++++++++++1826/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:35,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:36,092 > 188
[DEBUG|collector_api.py:200] 2021-02-08 16:34:36,342 > ++++++++++++++와이지엔터테인먼트++++++++++++++++++++1827/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:36,342 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:36,701 > 189
[DEBUG|collector_api.py:200] 2021-02-08 16:34:36,986 > ++++++++++++++우리기술투자++++++++++++++++++++1828/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:36,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:37,310 > 190
[DEBUG|collector_api.py:200] 2021-02-08 16:34:37,627 > ++++++++++++++우주일렉트로++++++++++++++++++++1829/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:37,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:37,920 > 191
[DEBUG|collector_api.py:200] 2021-02-08 16:34:38,257 > ++++++++++++++웹케시++++++++++++++++++++1830/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:38,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:38,531 > 192
[DEBUG|collector_api.py:200] 2021-02-08 16:34:38,791 > ++++++++++++++위니아딤채++++++++++++++++++++1831/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:38,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:39,139 > 193
[DEBUG|collector_api.py:200] 2021-02-08 16:34:39,388 > ++++++++++++++위더스제약++++++++++++++++++++1832/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:39,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:39,749 > 194
[DEBUG|collector_api.py:200] 2021-02-08 16:34:39,941 > ++++++++++++++위드텍++++++++++++++++++++1833/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:39,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:40,357 > 195
[DEBUG|collector_api.py:200] 2021-02-08 16:34:40,513 > ++++++++++++++위지윅스튜디오++++++++++++++++++++1834/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:40,514 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:40,966 > 196
[DEBUG|collector_api.py:200] 2021-02-08 16:34:41,213 > ++++++++++++++윈스++++++++++++++++++++1835/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:41,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:41,575 > 197
[DEBUG|collector_api.py:200] 2021-02-08 16:34:41,844 > ++++++++++++++윈텍++++++++++++++++++++1836/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:41,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:42,183 > 198
[DEBUG|collector_api.py:200] 2021-02-08 16:34:42,378 > ++++++++++++++유라테크++++++++++++++++++++1837/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:42,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:42,790 > 199
[DEBUG|collector_api.py:200] 2021-02-08 16:34:43,043 > ++++++++++++++유틸렉스++++++++++++++++++++1838/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:43,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:43,398 > 200
[DEBUG|collector_api.py:200] 2021-02-08 16:34:43,622 > ++++++++++++++율호++++++++++++++++++++1839/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:43,623 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:44,006 > 201
[DEBUG|collector_api.py:200] 2021-02-08 16:34:44,267 > ++++++++++++++이그잭스++++++++++++++++++++1840/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:44,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:44,614 > 202
[DEBUG|collector_api.py:200] 2021-02-08 16:34:44,856 > ++++++++++++++이니텍++++++++++++++++++++1841/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:44,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:45,221 > 203
[DEBUG|collector_api.py:200] 2021-02-08 16:34:45,485 > ++++++++++++++이더블유케이++++++++++++++++++++1842/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:45,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:45,828 > 204
[DEBUG|collector_api.py:200] 2021-02-08 16:34:46,073 > ++++++++++++++인지디스플레++++++++++++++++++++1843/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:46,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:46,436 > 205
[DEBUG|collector_api.py:200] 2021-02-08 16:34:46,691 > ++++++++++++++인콘++++++++++++++++++++1844/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:46,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:47,046 > 206
[DEBUG|collector_api.py:200] 2021-02-08 16:34:47,307 > ++++++++++++++인크로스++++++++++++++++++++1845/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:47,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:47,653 > 207
[DEBUG|collector_api.py:200] 2021-02-08 16:34:47,901 > ++++++++++++++일지테크++++++++++++++++++++1846/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:47,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:48,260 > 208
[DEBUG|collector_api.py:200] 2021-02-08 16:34:48,576 > ++++++++++++++제이에스티나++++++++++++++++++++1847/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:48,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:48,885 > 209
[DEBUG|collector_api.py:200] 2021-02-08 16:34:49,180 > ++++++++++++++제이엠아이++++++++++++++++++++1848/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:49,180 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:49,493 > 210
[DEBUG|collector_api.py:200] 2021-02-08 16:34:49,777 > ++++++++++++++제이웨이++++++++++++++++++++1849/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:49,777 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:50,100 > 211
[DEBUG|collector_api.py:200] 2021-02-08 16:34:50,364 > ++++++++++++++제일전기공업++++++++++++++++++++1850/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:50,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:50,708 > 212
[DEBUG|collector_api.py:200] 2021-02-08 16:34:50,884 > ++++++++++++++지니틱스++++++++++++++++++++1851/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:50,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:51,330 > 213
[DEBUG|collector_api.py:200] 2021-02-08 16:34:51,605 > ++++++++++++++진로발효++++++++++++++++++++1852/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:51,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:51,959 > 214
[DEBUG|collector_api.py:200] 2021-02-08 16:34:52,212 > ++++++++++++++체리부로++++++++++++++++++++1853/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:52,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:52,567 > 215
[DEBUG|collector_api.py:200] 2021-02-08 16:34:52,809 > ++++++++++++++케이디켐++++++++++++++++++++1854/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:52,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:53,175 > 216
[DEBUG|collector_api.py:200] 2021-02-08 16:34:53,491 > ++++++++++++++케이씨티++++++++++++++++++++1855/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:53,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:53,783 > 217
[DEBUG|collector_api.py:200] 2021-02-08 16:34:54,035 > ++++++++++++++케이피에스++++++++++++++++++++1856/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:54,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:54,391 > 218
[DEBUG|collector_api.py:200] 2021-02-08 16:34:54,737 > ++++++++++++++코나아이++++++++++++++++++++1857/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:54,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:55,000 > 219
[DEBUG|collector_api.py:200] 2021-02-08 16:34:55,361 > ++++++++++++++코디++++++++++++++++++++1858/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:55,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:55,610 > 220
[DEBUG|collector_api.py:200] 2021-02-08 16:34:55,852 > ++++++++++++++코리아에스이++++++++++++++++++++1859/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:55,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:56,219 > 221
[DEBUG|collector_api.py:200] 2021-02-08 16:34:56,524 > ++++++++++++++코스나인++++++++++++++++++++1860/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:56,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:56,826 > 222
[DEBUG|collector_api.py:200] 2021-02-08 16:34:57,071 > ++++++++++++++코아스템++++++++++++++++++++1861/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:57,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:57,435 > 223
[DEBUG|collector_api.py:200] 2021-02-08 16:34:57,709 > ++++++++++++++큐렉소++++++++++++++++++++1862/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:57,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:58,060 > 224
[DEBUG|collector_api.py:200] 2021-02-08 16:34:58,346 > ++++++++++++++큐로컴++++++++++++++++++++1863/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:58,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:58,691 > 225
[DEBUG|collector_api.py:200] 2021-02-08 16:34:58,957 > ++++++++++++++태양++++++++++++++++++++1864/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:58,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:59,299 > 226
[DEBUG|collector_api.py:200] 2021-02-08 16:34:59,577 > ++++++++++++++테크윙++++++++++++++++++++1865/2895
[DEBUG|open_api.py:656] 2021-02-08 16:34:59,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:34:59,906 > 227
[DEBUG|collector_api.py:200] 2021-02-08 16:35:00,155 > ++++++++++++++투비소프트++++++++++++++++++++1866/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:00,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:00,515 > 228
[DEBUG|collector_api.py:200] 2021-02-08 16:35:00,766 > ++++++++++++++티엘아이++++++++++++++++++++1867/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:00,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:01,123 > 229
[DEBUG|collector_api.py:200] 2021-02-08 16:35:01,379 > ++++++++++++++티움바이오++++++++++++++++++++1868/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:01,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:01,730 > 230
[DEBUG|collector_api.py:200] 2021-02-08 16:35:01,956 > ++++++++++++++파인테크닉스++++++++++++++++++++1869/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:01,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:02,340 > 231
[DEBUG|collector_api.py:200] 2021-02-08 16:35:02,587 > ++++++++++++++팜스빌++++++++++++++++++++1870/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:02,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:02,947 > 232
[DEBUG|collector_api.py:200] 2021-02-08 16:35:03,161 > ++++++++++++++팬스타엔터프라이즈++++++++++++++++++++1871/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:03,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:03,565 > 233
[DEBUG|collector_api.py:200] 2021-02-08 16:35:03,832 > ++++++++++++++펄어비스++++++++++++++++++++1872/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:03,832 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:04,180 > 234
[DEBUG|collector_api.py:200] 2021-02-08 16:35:04,450 > ++++++++++++++평화정공++++++++++++++++++++1873/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:04,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:04,789 > 235
[DEBUG|collector_api.py:200] 2021-02-08 16:35:05,023 > ++++++++++++++포메탈++++++++++++++++++++1874/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:05,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:05,398 > 236
[DEBUG|collector_api.py:200] 2021-02-08 16:35:05,635 > ++++++++++++++포스코 ICT++++++++++++++++++++1875/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:05,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:06,005 > 237
[DEBUG|collector_api.py:200] 2021-02-08 16:35:06,280 > ++++++++++++++플레이위드++++++++++++++++++++1876/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:06,280 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:06,625 > 238
[DEBUG|collector_api.py:200] 2021-02-08 16:35:06,952 > ++++++++++++++피씨엘++++++++++++++++++++1877/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:06,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:07,232 > 239
[DEBUG|collector_api.py:200] 2021-02-08 16:35:07,475 > ++++++++++++++피피아이++++++++++++++++++++1878/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:07,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:07,839 > 240
[DEBUG|collector_api.py:200] 2021-02-08 16:35:08,083 > ++++++++++++++한국제8호스팩++++++++++++++++++++1879/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:08,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:08,447 > 241
[DEBUG|collector_api.py:200] 2021-02-08 16:35:08,672 > ++++++++++++++한솔인티큐브++++++++++++++++++++1880/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:08,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:09,054 > 242
[DEBUG|collector_api.py:200] 2021-02-08 16:35:09,426 > ++++++++++++++한창산업++++++++++++++++++++1881/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:09,426 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:09,662 > 243
[DEBUG|collector_api.py:200] 2021-02-08 16:35:09,914 > ++++++++++++++한컴MDS++++++++++++++++++++1882/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:09,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:10,270 > 244
[DEBUG|collector_api.py:200] 2021-02-08 16:35:10,516 > ++++++++++++++한화에스비아이스팩++++++++++++++++++++1883/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:10,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:10,876 > 245
[DEBUG|collector_api.py:200] 2021-02-08 16:35:11,118 > ++++++++++++++핸디소프트++++++++++++++++++++1884/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:11,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:11,484 > 246
[DEBUG|collector_api.py:200] 2021-02-08 16:35:11,720 > ++++++++++++++현대공업++++++++++++++++++++1885/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:11,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:12,091 > 247
[DEBUG|collector_api.py:200] 2021-02-08 16:35:12,336 > ++++++++++++++화신정공++++++++++++++++++++1886/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:12,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:12,701 > 248
[DEBUG|collector_api.py:200] 2021-02-08 16:35:12,984 > ++++++++++++++휴마시스++++++++++++++++++++1887/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:12,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:13,308 > 249
[DEBUG|collector_api.py:200] 2021-02-08 16:35:13,618 > ++++++++++++++휴비츠++++++++++++++++++++1888/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:13,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:13,916 > 250
[DEBUG|collector_api.py:200] 2021-02-08 16:35:14,157 > ++++++++++++++흥국++++++++++++++++++++1889/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:14,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:14,523 > 251
[DEBUG|collector_api.py:200] 2021-02-08 16:35:14,761 > ++++++++++++++GV++++++++++++++++++++1890/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:14,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:15,130 > 252
[DEBUG|collector_api.py:200] 2021-02-08 16:35:15,387 > ++++++++++++++HB테크놀러지++++++++++++++++++++1891/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:15,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:15,747 > 253
[DEBUG|collector_api.py:200] 2021-02-08 16:35:16,005 > ++++++++++++++IBKS제12호스팩++++++++++++++++++++1892/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:16,006 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:16,363 > 254
[DEBUG|collector_api.py:200] 2021-02-08 16:35:16,661 > ++++++++++++++ISC++++++++++++++++++++1893/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:16,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:16,971 > 255
[DEBUG|collector_api.py:200] 2021-02-08 16:35:17,236 > ++++++++++++++KG이니시스++++++++++++++++++++1894/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:17,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:17,579 > 256
[DEBUG|collector_api.py:200] 2021-02-08 16:35:17,819 > ++++++++++++++NE능률++++++++++++++++++++1895/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:17,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:18,187 > 257
[DEBUG|collector_api.py:200] 2021-02-08 16:35:18,448 > ++++++++++++++NHN한국사이버결제++++++++++++++++++++1896/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:18,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:18,793 > 258
[DEBUG|collector_api.py:200] 2021-02-08 16:35:19,047 > ++++++++++++++SBI인베스트먼트++++++++++++++++++++1897/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:19,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:19,401 > 259
[DEBUG|collector_api.py:200] 2021-02-08 16:35:19,634 > ++++++++++++++SG++++++++++++++++++++1898/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:19,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:20,009 > 260
[DEBUG|collector_api.py:200] 2021-02-08 16:35:20,270 > ++++++++++++++갤럭시아머니트리++++++++++++++++++++1899/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:20,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:20,616 > 261
[DEBUG|collector_api.py:200] 2021-02-08 16:35:20,876 > ++++++++++++++고려제약++++++++++++++++++++1900/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:20,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:21,224 > 262
[DEBUG|collector_api.py:200] 2021-02-08 16:35:21,483 > ++++++++++++++국일제지++++++++++++++++++++1901/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:21,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:21,831 > 263
[DEBUG|collector_api.py:200] 2021-02-08 16:35:22,086 > ++++++++++++++금강철강++++++++++++++++++++1902/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:22,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:22,439 > 264
[DEBUG|collector_api.py:200] 2021-02-08 16:35:22,677 > ++++++++++++++기가레인++++++++++++++++++++1903/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:22,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:23,048 > 265
[DEBUG|collector_api.py:200] 2021-02-08 16:35:23,306 > ++++++++++++++나노스++++++++++++++++++++1904/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:23,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:23,655 > 266
[DEBUG|collector_api.py:200] 2021-02-08 16:35:23,894 > ++++++++++++++나노캠텍++++++++++++++++++++1905/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:23,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:24,262 > 267
[DEBUG|collector_api.py:200] 2021-02-08 16:35:24,517 > ++++++++++++++나라엠앤디++++++++++++++++++++1906/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:24,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:24,871 > 268
[DEBUG|collector_api.py:200] 2021-02-08 16:35:25,147 > ++++++++++++++나우IB++++++++++++++++++++1907/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:25,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:25,479 > 269
[DEBUG|collector_api.py:200] 2021-02-08 16:35:25,727 > ++++++++++++++내츄럴엔도텍++++++++++++++++++++1908/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:25,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:26,086 > 270
[DEBUG|collector_api.py:200] 2021-02-08 16:35:26,343 > ++++++++++++++네오펙트++++++++++++++++++++1909/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:26,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:26,694 > 271
[DEBUG|collector_api.py:200] 2021-02-08 16:35:26,921 > ++++++++++++++녹십자엠에스++++++++++++++++++++1910/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:26,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:27,301 > 272
[DEBUG|collector_api.py:200] 2021-02-08 16:35:27,535 > ++++++++++++++뉴지랩++++++++++++++++++++1911/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:27,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:27,910 > 273
[DEBUG|collector_api.py:200] 2021-02-08 16:35:28,145 > ++++++++++++++대동기어++++++++++++++++++++1912/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:28,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:28,518 > 274
[DEBUG|collector_api.py:200] 2021-02-08 16:35:28,769 > ++++++++++++++대륙제관++++++++++++++++++++1913/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:28,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:29,126 > 275
[DEBUG|collector_api.py:200] 2021-02-08 16:35:29,392 > ++++++++++++++대모++++++++++++++++++++1914/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:29,392 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:29,735 > 276
[DEBUG|collector_api.py:200] 2021-02-08 16:35:29,945 > ++++++++++++++대보마그네틱++++++++++++++++++++1915/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:29,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:30,343 > 277
[DEBUG|collector_api.py:200] 2021-02-08 16:35:30,575 > ++++++++++++++대성엘텍++++++++++++++++++++1916/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:30,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:30,950 > 278
[DEBUG|collector_api.py:200] 2021-02-08 16:35:31,206 > ++++++++++++++대성창투++++++++++++++++++++1917/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:31,206 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:31,557 > 279
[DEBUG|collector_api.py:200] 2021-02-08 16:35:31,864 > ++++++++++++++대양제지++++++++++++++++++++1918/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:31,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:32,166 > 280
[DEBUG|collector_api.py:200] 2021-02-08 16:35:32,456 > ++++++++++++++대정화금++++++++++++++++++++1919/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:32,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:32,774 > 281
[DEBUG|collector_api.py:200] 2021-02-08 16:35:33,006 > ++++++++++++++대창스틸++++++++++++++++++++1920/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:33,006 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:33,381 > 282
[DEBUG|collector_api.py:200] 2021-02-08 16:35:33,618 > ++++++++++++++덕우전자++++++++++++++++++++1921/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:33,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:33,989 > 283
[DEBUG|collector_api.py:200] 2021-02-08 16:35:34,256 > ++++++++++++++데브시스터즈++++++++++++++++++++1922/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:34,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:34,597 > 284
[DEBUG|collector_api.py:200] 2021-02-08 16:35:34,833 > ++++++++++++++동성화인텍++++++++++++++++++++1923/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:34,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:35,204 > 285
[DEBUG|collector_api.py:200] 2021-02-08 16:35:35,466 > ++++++++++++++동양에스텍++++++++++++++++++++1924/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:35,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:35,812 > 286
[DEBUG|collector_api.py:200] 2021-02-08 16:35:36,084 > ++++++++++++++동양이엔피++++++++++++++++++++1925/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:36,085 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:36,420 > 287
[DEBUG|collector_api.py:200] 2021-02-08 16:35:36,652 > ++++++++++++++동일철강++++++++++++++++++++1926/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:36,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:37,026 > 288
[DEBUG|collector_api.py:200] 2021-02-08 16:35:37,287 > ++++++++++++++디스플레이텍++++++++++++++++++++1927/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:37,287 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:37,634 > 289
[DEBUG|collector_api.py:200] 2021-02-08 16:35:37,879 > ++++++++++++++디에스케이++++++++++++++++++++1928/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:37,880 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:38,242 > 290
[DEBUG|collector_api.py:200] 2021-02-08 16:35:38,510 > ++++++++++++++디자인++++++++++++++++++++1929/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:38,510 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:38,849 > 291
[DEBUG|collector_api.py:200] 2021-02-08 16:35:39,077 > ++++++++++++++디젠스++++++++++++++++++++1930/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:39,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:39,457 > 292
[DEBUG|collector_api.py:200] 2021-02-08 16:35:39,727 > ++++++++++++++러셀++++++++++++++++++++1931/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:39,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:40,065 > 293
[DEBUG|collector_api.py:200] 2021-02-08 16:35:40,307 > ++++++++++++++레이++++++++++++++++++++1932/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:40,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:40,672 > 294
[DEBUG|collector_api.py:200] 2021-02-08 16:35:40,883 > ++++++++++++++매일유업++++++++++++++++++++1933/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:40,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:41,280 > 295
[DEBUG|collector_api.py:200] 2021-02-08 16:35:41,527 > ++++++++++++++맥스로텍++++++++++++++++++++1934/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:41,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:41,887 > 296
[DEBUG|collector_api.py:200] 2021-02-08 16:35:42,135 > ++++++++++++++멀티캠퍼스++++++++++++++++++++1935/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:42,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:42,494 > 297
[DEBUG|collector_api.py:200] 2021-02-08 16:35:42,741 > ++++++++++++++메가스터디++++++++++++++++++++1936/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:42,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:43,103 > 298
[DEBUG|collector_api.py:200] 2021-02-08 16:35:43,481 > ++++++++++++++메디프론++++++++++++++++++++1937/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:43,481 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:43,710 > 299
[DEBUG|collector_api.py:200] 2021-02-08 16:35:43,983 > ++++++++++++++모바일어플라이언스++++++++++++++++++++1938/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:43,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:44,318 > 300
[DEBUG|collector_api.py:200] 2021-02-08 16:35:44,562 > ++++++++++++++미투온++++++++++++++++++++1939/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:44,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:44,928 > 301
[DEBUG|collector_api.py:200] 2021-02-08 16:35:45,158 > ++++++++++++++바른손++++++++++++++++++++1940/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:45,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:45,535 > 302
[DEBUG|collector_api.py:200] 2021-02-08 16:35:45,798 > ++++++++++++++바이오로그디바이스++++++++++++++++++++1941/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:45,798 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:46,142 > 303
[DEBUG|collector_api.py:200] 2021-02-08 16:35:46,438 > ++++++++++++++바이오솔루션++++++++++++++++++++1942/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:46,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:46,752 > 304
[DEBUG|collector_api.py:200] 2021-02-08 16:35:46,975 > ++++++++++++++바이오톡스텍++++++++++++++++++++1943/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:46,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:47,360 > 305
[DEBUG|collector_api.py:200] 2021-02-08 16:35:47,598 > ++++++++++++++버추얼텍++++++++++++++++++++1944/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:47,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:47,968 > 306
[DEBUG|collector_api.py:200] 2021-02-08 16:35:48,219 > ++++++++++++++베스파++++++++++++++++++++1945/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:48,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:48,577 > 307
[DEBUG|collector_api.py:200] 2021-02-08 16:35:48,893 > ++++++++++++++비나텍++++++++++++++++++++1946/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:48,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:49,185 > 308
[DEBUG|collector_api.py:200] 2021-02-08 16:35:49,424 > ++++++++++++++빅솔론++++++++++++++++++++1947/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:49,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:49,791 > 309
[DEBUG|collector_api.py:200] 2021-02-08 16:35:50,035 > ++++++++++++++삼목에스폼++++++++++++++++++++1948/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:50,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:50,400 > 310
[DEBUG|collector_api.py:200] 2021-02-08 16:35:50,656 > ++++++++++++++삼성스팩2호++++++++++++++++++++1949/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:50,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:51,008 > 311
[DEBUG|collector_api.py:200] 2021-02-08 16:35:51,288 > ++++++++++++++상상인++++++++++++++++++++1950/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:51,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:51,619 > 312
[DEBUG|collector_api.py:200] 2021-02-08 16:35:51,916 > ++++++++++++++상신전자++++++++++++++++++++1951/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:51,916 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:52,227 > 313
[DEBUG|collector_api.py:200] 2021-02-08 16:35:52,486 > ++++++++++++++서진시스템++++++++++++++++++++1952/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:52,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:52,835 > 314
[DEBUG|collector_api.py:200] 2021-02-08 16:35:53,145 > ++++++++++++++서플러스글로벌++++++++++++++++++++1953/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:53,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:53,443 > 315
[DEBUG|collector_api.py:200] 2021-02-08 16:35:53,673 > ++++++++++++++선익시스템++++++++++++++++++++1954/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:53,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:54,051 > 316
[DEBUG|collector_api.py:200] 2021-02-08 16:35:54,386 > ++++++++++++++성광벤드++++++++++++++++++++1955/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:54,387 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:54,660 > 317
[DEBUG|collector_api.py:200] 2021-02-08 16:35:54,936 > ++++++++++++++소프트센++++++++++++++++++++1956/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:54,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:55,268 > 318
[DEBUG|collector_api.py:200] 2021-02-08 16:35:55,518 > ++++++++++++++스타모빌리티++++++++++++++++++++1957/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:55,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:55,876 > 319
[DEBUG|collector_api.py:200] 2021-02-08 16:35:56,138 > ++++++++++++++신진에스엠++++++++++++++++++++1958/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:56,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:56,486 > 320
[DEBUG|collector_api.py:200] 2021-02-08 16:35:56,726 > ++++++++++++++심텍홀딩스++++++++++++++++++++1959/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:56,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:57,092 > 321
[DEBUG|collector_api.py:200] 2021-02-08 16:35:57,422 > ++++++++++++++쎌바이오텍++++++++++++++++++++1960/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:57,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:57,701 > 322
[DEBUG|collector_api.py:200] 2021-02-08 16:35:57,968 > ++++++++++++++씨티케이코스메틱스++++++++++++++++++++1961/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:57,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:58,308 > 323
[DEBUG|collector_api.py:200] 2021-02-08 16:35:58,546 > ++++++++++++++아래스++++++++++++++++++++1962/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:58,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:58,916 > 324
[DEBUG|collector_api.py:200] 2021-02-08 16:35:59,180 > ++++++++++++++아모그린텍++++++++++++++++++++1963/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:59,180 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:35:59,525 > 325
[DEBUG|collector_api.py:200] 2021-02-08 16:35:59,776 > ++++++++++++++아미노로직스++++++++++++++++++++1964/2895
[DEBUG|open_api.py:656] 2021-02-08 16:35:59,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:00,134 > 326
[DEBUG|collector_api.py:200] 2021-02-08 16:36:00,435 > ++++++++++++++아바텍++++++++++++++++++++1965/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:00,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:00,742 > 327
[DEBUG|collector_api.py:200] 2021-02-08 16:36:00,986 > ++++++++++++++아이디스++++++++++++++++++++1966/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:00,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:01,352 > 328
[DEBUG|collector_api.py:200] 2021-02-08 16:36:01,627 > ++++++++++++++아이비김영++++++++++++++++++++1967/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:01,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:01,962 > 329
[DEBUG|collector_api.py:200] 2021-02-08 16:36:02,280 > ++++++++++++++아이앤씨++++++++++++++++++++1968/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:02,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:02,627 > 330
[DEBUG|collector_api.py:200] 2021-02-08 16:36:02,902 > ++++++++++++++아이에스이커머스++++++++++++++++++++1969/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:02,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:03,236 > 331
[DEBUG|collector_api.py:200] 2021-02-08 16:36:03,479 > ++++++++++++++아이엠++++++++++++++++++++1970/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:03,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:03,844 > 332
[DEBUG|collector_api.py:200] 2021-02-08 16:36:04,096 > ++++++++++++++아이엠텍++++++++++++++++++++1971/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:04,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:04,453 > 333
[DEBUG|collector_api.py:200] 2021-02-08 16:36:04,819 > ++++++++++++++아진엑스텍++++++++++++++++++++1972/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:04,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:05,061 > 334
[DEBUG|collector_api.py:200] 2021-02-08 16:36:05,306 > ++++++++++++++아톤++++++++++++++++++++1973/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:05,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:05,668 > 335
[DEBUG|collector_api.py:200] 2021-02-08 16:36:05,853 > ++++++++++++++알엔투테크놀로지++++++++++++++++++++1974/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:05,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:06,275 > 336
[DEBUG|collector_api.py:200] 2021-02-08 16:36:06,568 > ++++++++++++++압타머사이언스++++++++++++++++++++1975/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:06,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:06,883 > 337
[DEBUG|collector_api.py:200] 2021-02-08 16:36:07,052 > ++++++++++++++액토즈소프트++++++++++++++++++++1976/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:07,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:07,490 > 338
[DEBUG|collector_api.py:200] 2021-02-08 16:36:07,744 > ++++++++++++++앤씨앤++++++++++++++++++++1977/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:07,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:08,098 > 339
[DEBUG|collector_api.py:200] 2021-02-08 16:36:08,355 > ++++++++++++++에스엠++++++++++++++++++++1978/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:08,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:08,708 > 340
[DEBUG|collector_api.py:200] 2021-02-08 16:36:08,974 > ++++++++++++++에스티아이++++++++++++++++++++1979/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:08,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:09,316 > 341
[DEBUG|collector_api.py:200] 2021-02-08 16:36:09,615 > ++++++++++++++에이치엘비제약++++++++++++++++++++1980/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:09,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:09,924 > 342
[DEBUG|collector_api.py:200] 2021-02-08 16:36:10,178 > ++++++++++++++에이치케이++++++++++++++++++++1981/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:10,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:10,532 > 343
[DEBUG|collector_api.py:200] 2021-02-08 16:36:10,802 > ++++++++++++++에이텍++++++++++++++++++++1982/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:10,802 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:11,140 > 344
[DEBUG|collector_api.py:200] 2021-02-08 16:36:11,395 > ++++++++++++++에코프로++++++++++++++++++++1983/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:11,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:11,746 > 345
[DEBUG|collector_api.py:200] 2021-02-08 16:36:12,067 > ++++++++++++++에코프로비엠++++++++++++++++++++1984/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:12,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:12,353 > 346
[DEBUG|collector_api.py:200] 2021-02-08 16:36:12,563 > ++++++++++++++엔비티++++++++++++++++++++1985/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:12,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:12,960 > 347
[DEBUG|collector_api.py:200] 2021-02-08 16:36:13,120 > ++++++++++++++엔에이치스팩17호++++++++++++++++++++1986/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:13,121 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:13,570 > 348
[DEBUG|collector_api.py:200] 2021-02-08 16:36:13,727 > ++++++++++++++엔에이치스팩18호++++++++++++++++++++1987/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:13,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:14,179 > 349
[DEBUG|collector_api.py:200] 2021-02-08 16:36:14,340 > ++++++++++++++엘앤케이바이오++++++++++++++++++++1988/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:14,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:14,787 > 350
[DEBUG|collector_api.py:200] 2021-02-08 16:36:15,033 > ++++++++++++++오리엔탈정공++++++++++++++++++++1989/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:15,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:15,395 > 351
[DEBUG|collector_api.py:200] 2021-02-08 16:36:15,663 > ++++++++++++++오리콤++++++++++++++++++++1990/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:15,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:16,002 > 352
[DEBUG|collector_api.py:200] 2021-02-08 16:36:16,279 > ++++++++++++++오션브릿지++++++++++++++++++++1991/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:16,279 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:16,609 > 353
[DEBUG|collector_api.py:200] 2021-02-08 16:36:16,856 > ++++++++++++++오스템++++++++++++++++++++1992/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:16,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:17,217 > 354
[DEBUG|collector_api.py:200] 2021-02-08 16:36:17,473 > ++++++++++++++우리기술++++++++++++++++++++1993/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:17,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:17,825 > 355
[DEBUG|collector_api.py:200] 2021-02-08 16:36:18,090 > ++++++++++++++우리로++++++++++++++++++++1994/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:18,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:18,433 > 356
[DEBUG|collector_api.py:200] 2021-02-08 16:36:18,704 > ++++++++++++++우정바이오++++++++++++++++++++1995/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:18,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:19,060 > 357
[DEBUG|collector_api.py:200] 2021-02-08 16:36:19,310 > ++++++++++++++원방테크++++++++++++++++++++1996/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:19,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:19,668 > 358
[DEBUG|collector_api.py:200] 2021-02-08 16:36:19,841 > ++++++++++++++원익홀딩스++++++++++++++++++++1997/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:19,842 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:20,275 > 359
[DEBUG|collector_api.py:200] 2021-02-08 16:36:20,546 > ++++++++++++++월덱스++++++++++++++++++++1998/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:20,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:20,883 > 360
[DEBUG|collector_api.py:200] 2021-02-08 16:36:21,132 > ++++++++++++++웰크론한텍++++++++++++++++++++1999/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:21,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:21,491 > 361
[DEBUG|collector_api.py:200] 2021-02-08 16:36:21,734 > ++++++++++++++웹스++++++++++++++++++++2000/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:21,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:22,097 > 362
[DEBUG|collector_api.py:200] 2021-02-08 16:36:22,364 > ++++++++++++++윙입푸드++++++++++++++++++++2001/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:22,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:22,704 > 363
[DEBUG|collector_api.py:200] 2021-02-08 16:36:23,000 > ++++++++++++++유니셈++++++++++++++++++++2002/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:23,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:23,312 > 364
[DEBUG|collector_api.py:200] 2021-02-08 16:36:23,654 > ++++++++++++++유니트론텍++++++++++++++++++++2003/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:23,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:23,946 > 365
[DEBUG|collector_api.py:200] 2021-02-08 16:36:24,181 > ++++++++++++++유진기업++++++++++++++++++++2004/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:24,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:24,554 > 366
[DEBUG|collector_api.py:200] 2021-02-08 16:36:24,821 > ++++++++++++++유진로봇++++++++++++++++++++2005/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:24,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:25,161 > 367
[DEBUG|collector_api.py:200] 2021-02-08 16:36:25,434 > ++++++++++++++이노와이즈++++++++++++++++++++2006/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:25,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:25,771 > 368
[DEBUG|collector_api.py:200] 2021-02-08 16:36:26,048 > ++++++++++++++이노인스트루먼트++++++++++++++++++++2007/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:26,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:26,378 > 369
[DEBUG|collector_api.py:200] 2021-02-08 16:36:26,721 > ++++++++++++++이라이콤++++++++++++++++++++2008/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:26,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:26,987 > 370
[DEBUG|collector_api.py:200] 2021-02-08 16:36:27,226 > ++++++++++++++이베스트투자증권++++++++++++++++++++2009/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:27,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:27,595 > 371
[DEBUG|collector_api.py:200] 2021-02-08 16:36:27,838 > ++++++++++++++이엑스티++++++++++++++++++++2010/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:27,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:28,202 > 372
[DEBUG|collector_api.py:200] 2021-02-08 16:36:28,455 > ++++++++++++++이원컴포텍++++++++++++++++++++2011/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:28,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:28,810 > 373
[DEBUG|collector_api.py:200] 2021-02-08 16:36:29,158 > ++++++++++++++이지웰++++++++++++++++++++2012/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:29,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:29,419 > 374
[DEBUG|collector_api.py:200] 2021-02-08 16:36:29,659 > ++++++++++++++이크레더블++++++++++++++++++++2013/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:29,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:30,026 > 375
[DEBUG|collector_api.py:200] 2021-02-08 16:36:30,275 > ++++++++++++++이화전기++++++++++++++++++++2014/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:30,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:30,633 > 376
[DEBUG|collector_api.py:200] 2021-02-08 16:36:30,894 > ++++++++++++++인트로메딕++++++++++++++++++++2015/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:30,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:31,241 > 377
[DEBUG|collector_api.py:200] 2021-02-08 16:36:31,501 > ++++++++++++++인트론바이오++++++++++++++++++++2016/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:31,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:31,848 > 378
[DEBUG|collector_api.py:200] 2021-02-08 16:36:32,089 > ++++++++++++++인프라웨어++++++++++++++++++++2017/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:32,089 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:32,457 > 379
[DEBUG|collector_api.py:200] 2021-02-08 16:36:32,706 > ++++++++++++++일야++++++++++++++++++++2018/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:32,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:33,065 > 380
[DEBUG|collector_api.py:200] 2021-02-08 16:36:33,349 > ++++++++++++++일진파워++++++++++++++++++++2019/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:33,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:33,673 > 381
[DEBUG|collector_api.py:200] 2021-02-08 16:36:33,951 > ++++++++++++++제노포커스++++++++++++++++++++2020/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:33,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:34,279 > 382
[DEBUG|collector_api.py:200] 2021-02-08 16:36:34,540 > ++++++++++++++제닉++++++++++++++++++++2021/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:34,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:34,887 > 383
[DEBUG|collector_api.py:200] 2021-02-08 16:36:35,128 > ++++++++++++++제룡산업++++++++++++++++++++2022/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:35,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:35,494 > 384
[DEBUG|collector_api.py:200] 2021-02-08 16:36:35,756 > ++++++++++++++젠큐릭스++++++++++++++++++++2023/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:35,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:36,102 > 385
[DEBUG|collector_api.py:200] 2021-02-08 16:36:36,359 > ++++++++++++++중앙에너비스++++++++++++++++++++2024/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:36,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:36,709 > 386
[DEBUG|collector_api.py:200] 2021-02-08 16:36:36,967 > ++++++++++++++지엘팜텍++++++++++++++++++++2025/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:36,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:37,340 > 387
[DEBUG|collector_api.py:200] 2021-02-08 16:36:37,591 > ++++++++++++++진매트릭스++++++++++++++++++++2026/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:37,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:37,955 > 388
[DEBUG|collector_api.py:200] 2021-02-08 16:36:38,239 > ++++++++++++++창해에탄올++++++++++++++++++++2027/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:38,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:38,562 > 389
[DEBUG|collector_api.py:200] 2021-02-08 16:36:38,795 > ++++++++++++++청담러닝++++++++++++++++++++2028/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:38,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:39,171 > 390
[DEBUG|collector_api.py:200] 2021-02-08 16:36:39,441 > ++++++++++++++청보산업++++++++++++++++++++2029/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:39,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:39,780 > 391
[DEBUG|collector_api.py:200] 2021-02-08 16:36:40,026 > ++++++++++++++컬러레이++++++++++++++++++++2030/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:40,026 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:40,387 > 392
[DEBUG|collector_api.py:200] 2021-02-08 16:36:40,628 > ++++++++++++++케어랩스++++++++++++++++++++2031/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:40,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:40,996 > 393
[DEBUG|collector_api.py:200] 2021-02-08 16:36:41,330 > ++++++++++++++케어젠++++++++++++++++++++2032/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:41,331 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:41,604 > 394
[DEBUG|collector_api.py:200] 2021-02-08 16:36:41,877 > ++++++++++++++케이엔제이++++++++++++++++++++2033/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:41,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:42,210 > 395
[DEBUG|collector_api.py:200] 2021-02-08 16:36:42,407 > ++++++++++++++케이엠++++++++++++++++++++2034/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:42,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:42,818 > 396
[DEBUG|collector_api.py:200] 2021-02-08 16:36:43,057 > ++++++++++++++케이엠제약++++++++++++++++++++2035/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:43,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:43,426 > 397
[DEBUG|collector_api.py:200] 2021-02-08 16:36:43,658 > ++++++++++++++케이프++++++++++++++++++++2036/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:43,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:44,033 > 398
[DEBUG|collector_api.py:200] 2021-02-08 16:36:44,298 > ++++++++++++++켐트로닉스++++++++++++++++++++2037/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:44,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:44,640 > 399
[DEBUG|collector_api.py:200] 2021-02-08 16:36:44,882 > ++++++++++++++켐트로스++++++++++++++++++++2038/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:44,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:45,248 > 400
[DEBUG|collector_api.py:200] 2021-02-08 16:36:45,500 > ++++++++++++++코다코++++++++++++++++++++2039/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:45,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:45,855 > 401
[DEBUG|collector_api.py:200] 2021-02-08 16:36:46,090 > ++++++++++++++코리아에프티++++++++++++++++++++2040/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:46,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:46,463 > 402
[DEBUG|collector_api.py:200] 2021-02-08 16:36:46,707 > ++++++++++++++코센++++++++++++++++++++2041/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:46,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:47,070 > 403
[DEBUG|collector_api.py:200] 2021-02-08 16:36:47,343 > ++++++++++++++코퍼스코리아++++++++++++++++++++2042/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:47,343 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:47,678 > 404
[DEBUG|collector_api.py:200] 2021-02-08 16:36:48,022 > ++++++++++++++큐로홀딩스++++++++++++++++++++2043/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:48,022 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:48,286 > 405
[DEBUG|collector_api.py:200] 2021-02-08 16:36:48,555 > ++++++++++++++티피씨글로벌++++++++++++++++++++2044/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:48,556 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:48,894 > 406
[DEBUG|collector_api.py:200] 2021-02-08 16:36:49,133 > ++++++++++++++파크시스템스++++++++++++++++++++2045/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:49,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:49,502 > 407
[DEBUG|collector_api.py:200] 2021-02-08 16:36:49,749 > ++++++++++++++파트론++++++++++++++++++++2046/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:49,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:50,114 > 408
[DEBUG|collector_api.py:200] 2021-02-08 16:36:50,379 > ++++++++++++++판타지오++++++++++++++++++++2047/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:50,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:50,723 > 409
[DEBUG|collector_api.py:200] 2021-02-08 16:36:51,020 > ++++++++++++++팬젠++++++++++++++++++++2048/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:51,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:51,347 > 410
[DEBUG|collector_api.py:200] 2021-02-08 16:36:51,575 > ++++++++++++++포스코엠텍++++++++++++++++++++2049/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:51,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:51,954 > 411
[DEBUG|collector_api.py:200] 2021-02-08 16:36:52,218 > ++++++++++++++포인트엔지니어링++++++++++++++++++++2050/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:52,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:52,562 > 412
[DEBUG|collector_api.py:200] 2021-02-08 16:36:52,805 > ++++++++++++++포티스++++++++++++++++++++2051/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:52,806 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:53,169 > 413
[DEBUG|collector_api.py:200] 2021-02-08 16:36:53,411 > ++++++++++++++피앤씨테크++++++++++++++++++++2052/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:53,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:53,776 > 414
[DEBUG|collector_api.py:200] 2021-02-08 16:36:54,018 > ++++++++++++++필로시스헬스케어++++++++++++++++++++2053/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:54,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:54,384 > 415
[DEBUG|collector_api.py:200] 2021-02-08 16:36:54,671 > ++++++++++++++하나머스트제6호스팩++++++++++++++++++++2054/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:54,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:54,990 > 416
[DEBUG|collector_api.py:200] 2021-02-08 16:36:55,221 > ++++++++++++++하림지주++++++++++++++++++++2055/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:55,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:55,598 > 417
[DEBUG|collector_api.py:200] 2021-02-08 16:36:55,838 > ++++++++++++++하이제5호스팩++++++++++++++++++++2056/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:55,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:56,206 > 418
[DEBUG|collector_api.py:200] 2021-02-08 16:36:56,405 > ++++++++++++++하이텍팜++++++++++++++++++++2057/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:56,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:56,816 > 419
[DEBUG|collector_api.py:200] 2021-02-08 16:36:57,191 > ++++++++++++++한국가구++++++++++++++++++++2058/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:57,191 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:57,424 > 420
[DEBUG|collector_api.py:200] 2021-02-08 16:36:57,666 > ++++++++++++++한국정밀기계++++++++++++++++++++2059/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:57,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:58,031 > 421
[DEBUG|collector_api.py:200] 2021-02-08 16:36:58,301 > ++++++++++++++한빛소프트++++++++++++++++++++2060/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:58,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:58,638 > 422
[DEBUG|collector_api.py:200] 2021-02-08 16:36:58,895 > ++++++++++++++한스바이오메드++++++++++++++++++++2061/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:58,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:59,246 > 423
[DEBUG|collector_api.py:200] 2021-02-08 16:36:59,532 > ++++++++++++++현대바이오랜드++++++++++++++++++++2062/2895
[DEBUG|open_api.py:656] 2021-02-08 16:36:59,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:36:59,855 > 424
[DEBUG|collector_api.py:200] 2021-02-08 16:37:00,117 > ++++++++++++++현대통신++++++++++++++++++++2063/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:00,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:00,461 > 425
[DEBUG|collector_api.py:200] 2021-02-08 16:37:00,736 > ++++++++++++++휘닉스소재++++++++++++++++++++2064/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:00,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:01,071 > 426
[DEBUG|collector_api.py:200] 2021-02-08 16:37:01,357 > ++++++++++++++휴림로봇++++++++++++++++++++2065/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:01,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:01,694 > 427
[DEBUG|collector_api.py:200] 2021-02-08 16:37:02,015 > ++++++++++++++AP시스템++++++++++++++++++++2066/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:02,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:02,315 > 428
[DEBUG|collector_api.py:200] 2021-02-08 16:37:02,549 > ++++++++++++++AP위성++++++++++++++++++++2067/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:02,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:02,924 > 429
[DEBUG|collector_api.py:200] 2021-02-08 16:37:03,157 > ++++++++++++++GRT++++++++++++++++++++2068/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:03,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:03,531 > 430
[DEBUG|collector_api.py:200] 2021-02-08 16:37:03,785 > ++++++++++++++MP그룹++++++++++++++++++++2069/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:03,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:04,139 > 431
[DEBUG|collector_api.py:200] 2021-02-08 16:37:04,397 > ++++++++++++++OQP++++++++++++++++++++2070/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:04,397 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:04,747 > 432
[DEBUG|collector_api.py:200] 2021-02-08 16:37:04,989 > ++++++++++++++PI첨단소재++++++++++++++++++++2071/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:04,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:05,355 > 433
[DEBUG|collector_api.py:200] 2021-02-08 16:37:05,605 > ++++++++++++++S&K폴리텍++++++++++++++++++++2072/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:05,606 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:05,963 > 434
[DEBUG|collector_api.py:200] 2021-02-08 16:37:06,207 > ++++++++++++++SFA반도체++++++++++++++++++++2073/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:06,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:06,569 > 435
[DEBUG|collector_api.py:200] 2021-02-08 16:37:06,826 > ++++++++++++++SGC이테크건설++++++++++++++++++++2074/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:06,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:07,177 > 436
[DEBUG|collector_api.py:200] 2021-02-08 16:37:07,448 > ++++++++++++++THE E&M++++++++++++++++++++2075/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:07,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:07,786 > 437
[DEBUG|collector_api.py:200] 2021-02-08 16:37:08,030 > ++++++++++++++THE MIDONG++++++++++++++++++++2076/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:08,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:08,393 > 438
[DEBUG|collector_api.py:200] 2021-02-08 16:37:08,638 > ++++++++++++++TJ미디어++++++++++++++++++++2077/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:08,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:08,999 > 439
[DEBUG|collector_api.py:200] 2021-02-08 16:37:09,253 > ++++++++++++++YTN++++++++++++++++++++2078/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:09,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:09,607 > 440
[DEBUG|collector_api.py:200] 2021-02-08 16:37:09,851 > ++++++++++++++골프존뉴딘홀딩스++++++++++++++++++++2079/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:09,851 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:10,214 > 441
[DEBUG|collector_api.py:200] 2021-02-08 16:37:10,516 > ++++++++++++++교보10호스팩++++++++++++++++++++2080/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:10,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:10,822 > 442
[DEBUG|collector_api.py:200] 2021-02-08 16:37:10,981 > ++++++++++++++글로벌에스엠++++++++++++++++++++2081/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:10,982 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:11,429 > 443
[DEBUG|collector_api.py:200] 2021-02-08 16:37:11,682 > ++++++++++++++금화피에스시++++++++++++++++++++2082/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:11,682 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:12,038 > 444
[DEBUG|collector_api.py:200] 2021-02-08 16:37:12,326 > ++++++++++++++까스텔바작++++++++++++++++++++2083/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:12,326 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:12,645 > 445
[DEBUG|collector_api.py:200] 2021-02-08 16:37:12,866 > ++++++++++++++나무가++++++++++++++++++++2084/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:12,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:13,252 > 446
[DEBUG|collector_api.py:200] 2021-02-08 16:37:13,502 > ++++++++++++++네온테크++++++++++++++++++++2085/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:13,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:13,859 > 447
[DEBUG|collector_api.py:200] 2021-02-08 16:37:14,096 > ++++++++++++++녹십자랩셀++++++++++++++++++++2086/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:14,097 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:14,468 > 448
[DEBUG|collector_api.py:200] 2021-02-08 16:37:14,724 > ++++++++++++++녹십자웰빙++++++++++++++++++++2087/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:14,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:15,076 > 449
[DEBUG|collector_api.py:200] 2021-02-08 16:37:15,269 > ++++++++++++++농우바이오++++++++++++++++++++2088/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:15,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:15,685 > 450
[DEBUG|collector_api.py:200] 2021-02-08 16:37:15,931 > ++++++++++++++뉴트리++++++++++++++++++++2089/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:15,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:16,291 > 451
[DEBUG|collector_api.py:200] 2021-02-08 16:37:16,533 > ++++++++++++++다나와++++++++++++++++++++2090/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:16,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:16,900 > 452
[DEBUG|collector_api.py:200] 2021-02-08 16:37:17,137 > ++++++++++++++다믈멀티미디어++++++++++++++++++++2091/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:17,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:17,508 > 453
[DEBUG|collector_api.py:200] 2021-02-08 16:37:17,752 > ++++++++++++++다우데이타++++++++++++++++++++2092/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:17,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:18,116 > 454
[DEBUG|collector_api.py:200] 2021-02-08 16:37:18,382 > ++++++++++++++대동스틸++++++++++++++++++++2093/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:18,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:18,730 > 455
[DEBUG|collector_api.py:200] 2021-02-08 16:37:19,042 > ++++++++++++++대신밸런스제8호스팩++++++++++++++++++++2094/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:19,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:19,401 > 456
[DEBUG|collector_api.py:200] 2021-02-08 16:37:19,655 > ++++++++++++++대한광통신++++++++++++++++++++2095/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:19,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:20,008 > 457
[DEBUG|collector_api.py:200] 2021-02-08 16:37:20,271 > ++++++++++++++더네이쳐홀딩스++++++++++++++++++++2096/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:20,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:20,620 > 458
[DEBUG|collector_api.py:200] 2021-02-08 16:37:20,790 > ++++++++++++++데이타솔루션++++++++++++++++++++2097/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:20,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:21,228 > 459
[DEBUG|collector_api.py:200] 2021-02-08 16:37:21,470 > ++++++++++++++덱스터++++++++++++++++++++2098/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:21,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:21,836 > 460
[DEBUG|collector_api.py:200] 2021-02-08 16:37:22,084 > ++++++++++++++도이치모터스++++++++++++++++++++2099/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:22,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:22,444 > 461
[DEBUG|collector_api.py:200] 2021-02-08 16:37:22,710 > ++++++++++++++동국산업++++++++++++++++++++2100/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:22,711 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:23,064 > 462
[DEBUG|collector_api.py:200] 2021-02-08 16:37:23,363 > ++++++++++++++동원개발++++++++++++++++++++2101/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:23,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:23,693 > 463
[DEBUG|collector_api.py:200] 2021-02-08 16:37:23,954 > ++++++++++++++동일금속++++++++++++++++++++2102/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:23,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:24,302 > 464
[DEBUG|collector_api.py:200] 2021-02-08 16:37:24,559 > ++++++++++++++동화기업++++++++++++++++++++2103/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:24,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:24,909 > 465
[DEBUG|collector_api.py:200] 2021-02-08 16:37:25,176 > ++++++++++++++드래곤플라이++++++++++++++++++++2104/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:25,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:25,518 > 466
[DEBUG|collector_api.py:200] 2021-02-08 16:37:25,804 > ++++++++++++++드림시큐리티++++++++++++++++++++2105/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:25,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:26,157 > 467
[DEBUG|collector_api.py:200] 2021-02-08 16:37:26,414 > ++++++++++++++디딤++++++++++++++++++++2106/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:26,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:26,766 > 468
[DEBUG|collector_api.py:200] 2021-02-08 16:37:27,049 > ++++++++++++++디와이피엔에프++++++++++++++++++++2107/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:27,050 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:27,374 > 469
[DEBUG|collector_api.py:200] 2021-02-08 16:37:27,621 > ++++++++++++++디지캡++++++++++++++++++++2108/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:27,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:27,983 > 470
[DEBUG|collector_api.py:200] 2021-02-08 16:37:28,232 > ++++++++++++++디지탈옵틱++++++++++++++++++++2109/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:28,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:28,591 > 471
[DEBUG|collector_api.py:200] 2021-02-08 16:37:28,844 > ++++++++++++++레드로버++++++++++++++++++++2110/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:28,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:29,199 > 472
[DEBUG|collector_api.py:200] 2021-02-08 16:37:29,571 > ++++++++++++++로보티즈++++++++++++++++++++2111/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:29,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:29,806 > 473
[DEBUG|collector_api.py:200] 2021-02-08 16:37:30,051 > ++++++++++++++로체시스템즈++++++++++++++++++++2112/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:30,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:30,414 > 474
[DEBUG|collector_api.py:200] 2021-02-08 16:37:30,672 > ++++++++++++++루멘스++++++++++++++++++++2113/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:30,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:31,022 > 475
[DEBUG|collector_api.py:200] 2021-02-08 16:37:31,277 > ++++++++++++++루트로닉++++++++++++++++++++2114/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:31,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:31,629 > 476
[DEBUG|collector_api.py:200] 2021-02-08 16:37:31,902 > ++++++++++++++리노공업++++++++++++++++++++2115/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:31,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:32,239 > 477
[DEBUG|collector_api.py:200] 2021-02-08 16:37:32,609 > ++++++++++++++마이더스AI++++++++++++++++++++2116/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:32,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:32,848 > 478
[DEBUG|collector_api.py:200] 2021-02-08 16:37:33,084 > ++++++++++++++마이크로디지탈++++++++++++++++++++2117/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:33,085 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:33,456 > 479
[DEBUG|collector_api.py:200] 2021-02-08 16:37:33,672 > ++++++++++++++마크로젠++++++++++++++++++++2118/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:33,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:34,064 > 480
[DEBUG|collector_api.py:200] 2021-02-08 16:37:34,323 > ++++++++++++++매커스++++++++++++++++++++2119/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:34,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:34,672 > 481
[DEBUG|collector_api.py:200] 2021-02-08 16:37:34,954 > ++++++++++++++메디아나++++++++++++++++++++2120/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:34,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:35,280 > 482
[DEBUG|collector_api.py:200] 2021-02-08 16:37:35,534 > ++++++++++++++멜파스++++++++++++++++++++2121/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:35,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:35,888 > 483
[DEBUG|collector_api.py:200] 2021-02-08 16:37:36,141 > ++++++++++++++모바일리더++++++++++++++++++++2122/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:36,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:36,495 > 484
[DEBUG|collector_api.py:200] 2021-02-08 16:37:36,740 > ++++++++++++++미래생명자원++++++++++++++++++++2123/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:36,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:37,102 > 485
[DEBUG|collector_api.py:200] 2021-02-08 16:37:37,345 > ++++++++++++++바른전자++++++++++++++++++++2124/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:37,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:37,709 > 486
[DEBUG|collector_api.py:200] 2021-02-08 16:37:37,973 > ++++++++++++++배럴++++++++++++++++++++2125/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:37,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:38,318 > 487
[DEBUG|collector_api.py:200] 2021-02-08 16:37:38,658 > ++++++++++++++백금T&A++++++++++++++++++++2126/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:38,658 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:38,926 > 488
[DEBUG|collector_api.py:200] 2021-02-08 16:37:39,186 > ++++++++++++++버킷스튜디오++++++++++++++++++++2127/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:39,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:39,534 > 489
[DEBUG|collector_api.py:200] 2021-02-08 16:37:39,782 > ++++++++++++++보성파워텍++++++++++++++++++++2128/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:39,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:40,140 > 490
[DEBUG|collector_api.py:200] 2021-02-08 16:37:40,421 > ++++++++++++++브이원텍++++++++++++++++++++2129/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:40,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:40,748 > 491
[DEBUG|collector_api.py:200] 2021-02-08 16:37:41,111 > ++++++++++++++브이티지엠피++++++++++++++++++++2130/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:41,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:41,355 > 492
[DEBUG|collector_api.py:200] 2021-02-08 16:37:41,614 > ++++++++++++++비비씨++++++++++++++++++++2131/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:41,614 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:41,964 > 493
[DEBUG|collector_api.py:200] 2021-02-08 16:37:42,163 > ++++++++++++++비씨월드제약++++++++++++++++++++2132/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:42,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:42,572 > 494
[DEBUG|collector_api.py:200] 2021-02-08 16:37:42,813 > ++++++++++++++비아트론++++++++++++++++++++2133/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:42,813 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:43,181 > 495
[DEBUG|collector_api.py:200] 2021-02-08 16:37:43,432 > ++++++++++++++비츠로시스++++++++++++++++++++2134/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:43,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:43,788 > 496
[DEBUG|collector_api.py:200] 2021-02-08 16:37:44,028 > ++++++++++++++빛샘전자++++++++++++++++++++2135/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:44,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:44,396 > 497
[DEBUG|collector_api.py:200] 2021-02-08 16:37:44,630 > ++++++++++++++삼기++++++++++++++++++++2136/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:44,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:45,003 > 498
[DEBUG|collector_api.py:200] 2021-02-08 16:37:45,262 > ++++++++++++++삼영이엔씨++++++++++++++++++++2137/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:45,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:45,610 > 499
[DEBUG|collector_api.py:200] 2021-02-08 16:37:45,857 > ++++++++++++++상상인이안제2호스팩++++++++++++++++++++2138/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:45,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:46,217 > 500
[DEBUG|collector_api.py:200] 2021-02-08 16:37:46,437 > ++++++++++++++상상인인더스트리++++++++++++++++++++2139/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:46,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:46,824 > 501
[DEBUG|collector_api.py:200] 2021-02-08 16:37:47,087 > ++++++++++++++서남++++++++++++++++++++2140/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:47,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:47,432 > 502
[DEBUG|collector_api.py:200] 2021-02-08 16:37:47,625 > ++++++++++++++서울리거++++++++++++++++++++2141/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:47,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:48,041 > 503
[DEBUG|collector_api.py:200] 2021-02-08 16:37:48,289 > ++++++++++++++서울제약++++++++++++++++++++2142/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:48,289 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:48,647 > 504
[DEBUG|collector_api.py:200] 2021-02-08 16:37:48,897 > ++++++++++++++서전기전++++++++++++++++++++2143/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:48,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:49,256 > 505
[DEBUG|collector_api.py:200] 2021-02-08 16:37:49,515 > ++++++++++++++서희건설++++++++++++++++++++2144/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:49,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:49,863 > 506
[DEBUG|collector_api.py:200] 2021-02-08 16:37:50,104 > ++++++++++++++세중++++++++++++++++++++2145/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:50,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:50,470 > 507
[DEBUG|collector_api.py:200] 2021-02-08 16:37:50,705 > ++++++++++++++셀트리온헬스케어++++++++++++++++++++2146/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:50,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:51,077 > 508
[DEBUG|collector_api.py:200] 2021-02-08 16:37:51,356 > ++++++++++++++솔브레인홀딩스++++++++++++++++++++2147/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:51,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:51,687 > 509
[DEBUG|collector_api.py:200] 2021-02-08 16:37:51,941 > ++++++++++++++솔트룩스++++++++++++++++++++2148/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:51,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:52,295 > 510
[DEBUG|collector_api.py:200] 2021-02-08 16:37:52,455 > ++++++++++++++쇼박스++++++++++++++++++++2149/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:52,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:52,902 > 511
[DEBUG|collector_api.py:200] 2021-02-08 16:37:53,155 > ++++++++++++++슈프리마아이디++++++++++++++++++++2150/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:53,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:53,510 > 512
[DEBUG|collector_api.py:200] 2021-02-08 16:37:53,706 > ++++++++++++++신신제약++++++++++++++++++++2151/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:53,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:54,118 > 513
[DEBUG|collector_api.py:200] 2021-02-08 16:37:54,388 > ++++++++++++++신영스팩6호++++++++++++++++++++2152/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:54,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:54,725 > 514
[DEBUG|collector_api.py:200] 2021-02-08 16:37:54,908 > ++++++++++++++신일제약++++++++++++++++++++2153/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:54,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:55,333 > 515
[DEBUG|collector_api.py:200] 2021-02-08 16:37:55,575 > ++++++++++++++싸이맥스++++++++++++++++++++2154/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:55,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:55,941 > 516
[DEBUG|collector_api.py:200] 2021-02-08 16:37:56,196 > ++++++++++++++썸에이지++++++++++++++++++++2155/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:56,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:56,549 > 517
[DEBUG|collector_api.py:200] 2021-02-08 16:37:56,787 > ++++++++++++++쏠리드++++++++++++++++++++2156/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:56,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:57,157 > 518
[DEBUG|collector_api.py:200] 2021-02-08 16:37:57,410 > ++++++++++++++씨아이에스++++++++++++++++++++2157/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:57,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:57,764 > 519
[DEBUG|collector_api.py:200] 2021-02-08 16:37:58,162 > ++++++++++++++씨에스베어링++++++++++++++++++++2158/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:58,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:58,371 > 520
[DEBUG|collector_api.py:200] 2021-02-08 16:37:58,562 > ++++++++++++++아난티++++++++++++++++++++2159/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:58,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:58,982 > 521
[DEBUG|collector_api.py:200] 2021-02-08 16:37:59,251 > ++++++++++++++아바코++++++++++++++++++++2160/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:59,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:37:59,590 > 522
[DEBUG|collector_api.py:200] 2021-02-08 16:37:59,827 > ++++++++++++++아세아텍++++++++++++++++++++2161/2895
[DEBUG|open_api.py:656] 2021-02-08 16:37:59,828 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:00,199 > 523
[DEBUG|collector_api.py:200] 2021-02-08 16:38:00,456 > ++++++++++++++아스트++++++++++++++++++++2162/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:00,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:00,806 > 524
[DEBUG|collector_api.py:200] 2021-02-08 16:38:01,081 > ++++++++++++++아이스크림에듀++++++++++++++++++++2163/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:01,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:01,421 > 525
[DEBUG|collector_api.py:200] 2021-02-08 16:38:01,639 > ++++++++++++++아이엠이연이++++++++++++++++++++2164/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:01,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:02,031 > 526
[DEBUG|collector_api.py:200] 2021-02-08 16:38:02,284 > ++++++++++++++아이텍++++++++++++++++++++2165/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:02,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:02,638 > 527
[DEBUG|collector_api.py:200] 2021-02-08 16:38:02,892 > ++++++++++++++아이티엠반도체++++++++++++++++++++2166/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:02,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:03,245 > 528
[DEBUG|collector_api.py:200] 2021-02-08 16:38:03,450 > ++++++++++++++알로이스++++++++++++++++++++2167/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:03,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:03,852 > 529
[DEBUG|collector_api.py:200] 2021-02-08 16:38:04,081 > ++++++++++++++양지사++++++++++++++++++++2168/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:04,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:04,460 > 530
[DEBUG|collector_api.py:200] 2021-02-08 16:38:04,713 > ++++++++++++++얼라인드++++++++++++++++++++2169/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:04,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:05,069 > 531
[DEBUG|collector_api.py:200] 2021-02-08 16:38:05,332 > ++++++++++++++에스씨디++++++++++++++++++++2170/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:05,333 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:05,677 > 532
[DEBUG|collector_api.py:200] 2021-02-08 16:38:05,936 > ++++++++++++++에스에프에이++++++++++++++++++++2171/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:05,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:06,284 > 533
[DEBUG|collector_api.py:200] 2021-02-08 16:38:06,534 > ++++++++++++++에스텍++++++++++++++++++++2172/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:06,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:06,892 > 534
[DEBUG|collector_api.py:200] 2021-02-08 16:38:07,141 > ++++++++++++++에스폴리텍++++++++++++++++++++2173/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:07,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:07,499 > 535
[DEBUG|collector_api.py:200] 2021-02-08 16:38:07,757 > ++++++++++++++에스피시스템스++++++++++++++++++++2174/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:07,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:08,107 > 536
[DEBUG|collector_api.py:200] 2021-02-08 16:38:08,323 > ++++++++++++++에이디테크놀로지++++++++++++++++++++2175/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:08,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:08,715 > 537
[DEBUG|collector_api.py:200] 2021-02-08 16:38:08,959 > ++++++++++++++에이에프더블류++++++++++++++++++++2176/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:08,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:09,323 > 538
[DEBUG|collector_api.py:200] 2021-02-08 16:38:09,534 > ++++++++++++++에이치디++++++++++++++++++++2177/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:09,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:09,932 > 539
[DEBUG|collector_api.py:200] 2021-02-08 16:38:10,174 > ++++++++++++++에이치엘비생명과학++++++++++++++++++++2178/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:10,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:10,539 > 540
[DEBUG|collector_api.py:200] 2021-02-08 16:38:10,782 > ++++++++++++++에이치엘비파워++++++++++++++++++++2179/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:10,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:11,146 > 541
[DEBUG|collector_api.py:200] 2021-02-08 16:38:11,410 > ++++++++++++++에이치엠씨제5호스팩++++++++++++++++++++2180/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:11,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:11,755 > 542
[DEBUG|collector_api.py:200] 2021-02-08 16:38:11,915 > ++++++++++++++에이트원++++++++++++++++++++2181/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:11,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:12,362 > 543
[DEBUG|collector_api.py:200] 2021-02-08 16:38:12,609 > ++++++++++++++에치에프알++++++++++++++++++++2182/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:12,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:12,969 > 544
[DEBUG|collector_api.py:200] 2021-02-08 16:38:13,211 > ++++++++++++++엔에이치스팩14호++++++++++++++++++++2183/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:13,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:13,577 > 545
[DEBUG|collector_api.py:200] 2021-02-08 16:38:13,821 > ++++++++++++++엔에이치스팩16호++++++++++++++++++++2184/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:13,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:14,184 > 546
[DEBUG|collector_api.py:200] 2021-02-08 16:38:14,377 > ++++++++++++++엔젠바이오++++++++++++++++++++2185/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:14,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:14,792 > 547
[DEBUG|collector_api.py:200] 2021-02-08 16:38:14,949 > ++++++++++++++엔투텍++++++++++++++++++++2186/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:14,949 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:15,400 > 548
[DEBUG|collector_api.py:200] 2021-02-08 16:38:15,638 > ++++++++++++++엘앤에프++++++++++++++++++++2187/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:15,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:16,008 > 549
[DEBUG|collector_api.py:200] 2021-02-08 16:38:16,261 > ++++++++++++++엘티씨++++++++++++++++++++2188/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:16,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:16,617 > 550
[DEBUG|collector_api.py:200] 2021-02-08 16:38:16,855 > ++++++++++++++엠투엔++++++++++++++++++++2189/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:16,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:17,225 > 551
[DEBUG|collector_api.py:200] 2021-02-08 16:38:17,500 > ++++++++++++++영우디에스피++++++++++++++++++++2190/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:17,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:17,834 > 552
[DEBUG|collector_api.py:200] 2021-02-08 16:38:18,075 > ++++++++++++++영풍정밀++++++++++++++++++++2191/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:18,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:18,442 > 553
[DEBUG|collector_api.py:200] 2021-02-08 16:38:18,685 > ++++++++++++++예선테크++++++++++++++++++++2192/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:18,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:19,049 > 554
[DEBUG|collector_api.py:200] 2021-02-08 16:38:19,299 > ++++++++++++++오로라++++++++++++++++++++2193/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:19,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:19,657 > 555
[DEBUG|collector_api.py:200] 2021-02-08 16:38:19,916 > ++++++++++++++오리엔트정공++++++++++++++++++++2194/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:19,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:20,266 > 556
[DEBUG|collector_api.py:200] 2021-02-08 16:38:20,511 > ++++++++++++++오스코텍++++++++++++++++++++2195/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:20,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:20,872 > 557
[DEBUG|open_api.py:303] 2021-02-08 16:38:31,103 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:38:31,103 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:38:31,103 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:38:31,105 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:38:31,105 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:38:31,105 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:38:31,105 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:38:31,117 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:38:31,149 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:38:31,150 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:38:31,150 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:38:31,167 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:38:31,201 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:38:33,939 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:38:33,940 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:38:33,981 > ++++++++++++++오스코텍++++++++++++++++++++2195/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:33,982 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:33,984 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:38:35,102 > ++++++++++++++오파스넷++++++++++++++++++++2196/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:35,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:35,103 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:38:35,330 > ++++++++++++++올릭스++++++++++++++++++++2197/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:35,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:35,712 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:38:35,951 > ++++++++++++++옴니시스템++++++++++++++++++++2198/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:35,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:36,320 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:38:36,560 > ++++++++++++++와토스코리아++++++++++++++++++++2199/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:36,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:36,927 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:38:37,168 > ++++++++++++++우리산업++++++++++++++++++++2200/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:37,169 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:37,534 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:38:37,769 > ++++++++++++++우리이앤엘++++++++++++++++++++2201/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:37,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:38,141 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:38:38,381 > ++++++++++++++우원개발++++++++++++++++++++2202/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:38,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:38,747 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:38:38,993 > ++++++++++++++위즈코프++++++++++++++++++++2203/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:38,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:39,353 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:38:39,612 > ++++++++++++++윈팩++++++++++++++++++++2204/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:39,612 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:39,960 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:38:40,224 > ++++++++++++++유비케어++++++++++++++++++++2205/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:40,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:40,567 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:38:40,837 > ++++++++++++++유안타제3호스팩++++++++++++++++++++2206/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:40,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:41,175 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:38:41,441 > ++++++++++++++유앤아이++++++++++++++++++++2207/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:41,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:41,782 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:38:42,009 > ++++++++++++++유진스팩4호++++++++++++++++++++2208/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:42,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:42,388 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:38:42,604 > ++++++++++++++이노메트리++++++++++++++++++++2209/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:42,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:42,995 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:38:43,213 > ++++++++++++++이노테라피++++++++++++++++++++2210/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:43,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:43,604 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:38:43,811 > ++++++++++++++이디티++++++++++++++++++++2211/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:43,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:44,210 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:38:44,451 > ++++++++++++++이루다++++++++++++++++++++2212/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:44,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:44,816 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:38:44,973 > ++++++++++++++이매진아시아++++++++++++++++++++2213/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:44,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:45,423 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:38:45,670 > ++++++++++++++이베스트이안스팩1호++++++++++++++++++++2214/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:45,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:46,030 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:38:46,239 > ++++++++++++++이씨에스++++++++++++++++++++2215/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:46,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:46,637 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:38:46,881 > ++++++++++++++이엔드디++++++++++++++++++++2216/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:46,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:47,242 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:38:47,483 > ++++++++++++++이오테크닉스++++++++++++++++++++2217/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:47,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:47,849 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:38:48,081 > ++++++++++++++인바이오++++++++++++++++++++2218/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:48,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:48,456 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:38:48,609 > ++++++++++++++인터로조++++++++++++++++++++2219/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:48,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:49,063 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:38:49,327 > ++++++++++++++인화정공++++++++++++++++++++2220/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:49,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:49,670 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:38:49,896 > ++++++++++++++자연과환경++++++++++++++++++++2221/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:49,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:50,276 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:38:50,537 > ++++++++++++++정산애강++++++++++++++++++++2222/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:50,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:50,884 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:38:51,125 > ++++++++++++++제이브이엠++++++++++++++++++++2223/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:51,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:51,490 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:38:51,734 > ++++++++++++++제이엔케이히터++++++++++++++++++++2224/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:51,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:52,096 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:38:52,347 > ++++++++++++++제일테크노스++++++++++++++++++++2225/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:52,348 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:52,703 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:38:52,961 > ++++++++++++++제테마++++++++++++++++++++2226/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:52,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:53,311 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:38:53,507 > ++++++++++++++지노믹트리++++++++++++++++++++2227/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:53,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:53,920 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:38:54,152 > ++++++++++++++지어소프트++++++++++++++++++++2228/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:54,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:54,527 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:38:54,779 > ++++++++++++++지에스이++++++++++++++++++++2229/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:54,780 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:55,134 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:38:55,388 > ++++++++++++++지엔원에너지++++++++++++++++++++2230/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:55,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:55,742 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:38:55,976 > ++++++++++++++지와이커머스++++++++++++++++++++2231/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:55,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:56,349 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:38:56,600 > ++++++++++++++진양제약++++++++++++++++++++2232/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:56,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:56,956 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:38:57,201 > ++++++++++++++차바이오텍++++++++++++++++++++2233/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:57,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:57,561 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:38:57,839 > ++++++++++++++천랩++++++++++++++++++++2234/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:57,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:58,169 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:38:58,375 > ++++++++++++++케이맥++++++++++++++++++++2235/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:58,376 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:58,775 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:38:59,016 > ++++++++++++++케이엘넷++++++++++++++++++++2236/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:59,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:59,382 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:38:59,638 > ++++++++++++++케이프이에스제4호++++++++++++++++++++2237/2895
[DEBUG|open_api.py:656] 2021-02-08 16:38:59,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:38:59,990 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:39:00,182 > ++++++++++++++코너스톤네트웍스++++++++++++++++++++2238/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:00,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:00,597 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:39:00,853 > ++++++++++++++코렌텍++++++++++++++++++++2239/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:00,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:01,204 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:39:01,443 > ++++++++++++++코리아나++++++++++++++++++++2240/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:01,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:01,812 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:39:02,076 > ++++++++++++++코스맥스엔비티++++++++++++++++++++2241/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:02,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:02,418 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:39:02,651 > ++++++++++++++코오롱티슈진++++++++++++++++++++2242/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:02,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:03,025 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:39:03,272 > ++++++++++++++코윈테크++++++++++++++++++++2243/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:03,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:03,632 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:39:03,834 > ++++++++++++++코콤++++++++++++++++++++2244/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:03,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:04,240 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:39:04,503 > ++++++++++++++퀀타매트릭스++++++++++++++++++++2245/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:04,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:04,846 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:39:05,014 > ++++++++++++++큐에스아이++++++++++++++++++++2246/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:05,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:05,453 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:39:05,688 > ++++++++++++++크루셜텍++++++++++++++++++++2247/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:05,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:06,059 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:39:06,298 > ++++++++++++++크리스에프앤씨++++++++++++++++++++2248/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:06,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:06,666 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:39:06,906 > ++++++++++++++클라우드에어++++++++++++++++++++2249/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:06,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:07,272 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:39:07,536 > ++++++++++++++테스++++++++++++++++++++2250/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:07,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:07,878 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:39:08,137 > ++++++++++++++텔레칩스++++++++++++++++++++2251/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:08,137 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:08,485 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:39:08,740 > ++++++++++++++텔레필드++++++++++++++++++++2252/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:08,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:09,093 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:39:09,365 > ++++++++++++++톱텍++++++++++++++++++++2253/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:09,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:09,700 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:39:09,943 > ++++++++++++++티비씨++++++++++++++++++++2254/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:09,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:10,305 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:39:10,535 > ++++++++++++++티플랙스++++++++++++++++++++2255/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:10,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:10,913 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:39:11,162 > ++++++++++++++파나진++++++++++++++++++++2256/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:11,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:11,520 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:39:11,772 > ++++++++++++++파워로직스++++++++++++++++++++2257/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:11,772 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:12,127 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:39:12,408 > ++++++++++++++파이오링크++++++++++++++++++++2258/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:12,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:12,734 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:39:12,969 > ++++++++++++++포비스티앤씨++++++++++++++++++++2259/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:12,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:13,342 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:39:13,628 > ++++++++++++++포시에스++++++++++++++++++++2260/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:13,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:13,948 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:39:14,192 > ++++++++++++++푸른기술++++++++++++++++++++2261/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:14,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:14,554 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:39:14,809 > ++++++++++++++퓨전++++++++++++++++++++2262/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:14,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:15,162 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:39:15,418 > ++++++++++++++프럼파스트++++++++++++++++++++2263/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:15,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:15,769 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:39:16,009 > ++++++++++++++플리토++++++++++++++++++++2264/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:16,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:16,375 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:39:16,569 > ++++++++++++++피엔케이피부임상연구센타++++++++++++++++++++2265/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:16,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:16,982 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:39:17,160 > ++++++++++++++피제이전자++++++++++++++++++++2266/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:17,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:17,589 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:39:17,828 > ++++++++++++++하림++++++++++++++++++++2267/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:17,829 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:18,197 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:39:18,438 > ++++++++++++++하이록코리아++++++++++++++++++++2268/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:18,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:18,803 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:39:19,083 > ++++++++++++++하이비젼시스템++++++++++++++++++++2269/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:19,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:19,410 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:39:19,672 > ++++++++++++++하츠++++++++++++++++++++2270/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:19,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:20,018 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:39:20,279 > ++++++++++++++한국9호스팩++++++++++++++++++++2271/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:20,280 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:20,625 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:39:20,768 > ++++++++++++++한국정보공학++++++++++++++++++++2272/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:20,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:21,232 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:39:21,477 > ++++++++++++++한네트++++++++++++++++++++2273/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:21,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:21,840 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:39:22,082 > ++++++++++++++한라IMS++++++++++++++++++++2274/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:22,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:22,446 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:39:22,689 > ++++++++++++++한양이엔지++++++++++++++++++++2275/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:22,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:23,053 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:39:23,318 > ++++++++++++++한프++++++++++++++++++++2276/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:23,319 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:23,660 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:39:23,897 > ++++++++++++++해성옵틱스++++++++++++++++++++2277/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:23,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:24,266 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:39:24,546 > ++++++++++++++행남사++++++++++++++++++++2278/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:24,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:24,872 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:39:25,119 > ++++++++++++++홈센타홀딩스++++++++++++++++++++2279/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:25,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:25,478 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:39:25,735 > ++++++++++++++힘스++++++++++++++++++++2280/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:25,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:26,086 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:39:26,327 > ++++++++++++++노브메타파마++++++++++++++++++++2281/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:26,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:26,692 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:39:26,924 > ++++++++++++++대동고려삼++++++++++++++++++++2282/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:26,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:27,300 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:39:27,538 > ++++++++++++++라이프사이언스테크놀로지++++++++++++++++++++2283/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:27,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:27,907 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:39:28,131 > ++++++++++++++로보쓰리++++++++++++++++++++2284/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:28,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:28,514 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:39:28,746 > ++++++++++++++루트락++++++++++++++++++++2285/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:28,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:29,120 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:39:29,283 > ++++++++++++++메디안디노스틱++++++++++++++++++++2286/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:29,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:29,726 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:39:30,030 > ++++++++++++++바이오프로테크++++++++++++++++++++2287/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:30,030 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:30,334 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:39:30,559 > ++++++++++++++선바이오++++++++++++++++++++2288/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:30,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:30,940 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:39:31,187 > ++++++++++++++시큐센++++++++++++++++++++2289/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:31,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:31,547 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:39:31,770 > ++++++++++++++씨알푸드++++++++++++++++++++2290/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:31,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:32,154 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:39:32,386 > ++++++++++++++애드바이오텍++++++++++++++++++++2291/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:32,386 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:32,762 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:39:32,979 > ++++++++++++++에스알바이오텍++++++++++++++++++++2292/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:32,980 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:33,369 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:39:33,602 > ++++++++++++++에이펙스인텍++++++++++++++++++++2293/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:33,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:33,976 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:39:34,194 > ++++++++++++++엔솔바이오사이언스++++++++++++++++++++2294/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:34,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:34,583 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:39:34,833 > ++++++++++++++엔에스엠++++++++++++++++++++2295/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:34,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:35,191 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:39:35,382 > ++++++++++++++엘에이티++++++++++++++++++++2296/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:35,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:35,798 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:39:36,017 > ++++++++++++++엠로++++++++++++++++++++2297/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:36,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:36,405 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:39:36,645 > ++++++++++++++인터코스++++++++++++++++++++2298/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:36,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:37,010 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:39:37,258 > ++++++++++++++전우정밀++++++++++++++++++++2299/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:37,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:37,617 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:39:37,858 > ++++++++++++++질경이++++++++++++++++++++2300/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:37,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:38,223 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:39:38,455 > ++++++++++++++테크트랜스++++++++++++++++++++2301/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:38,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:38,831 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:39:39,077 > ++++++++++++++파인이엠텍++++++++++++++++++++2302/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:39,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:39,437 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:39:39,662 > ++++++++++++++휴벡셀++++++++++++++++++++2303/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:39,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:40,044 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:39:40,268 > ++++++++++++++구스앤홈++++++++++++++++++++2304/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:40,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:40,652 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:39:40,868 > ++++++++++++++굿센++++++++++++++++++++2305/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:40,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:41,258 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:39:41,522 > ++++++++++++++나눔테크++++++++++++++++++++2306/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:41,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:41,865 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:39:42,119 > ++++++++++++++바이오시네틱스++++++++++++++++++++2307/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:42,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:42,472 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:39:42,699 > ++++++++++++++아이피몬스터++++++++++++++++++++2308/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:42,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:43,080 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:39:43,313 > ++++++++++++++앙츠++++++++++++++++++++2309/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:43,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:43,688 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:39:43,937 > ++++++++++++++에스에이티이엔지++++++++++++++++++++2310/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:43,937 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:44,294 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:39:44,541 > ++++++++++++++에스엘에스바이오++++++++++++++++++++2311/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:44,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:44,902 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:39:45,159 > ++++++++++++++원바이오젠++++++++++++++++++++2312/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:45,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:45,509 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:39:45,764 > ++++++++++++++유니포인트++++++++++++++++++++2313/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:45,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:46,116 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:39:46,363 > ++++++++++++++유투바이오++++++++++++++++++++2314/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:46,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:46,722 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:39:46,954 > ++++++++++++++이노벡스++++++++++++++++++++2315/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:46,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:47,330 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:39:47,545 > ++++++++++++++청광건설++++++++++++++++++++2316/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:47,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:47,938 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:39:48,174 > ++++++++++++++케어룸의료산업++++++++++++++++++++2317/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:48,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:48,545 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:39:48,735 > ++++++++++++++탑선++++++++++++++++++++2318/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:48,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:49,153 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:39:49,415 > ++++++++++++++틸론++++++++++++++++++++2319/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:49,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:49,761 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:39:50,000 > ++++++++++++++판도라티비++++++++++++++++++++2320/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:50,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:50,368 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:39:50,610 > ++++++++++++++플럼라인생명과학++++++++++++++++++++2321/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:50,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:50,973 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:39:51,201 > ++++++++++++++한국미라클피플사++++++++++++++++++++2322/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:51,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:51,580 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:39:51,768 > ++++++++++++++다이오진++++++++++++++++++++2323/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:51,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:52,186 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:39:52,474 > ++++++++++++++더콘텐츠온++++++++++++++++++++2324/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:52,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:52,793 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:39:53,020 > ++++++++++++++데이드림엔터++++++++++++++++++++2325/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:53,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:53,400 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:39:53,578 > ++++++++++++++메디젠휴먼케어++++++++++++++++++++2326/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:53,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:54,006 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:39:54,269 > ++++++++++++++무진메디++++++++++++++++++++2327/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:54,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:54,614 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:39:54,775 > ++++++++++++++바이옵트로++++++++++++++++++++2328/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:54,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:55,220 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:39:55,443 > ++++++++++++++비엔디생활건강++++++++++++++++++++2329/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:55,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:55,825 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:39:56,071 > ++++++++++++++비플라이소프트++++++++++++++++++++2330/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:56,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:56,431 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:39:56,677 > ++++++++++++++수프로++++++++++++++++++++2331/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:56,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:57,037 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:39:57,283 > ++++++++++++++씨앤에스링크++++++++++++++++++++2332/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:57,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:57,643 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:39:57,876 > ++++++++++++++씨엔티드림++++++++++++++++++++2333/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:57,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:58,251 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:39:58,405 > ++++++++++++++엄지하우스++++++++++++++++++++2334/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:58,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:58,858 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:39:59,135 > ++++++++++++++에브리봇++++++++++++++++++++2335/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:59,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:39:59,466 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:39:59,713 > ++++++++++++++에이스캠퍼++++++++++++++++++++2336/2895
[DEBUG|open_api.py:656] 2021-02-08 16:39:59,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:00,073 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:40:00,253 > ++++++++++++++엔지브이아이++++++++++++++++++++2337/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:00,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:00,683 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:40:00,889 > ++++++++++++++엘리비젼++++++++++++++++++++2338/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:00,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:01,289 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:40:01,575 > ++++++++++++++원텍++++++++++++++++++++2339/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:01,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:01,896 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:40:02,134 > ++++++++++++++이비테크++++++++++++++++++++2340/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:02,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:02,504 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:40:02,752 > ++++++++++++++진코스텍++++++++++++++++++++2341/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:02,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:03,111 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:40:03,309 > ++++++++++++++코셋++++++++++++++++++++2342/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:03,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:03,719 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:40:03,947 > ++++++++++++++한중엔시에스++++++++++++++++++++2343/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:03,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:04,326 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:40:04,602 > ++++++++++++++휴럼++++++++++++++++++++2344/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:04,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:04,933 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:40:05,176 > ++++++++++++++네추럴FNP++++++++++++++++++++2345/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:05,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:05,540 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:40:05,760 > ++++++++++++++다원넥스뷰++++++++++++++++++++2346/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:05,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:06,147 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:40:06,367 > ++++++++++++++다이노나++++++++++++++++++++2347/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:06,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:06,754 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:40:06,987 > ++++++++++++++데이터스트림즈++++++++++++++++++++2348/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:06,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:07,360 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:40:07,615 > ++++++++++++++래몽래인++++++++++++++++++++2349/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:07,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:07,968 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:40:08,202 > ++++++++++++++럭스피아++++++++++++++++++++2350/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:08,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:08,575 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:40:08,805 > ++++++++++++++바이오코아++++++++++++++++++++2351/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:08,806 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:09,182 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:40:09,419 > ++++++++++++++볼빅++++++++++++++++++++2352/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:09,420 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:09,789 > 158
[DEBUG|collector_api.py:200] 2021-02-08 16:40:10,029 > ++++++++++++++빅텐츠++++++++++++++++++++2353/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:10,030 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:10,395 > 159
[DEBUG|collector_api.py:200] 2021-02-08 16:40:10,631 > ++++++++++++++스템랩++++++++++++++++++++2354/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:10,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:11,003 > 160
[DEBUG|collector_api.py:200] 2021-02-08 16:40:11,247 > ++++++++++++++아퓨어스++++++++++++++++++++2355/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:11,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:11,610 > 161
[DEBUG|collector_api.py:200] 2021-02-08 16:40:11,805 > ++++++++++++++엔에스컴퍼니++++++++++++++++++++2356/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:11,805 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:12,217 > 162
[DEBUG|collector_api.py:200] 2021-02-08 16:40:12,448 > ++++++++++++++엠앤씨생명과학++++++++++++++++++++2357/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:12,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:12,824 > 163
[DEBUG|collector_api.py:200] 2021-02-08 16:40:13,042 > ++++++++++++++위월드++++++++++++++++++++2358/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:13,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:13,429 > 164
[DEBUG|collector_api.py:200] 2021-02-08 16:40:13,663 > ++++++++++++++이십일스토어++++++++++++++++++++2359/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:13,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:14,038 > 165
[DEBUG|collector_api.py:200] 2021-02-08 16:40:14,274 > ++++++++++++++테크엔++++++++++++++++++++2360/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:14,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:14,646 > 166
[DEBUG|collector_api.py:200] 2021-02-08 16:40:14,873 > ++++++++++++++툴젠++++++++++++++++++++2361/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:14,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:15,253 > 167
[DEBUG|collector_api.py:200] 2021-02-08 16:40:15,496 > ++++++++++++++티티씨디펜스++++++++++++++++++++2362/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:15,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:15,860 > 168
[DEBUG|collector_api.py:200] 2021-02-08 16:40:16,072 > ++++++++++++++피엔아이컴퍼니++++++++++++++++++++2363/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:16,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:16,467 > 169
[DEBUG|collector_api.py:200] 2021-02-08 16:40:16,719 > ++++++++++++++관악산업++++++++++++++++++++2364/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:16,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:17,074 > 170
[DEBUG|collector_api.py:200] 2021-02-08 16:40:17,312 > ++++++++++++++나라소프트++++++++++++++++++++2365/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:17,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:17,681 > 171
[DEBUG|collector_api.py:200] 2021-02-08 16:40:17,975 > ++++++++++++++단디바이오++++++++++++++++++++2366/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:17,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:18,286 > 172
[DEBUG|collector_api.py:200] 2021-02-08 16:40:18,470 > ++++++++++++++도부마스크++++++++++++++++++++2367/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:18,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:18,893 > 173
[DEBUG|collector_api.py:200] 2021-02-08 16:40:19,126 > ++++++++++++++디피코++++++++++++++++++++2368/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:19,127 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:19,500 > 174
[DEBUG|collector_api.py:200] 2021-02-08 16:40:19,725 > ++++++++++++++루켄테크놀러지스++++++++++++++++++++2369/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:19,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:20,106 > 175
[DEBUG|collector_api.py:200] 2021-02-08 16:40:20,337 > ++++++++++++++미애부++++++++++++++++++++2370/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:20,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:20,714 > 176
[DEBUG|collector_api.py:200] 2021-02-08 16:40:20,943 > ++++++++++++++썬테크++++++++++++++++++++2371/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:20,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:21,322 > 177
[DEBUG|collector_api.py:200] 2021-02-08 16:40:21,556 > ++++++++++++++씨이랩++++++++++++++++++++2372/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:21,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:21,929 > 178
[DEBUG|collector_api.py:200] 2021-02-08 16:40:22,201 > ++++++++++++++아이케이세미콘++++++++++++++++++++2373/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:22,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:22,537 > 179
[DEBUG|collector_api.py:200] 2021-02-08 16:40:22,767 > ++++++++++++++이노진++++++++++++++++++++2374/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:22,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:23,145 > 180
[DEBUG|collector_api.py:200] 2021-02-08 16:40:23,328 > ++++++++++++++인카금융서비스++++++++++++++++++++2375/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:23,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:23,752 > 181
[DEBUG|collector_api.py:200] 2021-02-08 16:40:23,970 > ++++++++++++++지앤이헬스케어++++++++++++++++++++2376/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:23,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:24,358 > 182
[DEBUG|collector_api.py:200] 2021-02-08 16:40:24,577 > ++++++++++++++지오씨++++++++++++++++++++2377/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:24,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:24,967 > 183
[DEBUG|collector_api.py:200] 2021-02-08 16:40:25,201 > ++++++++++++++펨토바이오메드++++++++++++++++++++2378/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:25,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:25,574 > 184
[DEBUG|collector_api.py:200] 2021-02-08 16:40:25,775 > ++++++++++++++KC산업++++++++++++++++++++2379/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:25,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:26,181 > 185
[DEBUG|collector_api.py:200] 2021-02-08 16:40:26,415 > ++++++++++++++SGA클라우드서비스++++++++++++++++++++2380/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:26,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:26,788 > 186
[DEBUG|collector_api.py:200] 2021-02-08 16:40:27,018 > ++++++++++++++노드메이슨++++++++++++++++++++2381/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:27,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:27,395 > 187
[DEBUG|collector_api.py:200] 2021-02-08 16:40:27,583 > ++++++++++++++명진홀딩스++++++++++++++++++++2382/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:27,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:28,001 > 188
[DEBUG|collector_api.py:200] 2021-02-08 16:40:28,241 > ++++++++++++++바이오인프라생명과학++++++++++++++++++++2383/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:28,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:28,608 > 189
[DEBUG|collector_api.py:200] 2021-02-08 16:40:28,778 > ++++++++++++++뿌리깊은나무들++++++++++++++++++++2384/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:28,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:29,216 > 190
[DEBUG|collector_api.py:200] 2021-02-08 16:40:29,449 > ++++++++++++++시그넷이브이++++++++++++++++++++2385/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:29,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:29,825 > 191
[DEBUG|collector_api.py:200] 2021-02-08 16:40:30,064 > ++++++++++++++씨앗++++++++++++++++++++2386/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:30,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:30,431 > 192
[DEBUG|collector_api.py:200] 2021-02-08 16:40:30,656 > ++++++++++++++에스제이켐++++++++++++++++++++2387/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:30,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:31,037 > 193
[DEBUG|collector_api.py:200] 2021-02-08 16:40:31,279 > ++++++++++++++에이비온++++++++++++++++++++2388/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:31,280 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:31,644 > 194
[DEBUG|collector_api.py:200] 2021-02-08 16:40:31,878 > ++++++++++++++에이원알폼++++++++++++++++++++2389/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:31,878 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:32,252 > 195
[DEBUG|collector_api.py:200] 2021-02-08 16:40:32,494 > ++++++++++++++오션스톤++++++++++++++++++++2390/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:32,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:32,858 > 196
[DEBUG|collector_api.py:200] 2021-02-08 16:40:33,040 > ++++++++++++++이도바이오++++++++++++++++++++2391/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:33,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:33,466 > 197
[DEBUG|collector_api.py:200] 2021-02-08 16:40:33,670 > ++++++++++++++제노텍++++++++++++++++++++2392/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:33,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:34,073 > 198
[DEBUG|collector_api.py:200] 2021-02-08 16:40:34,339 > ++++++++++++++파마리서치바이오++++++++++++++++++++2393/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:34,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:34,680 > 199
[DEBUG|collector_api.py:200] 2021-02-08 16:40:34,902 > ++++++++++++++폭스소프트++++++++++++++++++++2394/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:34,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:35,287 > 200
[DEBUG|collector_api.py:200] 2021-02-08 16:40:35,463 > ++++++++++++++피노텍++++++++++++++++++++2395/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:35,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:35,893 > 201
[DEBUG|collector_api.py:200] 2021-02-08 16:40:36,135 > ++++++++++++++피엔에이치테크++++++++++++++++++++2396/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:36,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:36,500 > 202
[DEBUG|collector_api.py:200] 2021-02-08 16:40:36,725 > ++++++++++++++나우코스++++++++++++++++++++2397/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:36,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:37,107 > 203
[DEBUG|collector_api.py:200] 2021-02-08 16:40:37,257 > ++++++++++++++대주이엔티++++++++++++++++++++2398/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:37,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:37,714 > 204
[DEBUG|collector_api.py:200] 2021-02-08 16:40:37,963 > ++++++++++++++듀켐바이오++++++++++++++++++++2399/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:37,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:38,320 > 205
[DEBUG|collector_api.py:200] 2021-02-08 16:40:38,555 > ++++++++++++++라온테크++++++++++++++++++++2400/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:38,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:38,927 > 206
[DEBUG|collector_api.py:200] 2021-02-08 16:40:39,169 > ++++++++++++++메디쎄이++++++++++++++++++++2401/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:39,169 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:39,534 > 207
[DEBUG|collector_api.py:200] 2021-02-08 16:40:39,768 > ++++++++++++++미래엔에듀파트너++++++++++++++++++++2402/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:39,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:40,142 > 208
[DEBUG|collector_api.py:200] 2021-02-08 16:40:40,372 > ++++++++++++++셀젠텍++++++++++++++++++++2403/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:40,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:40,749 > 209
[DEBUG|collector_api.py:200] 2021-02-08 16:40:40,987 > ++++++++++++++안지오랩++++++++++++++++++++2404/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:40,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:41,355 > 210
[DEBUG|collector_api.py:200] 2021-02-08 16:40:41,596 > ++++++++++++++에스앤디++++++++++++++++++++2405/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:41,597 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:41,961 > 211
[DEBUG|collector_api.py:200] 2021-02-08 16:40:42,214 > ++++++++++++++에스케이씨에스++++++++++++++++++++2406/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:42,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:42,567 > 212
[DEBUG|collector_api.py:200] 2021-02-08 16:40:42,815 > ++++++++++++++원포유++++++++++++++++++++2407/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:42,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:43,175 > 213
[DEBUG|collector_api.py:200] 2021-02-08 16:40:43,343 > ++++++++++++++유비온++++++++++++++++++++2408/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:43,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:43,783 > 214
[DEBUG|collector_api.py:200] 2021-02-08 16:40:44,028 > ++++++++++++++유엑스엔++++++++++++++++++++2409/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:44,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:44,391 > 215
[DEBUG|collector_api.py:200] 2021-02-08 16:40:44,584 > ++++++++++++++이엠티++++++++++++++++++++2410/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:44,584 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:44,998 > 216
[DEBUG|collector_api.py:200] 2021-02-08 16:40:45,234 > ++++++++++++++큐엠씨++++++++++++++++++++2411/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:45,235 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:45,604 > 217
[DEBUG|collector_api.py:200] 2021-02-08 16:40:45,836 > ++++++++++++++크로넥스++++++++++++++++++++2412/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:45,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:46,211 > 218
[DEBUG|collector_api.py:200] 2021-02-08 16:40:46,446 > ++++++++++++++티케이씨++++++++++++++++++++2413/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:46,446 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:46,818 > 219
[DEBUG|collector_api.py:200] 2021-02-08 16:40:47,051 > ++++++++++++++골프존데카++++++++++++++++++++2414/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:47,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:47,424 > 220
[DEBUG|collector_api.py:200] 2021-02-08 16:40:47,664 > ++++++++++++++에스엔피제네틱스++++++++++++++++++++2415/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:47,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:48,030 > 221
[DEBUG|collector_api.py:200] 2021-02-08 16:40:48,283 > ++++++++++++++에스엠비나++++++++++++++++++++2416/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:48,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:48,638 > 222
[DEBUG|collector_api.py:200] 2021-02-08 16:40:48,874 > ++++++++++++++에이치엔에스하이텍++++++++++++++++++++2417/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:48,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:49,243 > 223
[DEBUG|collector_api.py:200] 2021-02-08 16:40:49,471 > ++++++++++++++옐로페이++++++++++++++++++++2418/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:49,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:49,850 > 224
[DEBUG|collector_api.py:200] 2021-02-08 16:40:50,122 > ++++++++++++++이앤에치++++++++++++++++++++2419/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:50,122 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:50,458 > 225
[DEBUG|collector_api.py:200] 2021-02-08 16:40:50,643 > ++++++++++++++태양기계++++++++++++++++++++2420/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:50,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:51,065 > 226
[DEBUG|collector_api.py:200] 2021-02-08 16:40:51,321 > ++++++++++++++파워풀엑스++++++++++++++++++++2421/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:51,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:51,672 > 227
[DEBUG|collector_api.py:200] 2021-02-08 16:40:51,908 > ++++++++++++++프로테옴텍++++++++++++++++++++2422/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:51,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:52,279 > 228
[DEBUG|collector_api.py:200] 2021-02-08 16:40:52,495 > ++++++++++++++KODEX 200++++++++++++++++++++2423/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:52,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:52,886 > 229
[DEBUG|collector_api.py:200] 2021-02-08 16:40:53,154 > ++++++++++++++KOSEF 200++++++++++++++++++++2424/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:53,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:53,492 > 230
[DEBUG|collector_api.py:200] 2021-02-08 16:40:53,750 > ++++++++++++++KODEX 반도체++++++++++++++++++++2425/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:53,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:54,100 > 231
[DEBUG|collector_api.py:200] 2021-02-08 16:40:54,349 > ++++++++++++++KODEX 은행++++++++++++++++++++2426/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:54,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:54,706 > 232
[DEBUG|collector_api.py:200] 2021-02-08 16:40:54,955 > ++++++++++++++KODEX 자동차++++++++++++++++++++2427/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:54,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:55,313 > 233
[DEBUG|collector_api.py:200] 2021-02-08 16:40:55,559 > ++++++++++++++TIGER 은행++++++++++++++++++++2428/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:55,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:55,920 > 234
[DEBUG|collector_api.py:200] 2021-02-08 16:40:56,170 > ++++++++++++++TIGER 반도체++++++++++++++++++++2429/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:56,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:56,527 > 235
[DEBUG|collector_api.py:200] 2021-02-08 16:40:56,779 > ++++++++++++++TIGER 방송통신++++++++++++++++++++2430/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:56,780 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:57,134 > 236
[DEBUG|collector_api.py:200] 2021-02-08 16:40:57,390 > ++++++++++++++KODEX China H++++++++++++++++++++2431/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:57,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:57,741 > 237
[DEBUG|collector_api.py:200] 2021-02-08 16:40:57,993 > ++++++++++++++KOSEF KRX100++++++++++++++++++++2432/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:57,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:58,350 > 238
[DEBUG|collector_api.py:200] 2021-02-08 16:40:58,604 > ++++++++++++++KODEX 일본TOPIX100++++++++++++++++++++2433/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:58,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:58,956 > 239
[DEBUG|collector_api.py:200] 2021-02-08 16:40:59,233 > ++++++++++++++TIGER 200++++++++++++++++++++2434/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:59,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:40:59,563 > 240
[DEBUG|collector_api.py:200] 2021-02-08 16:40:59,852 > ++++++++++++++KODEX 삼성그룹++++++++++++++++++++2435/2895
[DEBUG|open_api.py:656] 2021-02-08 16:40:59,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:00,170 > 241
[DEBUG|collector_api.py:200] 2021-02-08 16:41:00,419 > ++++++++++++++KODEX 기계장비++++++++++++++++++++2436/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:00,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:00,777 > 242
[DEBUG|collector_api.py:200] 2021-02-08 16:41:01,029 > ++++++++++++++KODEX 증권++++++++++++++++++++2437/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:01,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:01,384 > 243
[DEBUG|collector_api.py:200] 2021-02-08 16:41:01,615 > ++++++++++++++KOSEF 블루칩++++++++++++++++++++2438/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:01,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:01,992 > 244
[DEBUG|collector_api.py:200] 2021-02-08 16:41:02,242 > ++++++++++++++KOSEF 고배당++++++++++++++++++++2439/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:02,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:02,599 > 245
[DEBUG|collector_api.py:200] 2021-02-08 16:41:02,835 > ++++++++++++++TIGER 라틴35++++++++++++++++++++2440/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:02,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:03,205 > 246
[DEBUG|collector_api.py:200] 2021-02-08 16:41:03,462 > ++++++++++++++KINDEX 200++++++++++++++++++++2441/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:03,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:03,812 > 247
[DEBUG|collector_api.py:200] 2021-02-08 16:41:04,074 > ++++++++++++++KBSTAR 5대그룹주++++++++++++++++++++2442/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:04,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:04,420 > 248
[DEBUG|collector_api.py:200] 2021-02-08 16:41:04,668 > ++++++++++++++KINDEX 삼성그룹섹터가중++++++++++++++++++++2443/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:04,669 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:05,027 > 249
[DEBUG|collector_api.py:200] 2021-02-08 16:41:05,296 > ++++++++++++++TREX 200++++++++++++++++++++2444/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:05,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:05,633 > 250
[DEBUG|collector_api.py:200] 2021-02-08 16:41:05,886 > ++++++++++++++KBSTAR 국고채3년++++++++++++++++++++2445/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:05,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:06,240 > 251
[DEBUG|collector_api.py:200] 2021-02-08 16:41:06,512 > ++++++++++++++KODEX 국고채3년++++++++++++++++++++2446/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:06,512 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:06,847 > 252
[DEBUG|collector_api.py:200] 2021-02-08 16:41:07,090 > ++++++++++++++KINDEX 국고채3년++++++++++++++++++++2447/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:07,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:07,455 > 253
[DEBUG|collector_api.py:200] 2021-02-08 16:41:07,696 > ++++++++++++++KOSEF 국고채3년++++++++++++++++++++2448/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:07,697 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:08,061 > 254
[DEBUG|collector_api.py:200] 2021-02-08 16:41:08,309 > ++++++++++++++KODEX 인버스++++++++++++++++++++2449/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:08,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:08,667 > 255
[DEBUG|collector_api.py:200] 2021-02-08 16:41:08,934 > ++++++++++++++TIGER 국채3년++++++++++++++++++++2450/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:08,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:09,273 > 256
[DEBUG|collector_api.py:200] 2021-02-08 16:41:09,524 > ++++++++++++++KODEX 에너지화학++++++++++++++++++++2451/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:09,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:09,880 > 257
[DEBUG|collector_api.py:200] 2021-02-08 16:41:10,119 > ++++++++++++++KODEX 철강++++++++++++++++++++2452/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:10,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:10,486 > 258
[DEBUG|collector_api.py:200] 2021-02-08 16:41:10,723 > ++++++++++++++TIGER 차이나항셍25++++++++++++++++++++2453/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:10,723 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:11,093 > 259
[DEBUG|collector_api.py:200] 2021-02-08 16:41:11,335 > ++++++++++++++KODEX 건설++++++++++++++++++++2454/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:11,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:11,700 > 260
[DEBUG|collector_api.py:200] 2021-02-08 16:41:11,942 > ++++++++++++++ARIRANG 코스피50++++++++++++++++++++2455/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:11,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:12,308 > 261
[DEBUG|collector_api.py:200] 2021-02-08 16:41:12,548 > ++++++++++++++KOSEF 통안채1년++++++++++++++++++++2456/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:12,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:12,914 > 262
[DEBUG|collector_api.py:200] 2021-02-08 16:41:13,179 > ++++++++++++++KODEX 레버리지++++++++++++++++++++2457/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:13,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:13,521 > 263
[DEBUG|collector_api.py:200] 2021-02-08 16:41:13,763 > ++++++++++++++TIGER 인버스++++++++++++++++++++2458/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:13,763 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:14,127 > 264
[DEBUG|collector_api.py:200] 2021-02-08 16:41:14,375 > ++++++++++++++TIGER 레버리지++++++++++++++++++++2459/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:14,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:14,733 > 265
[DEBUG|collector_api.py:200] 2021-02-08 16:41:14,974 > ++++++++++++++TIGER 원유선물Enhanced(H)++++++++++++++++++++2460/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:14,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:15,340 > 266
[DEBUG|collector_api.py:200] 2021-02-08 16:41:15,580 > ++++++++++++++KOSEF 단기자금++++++++++++++++++++2461/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:15,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:15,946 > 267
[DEBUG|collector_api.py:200] 2021-02-08 16:41:16,199 > ++++++++++++++KINDEX 삼성그룹동일가중++++++++++++++++++++2462/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:16,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:16,554 > 268
[DEBUG|collector_api.py:200] 2021-02-08 16:41:16,786 > ++++++++++++++KODEX 골드선물(H)++++++++++++++++++++2463/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:16,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:17,162 > 269
[DEBUG|collector_api.py:200] 2021-02-08 16:41:17,423 > ++++++++++++++TIGER 미국나스닥100++++++++++++++++++++2464/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:17,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:17,769 > 270
[DEBUG|collector_api.py:200] 2021-02-08 16:41:18,011 > ++++++++++++++KBSTAR 중기우량회사채++++++++++++++++++++2465/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:18,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:18,374 > 271
[DEBUG|collector_api.py:200] 2021-02-08 16:41:18,600 > ++++++++++++++TIGER 농산물선물Enhanced(H)++++++++++++++++++++2466/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:18,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:18,981 > 272
[DEBUG|collector_api.py:200] 2021-02-08 16:41:19,226 > ++++++++++++++마이다스 200커버드콜5%OTM++++++++++++++++++++2467/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:19,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:19,587 > 273
[DEBUG|collector_api.py:200] 2021-02-08 16:41:19,818 > ++++++++++++++KOSEF 미국달러선물++++++++++++++++++++2468/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:19,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:20,194 > 274
[DEBUG|collector_api.py:200] 2021-02-08 16:41:20,454 > ++++++++++++++TIGER 삼성그룹펀더멘털++++++++++++++++++++2469/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:20,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:20,802 > 275
[DEBUG|collector_api.py:200] 2021-02-08 16:41:21,033 > ++++++++++++++TIGER LG그룹+펀더멘털++++++++++++++++++++2470/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:21,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:21,410 > 276
[DEBUG|collector_api.py:200] 2021-02-08 16:41:21,673 > ++++++++++++++TIGER 현대차그룹+펀더멘털++++++++++++++++++++2471/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:21,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:22,017 > 277
[DEBUG|collector_api.py:200] 2021-02-08 16:41:22,278 > ++++++++++++++KODEX 구리선물(H)++++++++++++++++++++2472/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:22,279 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:22,624 > 278
[DEBUG|collector_api.py:200] 2021-02-08 16:41:22,866 > ++++++++++++++KODEX 콩선물(H)++++++++++++++++++++2473/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:22,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:23,231 > 279
[DEBUG|collector_api.py:200] 2021-02-08 16:41:23,465 > ++++++++++++++TIGER 200 건설++++++++++++++++++++2474/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:23,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:23,840 > 280
[DEBUG|collector_api.py:200] 2021-02-08 16:41:24,091 > ++++++++++++++TIGER 200 중공업++++++++++++++++++++2475/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:24,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:24,446 > 281
[DEBUG|collector_api.py:200] 2021-02-08 16:41:24,694 > ++++++++++++++TIGER 200 철강소재++++++++++++++++++++2476/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:24,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:25,053 > 282
[DEBUG|collector_api.py:200] 2021-02-08 16:41:25,321 > ++++++++++++++TIGER 200 에너지화학++++++++++++++++++++2477/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:25,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:25,659 > 283
[DEBUG|collector_api.py:200] 2021-02-08 16:41:25,912 > ++++++++++++++TIGER 200 IT++++++++++++++++++++2478/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:25,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:26,266 > 284
[DEBUG|collector_api.py:200] 2021-02-08 16:41:26,501 > ++++++++++++++TIGER 200 금융++++++++++++++++++++2479/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:26,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:26,875 > 285
[DEBUG|collector_api.py:200] 2021-02-08 16:41:27,107 > ++++++++++++++TIGER 경기방어++++++++++++++++++++2480/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:27,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:27,481 > 286
[DEBUG|collector_api.py:200] 2021-02-08 16:41:27,727 > ++++++++++++++TIGER 200 경기소비재++++++++++++++++++++2481/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:27,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:28,089 > 287
[DEBUG|collector_api.py:200] 2021-02-08 16:41:28,347 > ++++++++++++++TIGER 금속선물(H)++++++++++++++++++++2482/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:28,348 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:28,696 > 288
[DEBUG|collector_api.py:200] 2021-02-08 16:41:28,955 > ++++++++++++++TIGER 금은선물(H)++++++++++++++++++++2483/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:28,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:29,303 > 289
[DEBUG|collector_api.py:200] 2021-02-08 16:41:29,547 > ++++++++++++++KOSEF 미국달러선물인버스++++++++++++++++++++2484/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:29,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:29,909 > 290
[DEBUG|collector_api.py:200] 2021-02-08 16:41:30,145 > ++++++++++++++KBSTAR 수출주++++++++++++++++++++2485/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:30,145 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:30,516 > 291
[DEBUG|collector_api.py:200] 2021-02-08 16:41:30,754 > ++++++++++++++KBSTAR 우량업종++++++++++++++++++++2486/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:30,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:31,123 > 292
[DEBUG|collector_api.py:200] 2021-02-08 16:41:31,380 > ++++++++++++++KODEX 보험++++++++++++++++++++2487/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:31,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:31,730 > 293
[DEBUG|collector_api.py:200] 2021-02-08 16:41:31,982 > ++++++++++++++KODEX 운송++++++++++++++++++++2488/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:31,982 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:32,338 > 294
[DEBUG|collector_api.py:200] 2021-02-08 16:41:32,581 > ++++++++++++++파워 코스피100++++++++++++++++++++2489/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:32,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:32,944 > 295
[DEBUG|collector_api.py:200] 2021-02-08 16:41:33,183 > ++++++++++++++KINDEX 밸류대형++++++++++++++++++++2490/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:33,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:33,551 > 296
[DEBUG|collector_api.py:200] 2021-02-08 16:41:33,795 > ++++++++++++++TIGER 미국S&P500선물(H)++++++++++++++++++++2491/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:33,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:34,158 > 297
[DEBUG|collector_api.py:200] 2021-02-08 16:41:34,406 > ++++++++++++++TIGER 헬스케어++++++++++++++++++++2492/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:34,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:34,765 > 298
[DEBUG|collector_api.py:200] 2021-02-08 16:41:35,038 > ++++++++++++++KODEX 은선물(H)++++++++++++++++++++2493/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:35,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:35,372 > 299
[DEBUG|collector_api.py:200] 2021-02-08 16:41:35,618 > ++++++++++++++KINDEX 인버스++++++++++++++++++++2494/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:35,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:35,978 > 300
[DEBUG|collector_api.py:200] 2021-02-08 16:41:36,216 > ++++++++++++++TREX 펀더멘탈 200++++++++++++++++++++2495/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:36,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:36,584 > 301
[DEBUG|collector_api.py:200] 2021-02-08 16:41:36,824 > ++++++++++++++TIGER 모멘텀++++++++++++++++++++2496/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:36,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:37,191 > 302
[DEBUG|collector_api.py:200] 2021-02-08 16:41:37,480 > ++++++++++++++KBSTAR 200++++++++++++++++++++2497/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:37,481 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:37,800 > 303
[DEBUG|collector_api.py:200] 2021-02-08 16:41:38,032 > ++++++++++++++KOSEF 국고채10년++++++++++++++++++++2498/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:38,032 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:38,407 > 304
[DEBUG|collector_api.py:200] 2021-02-08 16:41:38,645 > ++++++++++++++TIGER 중국소비테마++++++++++++++++++++2499/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:38,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:39,014 > 305
[DEBUG|collector_api.py:200] 2021-02-08 16:41:39,252 > ++++++++++++++ARIRANG 200++++++++++++++++++++2500/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:39,252 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:39,620 > 306
[DEBUG|collector_api.py:200] 2021-02-08 16:41:39,867 > ++++++++++++++KOSEF 200 선물++++++++++++++++++++2501/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:39,867 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:40,226 > 307
[DEBUG|collector_api.py:200] 2021-02-08 16:41:40,466 > ++++++++++++++KODEX 국채선물10년++++++++++++++++++++2502/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:40,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:40,833 > 308
[DEBUG|collector_api.py:200] 2021-02-08 16:41:41,071 > ++++++++++++++KINDEX 레버리지++++++++++++++++++++2503/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:41,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:41,441 > 309
[DEBUG|collector_api.py:200] 2021-02-08 16:41:41,673 > ++++++++++++++파워 200++++++++++++++++++++2504/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:41,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:42,047 > 310
[DEBUG|collector_api.py:200] 2021-02-08 16:41:42,303 > ++++++++++++++KODEX 단기채권++++++++++++++++++++2505/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:42,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:42,654 > 311
[DEBUG|collector_api.py:200] 2021-02-08 16:41:42,889 > ++++++++++++++KOSEF 코스피100++++++++++++++++++++2506/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:42,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:43,261 > 312
[DEBUG|collector_api.py:200] 2021-02-08 16:41:43,517 > ++++++++++++++KODEX MSCI Korea++++++++++++++++++++2507/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:43,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:43,868 > 313
[DEBUG|collector_api.py:200] 2021-02-08 16:41:44,094 > ++++++++++++++TIGER 단기통안채++++++++++++++++++++2508/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:44,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:44,474 > 314
[DEBUG|collector_api.py:200] 2021-02-08 16:41:44,715 > ++++++++++++++TIGER 소프트웨어++++++++++++++++++++2509/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:44,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:45,081 > 315
[DEBUG|collector_api.py:200] 2021-02-08 16:41:45,330 > ++++++++++++++TIGER 증권++++++++++++++++++++2510/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:45,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:45,688 > 316
[DEBUG|collector_api.py:200] 2021-02-08 16:41:45,930 > ++++++++++++++마이티 코스피100++++++++++++++++++++2511/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:45,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:46,295 > 317
[DEBUG|collector_api.py:200] 2021-02-08 16:41:46,533 > ++++++++++++++TIGER 구리실물++++++++++++++++++++2512/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:46,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:46,902 > 318
[DEBUG|collector_api.py:200] 2021-02-08 16:41:47,131 > ++++++++++++++ARIRANG 고배당주++++++++++++++++++++2513/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:47,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:47,508 > 319
[DEBUG|collector_api.py:200] 2021-02-08 16:41:47,743 > ++++++++++++++TIGER 200커버드콜5%OTM++++++++++++++++++++2514/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:47,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:48,114 > 320
[DEBUG|collector_api.py:200] 2021-02-08 16:41:48,353 > ++++++++++++++KOSEF 국고채10년레버리지++++++++++++++++++++2515/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:48,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:48,721 > 321
[DEBUG|collector_api.py:200] 2021-02-08 16:41:48,983 > ++++++++++++++KTOP 코스피50++++++++++++++++++++2516/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:48,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:49,328 > 322
[DEBUG|collector_api.py:200] 2021-02-08 16:41:49,563 > ++++++++++++++KINDEX 중국본토CSI300++++++++++++++++++++2517/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:49,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:49,936 > 323
[DEBUG|collector_api.py:200] 2021-02-08 16:41:50,191 > ++++++++++++++KODEX 중국본토 A50++++++++++++++++++++2518/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:50,191 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:50,543 > 324
[DEBUG|collector_api.py:200] 2021-02-08 16:41:50,793 > ++++++++++++++TIGER 베타플러스++++++++++++++++++++2519/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:50,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:51,149 > 325
[DEBUG|collector_api.py:200] 2021-02-08 16:41:51,396 > ++++++++++++++TIGER 로우볼++++++++++++++++++++2520/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:51,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:51,756 > 326
[DEBUG|collector_api.py:200] 2021-02-08 16:41:52,024 > ++++++++++++++KBSTAR 중국본토대형주CSI100++++++++++++++++++++2521/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:52,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:52,364 > 327
[DEBUG|collector_api.py:200] 2021-02-08 16:41:52,606 > ++++++++++++++파워 중기국고채++++++++++++++++++++2522/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:52,606 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:52,971 > 328
[DEBUG|collector_api.py:200] 2021-02-08 16:41:53,234 > ++++++++++++++KODEX 국채선물10년인버스++++++++++++++++++++2523/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:53,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:53,577 > 329
[DEBUG|collector_api.py:200] 2021-02-08 16:41:53,822 > ++++++++++++++KINDEX 미국다우존스리츠(합성 H)++++++++++++++++++++2524/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:53,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:54,185 > 330
[DEBUG|collector_api.py:200] 2021-02-08 16:41:54,418 > ++++++++++++++TIGER 미국MSCI리츠(합성 H)++++++++++++++++++++2525/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:54,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:54,792 > 331
[DEBUG|collector_api.py:200] 2021-02-08 16:41:55,035 > ++++++++++++++TIGER 단기선진하이일드(합성 H)++++++++++++++++++++2526/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:55,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:55,398 > 332
[DEBUG|collector_api.py:200] 2021-02-08 16:41:55,639 > ++++++++++++++KBSTAR 채권혼합++++++++++++++++++++2527/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:55,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:56,005 > 333
[DEBUG|collector_api.py:200] 2021-02-08 16:41:56,253 > ++++++++++++++KBSTAR 주식혼합++++++++++++++++++++2528/2895
[DEBUG|open_api.py:656] 2021-02-08 16:41:56,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:41:56,611 > 334
[DEBUG|collector_api.py:200] 2021-02-08 16:43:22,074 > ++++++++++++++KODEX 미국S&P바이오(합성)++++++++++++++++++++2529/2895
[DEBUG|open_api.py:656] 2021-02-08 16:43:22,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:43:22,075 > 335
[DEBUG|open_api.py:303] 2021-02-08 16:44:05,660 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:44:05,660 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:44:05,661 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:44:05,666 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:44:05,666 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:44:05,666 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:44:05,666 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:44:05,680 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:44:05,711 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:44:05,711 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:44:05,712 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:44:05,728 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:44:05,767 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:44:08,273 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:44:08,274 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:44:08,324 > ++++++++++++++KODEX 미국S&P바이오(합성)++++++++++++++++++++2529/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:08,325 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:08,326 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:44:09,372 > ++++++++++++++ARIRANG 글로벌MSCI(합성 H)++++++++++++++++++++2530/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:09,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:09,373 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:44:09,610 > ++++++++++++++KINDEX 단기통안채++++++++++++++++++++2531/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:09,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:09,982 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:44:10,224 > ++++++++++++++TIGER 차이나CSI300++++++++++++++++++++2532/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:10,224 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:10,588 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:44:10,830 > ++++++++++++++파워 고배당저변동성++++++++++++++++++++2533/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:10,831 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:11,194 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:44:11,445 > ++++++++++++++TIGER 일본TOPIX(합성 H)++++++++++++++++++++2534/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:11,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:11,804 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:44:12,044 > ++++++++++++++TIGER 유로스탁스50(합성 H)++++++++++++++++++++2535/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:12,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:12,411 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:44:12,667 > ++++++++++++++ARIRANG 선진국MSCI(합성 H)++++++++++++++++++++2536/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:12,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:13,018 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:44:13,261 > ++++++++++++++ARIRANG 신흥국MSCI(합성 H)++++++++++++++++++++2537/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:13,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:13,626 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:44:13,977 > ++++++++++++++KINDEX 일본TOPIX레버리지(H)++++++++++++++++++++2538/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:13,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:14,234 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:44:14,464 > ++++++++++++++KBSTAR 단기통안채++++++++++++++++++++2539/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:14,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:14,841 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:44:15,223 > ++++++++++++++KODEX 미국S&P산업재(합성)++++++++++++++++++++2540/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:15,224 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:15,454 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:44:15,695 > ++++++++++++++KOSEF 인도Nifty50(합성)++++++++++++++++++++2541/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:15,695 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:16,060 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:44:16,302 > ++++++++++++++TIGER 미국나스닥바이오++++++++++++++++++++2542/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:16,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:16,667 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:44:16,920 > ++++++++++++++KODEX China H 레버리지(H)++++++++++++++++++++2543/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:16,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:17,274 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:44:17,526 > ++++++++++++++TIGER 차이나CSI300레버리지(합성)++++++++++++++++++++2544/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:17,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:17,881 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:44:18,125 > ++++++++++++++KINDEX 일본TOPIX인버스(합성 H)++++++++++++++++++++2545/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:18,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:18,487 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:44:18,717 > ++++++++++++++SMART 선진국MSCI World(합성 H)++++++++++++++++++++2546/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:18,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:19,095 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:44:19,345 > ++++++++++++++TIGER 코스피고배당++++++++++++++++++++2547/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:19,345 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:19,703 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:44:19,955 > ++++++++++++++KINDEX 배당성장++++++++++++++++++++2548/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:19,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:20,311 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:44:20,554 > ++++++++++++++TIGER 배당성장++++++++++++++++++++2549/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:20,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:20,919 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:44:21,185 > ++++++++++++++KODEX 배당성장++++++++++++++++++++2550/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:21,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:21,534 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:44:21,770 > ++++++++++++++KODEX 삼성그룹밸류++++++++++++++++++++2551/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:21,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:22,142 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:44:22,425 > ++++++++++++++ARIRANG 미국다우존스고배당주(합성 H)++++++++++++++++++++2552/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:22,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:22,750 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:44:22,997 > ++++++++++++++KODEX 단기채권PLUS++++++++++++++++++++2553/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:22,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:23,357 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:44:23,703 > ++++++++++++++흥국 S&P코리아로우볼++++++++++++++++++++2554/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:23,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:23,966 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:44:24,227 > ++++++++++++++TIGER 원유선물인버스(H)++++++++++++++++++++2555/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:24,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:24,575 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:44:24,855 > ++++++++++++++TIGER 차이나CSI300인버스(합성)++++++++++++++++++++2556/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:24,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:25,181 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:44:25,426 > ++++++++++++++TIGER 가격조정++++++++++++++++++++2557/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:25,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:25,791 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:44:26,043 > ++++++++++++++KODEX 미국S&P에너지(합성)++++++++++++++++++++2558/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:26,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:26,400 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:44:26,639 > ++++++++++++++KBSTAR 미국S&P원유생산기업(합성 H)++++++++++++++++++++2559/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:26,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:27,008 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:44:27,268 > ++++++++++++++KODEX 미국S&P500선물(H)++++++++++++++++++++2560/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:27,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:27,616 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:44:27,851 > ++++++++++++++KINDEX 중국본토CSI300레버리지(합성)++++++++++++++++++++2561/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:27,851 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:28,224 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:44:28,462 > ++++++++++++++SMART 중국본토 중소형 CSI500(합성 H)++++++++++++++++++++2562/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:28,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:28,831 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:44:29,081 > ++++++++++++++KODEX 200가치저변동++++++++++++++++++++2563/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:29,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:29,443 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:44:29,741 > ++++++++++++++TIGER 미국S&P500선물인버스(H)++++++++++++++++++++2564/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:29,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:30,060 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:44:30,309 > ++++++++++++++TIGER 미국S&P500레버리지(합성 H)++++++++++++++++++++2565/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:30,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:30,669 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:44:30,904 > ++++++++++++++TIGER 유로스탁스레버리지(합성 H)++++++++++++++++++++2566/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:30,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:31,276 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:44:31,523 > ++++++++++++++TIGER 이머징마켓MSCI레버리지(합성 H)++++++++++++++++++++2567/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:31,523 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:31,883 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:44:32,136 > ++++++++++++++KINDEX 골드선물 레버리지(합성 H)++++++++++++++++++++2568/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:32,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:32,491 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:44:32,745 > ++++++++++++++KOSEF 미국달러선물레버리지++++++++++++++++++++2569/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:32,746 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:33,097 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:44:33,395 > ++++++++++++++KINDEX Fn성장소비주도주++++++++++++++++++++2570/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:33,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:33,704 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:44:33,936 > ++++++++++++++KODEX 코스피++++++++++++++++++++2571/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:33,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:34,312 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:44:34,544 > ++++++++++++++KODEX 200 중소형++++++++++++++++++++2572/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:34,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:34,921 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:44:35,181 > ++++++++++++++TIGER 200 헬스케어++++++++++++++++++++2573/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:35,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:35,530 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:44:35,782 > ++++++++++++++TIGER 200 산업재++++++++++++++++++++2574/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:35,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:36,140 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:44:36,384 > ++++++++++++++TIGER 200 생활소비재++++++++++++++++++++2575/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:36,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:36,748 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:44:36,988 > ++++++++++++++TIGER 우량가치++++++++++++++++++++2576/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:36,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:37,356 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:44:37,600 > ++++++++++++++ARIRANG 코스피++++++++++++++++++++2577/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:37,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:37,965 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:44:38,203 > ++++++++++++++TIGER 화장품++++++++++++++++++++2578/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:38,203 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:38,572 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:44:38,806 > ++++++++++++++TIGER 여행레저++++++++++++++++++++2579/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:38,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:39,179 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:44:39,424 > ++++++++++++++TIGER 미디어컨텐츠++++++++++++++++++++2580/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:39,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:39,787 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:44:40,093 > ++++++++++++++TIGER KTOP30++++++++++++++++++++2581/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:40,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:40,394 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:44:40,646 > ++++++++++++++KODEX 코스닥 150++++++++++++++++++++2582/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:40,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:41,004 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:44:41,344 > ++++++++++++++KODEX KTOP30++++++++++++++++++++2583/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:41,345 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:41,611 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:44:41,842 > ++++++++++++++KOSEF 미국달러선물인버스2X++++++++++++++++++++2584/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:41,842 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:42,219 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:44:42,489 > ++++++++++++++TIGER 코스닥150++++++++++++++++++++2585/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:42,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:42,827 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:44:43,067 > ++++++++++++++TIGER 코스닥150 레버리지++++++++++++++++++++2586/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:43,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:43,435 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:44:43,685 > ++++++++++++++KODEX 코스닥150 레버리지++++++++++++++++++++2587/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:43,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:44,042 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:44:44,324 > ++++++++++++++KBSTAR V&S셀렉트밸류++++++++++++++++++++2588/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:44,325 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:44,649 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:44:44,888 > ++++++++++++++TIGER 인도니프티50레버리지(합성)++++++++++++++++++++2589/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:44,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:45,258 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:44:45,521 > ++++++++++++++KODEX 코스피100++++++++++++++++++++2590/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:45,521 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:45,866 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:44:46,100 > ++++++++++++++KODEX 배당성장채권혼합++++++++++++++++++++2591/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:46,101 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:46,473 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:44:46,724 > ++++++++++++++TIGER 경기방어채권혼합++++++++++++++++++++2592/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:46,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:47,081 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:44:47,317 > ++++++++++++++ARIRANG 스마트베타Quality채권혼합++++++++++++++++++++2593/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:47,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:47,689 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:44:47,921 > ++++++++++++++KINDEX 일본Nikkei225(H)++++++++++++++++++++2594/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:47,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:48,297 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:44:48,662 > ++++++++++++++ARIRANG 우량회사채50 1년++++++++++++++++++++2595/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:48,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:48,904 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:44:49,139 > ++++++++++++++TIGER 일본니케이225++++++++++++++++++++2596/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:49,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:49,512 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:44:49,773 > ++++++++++++++KBSTAR V&S셀렉트밸류채권혼합++++++++++++++++++++2597/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:49,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:50,118 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:44:50,359 > ++++++++++++++TIGER 200IT레버리지++++++++++++++++++++2598/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:50,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:50,727 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:44:50,969 > ++++++++++++++TIGER 200에너지화학레버리지++++++++++++++++++++2599/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:50,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:51,335 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:44:51,579 > ++++++++++++++KODEX 바이오++++++++++++++++++++2600/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:51,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:51,943 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:44:52,182 > ++++++++++++++KODEX 모멘텀Plus++++++++++++++++++++2601/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:52,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:52,553 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:44:52,804 > ++++++++++++++KODEX 퀄리티Plus++++++++++++++++++++2602/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:52,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:53,162 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:44:53,412 > ++++++++++++++KODEX 밸류Plus++++++++++++++++++++2603/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:53,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:53,769 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:44:54,018 > ++++++++++++++TIGER 미국다우존스30++++++++++++++++++++2604/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:54,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:54,383 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:44:54,640 > ++++++++++++++TIGER 유로스탁스배당30++++++++++++++++++++2605/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:54,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:54,991 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:44:55,281 > ++++++++++++++TIGER 차이나HSCEI++++++++++++++++++++2606/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:55,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:55,600 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:44:55,839 > ++++++++++++++KINDEX 베트남VN30(합성)++++++++++++++++++++2607/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:55,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:56,208 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:44:56,448 > ++++++++++++++TIGER 일본TOPIX헬스케어(합성)++++++++++++++++++++2608/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:56,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:56,817 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:44:57,155 > ++++++++++++++TIGER S&P글로벌헬스케어(합성)++++++++++++++++++++2609/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:57,156 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:57,440 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:44:57,674 > ++++++++++++++KBSTAR 차이나HSCEI(H)++++++++++++++++++++2610/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:57,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:58,049 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:44:58,290 > ++++++++++++++TIGER 코스닥150선물인버스++++++++++++++++++++2611/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:58,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:58,655 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:44:58,903 > ++++++++++++++KODEX 코스닥150선물인버스++++++++++++++++++++2612/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:58,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:59,262 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:44:59,546 > ++++++++++++++KODEX 선진국MSCI World++++++++++++++++++++2613/2895
[DEBUG|open_api.py:656] 2021-02-08 16:44:59,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:44:59,886 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:45:00,131 > ++++++++++++++ARIRANG 고배당저변동50++++++++++++++++++++2614/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:00,132 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:00,496 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:45:00,768 > ++++++++++++++ARIRANG 고배당주채권혼합++++++++++++++++++++2615/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:00,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:01,116 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:45:01,363 > ++++++++++++++KINDEX 코스닥(합성)++++++++++++++++++++2616/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:01,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:01,722 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:45:01,971 > ++++++++++++++TIGER 200동일가중++++++++++++++++++++2617/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:01,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:02,330 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:45:02,574 > ++++++++++++++KBSTAR 200선물레버리지++++++++++++++++++++2618/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:02,574 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:02,936 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:45:03,179 > ++++++++++++++KBSTAR 200선물인버스++++++++++++++++++++2619/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:03,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:03,544 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:45:03,775 > ++++++++++++++KBSTAR 200선물인버스2X++++++++++++++++++++2620/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:03,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:04,152 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:45:04,397 > ++++++++++++++KODEX 200동일가중++++++++++++++++++++2621/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:04,397 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:04,760 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:45:04,989 > ++++++++++++++KODEX 200선물인버스2X++++++++++++++++++++2622/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:04,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:05,367 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:45:05,601 > ++++++++++++++TIGER 200선물인버스2X++++++++++++++++++++2623/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:05,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:05,975 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:45:06,211 > ++++++++++++++KBSTAR 모멘텀밸류++++++++++++++++++++2624/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:06,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:06,582 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:45:06,873 > ++++++++++++++KBSTAR 모멘텀로우볼++++++++++++++++++++2625/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:06,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:07,191 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:45:07,457 > ++++++++++++++ARIRANG 200선물레버리지++++++++++++++++++++2626/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:07,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:07,798 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:45:08,055 > ++++++++++++++ARIRANG 200선물인버스2X++++++++++++++++++++2627/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:08,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:08,405 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:45:08,645 > ++++++++++++++KOSEF 200선물인버스2X++++++++++++++++++++2628/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:08,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:09,012 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:45:09,247 > ++++++++++++++KOSEF 200선물인버스++++++++++++++++++++2629/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:09,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:09,620 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:45:09,856 > ++++++++++++++KOSEF 200선물레버리지++++++++++++++++++++2630/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:09,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:10,228 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:45:10,465 > ++++++++++++++KBSTAR 헬스케어++++++++++++++++++++2631/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:10,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:10,836 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:45:11,066 > ++++++++++++++KBSTAR 헬스케어채권혼합++++++++++++++++++++2632/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:11,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:11,443 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:45:11,696 > ++++++++++++++KINDEX 인도네시아MSCI(합성)++++++++++++++++++++2633/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:11,697 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:12,051 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:45:12,365 > ++++++++++++++ARIRANG 심천차이넥스트(합성)++++++++++++++++++++2634/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:12,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:12,660 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:45:13,010 > ++++++++++++++KODEX 심천ChiNext(합성)++++++++++++++++++++2635/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:13,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:13,268 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:45:13,502 > ++++++++++++++KOSEF 배당바이백Plus++++++++++++++++++++2636/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:13,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:13,875 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:45:14,138 > ++++++++++++++KOSEF 저PBR가중++++++++++++++++++++2637/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:14,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:14,484 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:45:14,711 > ++++++++++++++TIGER 코스닥150IT++++++++++++++++++++2638/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:14,712 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:15,091 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:45:15,338 > ++++++++++++++TIGER 코스닥150바이오테크++++++++++++++++++++2639/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:15,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:15,698 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:45:16,073 > ++++++++++++++TIGER 미국달러선물레버리지++++++++++++++++++++2640/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:16,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:16,306 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:45:16,536 > ++++++++++++++TIGER 미국달러선물인버스2X++++++++++++++++++++2641/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:16,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:16,914 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:45:17,151 > ++++++++++++++TIGER 우선주++++++++++++++++++++2642/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:17,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:17,521 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:45:17,773 > ++++++++++++++KODEX WTI원유선물(H)++++++++++++++++++++2643/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:17,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:18,129 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:45:18,373 > ++++++++++++++KODEX 미국달러선물++++++++++++++++++++2644/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:18,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:18,736 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:45:18,984 > ++++++++++++++KODEX 미국달러선물레버리지++++++++++++++++++++2645/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:18,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:19,343 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:45:19,583 > ++++++++++++++KODEX 미국달러선물인버스2X++++++++++++++++++++2646/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:19,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:19,950 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:45:20,191 > ++++++++++++++KODEX 미국달러선물인버스++++++++++++++++++++2647/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:20,191 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:20,557 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:45:20,793 > ++++++++++++++KINDEX 필리핀MSCI(합성)++++++++++++++++++++2648/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:20,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:21,164 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:45:21,408 > ++++++++++++++KINDEX 러시아MSCI(합성)++++++++++++++++++++2649/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:21,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:21,770 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:45:22,008 > ++++++++++++++KBSTAR 고배당++++++++++++++++++++2650/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:22,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:22,377 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:45:22,622 > ++++++++++++++KODEX 미디어&엔터테인먼트++++++++++++++++++++2651/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:22,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:22,985 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:45:23,229 > ++++++++++++++KODEX IT++++++++++++++++++++2652/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:23,229 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:23,591 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:45:23,834 > ++++++++++++++KODEX 경기소비재++++++++++++++++++++2653/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:23,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:24,199 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:45:24,444 > ++++++++++++++KODEX 필수소비재++++++++++++++++++++2654/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:24,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:24,808 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:45:25,061 > ++++++++++++++KODEX 헬스케어++++++++++++++++++++2655/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:25,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:25,416 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:45:25,655 > ++++++++++++++ARIRANG 중형주저변동50++++++++++++++++++++2656/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:25,656 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:26,022 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:45:26,261 > ++++++++++++++KBSTAR 미국장기국채선물(H)++++++++++++++++++++2657/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:26,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:26,629 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:45:26,865 > ++++++++++++++KBSTAR 미국장기국채선물인버스(H)++++++++++++++++++++2658/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:26,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:27,236 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:45:27,466 > ++++++++++++++KBSTAR 미국장기국채선물레버리지(합성 H)++++++++++++++++++++2659/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:27,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:27,844 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:45:28,130 > ++++++++++++++KBSTAR 미국장기국채선물인버스2X(합성 H)++++++++++++++++++++2660/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:28,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:28,451 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:45:28,679 > ++++++++++++++TIGER 200선물레버리지++++++++++++++++++++2661/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:28,680 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:29,060 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:45:29,299 > ++++++++++++++TIGER S&P글로벌인프라(합성)++++++++++++++++++++2662/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:29,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:29,668 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:45:29,912 > ++++++++++++++KODEX S&P글로벌인프라(합성)++++++++++++++++++++2663/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:29,912 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:30,275 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:45:30,502 > ++++++++++++++ARIRANG S&P글로벌인프라++++++++++++++++++++2664/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:30,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:30,882 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:45:31,121 > ++++++++++++++ARIRANG 미국S&P500(H)++++++++++++++++++++2665/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:31,122 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:31,489 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:45:31,730 > ++++++++++++++KBSTAR KQ고배당++++++++++++++++++++2666/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:31,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:32,095 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:45:32,339 > ++++++++++++++KBSTAR 코스닥150++++++++++++++++++++2667/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:32,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:32,702 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:45:32,947 > ++++++++++++++KODEX WTI원유선물인버스(H)++++++++++++++++++++2668/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:32,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:33,308 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:45:33,557 > ++++++++++++++KODEX 3대농산물선물(H)++++++++++++++++++++2669/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:33,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:33,916 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:45:34,159 > ++++++++++++++KINDEX 스마트모멘텀++++++++++++++++++++2670/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:34,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:34,524 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:45:34,756 > ++++++++++++++KINDEX 스마트밸류++++++++++++++++++++2671/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:34,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:35,132 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:45:35,368 > ++++++++++++++KBSTAR 단기국공채액티브++++++++++++++++++++2672/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:35,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:35,740 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:45:35,974 > ++++++++++++++KBSTAR 중장기국공채액티브++++++++++++++++++++2673/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:35,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:36,348 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:45:36,590 > ++++++++++++++TIGER 단기채권액티브++++++++++++++++++++2674/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:36,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:36,956 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:45:37,191 > ++++++++++++++KINDEX 중장기국공채액티브++++++++++++++++++++2675/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:37,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:37,563 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:45:37,798 > ++++++++++++++KODEX 종합채권(AA-이상)액티브++++++++++++++++++++2676/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:37,798 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:38,173 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:45:38,455 > ++++++++++++++KODEX 단기변동금리부채권액티브++++++++++++++++++++2677/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:38,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:38,784 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:45:39,133 > ++++++++++++++KODEX MSCI모멘텀++++++++++++++++++++2678/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:39,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:39,393 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:45:39,620 > ++++++++++++++KODEX MSCI밸류++++++++++++++++++++2679/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:39,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:40,002 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:45:40,264 > ++++++++++++++KODEX MSCI퀄리티++++++++++++++++++++2680/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:40,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:40,610 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:45:40,837 > ++++++++++++++KBSTAR 코스닥150선물인버스++++++++++++++++++++2681/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:40,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:41,217 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:45:41,490 > ++++++++++++++TIGER 글로벌4차산업혁신기술(합성 H)++++++++++++++++++++2682/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:41,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:41,827 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:45:42,092 > ++++++++++++++TIGER 글로벌자원생산기업(합성 H)++++++++++++++++++++2683/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:42,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:42,435 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:45:42,665 > ++++++++++++++KBSTAR 글로벌4차산업IT(합성 H)++++++++++++++++++++2684/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:42,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:43,042 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:45:43,402 > ++++++++++++++KODEX 미국S&P고배당커버드콜(합성 H)++++++++++++++++++++2685/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:43,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:43,650 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:45:43,896 > ++++++++++++++KODEX 글로벌4차산업로보틱스(합성)++++++++++++++++++++2686/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:43,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:44,257 > 158
[DEBUG|collector_api.py:200] 2021-02-08 16:45:44,556 > ++++++++++++++KINDEX S&P아시아TOP50++++++++++++++++++++2687/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:44,556 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:44,863 > 159
[DEBUG|collector_api.py:200] 2021-02-08 16:45:45,142 > ++++++++++++++TIGER 코스피++++++++++++++++++++2688/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:45,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:45,471 > 160
[DEBUG|collector_api.py:200] 2021-02-08 16:45:45,715 > ++++++++++++++TIGER 코스피대형주++++++++++++++++++++2689/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:45,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:46,080 > 161
[DEBUG|collector_api.py:200] 2021-02-08 16:45:46,329 > ++++++++++++++TIGER 코스피중형주++++++++++++++++++++2690/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:46,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:46,686 > 162
[DEBUG|collector_api.py:200] 2021-02-08 16:45:46,941 > ++++++++++++++KBSTAR 코스닥150선물레버리지++++++++++++++++++++2691/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:46,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:47,295 > 163
[DEBUG|collector_api.py:200] 2021-02-08 16:45:47,539 > ++++++++++++++ARIRANG ESG우수기업++++++++++++++++++++2692/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:47,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:47,904 > 164
[DEBUG|collector_api.py:200] 2021-02-08 16:45:48,142 > ++++++++++++++KODEX 200TR++++++++++++++++++++2693/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:48,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:48,512 > 165
[DEBUG|collector_api.py:200] 2021-02-08 16:45:48,758 > ++++++++++++++KODEX MSCI Korea TR++++++++++++++++++++2694/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:48,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:49,121 > 166
[DEBUG|collector_api.py:200] 2021-02-08 16:45:49,417 > ++++++++++++++ARIRANG 단기채권액티브++++++++++++++++++++2695/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:49,418 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:49,728 > 167
[DEBUG|collector_api.py:200] 2021-02-08 16:45:49,973 > ++++++++++++++KODEX 고배당++++++++++++++++++++2696/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:49,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:50,336 > 168
[DEBUG|collector_api.py:200] 2021-02-08 16:45:50,589 > ++++++++++++++KODEX 최소변동성++++++++++++++++++++2697/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:50,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:50,946 > 169
[DEBUG|collector_api.py:200] 2021-02-08 16:45:51,198 > ++++++++++++++KINDEX 미국IT인터넷S&P(합성 H)++++++++++++++++++++2698/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:51,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:51,553 > 170
[DEBUG|collector_api.py:200] 2021-02-08 16:45:51,794 > ++++++++++++++ARIRANG 주도업종++++++++++++++++++++2699/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:51,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:52,160 > 171
[DEBUG|collector_api.py:200] 2021-02-08 16:45:52,385 > ++++++++++++++KODEX 미국러셀2000(H)++++++++++++++++++++2700/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:52,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:52,768 > 172
[DEBUG|collector_api.py:200] 2021-02-08 16:45:53,028 > ++++++++++++++KODEX 골드선물인버스(H)++++++++++++++++++++2701/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:53,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:53,375 > 173
[DEBUG|collector_api.py:200] 2021-02-08 16:45:53,606 > ++++++++++++++KBSTAR 중소형고배당++++++++++++++++++++2702/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:53,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:53,983 > 174
[DEBUG|collector_api.py:200] 2021-02-08 16:45:54,251 > ++++++++++++++KBSTAR 국고채3년선물인버스++++++++++++++++++++2703/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:54,252 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:54,619 > 175
[DEBUG|collector_api.py:200] 2021-02-08 16:45:54,850 > ++++++++++++++KODEX 중국본토CSI300++++++++++++++++++++2704/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:54,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:55,227 > 176
[DEBUG|collector_api.py:200] 2021-02-08 16:45:55,470 > ++++++++++++++KODEX 200미국채혼합++++++++++++++++++++2705/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:55,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:55,836 > 177
[DEBUG|collector_api.py:200] 2021-02-08 16:45:56,091 > ++++++++++++++KBSTAR 200금융++++++++++++++++++++2706/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:56,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:56,444 > 178
[DEBUG|collector_api.py:200] 2021-02-08 16:45:56,688 > ++++++++++++++KBSTAR 200에너지화학++++++++++++++++++++2707/2895
[DEBUG|open_api.py:656] 2021-02-08 16:45:56,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:45:57,052 > 179
[DEBUG|open_api.py:303] 2021-02-08 16:49:44,969 > connected
[DEBUG|open_api.py:244] 2021-02-08 16:49:44,969 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:49:44,969 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:49:44,970 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-08 16:49:44,970 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-08 16:49:44,970 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-08 16:49:44,970 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-08 16:49:44,988 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:49:45,014 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:49:45,015 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:49:45,015 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:49:45,029 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-08 16:49:45,065 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-08 16:49:47,742 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-08 16:49:47,743 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-08 16:49:47,782 > ++++++++++++++KBSTAR 200에너지화학++++++++++++++++++++2707/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:47,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:47,784 > 1
[DEBUG|collector_api.py:200] 2021-02-08 16:49:48,856 > ++++++++++++++KBSTAR 200IT++++++++++++++++++++2708/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:48,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:48,857 > 2
[DEBUG|collector_api.py:200] 2021-02-08 16:49:49,096 > ++++++++++++++KBSTAR 200중공업++++++++++++++++++++2709/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:49,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:49,465 > 3
[DEBUG|collector_api.py:200] 2021-02-08 16:49:49,685 > ++++++++++++++KBSTAR 200철강소재++++++++++++++++++++2710/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:49,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:50,072 > 4
[DEBUG|collector_api.py:200] 2021-02-08 16:49:50,302 > ++++++++++++++FOCUS ESG리더스++++++++++++++++++++2711/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:50,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:50,679 > 5
[DEBUG|collector_api.py:200] 2021-02-08 16:49:50,905 > ++++++++++++++ARIRANG 미국나스닥기술주++++++++++++++++++++2712/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:50,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:51,286 > 6
[DEBUG|collector_api.py:200] 2021-02-08 16:49:51,515 > ++++++++++++++KBSTAR 200건설++++++++++++++++++++2713/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:51,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:51,894 > 7
[DEBUG|collector_api.py:200] 2021-02-08 16:49:52,119 > ++++++++++++++KBSTAR 200경기소비재++++++++++++++++++++2714/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:52,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:52,502 > 8
[DEBUG|collector_api.py:200] 2021-02-08 16:49:52,725 > ++++++++++++++KBSTAR 200산업재++++++++++++++++++++2715/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:52,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:53,109 > 9
[DEBUG|collector_api.py:200] 2021-02-08 16:49:53,357 > ++++++++++++++KBSTAR 200생활소비재++++++++++++++++++++2716/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:53,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:53,717 > 10
[DEBUG|collector_api.py:200] 2021-02-08 16:49:53,939 > ++++++++++++++KODEX MSCI KOREA ESG유니버설++++++++++++++++++++2717/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:53,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:54,324 > 11
[DEBUG|collector_api.py:200] 2021-02-08 16:49:54,567 > ++++++++++++++TIGER MSCI KOREA ESG유니버설++++++++++++++++++++2718/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:54,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:54,932 > 12
[DEBUG|collector_api.py:200] 2021-02-08 16:49:55,163 > ++++++++++++++TIGER MSCI KOREA ESG리더스++++++++++++++++++++2719/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:55,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:55,539 > 13
[DEBUG|collector_api.py:200] 2021-02-08 16:49:55,763 > ++++++++++++++TIGER 200커버드콜ATM++++++++++++++++++++2720/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:55,763 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:56,147 > 14
[DEBUG|collector_api.py:200] 2021-02-08 16:49:56,377 > ++++++++++++++ARIRANG 국채선물10년++++++++++++++++++++2721/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:56,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:56,755 > 15
[DEBUG|collector_api.py:200] 2021-02-08 16:49:56,992 > ++++++++++++++KBSTAR 200고배당커버드콜ATM++++++++++++++++++++2722/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:56,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:57,362 > 16
[DEBUG|collector_api.py:200] 2021-02-08 16:49:57,591 > ++++++++++++++KBSTAR ESG사회책임투자++++++++++++++++++++2723/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:57,592 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:57,969 > 17
[DEBUG|collector_api.py:200] 2021-02-08 16:49:58,189 > ++++++++++++++KINDEX 멕시코MSCI(합성)++++++++++++++++++++2724/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:58,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:58,577 > 18
[DEBUG|collector_api.py:200] 2021-02-08 16:49:58,811 > ++++++++++++++KOSEF 코스닥150선물++++++++++++++++++++2725/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:58,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:59,186 > 19
[DEBUG|collector_api.py:200] 2021-02-08 16:49:59,423 > ++++++++++++++KOSEF 코스닥150선물인버스++++++++++++++++++++2726/2895
[DEBUG|open_api.py:656] 2021-02-08 16:49:59,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:49:59,793 > 20
[DEBUG|collector_api.py:200] 2021-02-08 16:50:00,036 > ++++++++++++++KOSEF 코스닥150선물레버리지++++++++++++++++++++2727/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:00,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:00,399 > 21
[DEBUG|collector_api.py:200] 2021-02-08 16:50:00,624 > ++++++++++++++KODEX China H선물인버스(H)++++++++++++++++++++2728/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:00,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:01,006 > 22
[DEBUG|collector_api.py:200] 2021-02-08 16:50:01,244 > ++++++++++++++KBSTAR 차이나H선물인버스(H)++++++++++++++++++++2729/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:01,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:01,615 > 23
[DEBUG|collector_api.py:200] 2021-02-08 16:50:01,846 > ++++++++++++++KODEX MSCI EM선물(H)++++++++++++++++++++2730/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:01,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:02,223 > 24
[DEBUG|collector_api.py:200] 2021-02-08 16:50:02,447 > ++++++++++++++KBSTAR KRX300++++++++++++++++++++2731/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:02,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:02,833 > 25
[DEBUG|collector_api.py:200] 2021-02-08 16:50:03,071 > ++++++++++++++TIGER 대형성장++++++++++++++++++++2732/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:03,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:03,441 > 26
[DEBUG|collector_api.py:200] 2021-02-08 16:50:03,666 > ++++++++++++++TIGER 대형가치++++++++++++++++++++2733/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:03,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:04,048 > 27
[DEBUG|collector_api.py:200] 2021-02-08 16:50:04,282 > ++++++++++++++TIGER 중소형성장++++++++++++++++++++2734/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:04,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:04,656 > 28
[DEBUG|collector_api.py:200] 2021-02-08 16:50:04,916 > ++++++++++++++TIGER 중소형가치++++++++++++++++++++2735/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:04,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:05,263 > 29
[DEBUG|collector_api.py:200] 2021-02-08 16:50:05,493 > ++++++++++++++TIGER TOP10++++++++++++++++++++2736/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:05,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:05,871 > 30
[DEBUG|collector_api.py:200] 2021-02-08 16:50:06,092 > ++++++++++++++TIGER KRX300++++++++++++++++++++2737/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:06,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:06,480 > 31
[DEBUG|collector_api.py:200] 2021-02-08 16:50:06,717 > ++++++++++++++KODEX KRX300++++++++++++++++++++2738/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:06,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:07,088 > 32
[DEBUG|collector_api.py:200] 2021-02-08 16:50:07,314 > ++++++++++++++마이티 200커버드콜ATM레버리지++++++++++++++++++++2739/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:07,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:07,695 > 33
[DEBUG|collector_api.py:200] 2021-02-08 16:50:07,920 > ++++++++++++++SMART KRX300++++++++++++++++++++2740/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:07,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:08,303 > 34
[DEBUG|collector_api.py:200] 2021-02-08 16:50:08,528 > ++++++++++++++TIGER 일본엔선물++++++++++++++++++++2741/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:08,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:08,910 > 35
[DEBUG|collector_api.py:200] 2021-02-08 16:50:09,153 > ++++++++++++++TIGER 일본엔선물레버리지++++++++++++++++++++2742/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:09,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:09,519 > 36
[DEBUG|collector_api.py:200] 2021-02-08 16:50:09,744 > ++++++++++++++TIGER 일본엔선물인버스++++++++++++++++++++2743/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:09,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:10,126 > 37
[DEBUG|collector_api.py:200] 2021-02-08 16:50:10,354 > ++++++++++++++TIGER 일본엔선물인버스2X++++++++++++++++++++2744/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:10,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:10,734 > 38
[DEBUG|collector_api.py:200] 2021-02-08 16:50:10,967 > ++++++++++++++FOCUS KRX300++++++++++++++++++++2745/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:10,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:11,342 > 39
[DEBUG|collector_api.py:200] 2021-02-08 16:50:11,576 > ++++++++++++++ARIRANG KRX300++++++++++++++++++++2746/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:11,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:11,950 > 40
[DEBUG|collector_api.py:200] 2021-02-08 16:50:12,189 > ++++++++++++++KODEX 국채선물3년인버스++++++++++++++++++++2747/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:12,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:12,557 > 41
[DEBUG|collector_api.py:200] 2021-02-08 16:50:12,786 > ++++++++++++++HANARO 200++++++++++++++++++++2748/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:12,786 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:13,165 > 42
[DEBUG|collector_api.py:200] 2021-02-08 16:50:13,405 > ++++++++++++++KOSEF 200TR++++++++++++++++++++2749/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:13,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:13,771 > 43
[DEBUG|collector_api.py:200] 2021-02-08 16:50:14,001 > ++++++++++++++KBSTAR 국채선물10년++++++++++++++++++++2750/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:14,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:14,379 > 44
[DEBUG|collector_api.py:200] 2021-02-08 16:50:14,617 > ++++++++++++++KBSTAR 국채선물10년인버스++++++++++++++++++++2751/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:14,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:14,988 > 45
[DEBUG|collector_api.py:200] 2021-02-08 16:50:15,213 > ++++++++++++++SMART 200TR++++++++++++++++++++2752/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:15,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:15,595 > 46
[DEBUG|collector_api.py:200] 2021-02-08 16:50:15,831 > ++++++++++++++ARIRANG 200동일가중++++++++++++++++++++2753/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:15,832 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:16,202 > 47
[DEBUG|collector_api.py:200] 2021-02-08 16:50:16,431 > ++++++++++++++KODEX FnKorea50++++++++++++++++++++2754/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:16,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:16,810 > 48
[DEBUG|collector_api.py:200] 2021-02-08 16:50:17,041 > ++++++++++++++ARIRANG 국채선물3년++++++++++++++++++++2755/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:17,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:17,418 > 49
[DEBUG|collector_api.py:200] 2021-02-08 16:50:17,658 > ++++++++++++++KODEX 한국대만IT프리미어++++++++++++++++++++2756/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:17,658 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:18,026 > 50
[DEBUG|collector_api.py:200] 2021-02-08 16:50:18,265 > ++++++++++++++KINDEX 국채선물10년인버스++++++++++++++++++++2757/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:18,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:18,632 > 51
[DEBUG|collector_api.py:200] 2021-02-08 16:50:18,889 > ++++++++++++++KINDEX 국채선물3년인버스++++++++++++++++++++2758/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:18,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:19,241 > 52
[DEBUG|collector_api.py:200] 2021-02-08 16:50:19,476 > ++++++++++++++KBSTAR 중소형모멘텀로우볼++++++++++++++++++++2759/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:19,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:19,850 > 53
[DEBUG|collector_api.py:200] 2021-02-08 16:50:20,091 > ++++++++++++++KBSTAR 중소형모멘텀밸류++++++++++++++++++++2760/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:20,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:20,458 > 54
[DEBUG|collector_api.py:200] 2021-02-08 16:50:20,740 > ++++++++++++++TIGER K게임++++++++++++++++++++2761/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:20,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:21,065 > 55
[DEBUG|collector_api.py:200] 2021-02-08 16:50:21,283 > ++++++++++++++KBSTAR 게임테마++++++++++++++++++++2762/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:21,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:21,673 > 56
[DEBUG|collector_api.py:200] 2021-02-08 16:50:21,919 > ++++++++++++++KODEX 게임산업++++++++++++++++++++2763/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:21,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:22,280 > 57
[DEBUG|collector_api.py:200] 2021-02-08 16:50:22,507 > ++++++++++++++ARIRANG 코스닥150++++++++++++++++++++2764/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:22,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:22,886 > 58
[DEBUG|collector_api.py:200] 2021-02-08 16:50:23,137 > ++++++++++++++ARIRANG 코스닥150선물인버스++++++++++++++++++++2765/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:23,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:23,495 > 59
[DEBUG|collector_api.py:200] 2021-02-08 16:50:23,732 > ++++++++++++++ARIRANG 코스피중형주++++++++++++++++++++2766/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:23,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:24,103 > 60
[DEBUG|collector_api.py:200] 2021-02-08 16:50:24,350 > ++++++++++++++TIGER 국채선물3년인버스++++++++++++++++++++2767/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:24,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:24,709 > 61
[DEBUG|collector_api.py:200] 2021-02-08 16:50:24,954 > ++++++++++++++TIGER 국채선물10년인버스++++++++++++++++++++2768/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:24,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:25,318 > 62
[DEBUG|collector_api.py:200] 2021-02-08 16:50:25,570 > ++++++++++++++TIGER 중장기국채++++++++++++++++++++2769/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:25,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:25,926 > 63
[DEBUG|collector_api.py:200] 2021-02-08 16:50:26,165 > ++++++++++++++KBSTAR 코스피++++++++++++++++++++2770/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:26,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:26,534 > 64
[DEBUG|collector_api.py:200] 2021-02-08 16:50:26,769 > ++++++++++++++KODEX 미국채울트라30년선물(H)++++++++++++++++++++2771/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:26,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:27,142 > 65
[DEBUG|collector_api.py:200] 2021-02-08 16:50:27,370 > ++++++++++++++KODEX 미국채울트라30년선물인버스(H)++++++++++++++++++++2772/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:27,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:27,749 > 66
[DEBUG|collector_api.py:200] 2021-02-08 16:50:27,989 > ++++++++++++++HANARO KRX300++++++++++++++++++++2773/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:27,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:28,359 > 67
[DEBUG|collector_api.py:200] 2021-02-08 16:50:28,606 > ++++++++++++++HANARO 코스닥150++++++++++++++++++++2774/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:28,606 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:28,966 > 68
[DEBUG|collector_api.py:200] 2021-02-08 16:50:29,281 > ++++++++++++++HANARO 200선물레버리지++++++++++++++++++++2775/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:29,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:29,578 > 69
[DEBUG|collector_api.py:200] 2021-02-08 16:50:29,821 > ++++++++++++++KODEX 미국나스닥100선물(H)++++++++++++++++++++2776/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:29,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:30,186 > 70
[DEBUG|collector_api.py:200] 2021-02-08 16:50:30,477 > ++++++++++++++KINDEX 코스피++++++++++++++++++++2777/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:30,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:30,794 > 71
[DEBUG|collector_api.py:200] 2021-02-08 16:50:31,042 > ++++++++++++++TIGER 미국채10년선물++++++++++++++++++++2778/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:31,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:31,402 > 72
[DEBUG|collector_api.py:200] 2021-02-08 16:50:31,674 > ++++++++++++++TIGER 2차전지테마++++++++++++++++++++2779/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:31,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:32,012 > 73
[DEBUG|collector_api.py:200] 2021-02-08 16:50:32,251 > ++++++++++++++KODEX 2차전지산업++++++++++++++++++++2780/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:32,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:32,621 > 74
[DEBUG|collector_api.py:200] 2021-02-08 16:50:32,864 > ++++++++++++++HANARO 200선물인버스++++++++++++++++++++2781/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:32,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:33,229 > 75
[DEBUG|collector_api.py:200] 2021-02-08 16:50:33,461 > ++++++++++++++HANARO 코스닥150선물레버리지++++++++++++++++++++2782/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:33,461 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:33,837 > 76
[DEBUG|collector_api.py:200] 2021-02-08 16:50:34,110 > ++++++++++++++HANARO 단기통안채++++++++++++++++++++2783/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:34,110 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:34,445 > 77
[DEBUG|collector_api.py:200] 2021-02-08 16:50:34,677 > ++++++++++++++KODEX KRX300레버리지++++++++++++++++++++2784/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:34,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:35,053 > 78
[DEBUG|collector_api.py:200] 2021-02-08 16:50:35,305 > ++++++++++++++KBSTAR KRX300레버리지++++++++++++++++++++2785/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:35,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:35,662 > 79
[DEBUG|collector_api.py:200] 2021-02-08 16:50:35,905 > ++++++++++++++TIGER 의료기기++++++++++++++++++++2786/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:35,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:36,270 > 80
[DEBUG|collector_api.py:200] 2021-02-08 16:50:36,548 > ++++++++++++++TIGER 지주회사++++++++++++++++++++2787/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:36,549 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:36,876 > 81
[DEBUG|collector_api.py:200] 2021-02-08 16:50:37,107 > ++++++++++++++KODEX 미국채10년선물++++++++++++++++++++2788/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:37,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:37,484 > 82
[DEBUG|collector_api.py:200] 2021-02-08 16:50:37,713 > ++++++++++++++ARIRANG KRX300IT++++++++++++++++++++2789/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:37,713 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:38,092 > 83
[DEBUG|collector_api.py:200] 2021-02-08 16:50:38,333 > ++++++++++++++ARIRANG KRX300헬스케어++++++++++++++++++++2790/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:38,333 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:38,700 > 84
[DEBUG|collector_api.py:200] 2021-02-08 16:50:38,921 > ++++++++++++++KINDEX 미국WideMoat가치주++++++++++++++++++++2791/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:38,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:39,308 > 85
[DEBUG|collector_api.py:200] 2021-02-08 16:50:39,551 > ++++++++++++++KBSTAR 중국MSCI China선물(H)++++++++++++++++++++2792/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:39,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:39,915 > 86
[DEBUG|collector_api.py:200] 2021-02-08 16:50:40,124 > ++++++++++++++TIGER 200TR++++++++++++++++++++2793/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:40,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:40,523 > 87
[DEBUG|collector_api.py:200] 2021-02-08 16:50:40,749 > ++++++++++++++TIGER MSCI Korea TR++++++++++++++++++++2794/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:40,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:41,130 > 88
[DEBUG|collector_api.py:200] 2021-02-08 16:50:41,359 > ++++++++++++++KODEX 미국FANG플러스(H)++++++++++++++++++++2795/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:41,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:41,738 > 89
[DEBUG|collector_api.py:200] 2021-02-08 16:50:41,952 > ++++++++++++++HANARO 농업융복합산업++++++++++++++++++++2796/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:41,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:42,345 > 90
[DEBUG|collector_api.py:200] 2021-02-08 16:50:42,567 > ++++++++++++++TIGER 200커뮤니케이션서비스++++++++++++++++++++2797/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:42,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:42,953 > 91
[DEBUG|collector_api.py:200] 2021-02-08 16:50:43,180 > ++++++++++++++KBSTAR 200커뮤니케이션서비스++++++++++++++++++++2798/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:43,180 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:43,560 > 92
[DEBUG|collector_api.py:200] 2021-02-08 16:50:43,790 > ++++++++++++++KODEX Top5PlusTR++++++++++++++++++++2799/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:43,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:44,168 > 93
[DEBUG|collector_api.py:200] 2021-02-08 16:50:44,388 > ++++++++++++++KBSTAR 대형고배당10TR++++++++++++++++++++2800/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:44,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:44,774 > 94
[DEBUG|collector_api.py:200] 2021-02-08 16:50:44,986 > ++++++++++++++KINDEX 싱가포르리츠++++++++++++++++++++2801/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:44,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:45,384 > 95
[DEBUG|collector_api.py:200] 2021-02-08 16:50:45,607 > ++++++++++++++KOSEF 코스닥150++++++++++++++++++++2802/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:45,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:45,993 > 96
[DEBUG|collector_api.py:200] 2021-02-08 16:50:46,200 > ++++++++++++++TIGER 골드선물(H)++++++++++++++++++++2803/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:46,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:46,601 > 97
[DEBUG|collector_api.py:200] 2021-02-08 16:50:46,822 > ++++++++++++++KBSTAR KRX300미국달러선물혼합++++++++++++++++++++2804/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:46,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:47,208 > 98
[DEBUG|collector_api.py:200] 2021-02-08 16:50:47,421 > ++++++++++++++KODEX 멀티에셋하이인컴(H)++++++++++++++++++++2805/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:47,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:47,815 > 99
[DEBUG|collector_api.py:200] 2021-02-08 16:50:48,027 > ++++++++++++++KINDEX 스마트퀄리티++++++++++++++++++++2806/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:48,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:48,423 > 100
[DEBUG|collector_api.py:200] 2021-02-08 16:50:48,651 > ++++++++++++++KINDEX 스마트로우볼++++++++++++++++++++2807/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:48,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:49,031 > 101
[DEBUG|collector_api.py:200] 2021-02-08 16:50:49,239 > ++++++++++++++KINDEX 스마트하이베타++++++++++++++++++++2808/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:49,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:49,638 > 102
[DEBUG|collector_api.py:200] 2021-02-08 16:50:49,857 > ++++++++++++++HANARO e커머스++++++++++++++++++++2809/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:49,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:50,245 > 103
[DEBUG|collector_api.py:200] 2021-02-08 16:50:50,454 > ++++++++++++++HANARO 고배당++++++++++++++++++++2810/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:50,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:50,853 > 104
[DEBUG|collector_api.py:200] 2021-02-08 16:50:51,056 > ++++++++++++++KODEX Fn성장++++++++++++++++++++2811/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:51,056 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:51,461 > 105
[DEBUG|collector_api.py:200] 2021-02-08 16:50:51,704 > ++++++++++++++KODEX 배당가치++++++++++++++++++++2812/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:51,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:52,068 > 106
[DEBUG|collector_api.py:200] 2021-02-08 16:50:52,270 > ++++++++++++++KBSTAR 내수주플러스++++++++++++++++++++2813/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:52,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:52,676 > 107
[DEBUG|collector_api.py:200] 2021-02-08 16:50:52,889 > ++++++++++++++KBSTAR IT플러스++++++++++++++++++++2814/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:52,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:53,283 > 108
[DEBUG|collector_api.py:200] 2021-02-08 16:50:53,486 > ++++++++++++++ARIRANG 코스피TR++++++++++++++++++++2815/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:53,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:53,890 > 109
[DEBUG|collector_api.py:200] 2021-02-08 16:50:54,091 > ++++++++++++++TIGER 부동산인프라고배당++++++++++++++++++++2816/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:54,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:54,497 > 110
[DEBUG|collector_api.py:200] 2021-02-08 16:50:54,712 > ++++++++++++++KODEX TRF3070++++++++++++++++++++2817/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:54,712 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:55,106 > 111
[DEBUG|collector_api.py:200] 2021-02-08 16:50:55,338 > ++++++++++++++KODEX TRF5050++++++++++++++++++++2818/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:55,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:55,713 > 112
[DEBUG|collector_api.py:200] 2021-02-08 16:50:55,928 > ++++++++++++++KODEX TRF7030++++++++++++++++++++2819/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:55,928 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:56,322 > 113
[DEBUG|collector_api.py:200] 2021-02-08 16:50:56,526 > ++++++++++++++TIGER 미국달러단기채권액티브++++++++++++++++++++2820/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:56,526 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:56,928 > 114
[DEBUG|collector_api.py:200] 2021-02-08 16:50:57,140 > ++++++++++++++KOSEF Fn중소형++++++++++++++++++++2821/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:57,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:57,536 > 115
[DEBUG|collector_api.py:200] 2021-02-08 16:50:57,727 > ++++++++++++++KINDEX 200TR++++++++++++++++++++2822/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:57,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:58,144 > 116
[DEBUG|collector_api.py:200] 2021-02-08 16:50:58,340 > ++++++++++++++ARIRANG 미국단기우량회사채++++++++++++++++++++2823/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:58,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:58,752 > 117
[DEBUG|collector_api.py:200] 2021-02-08 16:50:58,951 > ++++++++++++++ARIRANG 미국장기우량회사채++++++++++++++++++++2824/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:58,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:59,360 > 118
[DEBUG|collector_api.py:200] 2021-02-08 16:50:59,564 > ++++++++++++++HANARO 200TR++++++++++++++++++++2825/2895
[DEBUG|open_api.py:656] 2021-02-08 16:50:59,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:50:59,967 > 119
[DEBUG|collector_api.py:200] 2021-02-08 16:51:00,163 > ++++++++++++++HANARO MSCI Korea TR++++++++++++++++++++2826/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:00,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:00,574 > 120
[DEBUG|collector_api.py:200] 2021-02-08 16:51:00,781 > ++++++++++++++ARIRANG KS로우볼가중TR++++++++++++++++++++2827/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:00,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:01,182 > 121
[DEBUG|collector_api.py:200] 2021-02-08 16:51:01,382 > ++++++++++++++ARIRANG KS로우사이즈가중TR++++++++++++++++++++2828/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:01,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:01,789 > 122
[DEBUG|collector_api.py:200] 2021-02-08 16:51:01,983 > ++++++++++++++ARIRANG KS모멘텀가중TR++++++++++++++++++++2829/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:01,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:02,396 > 123
[DEBUG|collector_api.py:200] 2021-02-08 16:51:02,609 > ++++++++++++++ARIRANG KS밸류가중TR++++++++++++++++++++2830/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:02,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:03,003 > 124
[DEBUG|collector_api.py:200] 2021-02-08 16:51:03,200 > ++++++++++++++ARIRANG KS퀄리티가중TR++++++++++++++++++++2831/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:03,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:03,610 > 125
[DEBUG|collector_api.py:200] 2021-02-08 16:51:03,807 > ++++++++++++++KBSTAR 팔라듐선물(H)++++++++++++++++++++2832/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:03,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:04,218 > 126
[DEBUG|collector_api.py:200] 2021-02-08 16:51:04,445 > ++++++++++++++KBSTAR 팔라듐선물인버스(H)++++++++++++++++++++2833/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:04,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:04,827 > 127
[DEBUG|collector_api.py:200] 2021-02-08 16:51:05,027 > ++++++++++++++KBSTAR 금융채액티브++++++++++++++++++++2834/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:05,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:05,435 > 128
[DEBUG|collector_api.py:200] 2021-02-08 16:51:05,623 > ++++++++++++++KODEX Fn멀티팩터++++++++++++++++++++2835/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:05,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:06,042 > 129
[DEBUG|collector_api.py:200] 2021-02-08 16:51:06,254 > ++++++++++++++KODEX 코스피대형주++++++++++++++++++++2836/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:06,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:06,650 > 130
[DEBUG|collector_api.py:200] 2021-02-08 16:51:06,835 > ++++++++++++++KODEX 200exTOP++++++++++++++++++++2837/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:06,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:07,259 > 131
[DEBUG|collector_api.py:200] 2021-02-08 16:51:07,439 > ++++++++++++++KODEX 200ESG++++++++++++++++++++2838/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:07,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:07,866 > 132
[DEBUG|collector_api.py:200] 2021-02-08 16:51:08,085 > ++++++++++++++TIGER KIS부동산인프라채권TR++++++++++++++++++++2839/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:08,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:08,474 > 133
[DEBUG|collector_api.py:200] 2021-02-08 16:51:08,664 > ++++++++++++++KINDEX 모닝스타싱가포르리츠채권혼합++++++++++++++++++++2840/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:08,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:09,082 > 134
[DEBUG|collector_api.py:200] 2021-02-08 16:51:09,260 > ++++++++++++++KBSTAR KRX국채선물3년10년스티프너++++++++++++++++++++2841/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:09,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:09,690 > 135
[DEBUG|collector_api.py:200] 2021-02-08 16:51:09,875 > ++++++++++++++KBSTAR KRX국채선물3년10년스티프너2X++++++++++++++++++++2842/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:09,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:10,298 > 136
[DEBUG|collector_api.py:200] 2021-02-08 16:51:10,476 > ++++++++++++++KBSTAR KRX국채선물3년10년플래트너++++++++++++++++++++2843/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:10,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:10,906 > 137
[DEBUG|collector_api.py:200] 2021-02-08 16:51:11,092 > ++++++++++++++KBSTAR KRX국채선물3년10년플래트너2X++++++++++++++++++++2844/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:11,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:11,514 > 138
[DEBUG|collector_api.py:200] 2021-02-08 16:51:11,707 > ++++++++++++++HANARO KAP초장기국고채++++++++++++++++++++2845/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:11,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:12,122 > 139
[DEBUG|collector_api.py:200] 2021-02-08 16:51:12,311 > ++++++++++++++KODEX TSE일본리츠(H)++++++++++++++++++++2846/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:12,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:12,730 > 140
[DEBUG|collector_api.py:200] 2021-02-08 16:51:12,922 > ++++++++++++++KODEX 다우존스미국리츠(H)++++++++++++++++++++2847/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:12,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:13,339 > 141
[DEBUG|collector_api.py:200] 2021-02-08 16:51:13,522 > ++++++++++++++KBSTAR 미국고정배당우선증권ICE TR++++++++++++++++++++2848/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:13,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:13,945 > 142
[DEBUG|collector_api.py:200] 2021-02-08 16:51:14,127 > ++++++++++++++HANARO 글로벌럭셔리S&P(합성)++++++++++++++++++++2849/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:14,127 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:14,554 > 143
[DEBUG|collector_api.py:200] 2021-02-08 16:51:14,741 > ++++++++++++++KINDEX 코스닥150++++++++++++++++++++2850/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:14,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:15,161 > 144
[DEBUG|collector_api.py:200] 2021-02-08 16:51:15,343 > ++++++++++++++KINDEX KIS종합채권(AA-이상)액티브++++++++++++++++++++2851/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:15,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:15,769 > 145
[DEBUG|collector_api.py:200] 2021-02-08 16:51:15,941 > ++++++++++++++TIGER CD금리투자KIS(합성)++++++++++++++++++++2852/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:15,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:16,377 > 146
[DEBUG|collector_api.py:200] 2021-02-08 16:51:16,543 > ++++++++++++++KODEX 코스피TR++++++++++++++++++++2853/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:16,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:16,984 > 147
[DEBUG|collector_api.py:200] 2021-02-08 16:51:17,162 > ++++++++++++++KODEX 200롱코스닥150숏선물++++++++++++++++++++2854/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:17,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:17,591 > 148
[DEBUG|collector_api.py:200] 2021-02-08 16:51:17,767 > ++++++++++++++KODEX 코스닥150롱코스피200숏선물++++++++++++++++++++2855/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:17,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:18,200 > 149
[DEBUG|collector_api.py:200] 2021-02-08 16:51:18,368 > ++++++++++++++KINDEX 미국S&P500++++++++++++++++++++2856/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:18,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:18,807 > 150
[DEBUG|collector_api.py:200] 2021-02-08 16:51:18,968 > ++++++++++++++TIGER 미국S&P500++++++++++++++++++++2857/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:18,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:19,414 > 151
[DEBUG|collector_api.py:200] 2021-02-08 16:51:19,592 > ++++++++++++++KBSTAR 200TR++++++++++++++++++++2858/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:19,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:20,021 > 152
[DEBUG|collector_api.py:200] 2021-02-08 16:51:20,186 > ++++++++++++++KBSTAR 코스피ex200++++++++++++++++++++2859/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:20,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:20,628 > 153
[DEBUG|collector_api.py:200] 2021-02-08 16:51:20,783 > ++++++++++++++SMART KIS단기통안채++++++++++++++++++++2860/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:20,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:21,236 > 154
[DEBUG|collector_api.py:200] 2021-02-08 16:51:21,426 > ++++++++++++++KODEX 장기종합채권(AA-이상)액티브KAP++++++++++++++++++++2861/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:21,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:21,845 > 155
[DEBUG|collector_api.py:200] 2021-02-08 16:51:22,000 > ++++++++++++++KODEX 200IT TR++++++++++++++++++++2862/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:22,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:22,452 > 156
[DEBUG|collector_api.py:200] 2021-02-08 16:51:22,620 > ++++++++++++++KODEX 혁신기술테마액티브++++++++++++++++++++2863/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:22,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:23,060 > 157
[DEBUG|collector_api.py:200] 2021-02-08 16:51:23,218 > ++++++++++++++TIGER KRX BBIG K-뉴딜++++++++++++++++++++2864/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:23,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:23,668 > 158
[DEBUG|collector_api.py:200] 2021-02-08 16:51:23,820 > ++++++++++++++TIGER KRX바이오K-뉴딜++++++++++++++++++++2865/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:23,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:24,275 > 159
[DEBUG|collector_api.py:200] 2021-02-08 16:51:24,487 > ++++++++++++++TIGER KRX2차전지K-뉴딜++++++++++++++++++++2866/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:24,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:24,884 > 160
[DEBUG|collector_api.py:200] 2021-02-08 16:51:25,040 > ++++++++++++++TIGER KRX게임K-뉴딜++++++++++++++++++++2867/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:25,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:25,491 > 161
[DEBUG|collector_api.py:200] 2021-02-08 16:51:25,677 > ++++++++++++++TIGER KRX인터넷K-뉴딜++++++++++++++++++++2868/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:25,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:26,100 > 162
[DEBUG|collector_api.py:200] 2021-02-08 16:51:26,269 > ++++++++++++++TIGER AI코리아그로스액티브++++++++++++++++++++2869/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:26,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:26,708 > 163
[DEBUG|collector_api.py:200] 2021-02-08 16:51:26,865 > ++++++++++++++KINDEX 국고채10년++++++++++++++++++++2870/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:26,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:27,317 > 164
[DEBUG|collector_api.py:200] 2021-02-08 16:51:27,482 > ++++++++++++++KINDEX 미국나스닥100++++++++++++++++++++2871/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:27,482 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:27,924 > 165
[DEBUG|collector_api.py:200] 2021-02-08 16:51:28,086 > ++++++++++++++HANARO Fn5G산업++++++++++++++++++++2872/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:28,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:28,532 > 166
[DEBUG|collector_api.py:200] 2021-02-08 16:51:28,702 > ++++++++++++++KBSTAR Fn5G테크++++++++++++++++++++2873/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:28,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:29,140 > 167
[DEBUG|collector_api.py:200] 2021-02-08 16:51:29,299 > ++++++++++++++KBSTAR Fn수소경제테마++++++++++++++++++++2874/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:29,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:29,747 > 168
[DEBUG|collector_api.py:200] 2021-02-08 16:51:29,907 > ++++++++++++++HANARO Fn K-뉴딜디지털플러스++++++++++++++++++++2875/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:29,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:30,357 > 169
[DEBUG|collector_api.py:200] 2021-02-08 16:51:30,532 > ++++++++++++++KBSTAR Fn K-뉴딜디지털플러스++++++++++++++++++++2876/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:30,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:30,966 > 170
[DEBUG|collector_api.py:200] 2021-02-08 16:51:31,126 > ++++++++++++++KINDEX Fn K-뉴딜디지털플러스++++++++++++++++++++2877/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:31,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:31,573 > 171
[DEBUG|collector_api.py:200] 2021-02-08 16:51:31,742 > ++++++++++++++KBSTAR 미국나스닥100++++++++++++++++++++2878/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:31,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:32,181 > 172
[DEBUG|collector_api.py:200] 2021-02-08 16:51:32,343 > ++++++++++++++KODEX Fn K-뉴딜디지털플러스++++++++++++++++++++2879/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:32,343 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:32,788 > 173
[DEBUG|collector_api.py:200] 2021-02-08 16:51:32,958 > ++++++++++++++KINDEX 블룸버그베트남VN30선물레버리지(H)++++++++++++++++++++2880/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:32,958 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:33,396 > 174
[DEBUG|collector_api.py:200] 2021-02-08 16:51:33,566 > ++++++++++++++KBSTAR 차이나항셍테크++++++++++++++++++++2881/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:33,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:34,005 > 175
[DEBUG|collector_api.py:200] 2021-02-08 16:51:34,166 > ++++++++++++++TIGER 차이나항셍테크++++++++++++++++++++2882/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:34,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:34,614 > 176
[DEBUG|collector_api.py:200] 2021-02-08 16:51:34,766 > ++++++++++++++TIGER 글로벌클라우드컴퓨팅INDXX++++++++++++++++++++2883/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:34,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:35,223 > 177
[DEBUG|collector_api.py:200] 2021-02-08 16:51:35,381 > ++++++++++++++TIGER 차이나전기차SOLACTIVE++++++++++++++++++++2884/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:35,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:35,831 > 178
[DEBUG|collector_api.py:200] 2021-02-08 16:51:35,978 > ++++++++++++++TIGER 차이나바이오테크SOLACTIVE++++++++++++++++++++2885/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:35,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:36,440 > 179
[DEBUG|collector_api.py:200] 2021-02-08 16:51:36,610 > ++++++++++++++KINDEX 차이나항셍테크++++++++++++++++++++2886/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:36,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:37,049 > 180
[DEBUG|collector_api.py:200] 2021-02-08 16:51:37,206 > ++++++++++++++KODEX 차이나항셍테크++++++++++++++++++++2887/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:37,206 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:37,656 > 181
[DEBUG|collector_api.py:200] 2021-02-08 16:51:37,820 > ++++++++++++++KODEX K-이노베이션액티브++++++++++++++++++++2888/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:37,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:38,263 > 182
[DEBUG|collector_api.py:200] 2021-02-08 16:51:38,417 > ++++++++++++++ARIRANG 신흥국MSCI인버스(합성 H)++++++++++++++++++++2889/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:38,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:38,872 > 183
[DEBUG|collector_api.py:200] 2021-02-08 16:51:39,061 > ++++++++++++++KOSEF 미국방어배당성장나스닥++++++++++++++++++++2890/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:39,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:39,481 > 184
[DEBUG|collector_api.py:200] 2021-02-08 16:51:39,654 > ++++++++++++++KBSTAR 글로벌데이터센터리츠나스닥(합성)++++++++++++++++++++2891/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:39,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:40,089 > 185
[DEBUG|collector_api.py:200] 2021-02-08 16:51:40,259 > ++++++++++++++HANARO 탄소효율그린뉴딜++++++++++++++++++++2892/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:40,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:40,696 > 186
[DEBUG|collector_api.py:200] 2021-02-08 16:51:40,843 > ++++++++++++++KODEX 탄소효율그린뉴딜++++++++++++++++++++2893/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:40,843 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:41,305 > 187
[DEBUG|collector_api.py:200] 2021-02-08 16:51:41,498 > ++++++++++++++ARIRANG 탄소효율그린뉴딜++++++++++++++++++++2894/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:41,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:41,913 > 188
[DEBUG|collector_api.py:200] 2021-02-08 16:51:42,072 > ++++++++++++++TIGER 탄소효율그린뉴딜++++++++++++++++++++2895/2895
[DEBUG|open_api.py:656] 2021-02-08 16:51:42,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-08 16:51:42,522 > 189
[DEBUG|collector_api.py:215] 2021-02-08 16:51:42,664 > daily_crawler success !!!
[DEBUG|collector_api.py:151] 2021-02-08 16:52:35,629 > daily_buy_list success !!!
[DEBUG|open_api.py:1213] 2021-02-08 16:52:35,649 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-08 16:52:35,650 > []
[DEBUG|open_api.py:1133] 2021-02-08 16:52:35,659 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-08 16:52:35,659 > []
[DEBUG|open_api.py:305] 2021-02-08 16:53:01,049 > disconnected
[DEBUG|open_api.py:244] 2021-02-08 16:53:01,050 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:53:01,050 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:53:01,050 > 계좌번호 : 
[DEBUG|open_api.py:160] 2021-02-08 16:53:01,051 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:167] 2021-02-08 16:53:01,051 > 실전!@@@@@@@@@@@
[DEBUG|open_api.py:207] 2021-02-08 16:53:01,052 > db name !!! : JackBot1
[DEBUG|open_api.py:198] 2021-02-08 16:53:01,071 > JackBot1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:53:01,112 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:53:01,112 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:53:01,113 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:53:01,133 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-08 16:53:01,194 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 16:53:01,195 > 1
[DEBUG|open_api.py:305] 2021-02-08 16:53:01,209 > disconnected
[DEBUG|open_api.py:305] 2021-02-08 16:53:01,242 > disconnected
[DEBUG|open_api.py:531] 2021-02-08 16:53:04,241 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 16:53:04,842 > 2
[DEBUG|open_api.py:305] 2021-02-08 16:55:48,941 > disconnected
[DEBUG|open_api.py:244] 2021-02-08 16:55:48,950 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:55:48,950 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:55:48,951 > 계좌번호 : 
[DEBUG|open_api.py:160] 2021-02-08 16:55:48,951 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:167] 2021-02-08 16:55:48,951 > 실전!@@@@@@@@@@@
[DEBUG|open_api.py:207] 2021-02-08 16:55:48,951 > db name !!! : JackBot1
[DEBUG|open_api.py:198] 2021-02-08 16:55:48,964 > JackBot1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:55:49,001 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:55:49,002 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:55:49,002 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:55:49,018 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-08 16:55:49,042 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 16:55:49,043 > 1
[DEBUG|open_api.py:305] 2021-02-08 16:55:49,055 > disconnected
[DEBUG|open_api.py:305] 2021-02-08 16:55:49,068 > disconnected
[DEBUG|open_api.py:531] 2021-02-08 16:55:56,813 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 16:55:57,414 > 2
[DEBUG|open_api.py:305] 2021-02-08 16:56:23,215 > disconnected
[DEBUG|open_api.py:244] 2021-02-08 16:56:23,216 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-08 16:56:23,216 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-08 16:56:23,217 > 계좌번호 : 
[DEBUG|open_api.py:160] 2021-02-08 16:56:23,217 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:167] 2021-02-08 16:56:23,217 > 실전!@@@@@@@@@@@
[DEBUG|open_api.py:207] 2021-02-08 16:56:23,217 > db name !!! : JackBot1
[DEBUG|open_api.py:198] 2021-02-08 16:56:23,231 > JackBot1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-08 16:56:23,261 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-08 16:56:23,262 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-08 16:56:23,262 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-08 16:56:23,278 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-08 16:56:23,311 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-08 16:56:23,311 > 1
[DEBUG|open_api.py:305] 2021-02-08 16:56:23,325 > disconnected
[DEBUG|open_api.py:305] 2021-02-08 16:56:23,341 > disconnected
