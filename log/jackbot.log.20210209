[DEBUG|trader.py:7] 2021-02-09 08:50:02,317 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 08:50:06,275 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 08:50:23,665 > connected
[DEBUG|open_api.py:244] 2021-02-09 08:50:23,666 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 08:50:23,666 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 08:50:23,672 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 08:50:23,672 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 08:50:23,672 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 08:50:23,672 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 08:50:23,694 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 08:50:23,731 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 08:50:23,732 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 08:50:23,732 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 08:50:23,757 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-09 08:50:23,784 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 08:50:23,784 > 1
[DEBUG|open_api.py:290] 2021-02-09 08:50:24,671 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 08:50:24,671 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 08:50:24,672 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 08:50:24,672 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 08:50:24,673 > 000000495404194
[DEBUG|open_api.py:531] 2021-02-09 08:50:24,674 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 08:50:24,674 > 2
[DEBUG|open_api.py:290] 2021-02-09 08:50:24,771 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 08:50:24,771 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 08:50:24,773 > _opw00018!!!
[DEBUG|trader.py:114] 2021-02-09 08:50:25,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:25,085 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:25,388 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:25,388 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:25,689 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:25,689 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:25,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:25,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:26,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:26,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:26,594 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:26,594 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:26,896 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:26,896 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:27,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:27,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:27,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:27,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:27,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:27,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:28,106 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:28,106 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:28,408 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:28,408 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:28,710 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:28,710 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:29,012 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:29,012 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:29,314 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:29,314 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:29,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:29,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:29,917 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:29,917 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:30,219 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:30,219 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:30,522 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:30,522 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:30,824 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:30,824 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:31,125 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:31,125 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:31,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:31,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:31,728 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:31,728 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:32,030 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:32,030 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:32,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:32,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:32,634 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:32,634 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:32,937 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:32,937 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:33,238 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:33,238 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:33,539 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:33,539 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:33,841 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:33,841 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:34,143 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:34,143 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:34,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:34,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:34,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:34,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:35,048 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:35,048 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:35,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:35,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:35,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:35,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:35,955 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:35,955 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:36,257 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:36,257 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:36,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:36,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:36,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:36,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:37,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:37,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:37,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:37,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:37,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:37,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:38,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:38,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:38,372 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:38,372 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:38,674 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:38,674 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:38,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:38,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:39,278 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:39,278 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:39,579 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:39,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:39,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:39,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:40,183 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:40,183 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:40,484 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:40,484 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:40,787 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:40,787 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:41,091 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:41,091 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:41,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:41,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:41,694 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:41,694 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:41,996 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:41,996 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:42,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:42,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:42,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:42,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:42,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:42,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:43,204 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:43,204 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:43,507 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:43,507 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:43,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:43,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:44,111 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:44,111 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:44,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:44,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:44,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:44,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:45,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:45,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:45,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:45,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:45,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:45,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:45,925 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:45,925 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:46,228 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:46,228 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:46,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:46,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:46,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:46,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:47,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:47,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:47,433 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:47,433 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:47,735 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:47,735 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:48,038 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:48,038 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:48,340 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:48,340 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:48,643 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:48,643 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:48,944 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:48,944 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:49,246 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:49,246 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:49,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:49,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:49,849 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:49,849 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:50,150 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:50,150 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:50,453 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:50,453 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:50,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:50,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:51,056 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:51,056 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:51,358 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:51,358 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:51,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:51,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:51,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:51,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:52,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:52,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:52,565 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:52,565 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:52,867 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:52,867 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:53,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:53,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:53,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:53,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:53,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:53,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:54,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:54,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:54,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:54,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:54,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:54,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:54,982 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:54,982 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:55,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:55,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:55,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:55,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:55,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:55,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:56,189 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:56,189 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:56,491 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:56,491 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:56,792 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:56,792 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:57,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:57,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:57,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:57,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:57,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:57,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:58,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:58,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:58,304 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:58,304 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:58,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:58,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:58,908 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:58,908 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:59,210 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:59,210 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:59,511 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:59,511 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:50:59,813 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:50:59,813 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:00,114 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:00,114 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:00,416 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:00,416 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:00,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:00,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:01,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:01,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:01,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:01,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:01,624 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:01,624 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:01,926 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:01,926 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:02,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:02,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:02,530 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:02,530 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:02,832 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:02,832 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:03,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:03,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:03,436 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:03,436 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:03,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:03,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:04,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:04,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:04,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:04,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:04,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:04,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:04,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:04,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:05,248 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:05,248 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:05,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:05,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:05,851 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:05,851 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:06,154 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:06,154 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:06,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:06,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:06,757 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:06,757 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:07,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:07,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:07,360 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:07,360 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:07,662 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:07,662 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:07,963 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:07,963 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:08,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:08,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:08,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:08,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:08,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:08,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:09,171 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:09,171 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:09,473 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:09,473 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:09,775 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:09,775 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:10,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:10,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:10,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:10,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:10,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:10,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:10,983 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:10,983 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:11,285 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:11,285 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:11,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:11,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:11,890 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:11,890 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:12,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:12,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:12,494 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:12,494 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:12,796 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:12,796 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:13,098 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:13,098 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:13,399 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:13,399 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:13,701 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:13,701 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:14,003 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:14,003 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:14,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:14,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:14,608 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:14,608 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:14,909 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:14,909 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:15,211 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:15,211 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:15,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:15,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:15,814 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:15,814 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:16,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:16,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:16,416 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:16,416 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:16,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:16,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:17,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:17,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:17,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:17,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:17,625 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:17,625 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:17,926 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:17,926 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:18,229 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:18,229 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:18,530 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:18,530 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:18,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:18,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:19,134 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:19,134 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:19,436 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:19,436 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:19,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:19,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:20,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:20,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:20,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:20,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:20,644 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:20,644 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:20,945 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:20,945 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:21,247 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:21,247 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:21,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:21,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:21,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:21,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:22,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:22,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:22,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:22,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:22,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:22,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:23,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:23,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:23,360 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:23,360 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:23,662 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:23,662 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:23,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:23,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:24,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:24,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:24,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:24,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:24,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:24,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:25,173 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:25,173 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:25,475 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:25,475 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:25,777 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:25,777 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:26,078 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:26,078 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:26,380 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:26,380 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:26,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:26,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:26,984 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:26,984 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:27,287 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:27,287 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:27,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:27,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:27,890 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:27,890 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:28,191 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:28,191 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:28,493 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:28,493 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:28,794 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:28,794 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:29,097 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:29,097 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:29,398 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:29,398 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:29,701 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:29,701 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:30,003 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:30,003 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:30,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:30,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:30,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:30,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:30,910 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:30,910 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:31,211 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:31,211 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:31,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:31,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:31,814 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:31,814 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:32,116 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:32,116 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:32,418 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:32,418 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:32,720 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:32,720 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:33,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:33,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:33,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:33,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:33,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:33,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:33,928 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:33,928 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:34,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:34,230 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:34,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:34,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:34,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:34,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:35,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:35,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:35,438 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:35,438 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:35,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:35,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:36,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:36,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:36,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:36,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:36,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:36,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:36,948 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:36,948 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:37,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:37,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:37,552 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:37,552 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:37,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:37,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:38,157 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:38,157 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:38,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:38,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:38,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:38,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:39,063 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:39,063 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:39,365 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:39,365 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:39,667 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:39,667 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:39,968 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:39,968 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:40,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:40,270 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:40,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:40,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:40,875 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:40,875 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:41,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:41,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:41,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:41,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:41,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:41,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:42,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:42,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:42,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:42,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:42,686 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:42,686 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:42,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:42,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:43,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:43,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:43,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:43,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:43,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:43,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:44,196 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:44,196 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:44,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:44,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:44,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:44,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:45,101 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:45,101 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:45,404 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:45,404 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:45,706 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:45,706 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:46,009 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:46,009 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:46,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:46,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:46,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:46,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:46,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:46,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:47,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:47,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:47,519 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:47,519 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:47,823 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:47,823 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:48,125 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:48,125 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:48,428 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:48,428 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:48,730 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:48,730 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:49,032 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:49,032 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:49,334 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:49,334 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:49,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:49,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:49,941 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:49,941 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:50,243 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:50,243 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:50,545 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:50,545 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:50,846 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:50,846 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:51,148 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:51,148 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:51,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:51,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:51,752 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:51,752 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:52,054 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:52,054 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:52,356 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:52,356 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:52,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:52,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:52,960 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:52,960 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:53,262 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:53,262 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:53,563 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:53,563 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:53,865 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:53,865 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:54,166 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:54,166 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:54,467 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:54,467 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:54,770 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:54,770 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:55,072 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:55,072 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:55,375 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:55,375 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:55,678 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:55,678 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:55,979 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:55,979 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:56,280 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:56,280 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:56,582 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:56,582 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:56,884 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:56,884 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:57,187 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:57,187 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:57,489 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:57,489 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:57,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:57,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:58,093 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:58,093 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:58,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:58,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:58,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:58,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:58,998 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:58,998 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:59,300 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:59,300 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:59,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:59,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:51:59,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:51:59,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:00,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:00,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:00,510 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:00,510 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:00,812 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:00,812 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:01,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:01,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:01,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:01,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:01,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:01,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:02,019 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:02,019 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:02,321 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:02,321 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:02,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:02,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:02,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:02,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:03,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:03,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:03,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:03,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:03,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:03,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:04,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:04,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:04,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:04,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:04,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:04,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:05,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:05,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:05,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:05,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:05,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:05,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:05,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:05,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:06,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:06,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:06,552 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:06,552 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:06,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:06,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:07,158 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:07,158 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:07,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:07,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:07,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:07,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:08,063 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:08,063 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:08,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:08,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:08,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:08,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:08,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:08,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:09,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:09,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:09,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:09,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:09,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:09,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:10,175 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:10,175 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:10,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:10,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:10,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:10,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:11,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:11,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:11,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:11,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:11,685 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:11,685 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:11,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:11,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:12,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:12,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:12,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:12,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:12,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:12,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:13,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:13,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:13,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:13,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:13,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:13,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:14,104 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:14,104 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:14,406 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:14,406 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:14,708 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:14,708 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:15,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:15,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:15,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:15,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:15,614 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:15,614 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:15,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:15,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:16,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:16,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:16,519 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:16,519 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:16,821 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:16,821 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:17,124 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:17,124 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:17,425 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:17,425 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:17,727 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:17,727 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:18,028 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:18,028 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:18,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:18,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:18,631 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:18,631 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:18,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:18,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:19,234 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:19,234 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:19,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:19,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:19,838 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:19,838 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:20,140 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:20,140 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:20,441 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:20,441 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:20,743 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:20,743 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:21,045 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:21,045 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:21,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:21,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:21,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:21,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:21,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:21,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:22,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:22,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:22,553 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:22,553 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:22,856 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:22,856 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:23,158 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:23,158 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:23,461 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:23,461 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:23,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:23,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:24,064 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:24,064 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:24,366 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:24,366 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-09 08:52:25,578 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 08:52:29,528 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 08:52:33,488 > connected
[DEBUG|open_api.py:244] 2021-02-09 08:52:33,489 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 08:52:33,489 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 08:52:33,495 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 08:52:33,495 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 08:52:33,495 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 08:52:33,495 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 08:52:33,510 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 08:52:33,536 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 08:52:33,536 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 08:52:33,537 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 08:52:33,561 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 08:52:33,593 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 08:52:33,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:33,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:34,196 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:34,196 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:34,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:34,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:34,801 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:34,801 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:35,103 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:35,103 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:35,406 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:35,406 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:35,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:35,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:36,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:36,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:36,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:36,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:36,614 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:36,614 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:36,916 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:36,916 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:37,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:37,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:37,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:37,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:37,823 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:37,823 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:38,126 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:38,126 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:38,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:38,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:38,730 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:38,730 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:39,032 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:39,032 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:39,333 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:39,333 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:39,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:39,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:39,938 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:39,938 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:40,241 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:40,241 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:40,543 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:40,543 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:40,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:40,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:41,147 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:41,147 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:41,449 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:41,449 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:41,750 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:41,750 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:42,053 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:42,053 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:42,355 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:42,355 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:42,658 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:42,658 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:42,960 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:42,960 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:43,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:43,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:43,564 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:43,564 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:43,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:43,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:44,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:44,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:44,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:44,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:44,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:44,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:45,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:45,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:45,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:45,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:45,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:45,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:45,982 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:45,982 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:46,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:46,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:46,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:46,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:46,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:46,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:47,188 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:47,188 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:47,490 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:47,490 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:47,792 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:47,792 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:48,095 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:48,095 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:48,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:48,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:48,699 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:48,699 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:49,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:49,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:49,304 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:49,304 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:49,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:49,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:49,909 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:49,909 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:50,212 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:50,212 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:50,515 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:50,515 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:50,817 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:50,817 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:51,119 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:51,119 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:51,422 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:51,422 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:51,724 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:51,724 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:52,026 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:52,026 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:52,328 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:52,328 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:52,629 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:52,629 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:52,932 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:52,932 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:53,233 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:53,233 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:53,535 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:53,535 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:53,836 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:53,836 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:54,141 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:54,141 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:54,442 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:54,442 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:54,745 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:54,745 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:55,046 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:55,046 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:55,348 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:55,348 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:55,649 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:55,649 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:55,952 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:55,952 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:56,255 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:56,255 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:56,557 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:56,557 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:56,859 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:56,859 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:57,161 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:57,161 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:57,463 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:57,463 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:57,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:57,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:58,066 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:58,066 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:58,367 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:58,367 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:58,670 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:58,670 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:58,972 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:58,972 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:59,275 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:59,275 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:59,577 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:59,577 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:52:59,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:52:59,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:00,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:00,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:00,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:00,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:00,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:00,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:01,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:01,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:01,390 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:01,390 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:01,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:01,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:01,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:01,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:02,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:02,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:02,597 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:02,597 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:02,898 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:02,898 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:03,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:03,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:03,502 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:03,502 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:03,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:03,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:04,107 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:04,107 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:04,408 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:04,408 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:04,711 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:04,711 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:05,012 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:05,012 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:05,313 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:05,313 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:05,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:05,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:05,916 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:05,916 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:06,219 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:06,219 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:06,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:06,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:06,823 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:06,823 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:07,125 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:07,125 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:07,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:07,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:07,729 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:07,729 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:08,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:08,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:08,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:08,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:08,634 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:08,634 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:08,936 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:08,936 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:09,239 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:09,239 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:09,540 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:09,540 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:09,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:09,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:10,144 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:10,144 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:10,446 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:10,446 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:10,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:10,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:11,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:11,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:11,350 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:11,350 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:11,653 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:11,653 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:11,956 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:11,956 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:12,257 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:12,257 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:12,559 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:12,559 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:12,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:12,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:13,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:13,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:13,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:13,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:13,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:13,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:14,070 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:14,070 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:14,372 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:14,372 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:14,674 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:14,674 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:14,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:14,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:15,278 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:15,278 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:15,579 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:15,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:15,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:15,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:16,183 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:16,183 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:16,484 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:16,484 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:16,786 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:16,786 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:17,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:17,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:17,390 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:17,390 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:17,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:17,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:17,994 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:17,994 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:18,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:18,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:18,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:18,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:18,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:18,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:19,201 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:19,201 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:19,503 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:19,503 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:19,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:19,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:20,108 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:20,108 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:20,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:20,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:20,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:20,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:21,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:21,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:21,315 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:21,315 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:21,616 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:21,616 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:21,919 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:21,919 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:22,221 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:22,221 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:22,524 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:22,524 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:22,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:22,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:23,128 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:23,128 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:23,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:23,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:23,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:23,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:24,034 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:24,034 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:24,337 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:24,337 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:24,639 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:24,639 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:24,941 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:24,941 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:25,244 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:25,244 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:25,546 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:25,546 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:25,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:25,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:26,149 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:26,149 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:26,452 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:26,452 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:26,754 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:26,754 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:27,057 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:27,057 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:27,358 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:27,358 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:27,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:27,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:27,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:27,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:28,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:28,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:28,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:28,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:28,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:28,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:29,172 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:29,172 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:29,474 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:29,474 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:29,776 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:29,776 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:30,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:30,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:30,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:30,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:30,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:30,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:30,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:30,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:31,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:31,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:31,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:31,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:31,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:31,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:32,190 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:32,190 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:32,492 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:32,492 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:32,793 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:32,793 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:33,095 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:33,095 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:33,397 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:33,397 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:33,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:33,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:34,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:34,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:34,303 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:34,303 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:34,606 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:34,606 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:34,909 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:34,909 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:35,212 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:35,212 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:35,514 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:35,514 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:35,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:35,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:36,117 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:36,117 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:36,418 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:36,418 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:36,720 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:36,720 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:37,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:37,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:37,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:37,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:37,626 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:37,626 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:37,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:37,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:38,229 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:38,229 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:38,530 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:38,530 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:38,832 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:38,832 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:39,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:39,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:39,436 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:39,436 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:39,738 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:39,738 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:40,040 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:40,040 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:40,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:40,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:40,642 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:40,642 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:40,944 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:40,944 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:41,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:41,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:41,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:41,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:41,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:41,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:42,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:42,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:42,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:42,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:42,756 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:42,756 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:43,058 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:43,058 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:43,359 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:43,359 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:43,661 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:43,661 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:43,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:43,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:44,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:44,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:44,567 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:44,567 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:44,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:44,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:45,171 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:45,171 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:45,473 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:45,473 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:45,775 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:45,775 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:46,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:46,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:46,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:46,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:46,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:46,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:46,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:46,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:47,282 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:47,282 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:47,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:47,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:47,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:47,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:48,189 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:48,189 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:48,490 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:48,490 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:48,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:48,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:49,093 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:49,093 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:49,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:49,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:49,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:49,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:49,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:49,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:50,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:50,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:50,600 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:50,600 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:50,903 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:50,903 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:51,205 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:51,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:51,507 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:51,507 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:51,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:51,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:52,110 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:52,110 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:52,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:52,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:52,713 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:52,713 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:53,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:53,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:53,315 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:53,315 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:53,617 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:53,617 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:53,918 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:53,918 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:54,221 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:54,221 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:54,523 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:54,523 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:54,824 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:54,824 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:55,126 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:55,126 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:55,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:55,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:55,730 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:55,730 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:56,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:56,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:56,333 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:56,333 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:56,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:56,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:56,938 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:56,938 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:57,239 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:57,239 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:57,540 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:57,540 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:57,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:57,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:58,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:58,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:58,447 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:58,447 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:58,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:58,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:59,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:59,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:59,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:59,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:59,655 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:59,655 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:53:59,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:53:59,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:00,259 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:00,259 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:00,561 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:00,561 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:00,863 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:00,863 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:01,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:01,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:01,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:01,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:01,769 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:01,769 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:02,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:02,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:02,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:02,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:02,675 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:02,675 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:02,976 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:02,976 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:03,279 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:03,279 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:03,580 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:03,580 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:03,883 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:03,883 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:04,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:04,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:04,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:04,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:04,790 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:04,790 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:05,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:05,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:05,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:05,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:05,695 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:05,695 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:05,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:05,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:06,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:06,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:06,601 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:06,601 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:06,904 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:06,904 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:07,205 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:07,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:07,507 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:07,507 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:07,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:07,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:08,111 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:08,111 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:08,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:08,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:08,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:08,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:09,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:09,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:09,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:09,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:09,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:09,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:09,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:09,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:10,226 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:10,226 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:10,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:10,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:10,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:10,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:11,131 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:11,131 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:11,433 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:11,433 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:11,735 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:11,735 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:12,037 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:12,037 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:12,340 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:12,340 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:12,641 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:12,641 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:12,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:12,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:13,246 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:13,246 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:13,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:13,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:13,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:13,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:14,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:14,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:14,454 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:14,454 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:14,757 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:14,757 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:15,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:15,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:15,361 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:15,361 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:15,662 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:15,662 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:15,965 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:15,965 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:16,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:16,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:16,569 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:16,569 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:16,872 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:16,872 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:17,174 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:17,174 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:17,476 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:17,476 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:17,777 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:17,777 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:18,079 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:18,079 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:18,380 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:18,380 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:18,683 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:18,683 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:18,986 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:18,986 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:19,288 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:19,288 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:19,590 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:19,590 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:19,892 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:19,892 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:20,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:20,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:20,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:20,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:20,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:20,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:21,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:21,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:21,400 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:21,400 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:21,702 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:21,702 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:22,004 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:22,004 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:22,306 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:22,306 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:22,608 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:22,608 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:22,910 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:22,910 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:23,212 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:23,212 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:23,514 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:23,514 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:23,816 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:23,816 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:24,118 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:24,118 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:24,420 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:24,420 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:24,722 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:24,722 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:25,024 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:25,024 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:25,325 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:25,325 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:25,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:25,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:25,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:25,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:26,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:26,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:26,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:26,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:26,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:26,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:27,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:27,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:27,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:27,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:27,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:27,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:28,043 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:28,043 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:28,345 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:28,345 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:28,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:28,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:28,948 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:28,948 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:29,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:29,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:29,553 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:29,553 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:29,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:29,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:30,157 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:30,157 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:30,460 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:30,460 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:30,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:30,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:31,065 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:31,065 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:31,366 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:31,366 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:31,668 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:31,668 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:31,970 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:31,970 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:32,273 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:32,273 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:32,576 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:32,576 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:32,878 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:32,878 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:33,179 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:33,179 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:33,482 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:33,482 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:33,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:33,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:34,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:34,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:34,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:34,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:34,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:34,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:34,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:34,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:35,294 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:35,294 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:35,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:35,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:35,898 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:35,898 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:36,199 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:36,199 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:36,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:36,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:36,803 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:36,803 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:37,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:37,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:37,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:37,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:37,708 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:37,708 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:38,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:38,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:38,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:38,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:38,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:38,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:38,914 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:38,914 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:39,216 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:39,216 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:39,517 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:39,517 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:39,820 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:39,820 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:40,123 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:40,123 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:40,425 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:40,425 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:40,726 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:40,726 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:41,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:41,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:41,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:41,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:41,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:41,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:41,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:41,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:42,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:42,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:42,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:42,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:42,840 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:42,840 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:43,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:43,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:43,444 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:43,444 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:43,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:43,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:44,047 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:44,047 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:44,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:44,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:44,651 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:44,651 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:44,953 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:44,953 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:45,256 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:45,256 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:45,559 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:45,559 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:45,860 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:45,860 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:46,161 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:46,161 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:46,463 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:46,463 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:46,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:46,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:47,066 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:47,066 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:47,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:47,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:47,671 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:47,671 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:47,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:47,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-09 08:54:49,129 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 08:54:53,069 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 08:54:57,014 > connected
[DEBUG|open_api.py:244] 2021-02-09 08:54:57,014 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 08:54:57,014 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 08:54:57,014 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 08:54:57,014 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 08:54:57,015 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 08:54:57,015 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 08:54:57,034 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 08:54:57,059 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 08:54:57,060 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 08:54:57,060 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 08:54:57,090 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 08:54:57,124 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 08:54:57,426 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:57,426 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:57,727 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:57,727 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:58,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:58,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:58,331 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:58,331 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:58,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:58,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:58,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:58,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:59,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:59,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:59,538 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:59,538 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:54:59,841 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:54:59,841 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:00,143 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:00,143 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:00,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:00,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:00,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:00,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:01,047 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:01,047 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:01,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:01,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:01,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:01,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:01,955 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:01,955 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:02,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:02,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:02,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:02,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:02,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:02,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:03,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:03,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:03,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:03,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:03,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:03,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:04,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:04,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:04,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:04,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:04,676 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:04,676 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:04,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:04,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:05,279 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:05,279 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:05,581 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:05,581 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:05,882 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:05,882 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:06,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:06,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:06,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:06,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:06,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:06,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:07,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:07,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:07,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:07,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:07,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:07,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:07,998 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:07,998 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:08,300 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:08,300 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:08,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:08,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:08,903 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:08,903 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:09,205 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:09,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:09,508 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:09,508 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:09,810 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:09,810 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:10,111 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:10,111 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:10,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:10,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:10,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:10,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:11,017 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:11,017 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:11,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:11,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:11,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:11,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:11,926 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:11,926 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:12,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:12,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:12,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:12,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:12,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:12,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:13,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:13,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:13,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:13,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:13,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:13,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:14,039 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:14,039 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:14,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:14,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:14,642 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:14,642 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:14,945 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:14,945 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:15,246 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:15,246 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:15,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:15,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:15,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:15,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:16,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:16,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:16,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:16,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:16,757 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:16,757 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:17,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:17,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:17,360 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:17,360 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:17,661 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:17,661 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:17,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:17,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:18,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:18,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:18,568 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:18,568 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:18,871 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:18,871 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:19,172 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:19,172 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:19,473 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:19,473 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:19,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:19,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:20,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:20,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:20,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:20,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:20,681 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:20,681 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:20,983 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:20,983 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:21,286 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:21,286 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:21,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:21,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:21,891 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:21,891 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:22,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:22,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:22,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:22,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:22,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:22,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:23,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:23,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:23,401 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:23,401 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:23,704 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:23,704 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:24,006 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:24,006 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:24,309 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:24,309 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:24,610 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:24,610 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:24,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:24,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:25,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:25,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:25,517 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:25,517 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:25,819 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:25,819 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:26,121 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:26,121 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:26,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:26,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:26,725 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:26,725 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:27,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:27,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:27,329 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:27,329 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:27,630 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:27,630 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:27,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:27,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:28,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:28,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:28,538 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:28,538 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:28,839 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:28,839 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:29,141 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:29,141 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:29,443 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:29,443 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:29,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:29,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:30,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:30,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:30,351 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:30,351 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:30,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:30,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:30,956 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:30,956 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:31,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:31,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:31,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:31,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:31,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:31,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:32,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:32,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:32,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:32,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:32,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:32,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:33,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:33,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:33,371 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:33,371 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:33,673 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:33,673 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:33,976 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:33,976 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:34,277 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:34,277 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:34,579 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:34,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:34,880 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:34,880 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:35,181 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:35,181 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:35,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:35,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:35,786 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:35,786 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:36,089 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:36,089 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:36,390 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:36,390 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:36,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:36,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:36,995 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:36,995 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:37,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:37,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:37,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:37,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:37,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:37,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:38,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:38,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:38,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:38,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:38,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:38,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:39,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:39,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:39,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:39,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:39,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:39,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:40,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:40,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:40,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:40,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:40,618 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:40,618 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:40,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:40,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:41,223 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:41,223 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:41,524 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:41,524 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:41,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:41,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:42,129 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:42,129 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:42,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:42,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:42,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:42,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:43,033 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:43,033 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:43,335 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:43,335 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:43,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:43,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:43,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:43,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:44,242 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:44,242 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:44,544 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:44,544 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:44,846 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:44,846 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:45,148 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:45,148 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:45,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:45,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:45,752 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:45,752 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:46,054 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:46,054 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:46,356 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:46,356 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:46,658 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:46,658 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:46,961 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:46,961 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:47,262 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:47,262 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:47,563 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:47,563 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:47,864 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:47,864 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:48,166 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:48,166 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:48,467 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:48,467 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:48,769 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:48,769 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:49,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:49,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:49,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:49,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:49,675 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:49,675 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:49,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:49,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:50,280 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:50,280 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:50,582 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:50,582 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:50,883 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:50,883 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:51,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:51,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:51,488 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:51,488 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:51,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:51,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:52,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:52,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:52,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:52,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:52,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:52,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:53,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:53,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:53,302 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:53,302 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:53,604 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:53,604 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:53,906 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:53,906 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:54,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:54,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:54,510 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:54,510 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:54,811 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:54,811 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:55,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:55,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:55,414 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:55,414 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:55,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:55,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:56,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:56,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:56,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:56,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:56,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:56,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:56,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:56,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:57,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:57,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:57,528 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:57,528 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:57,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:57,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:58,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:58,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:58,433 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:58,433 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:58,734 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:58,734 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:59,036 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:59,036 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:59,339 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:59,339 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:59,641 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:59,641 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:55:59,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:55:59,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:00,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:00,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:00,546 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:00,546 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:00,847 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:00,847 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:01,150 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:01,150 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:01,453 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:01,453 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:01,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:01,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:02,058 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:02,058 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:02,359 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:02,359 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:02,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:02,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:02,961 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:02,961 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:03,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:03,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:03,565 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:03,565 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:03,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:03,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:04,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:04,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:04,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:04,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:04,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:04,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:05,075 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:05,075 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:05,377 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:05,377 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:05,678 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:05,678 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:05,980 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:05,980 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:06,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:06,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:06,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:06,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:06,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:06,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:07,191 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:07,191 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:07,492 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:07,492 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:07,793 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:07,793 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:08,095 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:08,095 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:08,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:08,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:08,699 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:08,699 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:09,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:09,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:09,303 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:09,303 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:09,606 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:09,606 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:09,908 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:09,908 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:10,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:10,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:10,511 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:10,511 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:10,812 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:10,812 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:11,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:11,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:11,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:11,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:11,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:11,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:12,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:12,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:12,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:12,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:12,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:12,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:12,925 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:12,925 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:13,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:13,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:13,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:13,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:13,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:13,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:14,131 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:14,131 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:14,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:14,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:14,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:14,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:15,038 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:15,038 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:15,340 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:15,340 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:15,642 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:15,642 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:15,944 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:15,944 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:16,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:16,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:16,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:16,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:16,848 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:16,848 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:17,150 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:17,150 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:17,452 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:17,452 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:17,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:17,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:18,058 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:18,058 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:18,360 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:18,360 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:18,662 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:18,662 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:18,963 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:18,963 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:19,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:19,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:19,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:19,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:19,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:19,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:20,171 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:20,171 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:20,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:20,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:20,775 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:20,775 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:21,076 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:21,076 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:21,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:21,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:21,679 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:21,679 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:21,980 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:21,980 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:22,282 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:22,282 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:22,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:22,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:22,886 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:22,886 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:23,189 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:23,189 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:23,490 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:23,490 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:23,793 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:23,793 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:24,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:24,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:24,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:24,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:24,697 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:24,697 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:25,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:25,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:25,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:25,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:25,605 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:25,605 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:25,908 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:25,908 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:26,210 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:26,210 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:26,511 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:26,511 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:26,813 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:26,813 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:27,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:27,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:27,416 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:27,416 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:27,719 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:27,719 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:28,021 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:28,021 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:28,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:28,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:28,626 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:28,626 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:28,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:28,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:29,229 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:29,229 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:29,531 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:29,531 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:29,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:29,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:30,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:30,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:30,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:30,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:30,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:30,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:31,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:31,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:31,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:31,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:31,644 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:31,644 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:31,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:31,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:32,248 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:32,248 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:32,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:32,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:32,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:32,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:33,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:33,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:33,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:33,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:33,759 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:33,759 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:34,061 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:34,061 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:34,362 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:34,362 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:34,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:34,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:34,965 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:34,965 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:35,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:35,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:35,569 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:35,569 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:35,871 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:35,871 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:36,173 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:36,173 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:36,475 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:36,475 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:36,778 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:36,778 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:37,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:37,080 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:37,383 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:37,383 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:37,685 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:37,685 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:37,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:37,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:38,289 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:38,289 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:38,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:38,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:38,893 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:38,893 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:39,194 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:39,194 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:39,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:39,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:39,798 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:39,798 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:40,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:40,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:40,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:40,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:40,704 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:40,704 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:41,006 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:41,006 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:41,308 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:41,308 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:41,611 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:41,611 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:41,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:41,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:42,215 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:42,215 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:42,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:42,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:42,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:42,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:43,121 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:43,121 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:43,423 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:43,423 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:43,724 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:43,724 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:44,025 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:44,025 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:44,327 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:44,327 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:44,628 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:44,628 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:44,930 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:44,930 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:45,233 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:45,233 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:45,535 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:45,535 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:45,837 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:45,837 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:46,139 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:46,139 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:46,441 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:46,441 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:46,742 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:46,742 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:47,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:47,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:47,345 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:47,345 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:47,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:47,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:47,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:47,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:48,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:48,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:48,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:48,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:48,853 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:48,853 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:49,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:49,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:49,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:49,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:49,759 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:49,759 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:50,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:50,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:50,362 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:50,362 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:50,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:50,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:50,966 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:50,966 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:51,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:51,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:51,570 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:51,570 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:51,871 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:51,871 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:52,174 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:52,174 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:52,476 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:52,476 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:52,778 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:52,778 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:53,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:53,080 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:53,381 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:53,381 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:53,684 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:53,684 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:53,985 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:53,985 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:54,288 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:54,288 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:54,591 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:54,591 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:54,893 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:54,893 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:55,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:55,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:55,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:55,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:55,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:55,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:56,100 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:56,100 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:56,403 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:56,403 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:56,705 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:56,705 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:57,006 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:57,006 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:57,309 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:57,309 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:57,611 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:57,611 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:57,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:57,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:58,215 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:58,215 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:58,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:58,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:58,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:58,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:59,122 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:59,122 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:59,425 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:59,425 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:56:59,726 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:56:59,726 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:00,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:00,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:00,329 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:00,329 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:00,631 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:00,631 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:00,932 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:00,932 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:01,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:01,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:01,538 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:01,538 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:01,841 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:01,841 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:02,143 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:02,143 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:02,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:02,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:02,747 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:02,747 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:03,048 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:03,048 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:03,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:03,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:03,651 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:03,651 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:03,953 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:03,953 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:04,255 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:04,255 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:04,557 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:04,557 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:04,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:04,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:05,160 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:05,160 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:05,461 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:05,461 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:05,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:05,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:06,064 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:06,064 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:06,366 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:06,366 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:06,667 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:06,667 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:06,970 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:06,970 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:07,272 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:07,272 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:07,574 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:07,574 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:07,876 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:07,876 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:08,178 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:08,178 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:08,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:08,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:08,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:08,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:09,082 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:09,082 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:09,385 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:09,385 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:09,688 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:09,688 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:09,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:09,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:10,292 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:10,292 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:10,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:10,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:10,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:10,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:11,196 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:11,196 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:11,497 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:11,497 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:11,798 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:11,798 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-09 08:57:13,257 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 08:57:17,198 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 08:57:21,345 > connected
[DEBUG|open_api.py:244] 2021-02-09 08:57:21,345 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 08:57:21,345 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 08:57:21,345 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 08:57:21,346 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 08:57:21,346 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 08:57:21,346 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 08:57:21,358 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 08:57:21,382 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 08:57:21,383 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 08:57:21,383 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 08:57:21,397 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 08:57:21,419 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 08:57:21,721 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:21,721 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:22,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:22,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:22,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:22,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:22,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:22,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:22,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:22,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:23,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:23,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:23,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:23,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:23,835 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:23,835 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:24,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:24,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:24,440 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:24,440 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:24,742 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:24,742 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:25,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:25,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:25,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:25,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:25,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:25,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:25,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:25,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:26,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:26,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:26,554 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:26,554 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:26,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:26,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:27,160 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:27,160 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:27,462 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:27,462 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:27,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:27,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:28,065 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:28,065 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:28,367 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:28,367 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:28,670 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:28,670 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:28,972 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:28,972 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:29,274 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:29,274 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:29,575 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:29,575 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:29,877 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:29,877 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:30,178 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:30,178 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:30,481 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:30,481 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:30,783 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:30,783 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:31,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:31,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:31,388 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:31,388 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:31,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:31,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:31,992 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:31,992 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:32,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:32,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:32,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:32,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:32,897 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:32,897 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:33,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:33,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:33,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:33,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:33,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:33,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:34,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:34,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:34,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:34,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:34,709 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:34,709 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:35,011 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:35,011 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:35,312 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:35,312 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:35,614 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:35,614 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:35,916 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:35,916 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:36,218 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:36,218 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:36,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:36,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:36,822 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:36,822 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:37,125 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:37,125 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:37,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:37,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:37,729 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:37,729 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:38,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:38,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:38,333 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:38,333 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:38,636 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:38,636 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:38,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:38,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:39,240 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:39,240 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:39,543 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:39,543 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:39,844 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:39,844 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:40,146 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:40,146 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:40,448 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:40,448 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:40,751 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:40,751 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:41,053 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:41,053 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:41,356 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:41,356 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:41,658 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:41,658 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:41,960 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:41,960 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:42,262 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:42,262 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:42,563 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:42,563 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:42,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:42,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:43,168 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:43,168 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:43,471 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:43,471 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:43,773 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:43,773 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:44,075 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:44,075 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:44,377 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:44,377 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:44,679 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:44,679 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:44,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:44,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:45,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:45,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:45,586 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:45,586 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:45,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:45,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:46,190 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:46,190 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:46,491 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:46,491 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:46,792 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:46,792 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:47,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:47,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:47,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:47,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:47,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:47,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:48,000 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:48,000 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:48,302 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:48,302 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:48,604 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:48,604 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:48,907 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:48,907 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:49,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:49,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:49,511 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:49,511 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:49,814 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:49,814 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:50,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:50,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:50,417 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:50,417 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:50,720 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:50,720 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:51,021 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:51,021 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:51,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:51,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:51,625 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:51,625 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:51,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:51,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:52,229 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:52,229 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:52,531 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:52,531 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:52,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:52,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:53,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:53,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:53,438 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:53,438 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:53,742 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:53,742 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:54,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:54,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:54,347 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:54,347 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:54,649 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:54,649 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:54,951 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:54,951 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:55,253 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:55,253 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:55,555 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:55,555 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:55,857 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:55,857 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:56,160 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:56,160 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:56,461 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:56,461 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:56,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:56,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:57,065 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:57,065 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:57,367 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:57,367 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:57,670 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:57,670 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:57,972 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:57,972 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:58,275 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:58,275 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:58,577 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:58,577 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:58,878 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:58,878 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:59,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:59,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:59,482 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:59,482 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:57:59,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:57:59,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:00,085 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:00,085 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:00,388 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:00,388 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:00,689 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:00,689 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:00,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:00,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:01,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:01,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:01,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:01,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:01,897 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:01,897 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:02,199 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:02,199 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:02,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:02,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:02,803 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:02,803 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:03,106 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:03,106 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:03,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:03,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:03,710 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:03,710 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:04,012 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:04,012 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:04,313 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:04,313 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:04,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:04,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:04,916 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:04,916 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:05,219 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:05,219 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:05,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:05,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:05,822 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:05,822 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:06,124 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:06,124 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:06,426 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:06,426 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:06,728 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:06,728 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:07,030 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:07,030 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:07,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:07,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:07,633 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:07,633 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:07,936 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:07,936 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:08,238 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:08,238 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:08,540 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:08,540 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:08,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:08,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:09,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:09,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:09,446 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:09,446 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:09,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:09,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:10,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:10,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:10,350 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:10,350 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:10,651 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:10,651 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:10,954 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:10,954 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:11,256 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:11,256 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:11,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:11,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:11,860 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:11,860 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:12,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:12,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:12,467 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:12,467 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:12,769 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:12,769 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:13,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:13,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:13,374 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:13,374 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:13,676 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:13,676 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:13,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:13,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:14,278 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:14,278 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:14,580 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:14,580 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:14,882 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:14,882 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:15,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:15,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:15,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:15,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:15,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:15,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:16,091 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:16,091 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:16,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:16,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:16,694 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:16,694 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:16,996 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:16,996 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:17,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:17,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:17,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:17,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:17,901 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:17,901 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:18,204 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:18,204 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:18,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:18,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:18,807 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:18,807 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:19,108 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:19,108 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:19,410 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:19,410 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:19,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:19,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:20,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:20,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:20,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:20,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:20,619 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:20,619 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:20,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:20,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:21,223 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:21,223 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:21,525 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:21,525 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:21,826 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:21,826 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:22,129 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:22,129 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:22,431 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:22,431 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:22,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:22,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:23,033 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:23,033 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:23,335 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:23,335 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:23,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:23,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:23,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:23,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:24,241 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:24,241 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:24,544 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:24,544 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:24,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:24,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:25,147 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:25,147 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:25,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:25,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:25,752 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:25,752 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:26,054 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:26,054 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:26,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:26,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:26,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:26,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:26,960 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:26,960 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:27,262 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:27,262 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:27,563 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:27,563 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:27,865 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:27,865 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:28,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:28,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:28,470 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:28,470 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:28,772 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:28,772 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:29,074 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:29,074 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:29,377 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:29,377 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:29,680 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:29,680 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:29,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:29,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:30,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:30,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:30,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:30,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:30,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:30,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:31,190 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:31,190 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:31,492 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:31,492 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:31,795 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:31,795 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:32,096 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:32,096 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:32,398 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:32,398 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:32,701 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:32,701 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:33,003 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:33,003 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:33,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:33,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:33,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:33,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:33,910 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:33,910 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:34,211 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:34,211 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:34,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:34,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:34,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:34,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:35,116 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:35,116 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:35,418 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:35,418 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:35,720 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:35,720 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:36,023 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:36,023 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:36,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:36,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:36,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:36,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:36,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:36,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:37,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:37,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:37,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:37,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:37,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:37,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:38,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:38,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:38,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:38,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:38,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:38,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:39,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:39,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:39,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:39,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:39,648 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:39,648 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:39,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:39,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:40,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:40,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:40,555 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:40,555 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:40,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:40,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:41,159 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:41,159 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:41,462 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:41,462 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:41,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:41,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:42,066 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:42,066 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:42,368 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:42,368 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:42,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:42,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:42,973 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:42,973 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:43,275 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:43,275 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:43,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:43,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:43,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:43,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:44,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:44,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:44,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:44,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:44,785 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:44,785 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:45,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:45,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:45,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:45,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:45,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:45,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:45,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:45,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:46,295 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:46,295 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:46,597 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:46,597 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:46,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:46,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:47,203 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:47,203 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:47,504 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:47,504 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:47,806 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:47,806 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:48,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:48,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:48,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:48,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:48,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:48,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:49,013 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:49,013 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:49,315 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:49,315 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:49,616 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:49,616 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:49,918 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:49,918 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:50,221 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:50,221 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:50,523 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:50,523 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:50,825 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:50,825 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:51,127 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:51,127 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:51,428 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:51,428 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:51,730 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:51,730 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:52,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:52,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:52,333 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:52,333 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:52,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:52,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:52,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:52,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:53,240 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:53,240 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:53,542 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:53,542 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:53,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:53,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:54,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:54,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:54,448 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:54,448 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:54,749 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:54,749 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:55,051 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:55,051 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:55,353 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:55,353 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:55,656 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:55,656 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:55,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:55,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:56,259 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:56,259 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:56,561 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:56,561 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:56,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:56,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:57,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:57,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:57,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:57,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:57,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:57,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:58,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:58,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:58,371 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:58,371 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:58,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:58,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:58,975 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:58,975 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:59,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:59,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:59,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:59,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:58:59,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:58:59,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:00,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:00,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:00,482 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:00,482 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:00,783 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:00,783 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:01,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:01,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:01,388 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:01,388 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:01,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:01,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:01,992 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:01,992 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:02,294 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:02,294 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:02,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:02,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:02,898 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:02,898 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:03,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:03,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:03,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:03,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:03,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:03,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:04,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:04,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:04,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:04,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:04,709 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:04,709 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:05,011 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:05,011 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:05,314 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:05,314 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:05,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:05,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:05,917 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:05,917 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:06,219 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:06,219 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:06,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:06,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:06,823 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:06,823 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:07,124 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:07,124 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:07,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:07,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:07,729 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:07,729 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:08,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:08,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:08,334 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:08,334 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:08,637 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:08,637 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:08,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:08,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:09,241 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:09,241 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:09,543 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:09,543 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:09,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:09,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:10,147 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:10,147 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:10,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:10,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:10,752 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:10,752 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:11,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:11,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:11,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:11,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:11,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:11,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:11,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:11,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:12,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:12,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:12,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:12,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:12,867 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:12,867 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:13,169 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:13,169 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:13,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:13,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:13,773 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:13,773 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:14,074 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:14,074 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:14,376 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:14,376 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:14,679 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:14,679 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:14,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:14,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:15,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:15,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:15,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:15,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:15,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:15,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:16,188 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:16,188 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:16,491 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:16,491 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:16,793 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:16,793 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:17,095 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:17,095 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:17,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:17,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:17,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:17,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:17,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:17,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:18,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:18,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:18,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:18,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:18,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:18,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:19,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:19,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:19,509 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:19,509 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:19,811 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:19,811 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:20,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:20,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:20,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:20,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:20,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:20,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:21,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:21,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:21,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:21,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:21,625 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:21,625 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:21,927 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:21,927 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:22,229 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:22,229 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:22,531 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:22,531 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:22,832 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:22,832 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:23,134 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:23,134 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:23,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:23,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:23,742 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:23,742 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:24,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:24,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:24,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:24,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:24,648 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:24,648 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:24,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:24,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:25,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:25,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:25,554 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:25,554 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:25,857 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:25,857 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:26,159 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:26,159 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:26,460 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:26,460 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:26,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:26,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:27,064 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:27,064 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:27,365 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:27,365 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:27,666 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:27,666 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:27,969 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:27,969 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:28,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:28,270 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:28,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:28,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:28,875 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:28,875 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:29,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:29,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:29,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:29,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:29,779 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:29,779 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:30,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:30,080 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:30,381 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:30,381 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:30,683 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:30,683 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:30,985 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:30,985 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:31,287 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:31,287 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:31,589 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:31,589 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:31,892 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:31,892 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:32,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:32,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:32,495 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:32,495 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:32,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:32,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:33,100 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:33,100 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:33,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:33,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:33,705 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:33,705 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:34,008 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:34,008 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:34,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:34,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:34,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:34,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:34,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:34,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:35,217 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:35,217 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:35,519 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:35,519 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:35,822 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:35,822 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:36,124 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:36,124 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-09 08:59:37,343 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 08:59:41,272 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 08:59:45,218 > connected
[DEBUG|open_api.py:244] 2021-02-09 08:59:45,218 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 08:59:45,219 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 08:59:45,219 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 08:59:45,219 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 08:59:45,219 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 08:59:45,219 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 08:59:45,231 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 08:59:45,256 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 08:59:45,257 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 08:59:45,257 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 08:59:45,272 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 08:59:45,295 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 08:59:45,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:45,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:45,897 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:45,897 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:46,199 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:46,199 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:46,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:46,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:46,805 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:46,805 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:47,107 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:47,107 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:47,410 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:47,410 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:47,713 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:47,713 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:48,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:48,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:48,315 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:48,315 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:48,618 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:48,618 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:48,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:48,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:49,223 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:49,223 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:49,525 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:49,525 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:49,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:49,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:50,128 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:50,128 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:50,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:50,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:50,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:50,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:51,033 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:51,033 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:51,334 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:51,334 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:51,637 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:51,637 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:51,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:51,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:52,241 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:52,241 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:52,544 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:52,544 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:52,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:52,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:53,147 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:53,147 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:53,449 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:53,449 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:53,751 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:53,751 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:54,053 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:54,053 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:54,356 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:54,356 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:54,658 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:54,658 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:54,961 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:54,961 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:55,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:55,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:55,565 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:55,565 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:55,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:55,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:56,173 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:56,173 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:56,475 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:56,475 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:56,777 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:56,777 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:57,079 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:57,079 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:57,381 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:57,381 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:57,683 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:57,683 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:57,985 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:57,985 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:58,289 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:58,289 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:58,590 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:58,590 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:58,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:58,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:59,195 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:59,195 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:59,498 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:59,498 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 08:59:59,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-09 08:59:59,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-09 09:00:00,101 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:00,101 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:00,104 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:00,104 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:00,111 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:00:00,897 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:00,897 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:00,899 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:00,900 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:01,137 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:01,137 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:01,139 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:01,140 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:01,143 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:01,144 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:01,144 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:01,145 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:01,146 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:01,146 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9195.0, 19035.0, 1.91, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9595.0, 5600.0, 0.56, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:01,222 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:01,223 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:01,223 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:01,224 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:01,224 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:00:01,265 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:01,265 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:01,266 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:01,267 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:01,267 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:01,268 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:01,268 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:01,269 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:01,270 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:01,271 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:01,271 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:01,272 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:01,274 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:01,340 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:01,641 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:01,641 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:01,643 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:01,643 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:01,827 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:00:02,697 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:02,697 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:02,699 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:02,702 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:02,834 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:02,834 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:02,836 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:02,836 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:02,837 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:02,838 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:02,838 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:02,840 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:02,841 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:02,841 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9195.0, 19035.0, 1.91, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9595.0, 5600.0, 0.56, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:02,857 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:02,857 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:02,858 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:02,858 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:02,859 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:00:03,205 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:03,205 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:03,207 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:03,207 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:03,207 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:03,208 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:03,209 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:03,209 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:03,210 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:03,210 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:03,211 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:03,211 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:03,213 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:03,219 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:03,520 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:03,520 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:03,523 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:03,523 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:03,524 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:00:04,968 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:04,968 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:04,970 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:04,973 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:05,110 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:05,111 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:05,112 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:05,112 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:05,113 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:05,114 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:05,114 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:05,115 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:05,117 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:05,117 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9195.0, 19035.0, 1.91, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9595.0, 5600.0, 0.56, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:05,135 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:05,136 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:05,137 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:05,137 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:05,138 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:00:05,198 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:05,198 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:05,200 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:05,200 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:05,200 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:05,201 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:05,201 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:05,202 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:05,204 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:05,204 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:05,205 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:05,205 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:05,207 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:05,213 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:05,514 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:05,514 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:05,515 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:05,516 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:05,741 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:00:06,939 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:06,939 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:06,941 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:06,943 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:07,060 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:07,061 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:07,063 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:07,063 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:07,064 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:07,065 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:07,065 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:07,066 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:07,067 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:07,067 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9195.0, 19035.0, 1.91, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9595.0, 5600.0, 0.56, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:07,085 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:07,085 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:07,086 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:07,087 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:07,088 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:00:07,254 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:07,254 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:07,256 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:07,256 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:07,256 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:07,257 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:07,258 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:07,258 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:07,260 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:07,260 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:07,260 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:07,261 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:07,263 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:07,270 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:07,570 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:07,570 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:07,572 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:07,572 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:07,690 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:00:08,823 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:08,823 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:08,825 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:08,827 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:08,948 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:08,948 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:08,950 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:08,950 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:08,951 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:08,951 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:08,952 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:08,953 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:08,955 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:08,955 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9595.0, 5600.0, 0.56, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:08,975 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:08,976 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:08,976 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:08,977 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:08,977 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:00:09,503 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:09,503 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:09,505 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:09,505 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:09,506 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:09,507 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:09,507 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:09,507 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:09,509 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:09,509 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:09,510 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:09,510 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:09,520 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:09,543 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:09,844 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:09,844 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:09,845 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:09,846 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:09,846 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:00:11,824 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:11,824 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:11,826 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:11,827 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:11,931 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:11,931 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:11,933 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:11,933 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:11,934 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:11,935 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:11,936 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:11,937 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:11,938 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:11,939 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9595.0, 5600.0, 0.56, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:11,956 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:11,957 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:11,957 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:11,958 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:11,958 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:00:12,611 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:12,612 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:12,613 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:12,614 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:12,614 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:12,615 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:12,615 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:12,615 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:12,617 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:12,617 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:12,618 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:12,620 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:12,622 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:12,628 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:12,929 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:12,929 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:12,930 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:12,930 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:12,930 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:00:14,148 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:14,148 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:14,150 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:14,151 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:14,286 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:14,286 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:14,288 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:14,289 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:14,291 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:14,292 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:14,292 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:14,293 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:14,294 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:14,295 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:14,321 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:14,322 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:14,323 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:14,323 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:14,324 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:00:14,891 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:14,891 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:14,893 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:14,893 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:14,893 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:14,894 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:14,894 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:14,895 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:14,896 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:14,896 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:14,896 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:14,896 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:14,898 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:14,911 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:15,212 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:15,212 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:15,213 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:15,214 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:15,214 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:00:16,708 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:16,708 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:16,710 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:16,711 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:16,828 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:16,829 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:16,830 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:16,831 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:16,832 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:16,832 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:16,833 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:16,833 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:16,835 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:16,836 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:16,855 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:16,856 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:16,856 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:16,857 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:16,857 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:00:17,215 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:17,215 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:17,217 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:17,217 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:17,218 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:17,219 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:17,220 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:17,221 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:17,222 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:17,222 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:17,223 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:17,223 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:17,226 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:17,233 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:17,533 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:17,533 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:17,535 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:17,536 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:17,537 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:00:18,979 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:18,979 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:18,981 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:18,982 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:19,116 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:19,117 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:19,119 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:19,119 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:19,121 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:19,121 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:19,122 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:19,122 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:19,124 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:19,124 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:19,140 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:19,140 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:19,140 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:19,141 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:19,141 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:00:19,904 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:19,904 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:19,906 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:19,906 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:19,907 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:19,907 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:19,908 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:19,908 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:19,910 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:19,910 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:19,910 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:19,910 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:19,911 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:19,918 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:20,220 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:20,220 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:20,222 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:20,223 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:20,223 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:00:21,055 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:21,056 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:21,058 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:21,059 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:21,175 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:21,175 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:21,177 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:21,177 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:21,178 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:21,179 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:21,179 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:21,180 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:21,181 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:21,181 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:21,199 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:21,199 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:21,199 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:21,200 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:21,201 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:00:22,669 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:22,669 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:22,672 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:22,672 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:22,673 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:22,675 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:22,675 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:22,675 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:22,691 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:22,692 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:22,692 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:22,693 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:22,697 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:22,706 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:23,007 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:23,007 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:23,009 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:23,009 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:23,010 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:00:24,144 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:24,144 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:24,146 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:24,148 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:24,272 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:24,273 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:24,275 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:24,276 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:24,277 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:24,278 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:24,278 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:24,278 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:24,280 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:24,280 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:24,333 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:24,333 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:24,334 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:24,334 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:24,335 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:00:25,499 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:25,499 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:25,500 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:25,501 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:25,501 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:25,502 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:25,502 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:25,503 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:25,504 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:25,505 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:25,505 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:25,505 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:25,516 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:25,532 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:25,833 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:25,833 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:25,835 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:25,836 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:25,837 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:00:26,917 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:26,917 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:26,919 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:26,921 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:27,045 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:27,045 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:27,047 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:27,047 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:27,048 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:27,049 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:27,049 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:27,050 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:27,051 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:27,051 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:27,068 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:27,068 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:27,071 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:27,071 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:27,072 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:00:28,345 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:28,345 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:28,347 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:28,347 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:28,347 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:28,348 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:28,348 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:28,349 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:28,370 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:28,371 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:28,372 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:28,372 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:28,378 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:28,387 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:28,688 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:28,688 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:28,689 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:28,690 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:28,690 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:00:29,872 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:29,872 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:00:29,874 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:00:29,876 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:00:29,994 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:00:29,994 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:00:29,996 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:00:29,996 > []
[DEBUG|trader.py:50] 2021-02-09 09:00:29,997 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:00:29,998 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:00:29,998 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:00:29,999 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:00:30,000 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:00:30,001 > [('094820', 190.0, 5259.0, 5350.0, 7913.0, 0.79, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9705.0, 15010.0, 1.51, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:00:30,019 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:00:30,019 > []
[DEBUG|open_api.py:976] 2021-02-09 09:00:30,021 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:00:30,021 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:30,022 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:00:31,012 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:31,012 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:00:31,014 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:00:31,014 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:00:31,014 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:00:31,015 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:00:31,015 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:00:31,015 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:00:31,038 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:00:31,038 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:00:31,040 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:00:31,041 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:00:31,046 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:00:31,054 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:00:31,356 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:00:31,356 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:00:31,357 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:00:31,357 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:00:31,358 > 27
[DEBUG|open_api.py:290] 2021-02-09 09:00:31,368 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:00:31,368 > 서비스 TR을 확인바랍니다.(0007)
[DEBUG|trader.py:7] 2021-02-09 09:02:03,576 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:02:07,510 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:02:11,547 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:02:11,547 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:02:11,548 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:02:11,548 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:02:11,548 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:02:11,548 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:02:11,548 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:02:11,566 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:02:11,591 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:02:11,592 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:02:11,592 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:02:11,606 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:02:11,635 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:02:11,936 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:11,936 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:11,937 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:11,938 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:11,938 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:02:12,694 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:12,695 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:12,696 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:12,698 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:12,884 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:12,884 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:12,887 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:12,887 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:12,888 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:12,889 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:12,889 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:12,890 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:12,890 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:12,890 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:12,932 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:12,932 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:12,933 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:12,933 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:12,934 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:02:12,977 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:12,977 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:12,979 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:12,979 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:12,981 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:12,982 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:12,982 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:12,983 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:12,984 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:12,985 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:12,986 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:12,986 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:12,989 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:12,997 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:13,298 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:13,298 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:13,299 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:13,300 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:13,538 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:02:14,182 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:14,182 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:14,184 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:14,185 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:14,300 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:14,300 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:14,302 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:14,302 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:14,304 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:14,305 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:14,306 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:14,306 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:14,308 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:14,308 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:14,341 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:14,341 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:14,341 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:14,342 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:14,342 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:02:14,389 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:14,389 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:14,390 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:14,391 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:14,391 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:14,392 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:14,392 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:14,392 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:14,394 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:14,394 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:14,394 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:14,395 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:14,397 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:14,405 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:14,706 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:14,706 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:14,708 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:14,708 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:14,945 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:02:15,670 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:15,670 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:15,672 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:15,674 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:15,795 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:15,795 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:15,797 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:15,797 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:15,798 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:15,799 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:15,800 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:15,800 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:15,801 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:15,802 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:15,819 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:15,820 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:15,821 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:15,821 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:15,823 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:02:15,878 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:15,878 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:15,880 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:15,880 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:15,880 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:15,881 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:15,881 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:15,882 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:15,883 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:15,883 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:15,884 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:15,884 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:15,886 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:15,894 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:16,195 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:16,195 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:16,197 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:16,197 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:16,427 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:02:17,243 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:17,243 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:17,245 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:17,247 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:17,407 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:17,408 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:17,410 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:17,410 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:17,411 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:17,412 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:17,412 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:17,413 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:17,414 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:17,414 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:17,434 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:17,434 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:17,435 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:17,436 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:17,436 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:02:17,483 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:17,483 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:17,485 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:17,485 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:17,486 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:17,487 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:17,487 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:17,491 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:17,491 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:17,491 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:17,493 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:17,493 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:17,495 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:17,502 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:17,803 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:17,803 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:17,806 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:17,807 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:18,040 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:02:18,472 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:18,472 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:18,474 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:18,475 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:18,589 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:18,590 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:18,592 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:18,592 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:18,592 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:18,593 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:18,593 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:18,594 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:18,595 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:18,595 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:18,612 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:18,612 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:18,612 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:18,613 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:18,642 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:02:18,700 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:18,700 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:18,702 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:18,702 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:18,703 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:18,704 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:18,704 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:18,705 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:18,707 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:18,707 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:18,707 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:18,708 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:18,709 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:18,718 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:19,019 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:19,019 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:19,020 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:19,021 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:19,244 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:02:19,573 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:19,573 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:19,575 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:19,576 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:19,703 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:19,704 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:19,706 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:19,706 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:19,709 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:19,710 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:19,710 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:19,711 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:19,712 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:19,712 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:19,734 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:19,735 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:19,736 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:19,737 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:19,846 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:02:19,898 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:19,898 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:19,900 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:19,900 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:19,901 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:19,902 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:19,902 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:19,903 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:19,905 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:19,905 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:19,905 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:19,906 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:19,908 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:19,915 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:20,215 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:20,215 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:20,216 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:20,217 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:20,448 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:02:20,834 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:20,834 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:20,836 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:20,838 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:20,956 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:20,956 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:20,958 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:20,958 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:20,959 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:20,960 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:20,961 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:20,962 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:20,963 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:20,963 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:20,979 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:20,979 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:20,980 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:20,980 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:21,050 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:02:21,106 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:21,106 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:21,108 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:21,108 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:21,108 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:21,109 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:21,110 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:21,110 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:21,111 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:21,111 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:21,112 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:21,112 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:21,114 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:21,120 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:21,420 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:21,420 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:21,422 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:21,422 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:21,652 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:02:22,215 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:22,215 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:22,217 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:22,219 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:22,363 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:22,363 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:22,365 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:22,365 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:22,367 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:22,368 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:22,368 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:22,369 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:22,371 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:22,371 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:22,391 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:22,392 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:22,392 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:22,392 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:22,393 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:02:22,445 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:22,445 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:22,447 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:22,448 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:22,448 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:22,449 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:22,449 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:22,450 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:22,451 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:22,451 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:22,452 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:22,452 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:22,454 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:22,462 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:22,763 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:22,763 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:22,764 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:22,765 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:22,996 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:02:23,930 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:23,930 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:23,932 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:23,933 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:24,045 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:24,046 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:24,047 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:24,048 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:24,049 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:24,049 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:24,050 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:24,050 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:24,051 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:24,052 > [('094820', 190.0, 5259.0, 5320.0, 2246.0, 0.22, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:24,068 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:24,068 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:24,069 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:24,070 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:24,070 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:02:24,158 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:24,158 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:24,160 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:24,160 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:24,160 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:24,161 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:24,161 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:24,162 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:24,163 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:24,163 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:24,164 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:24,165 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:24,167 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:24,174 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:24,475 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:24,475 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:24,476 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:24,477 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:24,673 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:02:25,782 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:25,782 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:25,784 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:25,785 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:25,901 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:25,901 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:25,903 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:25,904 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:25,907 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:25,908 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:25,908 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:25,909 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:25,910 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:25,910 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:25,934 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:25,934 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:25,935 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:25,936 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:25,937 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:02:25,978 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:25,978 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:25,980 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:25,980 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:25,981 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:25,982 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:25,983 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:25,983 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:25,984 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:25,985 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:25,986 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:25,987 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:25,989 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:25,996 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:26,297 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:26,297 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:26,298 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:26,299 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:26,538 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:02:27,429 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:27,429 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:27,431 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:27,433 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:27,550 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:27,551 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:27,553 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:27,553 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:27,555 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:27,555 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:27,556 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:27,556 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:27,557 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:27,557 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:27,576 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:27,577 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:27,577 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:27,578 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:27,578 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:02:27,615 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:27,615 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:27,617 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:27,617 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:27,617 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:27,618 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:27,618 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:27,619 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:27,633 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:27,633 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:27,634 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:27,635 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:27,639 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:27,649 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:27,951 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:27,951 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:27,953 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:27,954 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:28,181 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:02:29,248 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:29,248 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:29,249 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:29,251 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:29,391 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:29,391 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:29,394 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:29,394 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:29,407 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:29,408 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:29,409 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:29,409 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:29,410 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:29,411 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:29,436 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:29,436 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:29,438 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:29,438 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:29,439 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:02:29,627 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:29,627 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:29,628 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:29,629 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:29,629 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:29,630 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:29,630 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:29,631 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:29,632 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:29,632 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:29,633 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:29,633 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:29,635 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:29,643 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:29,943 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:29,943 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:29,945 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:29,945 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:30,041 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:02:30,768 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:30,768 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:30,770 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:30,772 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:30,892 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:30,893 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:30,894 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:30,895 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:30,896 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:30,896 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:30,897 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:30,897 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:30,898 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:30,898 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:30,914 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:30,915 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:30,915 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:30,916 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:30,916 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:02:30,975 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:30,975 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:30,976 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:30,977 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:30,977 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:30,978 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:30,978 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:30,979 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:30,980 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:30,980 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:30,980 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:30,981 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:30,983 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:30,990 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:31,291 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:31,291 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:31,292 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:31,293 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:31,520 > 27
[DEBUG|open_api.py:290] 2021-02-09 09:02:32,330 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:32,330 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:32,332 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:32,334 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:32,447 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:32,447 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:32,449 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:32,449 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:32,450 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:32,451 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:32,452 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:32,452 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:32,455 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:32,455 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:32,473 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:32,473 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:32,474 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:32,474 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:32,475 > 28
[DEBUG|open_api.py:290] 2021-02-09 09:02:32,559 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:32,559 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:32,560 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:32,561 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:32,561 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:32,562 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:32,562 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:32,562 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:32,563 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:32,564 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:32,564 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:32,565 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:32,566 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:32,573 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:32,874 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:32,874 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:32,876 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:32,876 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:33,078 > 29
[DEBUG|open_api.py:290] 2021-02-09 09:02:34,397 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:34,397 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:34,399 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:34,400 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:34,520 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:34,520 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:34,523 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:34,523 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:34,524 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:34,525 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:34,525 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:34,526 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:34,527 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:34,527 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:34,544 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:34,544 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:34,545 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:34,545 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:34,545 > 30
[DEBUG|open_api.py:290] 2021-02-09 09:02:34,991 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:34,991 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:34,993 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:34,993 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:34,994 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:34,994 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:34,994 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:34,994 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:34,996 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:34,996 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:34,996 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:34,997 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:34,998 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:35,005 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:35,307 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:35,307 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:35,309 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:35,309 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:35,310 > 31
[DEBUG|open_api.py:290] 2021-02-09 09:02:36,508 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:36,508 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:36,510 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:36,511 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:36,622 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:36,622 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:36,624 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:36,624 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:36,625 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:36,626 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:36,626 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:36,626 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:36,627 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:36,628 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:36,645 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:36,645 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:36,645 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:36,646 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:36,646 > 32
[DEBUG|open_api.py:290] 2021-02-09 09:02:36,887 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:36,887 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:02:36,888 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:02:36,888 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:02:36,889 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:02:36,890 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:02:36,890 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:02:36,890 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:02:36,892 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:02:36,892 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:02:36,892 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:02:36,893 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:02:36,894 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:02:36,901 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:02:37,202 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:02:37,202 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:02:37,204 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:02:37,205 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:37,249 > 33
[DEBUG|open_api.py:290] 2021-02-09 09:02:39,368 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:39,368 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:02:39,370 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:02:39,372 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:02:39,491 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:02:39,491 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:02:39,493 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:02:39,493 > []
[DEBUG|trader.py:50] 2021-02-09 09:02:39,494 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:02:39,495 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:02:39,495 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:02:39,495 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:02:39,496 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:02:39,496 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:02:39,513 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:02:39,513 > []
[DEBUG|open_api.py:976] 2021-02-09 09:02:39,513 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:02:39,514 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:02:39,514 > 34
[DEBUG|open_api.py:290] 2021-02-09 09:02:39,522 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:02:39,522 > 서비스 TR을 확인바랍니다.(0007)
[DEBUG|trader.py:7] 2021-02-09 09:04:30,331 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:04:34,258 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:04:38,389 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:04:38,389 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:04:38,390 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:04:38,390 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:04:38,390 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:04:38,390 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:04:38,391 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:04:38,409 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:04:38,434 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:04:38,435 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:04:38,435 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:04:38,450 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:04:38,503 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:04:38,804 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:38,804 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:38,805 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:38,805 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:38,807 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:04:40,253 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:40,253 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:40,255 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:40,257 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:40,442 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:40,443 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:40,445 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:40,445 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:40,447 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:40,447 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:40,448 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:40,449 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:40,449 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:40,449 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:40,489 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:40,490 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:40,491 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:40,492 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:40,493 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:04:40,803 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:40,803 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:40,805 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:40,805 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:40,805 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:40,806 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:40,806 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:40,807 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:40,808 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:40,808 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:40,809 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:40,809 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:40,811 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:40,826 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:41,126 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:41,126 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:41,127 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:41,128 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:41,128 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:04:42,920 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:42,920 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:42,921 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:42,923 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:43,041 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:43,041 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:43,043 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:43,043 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:43,044 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:43,045 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:43,045 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:43,045 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:43,047 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:43,047 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:43,065 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:43,065 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:43,066 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:43,066 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:43,067 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:04:43,812 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:43,812 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:43,813 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:43,814 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:43,814 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:43,815 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:43,815 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:43,816 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:43,817 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:43,817 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:43,817 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:43,818 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:43,820 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:43,827 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:44,129 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:44,129 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:44,130 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:44,130 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:44,130 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:04:45,886 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:45,886 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:45,888 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:45,889 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:46,006 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:46,007 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:46,009 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:46,009 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:46,010 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:46,011 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:46,011 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:46,011 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:46,012 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:46,013 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:46,032 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:46,032 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:46,033 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:46,033 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:46,034 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:04:46,405 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:46,405 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:46,407 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:46,407 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:46,408 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:46,408 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:46,409 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:46,409 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:46,409 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:46,410 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:46,410 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:46,410 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:46,412 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:46,418 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:46,720 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:46,720 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:46,723 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:46,724 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:46,724 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:04:48,017 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:48,017 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:48,019 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:48,021 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:48,136 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:48,137 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:48,139 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:48,140 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:48,142 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:48,143 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:48,143 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:48,144 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:48,145 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:48,145 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:48,161 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:48,161 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:48,161 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:48,162 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:48,162 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:04:48,525 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:48,525 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:48,527 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:48,527 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:48,527 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:48,528 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:48,528 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:48,529 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:48,530 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:48,530 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:48,530 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:48,531 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:48,540 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:48,561 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:48,862 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:48,862 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:48,864 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:48,864 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:48,865 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:04:50,072 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:50,072 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:50,074 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:50,075 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:50,194 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:50,195 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:50,197 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:50,198 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:50,199 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:50,200 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:50,200 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:50,200 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:50,202 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:50,202 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:50,223 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:50,224 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:50,225 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:50,225 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:50,226 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:04:50,343 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:50,343 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:50,345 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:50,345 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:50,345 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:50,346 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:50,346 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:50,347 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:50,348 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:50,348 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:50,348 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:50,349 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:50,350 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:50,357 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:50,658 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:50,658 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:50,660 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:50,660 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:50,829 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:04:51,912 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:51,912 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:51,913 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:51,915 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:52,036 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:52,037 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:52,039 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:52,039 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:52,051 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:52,052 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:52,052 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:52,053 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:52,054 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:52,055 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:52,073 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:52,073 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:52,074 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:52,074 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:52,075 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:04:52,387 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:52,387 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:52,389 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:52,389 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:52,389 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:52,390 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:52,391 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:52,391 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:52,392 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:52,392 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:52,393 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:52,393 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:52,395 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:52,405 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:52,707 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:52,707 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:52,709 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:52,709 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:52,710 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:04:53,861 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:53,861 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:53,862 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:53,864 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:53,978 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:53,979 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:53,980 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:53,981 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:53,982 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:53,982 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:53,983 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:53,983 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:53,984 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:53,985 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:54,001 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:54,001 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:54,002 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:54,002 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:54,003 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:04:54,057 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:54,057 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:54,059 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:54,059 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:54,059 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:54,060 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:54,060 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:54,061 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:54,062 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:54,062 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:54,062 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:54,063 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:54,064 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:54,072 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:54,373 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:54,373 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:54,375 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:54,375 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:54,606 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:04:55,262 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:55,262 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:55,263 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:55,266 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:55,406 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:55,406 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:55,408 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:55,408 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:55,410 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:55,411 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:55,412 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:55,412 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:55,413 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:55,413 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:55,434 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:55,434 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:55,435 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:55,436 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:55,437 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:04:55,491 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:55,491 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:55,493 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:55,493 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:55,494 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:55,495 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:55,495 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:55,495 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:55,496 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:55,497 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:55,497 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:55,498 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:55,499 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:55,505 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:55,807 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:55,807 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:55,809 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:55,809 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:56,039 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:04:56,674 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:56,674 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:56,676 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:56,677 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:56,785 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:56,786 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:56,789 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:56,790 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:56,791 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:56,792 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:56,792 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:56,792 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:56,794 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:56,794 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:56,812 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:56,812 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:56,813 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:56,813 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:56,814 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:04:56,871 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:56,871 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:56,872 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:56,873 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:56,873 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:56,873 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:56,873 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:56,874 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:56,875 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:56,875 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:56,875 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:56,876 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:56,877 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:56,884 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:57,185 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:57,185 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:57,187 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:57,187 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:57,416 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:04:58,440 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:58,440 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:04:58,442 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:04:58,443 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:04:58,557 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:04:58,557 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:04:58,560 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:04:58,560 > []
[DEBUG|trader.py:50] 2021-02-09 09:04:58,562 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:04:58,563 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:04:58,563 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:04:58,563 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:04:58,565 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:04:58,565 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:04:58,582 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:04:58,583 > []
[DEBUG|open_api.py:976] 2021-02-09 09:04:58,583 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:04:58,584 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:58,584 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:04:58,679 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:04:58,679 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:04:58,681 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:04:58,681 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:04:58,681 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:04:58,682 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:04:58,682 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:04:58,683 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:04:58,684 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:04:58,684 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:04:58,685 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:04:58,685 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:04:58,687 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:04:58,694 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:04:58,994 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:04:58,994 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:04:58,996 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:04:58,996 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:04:59,187 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:05:00,067 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:00,067 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:00,069 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:00,071 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:00,175 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:00,175 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:00,176 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:00,176 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:00,178 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:00,179 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:00,179 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:00,179 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:00,181 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:00,181 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:00,203 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:00,203 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:00,204 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:00,204 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:00,205 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:05:00,285 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:00,285 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:00,287 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:00,287 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:00,288 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:00,289 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:00,289 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:00,289 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:00,292 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:00,292 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:00,292 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:00,293 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:00,297 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:00,305 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:00,606 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:00,606 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:00,608 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:00,608 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:00,806 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:05:01,737 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:01,737 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:01,738 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:01,739 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:01,860 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:01,861 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:01,862 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:01,863 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:01,864 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:01,865 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:01,865 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:01,866 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:01,868 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:01,868 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:01,896 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:01,897 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:01,897 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:01,898 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:01,899 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:05:02,126 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:02,126 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:02,127 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:02,128 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:02,128 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:02,129 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:02,129 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:02,130 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:02,131 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:02,131 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:02,131 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:02,132 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:02,133 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:02,141 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:02,441 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:02,441 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:02,443 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:02,444 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:02,502 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:05:03,621 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:03,621 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:03,622 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:03,624 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:03,747 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:03,747 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:03,748 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:03,749 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:03,750 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:03,750 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:03,751 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:03,751 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:03,753 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:03,753 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:03,771 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:03,772 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:03,772 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:03,773 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:03,773 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:05:04,138 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:04,138 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:04,140 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:04,140 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:04,140 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:04,141 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:04,142 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:04,142 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:04,143 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:04,143 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:04,144 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:04,144 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:04,145 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:04,152 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:04,453 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:04,453 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:04,455 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:04,455 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:04,456 > 27
[DEBUG|open_api.py:290] 2021-02-09 09:05:05,859 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:05,859 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:05,861 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:05,862 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:05,982 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:05,983 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:05,984 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:05,985 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:05,986 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:05,987 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:05,987 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:05,988 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:05,989 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:05,989 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:06,006 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:06,006 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:06,007 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:06,007 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:06,008 > 28
[DEBUG|open_api.py:290] 2021-02-09 09:05:06,238 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:06,238 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:06,240 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:06,240 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:06,240 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:06,241 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:06,241 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:06,242 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:06,243 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:06,243 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:06,244 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:06,244 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:06,246 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:06,252 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:06,553 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:06,553 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:06,555 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:06,556 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:06,611 > 29
[DEBUG|open_api.py:290] 2021-02-09 09:05:07,915 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:07,915 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:07,917 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:07,919 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:08,039 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:08,040 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:08,042 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:08,042 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:08,043 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:08,044 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:08,044 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:08,045 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:08,046 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:08,046 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:08,062 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:08,063 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:08,063 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:08,063 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:08,064 > 30
[DEBUG|open_api.py:290] 2021-02-09 09:05:08,315 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:08,315 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:08,317 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:08,317 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:08,317 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:08,318 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:08,319 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:08,320 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:08,321 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:08,321 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:08,322 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:08,322 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:08,324 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:08,332 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:08,632 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:08,632 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:08,634 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:08,634 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:08,667 > 31
[DEBUG|open_api.py:290] 2021-02-09 09:05:10,614 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:10,614 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:10,616 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:10,617 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:10,740 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:10,741 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:10,743 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:10,743 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:10,744 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:10,745 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:10,745 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:10,746 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:10,747 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:10,747 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:10,764 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:10,764 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:10,765 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:10,765 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:10,766 > 32
[DEBUG|open_api.py:290] 2021-02-09 09:05:11,175 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:11,175 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:11,177 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:11,177 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:11,177 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:11,178 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:11,179 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:11,180 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:11,181 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:11,181 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:11,182 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:11,182 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:11,183 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:11,193 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:11,493 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:11,493 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:11,494 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:11,495 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:11,495 > 33
[DEBUG|open_api.py:290] 2021-02-09 09:05:13,240 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:13,240 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:13,242 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:13,244 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:13,355 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:13,355 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:13,357 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:13,357 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:13,358 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:13,359 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:13,359 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:13,360 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:13,361 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:13,361 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:13,378 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:13,379 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:13,379 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:13,380 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:13,380 > 34
[DEBUG|open_api.py:290] 2021-02-09 09:05:13,856 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:13,856 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:13,858 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:13,858 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:13,858 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:13,859 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:13,859 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:13,860 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:13,861 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:13,861 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:13,862 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:13,862 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:13,863 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:13,871 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:14,171 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:14,171 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:14,172 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:14,173 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:14,173 > 35
[DEBUG|open_api.py:290] 2021-02-09 09:05:15,972 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:15,972 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:15,974 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:15,976 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:16,094 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:16,094 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:16,095 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:16,096 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:16,097 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:16,097 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:16,098 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:16,098 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:16,100 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:16,100 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:16,117 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:16,118 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:16,118 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:16,119 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:16,120 > 36
[DEBUG|open_api.py:290] 2021-02-09 09:05:16,437 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:16,437 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:16,439 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:16,439 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:16,440 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:16,441 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:16,441 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:16,442 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:16,443 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:16,443 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:16,443 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:16,444 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:16,446 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:16,453 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:16,755 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:16,755 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:16,757 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:16,757 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:16,758 > 37
[DEBUG|open_api.py:290] 2021-02-09 09:05:18,630 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:18,630 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:18,632 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:18,634 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:18,766 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:18,766 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:18,768 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:18,768 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:18,769 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:18,770 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:18,771 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:18,772 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:18,774 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:18,774 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:18,794 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:18,794 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:18,794 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:18,795 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:18,795 > 38
[DEBUG|open_api.py:290] 2021-02-09 09:05:18,977 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:18,977 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:18,979 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:18,979 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:18,980 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:18,981 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:18,981 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:18,981 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:18,982 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:18,983 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:18,983 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:18,983 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:18,985 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:18,992 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:19,292 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:19,292 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:19,294 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:19,294 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:19,398 > 39
[DEBUG|open_api.py:290] 2021-02-09 09:05:21,083 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:21,083 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:21,085 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:21,087 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:21,209 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:21,209 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:21,211 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:21,211 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:21,212 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:21,213 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:21,214 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:21,215 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:21,216 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:21,216 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:21,234 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:21,234 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:21,234 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:21,236 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:21,239 > 40
[DEBUG|open_api.py:290] 2021-02-09 09:05:21,816 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:21,816 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:21,818 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:21,819 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:21,820 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:21,821 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:21,823 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:21,824 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:21,826 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:21,827 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:21,829 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:21,830 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:21,833 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:21,842 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:22,143 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:22,143 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:22,144 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:22,145 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:22,145 > 41
[DEBUG|open_api.py:290] 2021-02-09 09:05:24,129 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:24,129 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:24,131 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:24,133 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:24,251 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:24,251 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:24,254 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:24,254 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:24,255 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:24,256 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:24,257 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:24,257 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:24,259 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:24,259 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:24,275 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:24,276 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:24,276 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:24,277 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:24,277 > 42
[DEBUG|open_api.py:290] 2021-02-09 09:05:24,519 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:24,519 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:24,521 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:24,522 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:24,522 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:24,524 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:24,524 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:24,525 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:24,526 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:24,526 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:24,526 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:24,527 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:24,530 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:24,537 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:24,837 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:24,837 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:24,839 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:24,839 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:24,881 > 43
[DEBUG|open_api.py:290] 2021-02-09 09:05:26,756 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:26,756 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:26,758 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:26,759 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:26,881 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:26,881 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:26,883 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:26,884 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:26,885 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:26,886 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:26,886 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:26,887 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:26,889 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:26,889 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:26,907 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:26,907 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:26,907 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:26,908 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:26,908 > 44
[DEBUG|open_api.py:290] 2021-02-09 09:05:27,060 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:27,060 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:27,062 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:27,062 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:27,062 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:27,063 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:27,063 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:27,064 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:27,065 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:27,065 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:27,066 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:27,066 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:27,068 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:27,075 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:27,376 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:27,376 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:27,377 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:27,378 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:27,511 > 45
[DEBUG|open_api.py:290] 2021-02-09 09:05:29,132 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:29,132 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:29,134 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:29,136 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:29,263 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:29,263 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:29,266 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:29,266 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:29,268 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:29,270 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:29,270 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:29,271 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:29,272 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:29,272 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:29,323 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:29,323 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:29,324 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:29,324 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:29,325 > 46
[DEBUG|open_api.py:290] 2021-02-09 09:05:29,726 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:29,726 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:29,728 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:29,728 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:29,728 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:29,729 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:29,729 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:29,730 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:29,746 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:29,746 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:29,747 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:29,747 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:29,751 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:29,761 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:30,062 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:30,062 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:30,063 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:30,064 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:30,064 > 47
[DEBUG|open_api.py:290] 2021-02-09 09:05:31,831 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:31,831 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:31,832 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:31,834 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:31,940 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:31,941 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:31,943 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:31,943 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:31,944 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:31,945 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:31,945 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:31,946 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:31,947 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:31,947 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:31,986 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:31,986 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:31,986 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:31,987 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:31,988 > 48
[DEBUG|open_api.py:290] 2021-02-09 09:05:32,048 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:32,048 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:32,050 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:32,050 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:32,050 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:32,051 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:32,051 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:32,052 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:32,054 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:32,054 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:32,055 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:32,055 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:32,057 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:32,064 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:32,364 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:32,364 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:32,365 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:32,366 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:32,590 > 49
[DEBUG|open_api.py:290] 2021-02-09 09:05:34,539 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:34,539 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:05:34,541 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:05:34,543 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:05:34,654 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:05:34,654 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:05:34,656 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:05:34,657 > []
[DEBUG|trader.py:50] 2021-02-09 09:05:34,658 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:05:34,659 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:05:34,659 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:05:34,660 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:05:34,661 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:05:34,661 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9735.0, 18150.0, 1.82, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2165.0, 18019.0, 1.81, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:05:34,678 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:05:34,678 > []
[DEBUG|open_api.py:976] 2021-02-09 09:05:34,678 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:05:34,678 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:34,679 > 50
[DEBUG|open_api.py:290] 2021-02-09 09:05:35,638 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:05:35,638 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:05:35,640 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:05:35,640 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:05:35,640 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:05:35,641 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:05:35,641 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:05:35,642 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:05:35,643 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:05:35,643 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:05:35,644 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:05:35,644 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:05:35,646 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:05:35,652 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:05:35,952 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:05:35,952 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:05:35,954 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:05:35,954 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:05:35,955 > 51
[DEBUG|trader.py:7] 2021-02-09 09:06:57,029 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:07:00,981 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:07:07,622 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:07:07,622 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:07:07,622 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:07:07,627 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:07:07,627 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:07:07,627 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:07:07,628 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:07:07,643 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:07:07,675 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:07:07,675 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:07:07,675 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:07:07,692 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:07:07,732 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:07:08,033 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:08,038 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:08,040 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:08,040 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:08,041 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:07:09,683 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:09,683 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:09,685 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:09,687 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:09,837 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:09,837 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:09,839 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:09,839 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:09,841 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:09,842 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:09,842 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:09,842 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:09,844 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:09,844 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:09,899 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:09,900 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:09,901 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:09,902 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:09,903 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:07:10,256 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:10,256 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:10,258 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:10,258 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:10,259 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:10,260 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:10,260 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:10,260 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:10,261 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:10,262 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:10,262 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:10,262 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:10,264 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:10,282 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:10,584 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:10,584 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:10,587 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:10,587 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:10,587 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:07:11,709 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:11,709 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:11,711 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:11,712 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:11,831 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:11,831 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:11,833 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:11,833 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:11,834 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:11,834 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:11,835 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:11,835 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:11,837 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:11,837 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:11,857 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:11,857 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:11,857 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:11,858 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:11,858 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:07:12,463 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:12,463 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:12,465 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:12,465 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:12,465 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:12,466 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:12,466 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:12,467 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:12,468 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:12,468 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:12,469 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:12,469 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:12,471 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:12,477 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:12,779 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:12,779 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:12,781 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:12,781 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:12,781 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:07:14,430 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:14,430 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:14,432 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:14,433 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:14,546 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:14,547 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:14,548 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:14,549 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:14,550 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:14,550 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:14,551 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:14,551 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:14,553 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:14,553 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99465.0, -3230.0, -0.65, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:14,569 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:14,570 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:14,570 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:14,571 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:14,572 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:07:15,034 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:15,034 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:15,036 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:15,036 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:15,037 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:15,039 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:15,039 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:15,039 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:15,041 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:15,041 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:15,041 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:15,042 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:15,043 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:15,051 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:15,351 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:15,351 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:15,353 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:15,354 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:15,354 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:07:16,637 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:16,637 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:16,639 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:16,640 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:16,759 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:16,759 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:16,761 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:16,761 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:16,762 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:16,763 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:16,763 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:16,764 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:16,765 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:16,765 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:16,784 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:16,784 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:16,785 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:16,785 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:16,786 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:07:17,539 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:17,539 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:17,540 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:17,541 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:17,541 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:17,542 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:17,542 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:17,542 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:17,544 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:17,544 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:17,544 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:17,545 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:17,546 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:17,554 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:17,855 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:17,855 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:17,857 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:17,857 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:17,857 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:07:19,375 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:19,375 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:19,376 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:19,378 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:19,500 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:19,500 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:19,502 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:19,503 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:19,504 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:19,505 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:19,505 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:19,505 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:19,507 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:19,507 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:19,524 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:19,525 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:19,525 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:19,526 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:19,526 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:07:19,924 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:19,924 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:19,926 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:19,926 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:19,926 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:19,927 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:19,927 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:19,928 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:19,929 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:19,929 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:19,929 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:19,930 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:19,932 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:19,939 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:20,240 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:20,240 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:20,242 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:20,242 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:20,243 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:07:21,376 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:21,376 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:21,378 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:21,380 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:21,506 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:21,506 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:21,508 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:21,509 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:21,510 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:21,511 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:21,511 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:21,511 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:21,513 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:21,513 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:21,529 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:21,530 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:21,530 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:21,531 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:21,531 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:07:21,649 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:21,649 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:21,651 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:21,651 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:21,652 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:21,653 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:21,653 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:21,654 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:21,654 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:21,654 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:21,655 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:21,655 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:21,657 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:21,664 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:21,965 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:21,965 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:21,966 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:21,967 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:22,134 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:07:23,263 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:23,263 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:23,264 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:23,266 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:23,395 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:23,396 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:23,398 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:23,398 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:23,399 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:23,400 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:23,400 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:23,401 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:23,402 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:23,403 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:23,420 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:23,420 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:23,421 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:23,422 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:23,423 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:07:23,726 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:23,726 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:23,728 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:23,728 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:23,728 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:23,729 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:23,729 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:23,730 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:23,752 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:23,752 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:23,753 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:23,754 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:23,755 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:23,762 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:24,062 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:24,062 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:24,063 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:24,064 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:24,064 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:07:26,487 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:26,487 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:26,488 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:26,490 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:26,610 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:26,611 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:26,612 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:26,613 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:26,614 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:26,614 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:26,615 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:26,616 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:26,617 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:26,617 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:26,637 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:26,637 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:26,637 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:26,638 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:26,638 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:07:27,015 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:27,015 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:27,016 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:27,017 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:27,017 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:27,018 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:27,019 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:27,019 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:27,021 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:27,021 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:27,022 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:27,022 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:27,024 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:27,031 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:27,332 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:27,332 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:27,334 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:27,334 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:27,334 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:07:28,992 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:28,992 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:28,994 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:28,996 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:29,115 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:29,116 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:29,118 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:29,118 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:29,130 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:29,131 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:29,131 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:29,131 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:29,132 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:29,132 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:29,151 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:29,152 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:29,153 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:29,155 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:29,156 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:07:29,415 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:29,415 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:29,416 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:29,416 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:29,416 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:29,417 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:29,417 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:29,419 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:29,420 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:29,420 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:29,421 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:29,421 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:29,423 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:29,437 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:29,738 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:29,738 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:29,739 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:29,740 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:29,759 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:07:31,457 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:31,457 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:31,459 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:31,460 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:31,574 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:31,574 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:31,576 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:31,577 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:31,578 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:31,578 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:31,579 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:31,579 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:31,581 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:31,581 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:31,598 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:31,599 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:31,599 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:31,600 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:31,601 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:07:32,330 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:32,330 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:32,332 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:32,332 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:32,332 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:32,334 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:32,335 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:32,336 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:32,348 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:32,349 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:32,350 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:32,350 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:32,356 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:32,365 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:32,665 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:32,665 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:32,666 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:32,667 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:32,667 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:07:34,094 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:34,094 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:34,095 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:34,097 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:34,241 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:34,242 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:34,244 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:34,244 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:34,245 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:34,246 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:34,246 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:34,246 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:34,248 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:34,248 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:34,280 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:34,281 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:34,281 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:34,282 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:34,282 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:07:34,708 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:34,708 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:34,710 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:34,710 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:34,711 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:34,712 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:34,712 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:34,712 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:34,713 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:34,714 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:34,714 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:34,714 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:34,716 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:34,724 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:35,024 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:35,024 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:35,026 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:35,026 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:35,026 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:07:37,717 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:37,717 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:37,719 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:37,721 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:37,841 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:37,841 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:37,843 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:37,844 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:37,845 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:37,846 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:37,846 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:37,847 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:37,848 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:37,848 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:37,864 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:37,864 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:37,865 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:37,865 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:37,866 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:07:38,537 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:38,537 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:38,539 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:38,539 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:38,540 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:38,541 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:38,541 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:38,542 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:38,543 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:38,543 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:38,544 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:38,544 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:38,546 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:38,552 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:38,853 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:38,853 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:38,855 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:38,855 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:38,856 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:07:40,494 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:40,494 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:40,496 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:40,497 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:40,605 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:40,606 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:40,608 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:40,608 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:40,609 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:40,610 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:40,611 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:40,611 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:40,612 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:40,613 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:40,629 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:40,630 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:40,630 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:40,631 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:40,631 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:07:40,808 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:40,808 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:40,810 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:40,810 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:40,810 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:40,811 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:40,812 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:40,812 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:40,813 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:40,813 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:40,814 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:40,814 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:40,816 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:40,824 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:41,124 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:41,124 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:41,125 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:41,125 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:41,233 > 27
[DEBUG|open_api.py:290] 2021-02-09 09:07:43,094 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:43,094 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:43,096 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:43,097 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:43,216 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:43,217 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:43,218 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:43,219 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:43,221 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:43,222 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:43,222 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:43,222 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:43,224 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:43,224 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:43,240 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:43,241 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:43,241 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:43,241 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:43,242 > 28
[DEBUG|open_api.py:290] 2021-02-09 09:07:43,740 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:43,740 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:43,741 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:43,741 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:43,741 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:43,742 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:43,742 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:43,743 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:43,744 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:43,744 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:43,745 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:43,745 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:43,747 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:43,755 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:44,056 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:44,056 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:44,058 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:44,058 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:44,059 > 29
[DEBUG|open_api.py:290] 2021-02-09 09:07:45,812 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:45,812 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:45,814 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:45,815 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:45,927 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:45,927 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:45,928 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:45,928 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:45,929 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:45,930 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:45,930 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:45,931 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:45,932 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:45,932 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:45,950 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:45,951 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:45,951 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:45,952 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:45,953 > 30
[DEBUG|open_api.py:290] 2021-02-09 09:07:46,920 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:46,920 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:46,922 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:46,922 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:46,923 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:46,924 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:46,924 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:46,924 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:46,926 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:46,926 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:46,926 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:46,927 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:46,929 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:46,936 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:47,237 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:47,237 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:47,239 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:47,239 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:47,240 > 31
[DEBUG|open_api.py:290] 2021-02-09 09:07:49,436 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:49,436 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:49,438 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:49,440 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:49,564 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:49,565 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:49,566 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:49,567 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:49,568 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:49,570 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:49,571 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:49,571 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:49,573 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:49,573 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:49,589 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:49,590 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:49,590 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:49,591 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:49,591 > 32
[DEBUG|open_api.py:290] 2021-02-09 09:07:50,406 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:50,406 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:50,408 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:50,408 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:50,408 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:50,408 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:50,408 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:50,409 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:50,410 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:50,410 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:50,410 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:50,411 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:50,412 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:50,419 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:50,721 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:50,721 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:50,723 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:50,723 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:50,724 > 33
[DEBUG|open_api.py:290] 2021-02-09 09:07:52,727 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:52,727 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:52,729 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:52,730 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:52,848 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:52,849 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:52,851 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:52,851 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:52,853 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:52,854 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:52,854 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:52,855 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:52,856 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:52,856 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:52,873 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:52,873 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:52,874 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:52,874 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:52,875 > 34
[DEBUG|open_api.py:290] 2021-02-09 09:07:53,847 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:53,847 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:53,849 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:53,849 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:53,849 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:53,849 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:53,849 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:53,850 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:53,851 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:53,851 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:53,852 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:53,852 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:53,854 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:53,862 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:54,163 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:54,163 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:54,164 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:54,165 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:54,165 > 35
[DEBUG|open_api.py:290] 2021-02-09 09:07:55,769 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:55,769 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:07:55,771 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:07:55,773 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:07:55,885 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:07:55,885 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:07:55,887 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:07:55,887 > []
[DEBUG|trader.py:50] 2021-02-09 09:07:55,888 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:07:55,889 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:07:55,890 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:07:55,890 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:07:55,891 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:07:55,891 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:07:55,909 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:07:55,910 > []
[DEBUG|open_api.py:976] 2021-02-09 09:07:55,910 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:07:55,911 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:55,911 > 36
[DEBUG|open_api.py:290] 2021-02-09 09:07:56,373 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:07:56,373 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:07:56,375 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:07:56,375 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:07:56,376 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:07:56,377 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:07:56,377 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:07:56,377 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:07:56,378 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:07:56,379 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:07:56,379 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:07:56,379 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:07:56,381 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:07:56,388 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:07:56,688 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:07:56,688 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:07:56,690 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:07:56,690 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:07:56,691 > 37
[DEBUG|trader.py:7] 2021-02-09 09:09:22,094 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:09:26,013 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:09:30,990 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:09:30,991 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:09:30,991 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:09:30,991 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:09:30,991 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:09:30,992 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:09:30,992 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:09:31,010 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:09:31,036 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:09:31,037 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:09:31,037 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:09:31,052 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:09:31,092 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:09:31,394 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:31,394 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:31,395 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:31,395 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:31,396 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:09:32,730 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:32,730 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:32,732 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:32,733 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:32,885 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:32,885 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:32,887 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:32,887 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:32,889 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:32,889 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:32,889 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:32,890 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:32,891 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:32,891 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:32,930 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:32,930 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:32,931 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:32,932 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:32,932 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:09:33,141 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:33,141 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:33,143 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:33,143 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:33,143 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:33,144 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:33,144 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:33,145 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:33,146 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:33,146 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:33,146 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:33,147 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:33,148 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:33,162 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:33,463 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:33,463 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:33,464 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:33,464 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:33,535 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:09:34,851 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:34,851 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:34,853 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:34,855 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:34,980 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:34,980 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:34,982 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:34,982 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:34,983 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:34,984 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:34,984 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:34,985 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:34,987 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:34,988 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:35,004 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:35,005 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:35,005 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:35,006 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:35,006 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:09:35,703 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:35,703 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:35,705 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:35,705 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:35,705 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:35,706 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:35,706 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:35,707 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:35,708 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:35,708 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:35,709 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:35,709 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:35,711 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:35,718 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:36,018 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:36,018 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:36,020 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:36,021 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:36,021 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:09:37,883 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:37,883 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:37,884 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:37,886 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:37,997 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:37,997 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:37,998 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:37,999 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:38,000 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:38,001 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:38,001 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:38,001 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:38,002 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:38,002 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:38,021 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:38,021 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:38,022 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:38,022 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:38,023 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:09:38,542 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:38,542 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:38,543 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:38,544 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:38,544 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:38,545 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:38,545 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:38,546 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:38,547 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:38,547 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:38,548 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:38,549 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:38,551 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:38,560 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:38,860 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:38,860 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:38,861 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:38,862 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:38,862 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:09:40,510 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:40,510 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:40,512 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:40,513 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:40,630 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:40,630 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:40,632 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:40,632 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:40,633 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:40,634 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:40,634 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:40,635 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:40,637 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:40,637 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:40,654 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:40,654 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:40,655 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:40,655 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:40,655 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:09:40,962 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:40,962 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:40,964 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:40,964 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:40,964 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:40,965 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:40,965 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:40,966 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:40,967 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:40,967 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:40,968 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:40,970 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:40,974 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:40,982 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:41,283 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:41,283 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:41,285 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:41,285 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:41,286 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:09:42,972 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:42,972 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:42,974 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:42,976 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:43,095 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:43,095 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:43,097 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:43,097 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:43,098 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:43,099 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:43,099 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:43,100 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:43,102 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:43,103 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:43,121 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:43,122 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:43,122 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:43,123 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:43,123 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:09:43,866 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:43,866 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:43,868 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:43,868 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:43,869 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:43,872 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:43,872 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:43,872 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:43,874 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:43,874 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:43,875 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:43,875 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:43,877 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:43,884 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:44,185 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:44,185 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:44,187 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:44,188 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:44,189 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:09:45,961 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:45,961 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:45,963 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:45,964 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:46,080 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:46,080 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:46,082 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:46,082 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:46,083 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:46,084 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:46,085 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:46,087 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:46,089 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:46,089 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:46,107 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:46,107 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:46,108 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:46,108 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:46,108 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:09:46,759 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:46,759 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:46,761 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:46,761 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:46,761 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:46,762 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:46,762 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:46,763 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:46,764 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:46,764 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:46,764 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:46,765 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:46,766 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:46,773 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:47,074 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:47,074 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:47,075 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:47,075 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:47,075 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:09:49,112 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:49,112 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:49,114 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:49,115 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:49,233 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:49,233 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:49,236 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:49,236 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:49,238 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:49,239 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:49,239 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:49,240 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:49,242 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:49,242 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:49,258 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:49,258 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:49,259 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:49,259 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:49,260 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:09:49,607 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:49,607 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:49,609 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:49,609 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:49,609 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:49,610 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:49,610 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:49,611 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:49,612 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:49,612 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:49,613 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:49,613 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:49,615 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:49,621 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:49,921 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:49,921 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:49,922 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:49,923 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:49,923 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:09:51,509 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:51,509 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:51,511 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:51,512 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:51,641 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:51,641 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:51,643 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:51,643 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:51,643 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:51,644 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:51,644 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:51,644 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:51,646 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:51,646 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:51,663 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:51,663 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:51,664 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:51,664 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:51,665 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:09:51,737 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:51,737 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:51,738 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:51,739 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:51,739 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:51,740 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:51,741 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:51,741 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:51,742 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:51,743 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:51,743 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:51,746 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:51,747 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:51,754 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:52,056 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:52,056 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:52,057 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:52,058 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:52,267 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:09:54,014 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:54,014 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:54,015 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:54,017 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:54,134 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:54,134 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:54,137 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:54,138 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:54,139 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:54,140 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:54,140 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:54,141 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:54,142 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:54,143 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:54,159 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:54,159 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:54,159 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:54,160 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:54,160 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:09:54,692 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:54,692 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:54,694 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:54,694 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:54,694 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:54,695 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:54,695 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:54,696 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:54,697 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:54,697 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:54,698 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:54,698 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:54,700 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:54,708 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:55,008 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:55,008 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:55,010 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:55,010 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:55,010 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:09:56,766 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:56,766 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:56,768 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:56,769 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:56,893 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:56,894 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:56,895 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:56,896 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:56,897 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:56,898 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:56,898 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:56,899 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:56,900 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:56,901 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:56,965 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:56,966 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:56,967 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:56,967 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:56,968 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:09:57,542 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:57,542 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:57,544 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:57,544 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:57,544 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:57,545 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:57,546 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:57,546 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:57,559 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:57,559 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:57,560 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:57,560 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:57,564 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:57,573 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:09:57,873 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:09:57,873 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:09:57,875 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:09:57,875 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:57,876 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:09:59,497 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:59,497 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:09:59,499 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:09:59,500 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:09:59,607 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:09:59,607 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:09:59,609 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:09:59,609 > []
[DEBUG|trader.py:50] 2021-02-09 09:09:59,610 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:09:59,611 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:09:59,612 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:09:59,612 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:09:59,614 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:09:59,614 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:09:59,652 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:09:59,652 > []
[DEBUG|open_api.py:976] 2021-02-09 09:09:59,653 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:09:59,653 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:09:59,654 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:09:59,930 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:09:59,930 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:09:59,932 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:09:59,932 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:09:59,932 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:09:59,933 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:09:59,933 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:09:59,934 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:09:59,935 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:09:59,935 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:09:59,936 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:09:59,937 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:09:59,939 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:09:59,947 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:00,248 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:00,248 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:00,249 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:00,250 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:00,256 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:10:01,928 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:01,928 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:01,930 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:01,932 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:02,042 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:02,042 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:02,044 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:02,044 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:02,045 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:02,046 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:02,046 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:02,047 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:02,048 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:02,048 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:02,066 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:02,067 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:02,068 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:02,069 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:02,071 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:10:03,005 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:03,005 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:03,007 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:03,007 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:03,007 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:03,009 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:03,009 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:03,010 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:03,011 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:03,011 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:03,012 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:03,012 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:03,014 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:03,023 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:03,324 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:03,324 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:03,325 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:03,326 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:03,326 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:10:05,188 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:05,188 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:05,189 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:05,191 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:05,310 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:05,311 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:05,313 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:05,313 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:05,314 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:05,315 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:05,315 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:05,316 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:05,317 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:05,317 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:05,334 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:05,334 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:05,335 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:05,336 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:05,337 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:10:05,888 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:05,888 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:05,890 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:05,890 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:05,891 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:05,892 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:05,892 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:05,892 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:05,894 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:05,894 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:05,895 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:05,895 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:05,897 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:05,903 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:06,204 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:06,204 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:06,206 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:06,206 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:06,207 > 27
[DEBUG|open_api.py:290] 2021-02-09 09:10:08,221 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:08,221 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:08,223 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:08,224 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:08,346 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:08,347 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:08,349 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:08,349 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:08,350 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:08,351 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:08,351 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:08,354 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:08,357 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:08,358 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:08,375 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:08,375 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:08,376 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:08,377 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:08,377 > 28
[DEBUG|open_api.py:290] 2021-02-09 09:10:09,232 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:09,232 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:09,234 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:09,234 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:09,235 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:09,236 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:09,236 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:09,237 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:09,238 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:09,239 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:09,239 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:09,239 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:09,242 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:09,249 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:09,550 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:09,550 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:09,550 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:09,551 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:09,552 > 29
[DEBUG|open_api.py:290] 2021-02-09 09:10:11,146 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:11,146 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:11,148 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:11,150 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:11,259 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:11,259 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:11,261 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:11,261 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:11,262 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:11,263 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:11,264 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:11,264 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:11,266 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:11,266 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:11,282 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:11,283 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:11,283 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:11,284 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:11,285 > 30
[DEBUG|open_api.py:290] 2021-02-09 09:10:11,934 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:11,934 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:11,936 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:11,936 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:11,937 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:11,938 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:11,939 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:11,939 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:11,940 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:11,940 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:11,941 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:11,941 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:11,943 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:11,949 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:12,250 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:12,250 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:12,252 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:12,252 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:12,253 > 31
[DEBUG|open_api.py:290] 2021-02-09 09:10:13,924 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:13,924 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:13,925 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:13,927 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:14,037 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:14,038 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:14,040 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:14,041 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:14,042 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:14,043 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:14,043 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:14,044 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:14,045 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:14,046 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:14,062 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:14,063 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:14,063 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:14,064 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:14,064 > 32
[DEBUG|open_api.py:290] 2021-02-09 09:10:14,753 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:14,753 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:14,755 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:14,755 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:14,756 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:14,757 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:14,757 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:14,758 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:14,759 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:14,759 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:14,759 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:14,760 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:14,761 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:14,768 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:15,069 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:15,069 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:15,071 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:15,072 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:15,072 > 33
[DEBUG|open_api.py:290] 2021-02-09 09:10:16,814 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:16,814 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:16,816 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:16,817 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:16,931 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:16,931 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:16,933 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:16,933 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:16,934 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:16,935 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:16,936 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:16,937 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:16,939 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:16,939 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9575.0, 3510.0, 0.35, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:16,956 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:16,956 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:16,957 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:16,957 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:16,958 > 34
[DEBUG|open_api.py:290] 2021-02-09 09:10:17,601 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:17,601 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:17,603 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:17,603 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:17,604 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:17,605 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:17,605 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:17,606 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:17,607 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:17,607 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:17,608 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:17,608 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:17,610 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:17,616 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:17,917 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:17,917 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:17,919 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:17,920 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:17,921 > 35
[DEBUG|open_api.py:290] 2021-02-09 09:10:19,417 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:19,417 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:19,419 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:19,421 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:19,546 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:19,546 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:19,548 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:19,548 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:19,549 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:19,550 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:19,550 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:19,551 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:19,553 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:19,554 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:19,576 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:19,576 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:19,577 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:19,577 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:19,578 > 36
[DEBUG|open_api.py:290] 2021-02-09 09:10:20,162 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:20,162 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:20,164 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:20,164 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:20,164 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:20,165 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:20,165 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:20,165 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:20,166 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:20,166 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:20,167 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:20,168 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:20,170 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:20,177 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:20,477 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:20,477 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:20,479 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:20,479 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:20,479 > 37
[DEBUG|open_api.py:290] 2021-02-09 09:10:21,709 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:21,709 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:21,711 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:21,712 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:21,824 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:21,825 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:21,827 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:21,827 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:21,828 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:21,829 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:21,829 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:21,829 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:21,831 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:21,831 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:21,847 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:21,848 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:21,848 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:21,849 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:21,849 > 38
[DEBUG|open_api.py:290] 2021-02-09 09:10:22,216 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:22,216 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:22,218 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:22,218 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:22,218 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:22,219 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:22,220 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:22,220 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:22,222 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:22,222 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:22,222 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:22,223 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:22,225 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:22,232 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:22,534 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:22,534 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:22,537 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:22,538 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:22,538 > 39
[DEBUG|open_api.py:290] 2021-02-09 09:10:23,561 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:23,561 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:23,563 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:23,564 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:23,676 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:23,676 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:23,678 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:23,678 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:23,690 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:23,692 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:23,692 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:23,692 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:23,694 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:23,694 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:23,713 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:23,714 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:23,714 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:23,715 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:23,715 > 40
[DEBUG|open_api.py:290] 2021-02-09 09:10:24,015 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:24,015 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:24,017 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:24,017 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:24,018 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:24,018 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:24,019 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:24,019 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:24,020 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:24,020 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:24,021 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:24,022 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:24,023 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:24,030 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:24,330 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:24,330 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:24,332 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:24,333 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:24,334 > 41
[DEBUG|open_api.py:290] 2021-02-09 09:10:25,860 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:25,860 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:25,862 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:25,863 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:25,985 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:25,986 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:25,988 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:25,989 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:25,990 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:25,991 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:25,991 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:25,992 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:25,993 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:25,993 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:26,015 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:26,016 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:26,016 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:26,017 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:26,017 > 42
[DEBUG|open_api.py:290] 2021-02-09 09:10:26,378 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:26,378 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:10:26,380 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:10:26,380 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:10:26,381 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:10:26,382 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:10:26,382 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:10:26,383 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:10:26,390 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:10:26,391 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:10:26,391 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:10:26,392 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:10:26,396 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:10:26,404 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:10:26,705 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:10:26,705 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:10:26,707 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:10:26,708 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:26,708 > 43
[DEBUG|open_api.py:290] 2021-02-09 09:10:28,193 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:10:28,193 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:10:28,195 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:10:28,197 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:10:28,324 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:10:28,324 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:10:28,327 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:10:28,327 > []
[DEBUG|trader.py:50] 2021-02-09 09:10:28,329 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:10:28,330 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:10:28,330 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:10:28,331 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:10:28,332 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:10:28,332 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9720.0, 16575.0, 1.66, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2160.0, 15670.0, 1.57, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:10:28,359 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:10:28,359 > []
[DEBUG|open_api.py:976] 2021-02-09 09:10:28,359 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:10:28,360 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:10:28,360 > 44
[DEBUG|trader.py:7] 2021-02-09 09:11:48,303 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:11:52,232 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:11:56,291 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:11:56,291 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:11:56,292 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:11:56,293 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:11:56,293 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:11:56,293 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:11:56,293 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:11:56,308 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:11:56,339 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:11:56,339 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:11:56,340 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:11:56,355 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:11:56,399 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:11:56,701 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:11:56,706 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:11:56,707 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:11:56,707 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:11:56,708 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:11:58,569 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:11:58,569 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:11:58,571 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:11:58,573 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:11:58,732 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:11:58,732 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:11:58,734 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:11:58,734 > []
[DEBUG|trader.py:50] 2021-02-09 09:11:58,736 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:11:58,737 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:11:58,737 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:11:58,738 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:11:58,739 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:11:58,739 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:11:58,770 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:11:58,771 > []
[DEBUG|open_api.py:976] 2021-02-09 09:11:58,771 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:11:58,771 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:11:58,772 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:11:59,537 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:11:59,537 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:11:59,539 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:11:59,539 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:11:59,540 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:11:59,541 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:11:59,541 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:11:59,542 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:11:59,543 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:11:59,543 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:11:59,544 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:11:59,544 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:11:59,546 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:11:59,582 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:11:59,883 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:11:59,883 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:11:59,885 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:11:59,885 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:11:59,887 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:12:01,505 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:01,505 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:01,507 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:01,509 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:01,640 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:01,640 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:01,642 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:01,642 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:01,644 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:01,645 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:01,645 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:01,646 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:01,647 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:01,647 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:01,673 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:01,674 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:01,674 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:01,674 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:01,675 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:12:02,013 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:02,013 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:02,015 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:02,015 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:02,015 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:02,016 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:02,016 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:02,017 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:02,020 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:02,020 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:02,021 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:02,021 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:02,024 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:02,038 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:02,340 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:02,340 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:02,341 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:02,341 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:02,341 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:12:03,669 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:03,669 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:03,671 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:03,673 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:03,795 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:03,795 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:03,797 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:03,798 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:03,799 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:03,800 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:03,800 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:03,801 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:03,802 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:03,802 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:03,819 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:03,819 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:03,820 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:03,821 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:03,821 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:12:04,156 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:04,156 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:04,158 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:04,158 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:04,158 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:04,159 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:04,159 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:04,160 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:04,161 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:04,161 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:04,162 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:04,162 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:04,163 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:04,170 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:04,470 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:04,470 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:04,471 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:04,472 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:04,472 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:12:05,351 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:05,351 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:05,354 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:05,356 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:05,459 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:05,459 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:05,461 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:05,461 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:05,462 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:05,463 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:05,464 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:05,464 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:05,466 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:05,466 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:05,483 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:05,483 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:05,484 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:05,484 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:05,485 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:12:05,623 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:05,623 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:05,624 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:05,625 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:05,625 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:05,626 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:05,626 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:05,627 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:05,628 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:05,628 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:05,628 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:05,629 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:05,639 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:05,646 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:05,947 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:05,947 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:05,948 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:05,949 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:06,089 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:12:06,968 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:06,968 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:06,970 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:06,972 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:07,107 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:07,107 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:07,108 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:07,109 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:07,110 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:07,110 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:07,111 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:07,111 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:07,113 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:07,113 > [('094820', 190.0, 5259.0, 5330.0, 4131.0, 0.41, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:07,129 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:07,130 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:07,130 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:07,131 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:07,131 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:12:07,240 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:07,240 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:07,242 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:07,242 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:07,243 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:07,244 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:07,244 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:07,244 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:07,245 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:07,246 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:07,246 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:07,246 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:07,248 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:07,256 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:07,556 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:07,556 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:07,558 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:07,558 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:07,734 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:12:08,874 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:08,874 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:08,876 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:08,878 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:09,014 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:09,014 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:09,015 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:09,016 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:09,022 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:09,023 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:09,023 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:09,024 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:09,026 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:09,026 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:09,045 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:09,046 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:09,046 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:09,046 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:09,047 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:12:09,104 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:09,104 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:09,106 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:09,106 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:09,107 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:09,108 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:09,108 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:09,108 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:09,109 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:09,110 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:09,110 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:09,111 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:09,112 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:09,126 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:09,426 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:09,426 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:09,427 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:09,428 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:09,649 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:12:10,696 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:10,696 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:10,697 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:10,699 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:10,810 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:10,811 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:10,812 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:10,813 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:10,814 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:10,815 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:10,815 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:10,815 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:10,816 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:10,817 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:10,834 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:10,835 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:10,835 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:10,835 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:10,838 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:12:10,914 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:10,914 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:10,915 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:10,916 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:10,916 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:10,916 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:10,916 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:10,917 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:10,918 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:10,919 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:10,919 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:10,920 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:10,922 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:10,929 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:11,230 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:11,230 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:11,232 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:11,232 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:11,442 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:12:12,707 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:12,707 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:12,708 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:12,709 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:12,829 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:12,830 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:12,831 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:12,832 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:12,833 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:12,834 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:12,834 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:12,835 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:12,836 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:12,837 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:12,854 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:12,855 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:12,855 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:12,856 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:12,856 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:12:13,407 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:13,407 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:13,409 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:13,409 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:13,409 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:13,410 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:13,410 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:13,411 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:13,412 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:13,412 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:13,412 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:13,413 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:13,415 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:13,423 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:13,724 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:13,724 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:13,724 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:13,725 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:13,725 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:12:15,224 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:15,224 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:15,226 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:15,227 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:15,344 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:15,344 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:15,345 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:15,346 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:15,347 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:15,347 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:15,348 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:15,348 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:15,349 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:15,350 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:15,366 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:15,367 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:15,367 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:15,368 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:15,368 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:12:15,731 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:15,731 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:15,733 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:15,733 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:15,734 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:15,735 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:15,735 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:15,736 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:15,739 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:15,739 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:15,740 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:15,740 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:15,742 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:15,748 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:16,049 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:16,049 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:16,050 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:16,051 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:16,052 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:12:17,517 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:17,517 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:17,519 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:17,521 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:17,665 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:17,665 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:17,667 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:17,668 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:17,669 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:17,670 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:17,672 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:17,672 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:17,673 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:17,673 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:17,690 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:17,690 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:17,691 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:17,691 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:17,692 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:12:18,292 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:18,292 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:18,294 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:18,294 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:18,295 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:18,296 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:18,296 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:18,296 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:18,298 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:18,298 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:18,298 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:18,299 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:18,301 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:18,308 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:18,608 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:18,608 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:18,610 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:18,610 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:18,610 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:12:20,326 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:20,326 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:20,328 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:20,329 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:20,437 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:20,437 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:20,439 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:20,439 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:20,441 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:20,442 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:20,442 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:20,442 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:20,444 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:20,444 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:20,463 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:20,463 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:20,463 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:20,463 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:20,464 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:12:21,187 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:21,187 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:21,189 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:21,189 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:21,189 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:21,190 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:21,190 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:21,191 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:21,203 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:21,204 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:21,204 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:21,205 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:21,210 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:21,218 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:21,519 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:21,519 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:21,521 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:21,521 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:21,522 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:12:23,088 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:23,088 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:23,090 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:23,091 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:23,213 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:23,214 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:23,216 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:23,216 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:23,218 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:23,219 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:23,221 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:23,223 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:23,225 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:23,225 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:23,253 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:23,253 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:23,254 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:23,254 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:23,255 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:12:23,595 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:23,595 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:23,597 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:23,597 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:23,598 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:23,599 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:23,600 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:23,600 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:23,603 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:23,604 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:23,605 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:23,606 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:23,608 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:23,616 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:23,917 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:23,917 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:23,919 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:23,920 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:23,920 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:12:25,605 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:25,605 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:12:25,607 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:12:25,608 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:12:25,734 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:12:25,735 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:12:25,737 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:12:25,737 > []
[DEBUG|trader.py:50] 2021-02-09 09:12:25,738 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:12:25,739 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:12:25,739 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:12:25,739 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:12:25,741 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:12:25,741 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:12:25,760 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:12:25,760 > []
[DEBUG|open_api.py:976] 2021-02-09 09:12:25,761 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:12:25,761 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:25,762 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:12:26,381 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:12:26,381 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:12:26,382 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:12:26,383 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:12:26,383 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:12:26,384 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:12:26,384 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:12:26,384 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:12:26,386 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:12:26,387 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:12:26,388 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:12:26,388 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:12:26,390 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:12:26,396 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:12:26,698 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:12:26,698 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:12:26,699 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:12:26,700 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:12:26,701 > 27
[DEBUG|trader.py:7] 2021-02-09 09:14:14,648 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:14:18,606 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:14:25,000 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:14:25,000 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:14:25,001 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:14:25,006 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:14:25,006 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:14:25,006 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:14:25,006 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:14:25,021 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:14:25,052 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:14:25,052 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:14:25,053 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:14:25,069 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:14:25,108 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:14:25,411 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:25,415 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:25,417 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:25,417 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:25,418 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:14:27,239 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:27,239 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:27,241 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:27,242 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:27,393 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:27,393 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:27,395 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:27,395 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:27,396 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:27,397 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:27,397 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:27,397 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:27,400 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:27,400 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:27,438 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:27,438 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:27,439 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:27,439 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:27,440 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:14:27,650 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:27,650 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:27,652 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:27,652 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:27,653 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:27,653 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:27,654 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:27,654 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:27,655 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:27,655 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:27,656 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:27,656 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:27,658 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:27,672 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:27,973 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:27,973 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:27,975 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:27,975 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:28,042 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:14:29,358 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:29,358 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:29,360 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:29,361 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:29,480 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:29,480 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:29,482 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:29,482 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:29,483 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:29,484 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:29,484 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:29,484 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:29,485 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:29,486 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:29,505 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:29,505 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:29,506 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:29,506 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:29,507 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:14:29,715 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:29,715 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:29,717 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:29,717 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:29,717 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:29,718 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:29,719 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:29,719 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:29,721 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:29,721 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:29,721 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:29,722 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:29,730 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:29,739 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:30,040 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:30,040 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:30,043 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:30,043 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:30,109 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:14:31,510 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:31,510 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:31,512 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:31,513 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:31,674 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:31,674 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:31,676 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:31,676 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:31,677 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:31,678 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:31,678 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:31,679 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:31,680 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:31,681 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:31,699 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:31,699 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:31,700 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:31,701 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:31,701 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:14:32,049 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:32,049 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:32,051 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:32,051 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:32,052 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:32,055 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:32,056 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:32,056 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:32,057 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:32,057 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:32,058 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:32,058 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:32,060 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:32,067 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:32,368 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:32,368 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:32,370 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:32,371 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:32,372 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:14:33,664 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:33,664 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:33,665 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:33,667 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:33,792 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:33,793 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:33,793 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:33,793 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:33,802 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:33,803 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:33,803 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:33,804 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:33,805 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:33,806 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:33,823 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:33,824 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:33,824 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:33,825 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:33,825 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:14:34,128 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:34,128 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:34,130 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:34,130 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:34,130 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:34,131 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:34,131 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:34,132 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:34,133 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:34,133 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:34,134 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:34,134 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:34,136 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:34,150 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:34,450 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:34,450 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:34,452 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:34,453 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:34,453 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:14:35,698 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:35,698 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:35,699 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:35,701 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:35,822 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:35,822 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:35,824 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:35,825 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:35,826 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:35,826 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:35,827 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:35,827 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:35,828 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:35,828 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:35,846 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:35,846 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:35,847 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:35,847 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:35,848 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:14:36,172 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:36,172 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:36,174 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:36,175 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:36,175 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:36,177 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:36,177 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:36,177 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:36,178 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:36,179 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:36,179 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:36,180 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:36,181 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:36,189 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:36,491 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:36,491 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:36,493 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:36,493 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:36,494 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:14:37,968 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:37,968 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:37,970 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:37,972 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:38,090 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:38,090 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:38,092 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:38,092 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:38,093 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:38,094 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:38,094 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:38,094 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:38,096 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:38,096 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:38,113 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:38,114 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:38,115 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:38,115 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:38,116 > 12
[DEBUG|open_api.py:290] 2021-02-09 09:14:38,725 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:38,725 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:38,727 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:38,728 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:38,728 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:38,729 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:38,729 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:38,730 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:38,731 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:38,732 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:38,732 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:38,733 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:38,735 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:38,743 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:39,044 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:39,044 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:39,045 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:39,046 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:39,046 > 13
[DEBUG|open_api.py:290] 2021-02-09 09:14:41,012 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:41,012 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:41,013 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:41,015 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:41,126 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:41,127 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:41,129 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:41,129 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:41,131 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:41,131 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:41,132 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:41,132 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:41,134 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:41,134 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:41,152 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:41,153 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:41,154 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:41,155 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:41,155 > 14
[DEBUG|open_api.py:290] 2021-02-09 09:14:41,970 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:41,970 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:41,972 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:41,972 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:41,973 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:41,974 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:41,974 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:41,974 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:41,975 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:41,976 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:41,976 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:41,977 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:41,978 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:41,985 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:42,285 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:42,285 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:42,289 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:42,290 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:42,290 > 15
[DEBUG|open_api.py:290] 2021-02-09 09:14:44,034 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:44,034 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:44,036 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:44,038 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:44,151 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:44,151 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:44,153 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:44,153 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:44,154 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:44,155 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:44,156 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:44,156 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:44,158 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:44,159 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:44,178 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:44,179 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:44,179 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:44,179 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:44,180 > 16
[DEBUG|open_api.py:290] 2021-02-09 09:14:44,360 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:44,360 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:44,362 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:44,362 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:44,362 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:44,364 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:44,364 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:44,365 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:44,367 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:44,367 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:44,368 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:44,369 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:44,371 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:44,378 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:44,678 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:44,678 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:44,680 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:44,680 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:44,783 > 17
[DEBUG|open_api.py:290] 2021-02-09 09:14:46,488 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:46,488 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:46,490 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:46,491 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:46,628 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:46,628 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:46,630 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:46,630 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:46,631 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:46,632 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:46,633 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:46,634 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:46,636 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:46,636 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:46,653 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:46,654 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:46,654 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:46,655 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:46,656 > 18
[DEBUG|open_api.py:290] 2021-02-09 09:14:47,071 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:47,071 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:47,073 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:47,073 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:47,074 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:47,075 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:47,075 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:47,075 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:47,075 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:47,077 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:47,077 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:47,078 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:47,079 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:47,087 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:47,387 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:47,387 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:47,389 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:47,390 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:47,390 > 19
[DEBUG|open_api.py:290] 2021-02-09 09:14:48,974 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:48,974 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:48,976 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:48,977 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:49,094 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:49,094 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:49,095 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:49,095 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:49,097 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:49,097 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:49,098 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:49,098 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:49,099 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:49,100 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:49,117 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:49,117 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:49,118 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:49,119 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:49,120 > 20
[DEBUG|open_api.py:290] 2021-02-09 09:14:49,364 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:49,364 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:49,366 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:49,366 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:49,367 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:49,368 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:49,368 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:49,368 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:49,385 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:49,386 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:49,387 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:49,388 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:49,392 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:49,405 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:49,707 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:49,707 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:49,709 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:49,709 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:49,723 > 21
[DEBUG|open_api.py:290] 2021-02-09 09:14:51,299 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:51,299 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:51,301 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:51,303 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:51,447 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:51,447 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:51,449 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:51,450 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:51,451 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:51,452 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:51,452 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:51,454 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:51,455 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:51,455 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:51,482 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:51,482 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:51,483 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:51,484 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:51,484 > 22
[DEBUG|open_api.py:290] 2021-02-09 09:14:51,968 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:51,968 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:51,970 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:51,970 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:51,971 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:51,972 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:51,973 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:51,973 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:51,974 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:51,974 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:51,974 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:51,974 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:51,976 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:51,984 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:52,285 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:52,285 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:52,287 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:52,287 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:52,288 > 23
[DEBUG|open_api.py:290] 2021-02-09 09:14:54,148 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:54,148 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:54,150 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:54,152 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:54,272 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:54,272 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:54,274 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:54,274 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:54,276 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:54,277 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:54,277 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:54,278 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:54,279 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:54,279 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9740.0, 18675.0, 1.87, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:54,296 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:54,296 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:54,296 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:54,297 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:54,298 > 24
[DEBUG|open_api.py:290] 2021-02-09 09:14:54,838 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:54,838 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:54,840 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:54,840 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:54,841 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:54,841 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:54,842 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:54,842 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:54,843 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:54,843 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:54,844 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:54,844 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:54,846 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:54,853 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:55,153 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:55,153 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:55,155 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:55,155 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:55,156 > 25
[DEBUG|open_api.py:290] 2021-02-09 09:14:58,146 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:58,146 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:14:58,148 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:14:58,149 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:14:58,267 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:14:58,267 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:14:58,269 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:14:58,270 > []
[DEBUG|trader.py:50] 2021-02-09 09:14:58,271 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:14:58,272 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:14:58,273 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:14:58,273 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:14:58,275 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:14:58,275 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:14:58,297 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:14:58,297 > []
[DEBUG|open_api.py:976] 2021-02-09 09:14:58,297 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:14:58,298 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:58,298 > 26
[DEBUG|open_api.py:290] 2021-02-09 09:14:59,520 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:14:59,520 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:14:59,522 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:14:59,522 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:14:59,522 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:14:59,523 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:14:59,523 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:14:59,524 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:14:59,525 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:14:59,525 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:14:59,526 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:14:59,526 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:14:59,528 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:14:59,534 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:14:59,835 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:14:59,835 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:14:59,842 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:14:59,843 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:14:59,843 > 27
[DEBUG|open_api.py:290] 2021-02-09 09:15:01,647 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:01,647 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:01,649 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:01,651 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:01,765 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:01,765 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:01,767 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:01,767 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:01,768 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:01,769 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:01,769 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:01,770 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:01,771 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:01,771 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:01,788 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:01,789 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:01,789 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:01,789 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:01,790 > 28
[DEBUG|open_api.py:290] 2021-02-09 09:15:02,412 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:02,412 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:02,414 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:02,414 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:02,414 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:02,415 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:02,415 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:02,416 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:02,417 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:02,417 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:02,418 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:02,418 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:02,421 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:02,429 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:02,729 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:02,729 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:02,730 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:02,731 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:02,731 > 29
[DEBUG|open_api.py:290] 2021-02-09 09:15:04,226 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:04,226 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:04,228 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:04,229 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:04,347 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:04,347 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:04,349 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:04,349 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:04,350 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:04,351 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:04,351 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:04,352 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:04,353 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:04,354 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:04,370 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:04,371 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:04,371 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:04,371 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:04,372 > 30
[DEBUG|open_api.py:290] 2021-02-09 09:15:04,948 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:04,948 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:04,950 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:04,950 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:04,950 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:04,950 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:04,951 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:04,952 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:04,953 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:04,953 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:04,954 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:04,954 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:04,956 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:04,963 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:05,264 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:05,264 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:05,265 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:05,266 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:05,266 > 31
[DEBUG|open_api.py:290] 2021-02-09 09:15:07,066 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:07,066 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:07,068 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:07,070 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:07,183 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:07,183 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:07,185 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:07,185 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:07,187 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:07,188 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:07,188 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:07,189 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:07,190 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:07,191 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:07,206 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:07,207 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:07,207 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:07,208 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:07,208 > 32
[DEBUG|open_api.py:290] 2021-02-09 09:15:07,629 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:07,629 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:07,631 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:07,631 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:07,631 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:07,632 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:07,632 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:07,633 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:07,634 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:07,634 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:07,635 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:07,636 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:07,639 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:07,645 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:07,947 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:07,947 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:07,948 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:07,948 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:07,948 > 33
[DEBUG|open_api.py:290] 2021-02-09 09:15:09,304 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:09,304 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:09,307 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:09,309 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:09,426 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:09,427 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:09,428 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:09,429 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:09,431 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:09,432 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:09,432 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:09,433 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:09,434 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:09,434 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:09,451 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:09,451 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:09,452 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:09,453 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:09,454 > 34
[DEBUG|open_api.py:290] 2021-02-09 09:15:09,889 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:09,889 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:09,890 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:09,891 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:09,891 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:09,892 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:09,892 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:09,893 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:09,894 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:09,894 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:09,894 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:09,895 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:09,904 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:09,912 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:10,213 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:10,213 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:10,214 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:10,215 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:10,215 > 35
[DEBUG|open_api.py:290] 2021-02-09 09:15:11,426 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:11,426 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:11,428 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:11,430 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:11,543 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:11,543 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:11,545 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:11,546 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:11,547 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:11,549 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:11,549 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:11,550 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:11,552 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:11,552 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:11,569 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:11,570 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:11,572 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:11,574 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:11,574 > 36
[DEBUG|open_api.py:290] 2021-02-09 09:15:11,761 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:11,761 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:11,762 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:11,763 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:11,763 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:11,764 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:11,764 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:11,765 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:11,786 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:11,787 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:11,788 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:11,788 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:11,793 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:11,800 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:12,101 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:12,101 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:12,103 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:12,103 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:12,176 > 37
[DEBUG|open_api.py:290] 2021-02-09 09:15:13,558 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:13,558 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:13,560 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:13,562 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:13,672 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:13,673 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:13,674 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:13,675 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:13,676 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:13,676 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:13,677 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:13,677 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:13,679 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:13,679 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:13,696 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:13,697 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:13,697 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:13,698 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:13,698 > 38
[DEBUG|open_api.py:290] 2021-02-09 09:15:13,991 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:13,991 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:13,993 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:13,993 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:13,993 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:13,994 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:13,994 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:13,995 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:13,996 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:13,996 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:13,997 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:13,997 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:13,999 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:14,005 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:14,306 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:14,306 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:14,308 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:14,308 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:14,308 > 39
[DEBUG|open_api.py:290] 2021-02-09 09:15:15,968 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:15,968 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:15:15,970 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:15:15,972 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:15:16,106 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:15:16,106 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:15:16,108 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:15:16,108 > []
[DEBUG|trader.py:50] 2021-02-09 09:15:16,111 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:15:16,112 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:15:16,112 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:15:16,113 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:15:16,114 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:15:16,114 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9580.0, 4025.0, 0.4, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:15:16,164 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:15:16,165 > []
[DEBUG|open_api.py:976] 2021-02-09 09:15:16,165 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:15:16,166 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:16,166 > 40
[DEBUG|open_api.py:290] 2021-02-09 09:15:16,787 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:15:16,787 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:15:16,789 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:15:16,789 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:15:16,790 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:15:16,791 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:15:16,791 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:15:16,791 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:15:16,804 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:15:16,804 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:15:16,805 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:15:16,805 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:15:16,809 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:15:16,816 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:15:17,118 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:15:17,118 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:15:17,120 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:15:17,121 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:15:17,121 > 41
[DEBUG|trader.py:7] 2021-02-09 09:16:40,177 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-09 09:16:44,120 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-09 09:16:49,032 > connected
[DEBUG|open_api.py:244] 2021-02-09 09:16:49,032 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 09:16:49,032 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 09:16:49,039 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 09:16:49,039 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 09:16:49,039 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 09:16:49,039 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 09:16:49,051 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 09:16:49,089 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 09:16:49,090 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 09:16:49,090 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 09:16:49,104 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 09:16:49,130 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-09 09:16:49,432 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:16:49,437 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:16:49,439 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:16:49,439 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:49,441 > 1
[DEBUG|open_api.py:290] 2021-02-09 09:16:50,874 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:50,874 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:16:50,876 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:16:50,877 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:16:51,025 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:16:51,025 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:16:51,027 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:16:51,027 > []
[DEBUG|trader.py:50] 2021-02-09 09:16:51,028 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:16:51,029 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:16:51,029 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:16:51,030 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:16:51,031 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:16:51,031 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:16:51,078 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:16:51,079 > []
[DEBUG|open_api.py:976] 2021-02-09 09:16:51,079 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:16:51,079 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:51,080 > 2
[DEBUG|open_api.py:290] 2021-02-09 09:16:51,693 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:51,693 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:16:51,694 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:16:51,695 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:16:51,695 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:16:51,696 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:16:51,696 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:16:51,697 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:16:51,698 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:16:51,698 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:16:51,698 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:16:51,699 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:16:51,701 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:16:51,710 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:16:52,011 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:16:52,011 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:16:52,012 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:16:52,013 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:52,013 > 3
[DEBUG|open_api.py:290] 2021-02-09 09:16:53,691 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:53,691 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:16:53,693 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:16:53,694 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:16:53,812 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:16:53,812 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:16:53,814 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:16:53,814 > []
[DEBUG|trader.py:50] 2021-02-09 09:16:53,827 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:16:53,828 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:16:53,828 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:16:53,828 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:16:53,830 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:16:53,830 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:16:53,881 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:16:53,881 > []
[DEBUG|open_api.py:976] 2021-02-09 09:16:53,882 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:16:53,882 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:53,883 > 4
[DEBUG|open_api.py:290] 2021-02-09 09:16:54,563 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:54,563 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:16:54,565 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:16:54,565 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:16:54,565 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:16:54,566 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:16:54,566 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:16:54,567 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:16:54,574 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:16:54,574 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:16:54,575 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:16:54,575 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:16:54,581 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:16:54,588 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:16:54,890 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:16:54,890 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:16:54,891 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:16:54,892 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:54,893 > 5
[DEBUG|open_api.py:290] 2021-02-09 09:16:56,455 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:56,455 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:16:56,457 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:16:56,459 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:16:56,586 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:16:56,586 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:16:56,589 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:16:56,589 > []
[DEBUG|trader.py:50] 2021-02-09 09:16:56,591 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:16:56,592 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:16:56,592 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:16:56,593 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:16:56,594 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:16:56,595 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:16:56,629 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:16:56,630 > []
[DEBUG|open_api.py:976] 2021-02-09 09:16:56,631 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:16:56,631 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:56,632 > 6
[DEBUG|open_api.py:290] 2021-02-09 09:16:57,124 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:57,124 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:16:57,126 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:16:57,126 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:16:57,126 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:16:57,127 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:16:57,127 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:16:57,128 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:16:57,129 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:16:57,129 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:16:57,130 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:16:57,130 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:16:57,132 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:16:57,139 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:16:57,440 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:16:57,440 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:16:57,443 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:16:57,444 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:57,445 > 7
[DEBUG|open_api.py:290] 2021-02-09 09:16:58,698 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:58,698 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:16:58,700 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:16:58,701 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:16:58,817 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:16:58,817 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:16:58,819 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:16:58,820 > []
[DEBUG|trader.py:50] 2021-02-09 09:16:58,821 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:16:58,822 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:16:58,823 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:16:58,823 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:16:58,825 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:16:58,825 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:16:58,843 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:16:58,844 > []
[DEBUG|open_api.py:976] 2021-02-09 09:16:58,844 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:16:58,844 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:58,845 > 8
[DEBUG|open_api.py:290] 2021-02-09 09:16:59,108 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:16:59,108 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:16:59,110 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:16:59,110 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:16:59,110 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:16:59,111 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:16:59,112 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:16:59,112 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:16:59,113 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:16:59,113 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:16:59,114 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:16:59,114 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:16:59,116 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:16:59,123 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:16:59,424 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:16:59,424 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:16:59,426 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:16:59,426 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:16:59,447 > 9
[DEBUG|open_api.py:290] 2021-02-09 09:17:01,522 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:17:01,522 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:17:01,524 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:17:01,525 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 09:17:01,645 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 09:17:01,645 > []
[DEBUG|open_api.py:1133] 2021-02-09 09:17:01,647 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-09 09:17:01,647 > []
[DEBUG|trader.py:50] 2021-02-09 09:17:01,650 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-09 09:17:01,651 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-09 09:17:01,651 > []
[DEBUG|open_api.py:1147] 2021-02-09 09:17:01,653 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-09 09:17:01,656 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-09 09:17:01,657 > [('094820', 190.0, 5259.0, 5340.0, 6017.0, 0.6, 999270.0), ('261110', 111.0, 8960.0, 9150.0, 14060.0, 1.41, 994560.0), ('276970', 105.0, 9495.0, 9745.0, 19190.0, 1.92, 996975.0), ('282000', 5.0, 99417.0, 99410.0, -3495.0, -0.7, 497085.0), ('329750', 105.0, 9475.0, 9585.0, 4550.0, 0.46, 994875.0), ('353490', 473.0, 2107.0, 2140.0, 6261.0, 0.63, 997025.0)]
[DEBUG|trader.py:59] 2021-02-09 09:17:01,673 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-09 09:17:01,673 > []
[DEBUG|open_api.py:976] 2021-02-09 09:17:01,674 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-09 09:17:01,674 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:17:01,675 > 10
[DEBUG|open_api.py:290] 2021-02-09 09:17:02,180 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:17:02,180 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 09:17:02,182 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 09:17:02,182 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 09:17:02,183 > 000000495404194
[DEBUG|open_api.py:984] 2021-02-09 09:17:02,184 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-09 09:17:02,184 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-09 09:17:02,184 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-09 09:17:02,186 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-09 09:17:02,187 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-09 09:17:02,189 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-09 09:17:02,189 > self.today : 20210209 , self.date_rows_yesterday : 20210208 !
[DEBUG|open_api.py:1064] 2021-02-09 09:17:02,192 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-09 09:17:02,198 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-09 09:17:02,499 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-09 09:17:02,499 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-09 09:17:02,501 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-09 09:17:02,502 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 09:17:02,503 > 11
[DEBUG|open_api.py:290] 2021-02-09 09:17:04,180 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 09:17:04,180 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 09:17:04,182 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 09:17:04,184 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:303] 2021-02-09 15:32:16,678 > connected
[DEBUG|open_api.py:244] 2021-02-09 15:32:16,678 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 15:32:16,678 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 15:32:16,679 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 15:32:16,680 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 15:32:16,680 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 15:32:16,680 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 15:32:16,701 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 15:32:16,740 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 15:32:16,740 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 15:32:16,740 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 15:32:16,761 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 15:32:16,807 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 15:32:21,807 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:531] 2021-02-09 15:32:21,808 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:21,808 > 1
[DEBUG|open_api.py:290] 2021-02-09 15:32:22,682 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:22,682 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 15:32:22,684 > _opw00018!!!
[DEBUG|collector_api.py:259] 2021-02-09 15:32:30,171 > get_code_list
[DEBUG|collector_api.py:924] 2021-02-09 15:32:31,594 > py_check_balance!!!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:31,595 > 2
[DEBUG|open_api.py:290] 2021-02-09 15:32:31,655 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:31,655 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 15:32:31,658 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 15:32:31,658 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 15:32:31,659 > 000000495404194
[DEBUG|open_api.py:1124] 2021-02-09 15:32:32,199 > 3
[DEBUG|open_api.py:290] 2021-02-09 15:32:32,615 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:32,615 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 15:32:32,617 > _opw00018!!!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:32,801 > 4
[DEBUG|open_api.py:290] 2021-02-09 15:32:32,833 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:32,833 >  조회가 완료되었습니다.
[DEBUG|open_api.py:1486] 2021-02-09 15:32:32,834 > _opt10074!!!
[DEBUG|open_api.py:1495] 2021-02-09 15:32:32,835 > today_profit
[DEBUG|open_api.py:1496] 2021-02-09 15:32:32,835 > 0
[DEBUG|collector_api.py:692] 2021-02-09 15:32:32,850 > self.open_api.today!!!!!!!!
[DEBUG|collector_api.py:693] 2021-02-09 15:32:32,850 > 20210209
[DEBUG|collector_api.py:723] 2021-02-09 15:32:32,895 > today_profit_list total_profitcut 이 비었다!!!! 
[DEBUG|collector_api.py:731] 2021-02-09 15:32:32,896 > today_profit_list total_losscut 이 비었다!!!! 
[DEBUG|collector_api.py:750] 2021-02-09 15:32:32,944 > jango_data rows!!!
[DEBUG|collector_api.py
[DEBUG|collector_api.py:753] 2021-02-09 15:32:32,945 > jango_data len(rows)!!!
[DEBUG|collector_api.py:755] 2021-02-09 15:32:32,946 > 38
[DEBUG|open_api.py:1458] 2021-02-09 15:32:33,788 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:33,789 > 5
[DEBUG|open_api.py:290] 2021-02-09 15:32:33,844 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:33,844 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-09 15:32:33,846 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-09 15:32:33,847 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-09 15:32:33,849 > 000000495404194
[DEBUG|open_api.py:531] 2021-02-09 15:32:33,850 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:34,392 > 6
[DEBUG|open_api.py:290] 2021-02-09 15:32:34,440 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:34,440 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-09 15:32:34,442 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-09 15:32:34,444 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-09 15:32:34,572 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-09 15:32:34,572 > []
[DEBUG|collector_api.py:588] 2021-02-09 15:32:34,578 > db_to_today_profit_list!!!
[DEBUG|open_api.py:1691] 2021-02-09 15:32:34,578 > reset_opt10073_output!!!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:34,994 > 7
[DEBUG|open_api.py:290] 2021-02-09 15:32:35,033 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-09 15:32:35,033 >  조회가 완료되었습니다.
[DEBUG|open_api.py:1588] 2021-02-09 15:32:35,034 > _opt10073!!!
[DEBUG|open_api.py:1609] 2021-02-09 15:32:35,034 > _opt10073 end!!!
[DEBUG|collector_api.py:606] 2021-02-09 15:32:35,035 > self.opt10073_output['multi']!!!!!
[DEBUG|collector_api.py:607] 2021-02-09 15:32:35,035 > []
[DEBUG|collector_api.py:629] 2021-02-09 15:32:35,038 > today_profit_item!!!
[DEBUG|collector_api.py:630] 2021-02-09 15:32:35,038 > Empty DataFrame
Columns: [date, code, code_name, amount, today_profit, earning_rate]
Index: []
[DEBUG|collector_api.py:180] 2021-02-09 15:32:35,048 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 15:32:35,079 > ++++++++++++++DSR++++++++++++++++++++1/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:35,079 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:35,612 > 8
[DEBUG|collector_api.py:200] 2021-02-09 15:32:35,933 > ++++++++++++++GS글로벌++++++++++++++++++++2/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:35,933 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:36,228 > 9
[DEBUG|collector_api.py:200] 2021-02-09 15:32:36,497 > ++++++++++++++HDC현대산업개발++++++++++++++++++++3/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:36,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:36,835 > 10
[DEBUG|collector_api.py:200] 2021-02-09 15:32:37,067 > ++++++++++++++KG케미칼++++++++++++++++++++4/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:37,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:37,441 > 11
[DEBUG|collector_api.py:200] 2021-02-09 15:32:37,693 > ++++++++++++++LG이노텍++++++++++++++++++++5/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:37,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:38,048 > 12
[DEBUG|collector_api.py:200] 2021-02-09 15:32:38,273 > ++++++++++++++LG전자++++++++++++++++++++6/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:38,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:38,655 > 13
[DEBUG|collector_api.py:200] 2021-02-09 15:32:38,922 > ++++++++++++++LG헬로비전++++++++++++++++++++7/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:38,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:39,262 > 14
[DEBUG|collector_api.py:200] 2021-02-09 15:32:39,498 > ++++++++++++++OCI++++++++++++++++++++8/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:39,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:39,870 > 15
[DEBUG|collector_api.py:200] 2021-02-09 15:32:40,125 > ++++++++++++++S&TC++++++++++++++++++++9/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:40,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:40,478 > 16
[DEBUG|collector_api.py:200] 2021-02-09 15:32:40,731 > ++++++++++++++S&T모티브++++++++++++++++++++10/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:40,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:41,085 > 17
[DEBUG|collector_api.py:200] 2021-02-09 15:32:41,325 > ++++++++++++++SK이노베이션++++++++++++++++++++11/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:41,325 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:41,692 > 18
[DEBUG|collector_api.py:200] 2021-02-09 15:32:41,936 > ++++++++++++++STX++++++++++++++++++++12/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:41,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:42,298 > 19
[DEBUG|collector_api.py:200] 2021-02-09 15:32:42,539 > ++++++++++++++YG PLUS++++++++++++++++++++13/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:42,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:42,905 > 20
[DEBUG|collector_api.py:200] 2021-02-09 15:32:43,132 > ++++++++++++++갤럭시아에스엠++++++++++++++++++++14/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:43,132 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:43,513 > 21
[DEBUG|collector_api.py:200] 2021-02-09 15:32:43,757 > ++++++++++++++고려아연++++++++++++++++++++15/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:43,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:44,119 > 22
[DEBUG|collector_api.py:200] 2021-02-09 15:32:44,390 > ++++++++++++++극동유화++++++++++++++++++++16/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:44,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:44,726 > 23
[DEBUG|collector_api.py:200] 2021-02-09 15:32:44,992 > ++++++++++++++까뮤이앤씨++++++++++++++++++++17/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:44,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:45,334 > 24
[DEBUG|collector_api.py:200] 2021-02-09 15:32:45,613 > ++++++++++++++남선알미늄++++++++++++++++++++18/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:45,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:45,941 > 25
[DEBUG|collector_api.py:200] 2021-02-09 15:32:46,193 > ++++++++++++++대덕전자++++++++++++++++++++19/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:46,193 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:46,548 > 26
[DEBUG|collector_api.py:200] 2021-02-09 15:32:46,730 > ++++++++++++++대영포장++++++++++++++++++++20/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:46,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:47,156 > 27
[DEBUG|collector_api.py:200] 2021-02-09 15:32:47,412 > ++++++++++++++대웅++++++++++++++++++++21/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:47,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:47,765 > 28
[DEBUG|collector_api.py:200] 2021-02-09 15:32:48,026 > ++++++++++++++대한유화++++++++++++++++++++22/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:48,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:48,372 > 29
[DEBUG|collector_api.py:200] 2021-02-09 15:32:48,620 > ++++++++++++++두산++++++++++++++++++++23/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:48,621 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:48,978 > 30
[DEBUG|collector_api.py:200] 2021-02-09 15:32:49,233 > ++++++++++++++두산밥캣++++++++++++++++++++24/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:49,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:49,586 > 31
[DEBUG|collector_api.py:200] 2021-02-09 15:32:49,851 > ++++++++++++++락앤락++++++++++++++++++++25/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:49,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:50,193 > 32
[DEBUG|collector_api.py:200] 2021-02-09 15:32:50,425 > ++++++++++++++롯데정보통신++++++++++++++++++++26/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:50,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:50,801 > 33
[DEBUG|collector_api.py:200] 2021-02-09 15:32:51,037 > ++++++++++++++마니커++++++++++++++++++++27/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:51,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:51,408 > 34
[DEBUG|collector_api.py:200] 2021-02-09 15:32:51,642 > ++++++++++++++만도++++++++++++++++++++28/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:51,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:52,015 > 35
[DEBUG|collector_api.py:200] 2021-02-09 15:32:52,242 > ++++++++++++++메리츠증권++++++++++++++++++++29/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:52,243 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:52,623 > 36
[DEBUG|collector_api.py:200] 2021-02-09 15:32:52,877 > ++++++++++++++모두투어리츠++++++++++++++++++++30/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:52,878 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:53,230 > 37
[DEBUG|collector_api.py:200] 2021-02-09 15:32:53,465 > ++++++++++++++부국증권++++++++++++++++++++31/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:53,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:53,838 > 38
[DEBUG|collector_api.py:200] 2021-02-09 15:32:54,104 > ++++++++++++++삼성SDI++++++++++++++++++++32/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:54,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:54,445 > 39
[DEBUG|collector_api.py:200] 2021-02-09 15:32:54,720 > ++++++++++++++삼성엔지니어링++++++++++++++++++++33/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:54,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:55,052 > 40
[DEBUG|collector_api.py:200] 2021-02-09 15:32:55,296 > ++++++++++++++삼성중공업++++++++++++++++++++34/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:55,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:55,659 > 41
[DEBUG|collector_api.py:200] 2021-02-09 15:32:55,921 > ++++++++++++++삼성출판사++++++++++++++++++++35/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:55,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:56,267 > 42
[DEBUG|collector_api.py:200] 2021-02-09 15:32:56,519 > ++++++++++++++삼성화재++++++++++++++++++++36/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:56,520 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:56,874 > 43
[DEBUG|collector_api.py:200] 2021-02-09 15:32:57,123 > ++++++++++++++삼양홀딩스++++++++++++++++++++37/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:57,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:57,483 > 44
[DEBUG|collector_api.py:200] 2021-02-09 15:32:57,764 > ++++++++++++++삼영전자++++++++++++++++++++38/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:57,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:58,089 > 45
[DEBUG|collector_api.py:200] 2021-02-09 15:32:58,348 > ++++++++++++++삼영화학++++++++++++++++++++39/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:58,348 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:58,696 > 46
[DEBUG|collector_api.py:200] 2021-02-09 15:32:58,959 > ++++++++++++++상상인증권++++++++++++++++++++40/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:58,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:59,304 > 47
[DEBUG|collector_api.py:200] 2021-02-09 15:32:59,570 > ++++++++++++++선도전기++++++++++++++++++++41/2894
[DEBUG|open_api.py:656] 2021-02-09 15:32:59,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:32:59,910 > 48
[DEBUG|collector_api.py:200] 2021-02-09 15:33:00,170 > ++++++++++++++선진++++++++++++++++++++42/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:00,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:00,518 > 49
[DEBUG|collector_api.py:200] 2021-02-09 15:33:00,763 > ++++++++++++++세방전지++++++++++++++++++++43/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:00,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:01,124 > 50
[DEBUG|collector_api.py:200] 2021-02-09 15:33:01,374 > ++++++++++++++신한알파리츠++++++++++++++++++++44/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:01,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:01,733 > 51
[DEBUG|collector_api.py:200] 2021-02-09 15:33:01,975 > ++++++++++++++신한지주++++++++++++++++++++45/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:01,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:02,339 > 52
[DEBUG|collector_api.py:200] 2021-02-09 15:33:02,568 > ++++++++++++++쌍용차++++++++++++++++++++46/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:02,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:02,947 > 53
[DEBUG|collector_api.py:200] 2021-02-09 15:33:03,197 > ++++++++++++++에넥스++++++++++++++++++++47/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:03,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:03,554 > 54
[DEBUG|collector_api.py:200] 2021-02-09 15:33:03,809 > ++++++++++++++영화금속++++++++++++++++++++48/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:03,809 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:04,161 > 55
[DEBUG|collector_api.py:200] 2021-02-09 15:33:04,454 > ++++++++++++++윌비스++++++++++++++++++++49/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:04,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:04,768 > 56
[DEBUG|collector_api.py:200] 2021-02-09 15:33:05,022 > ++++++++++++++유나이티드제약++++++++++++++++++++50/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:05,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:05,376 > 57
[DEBUG|collector_api.py:200] 2021-02-09 15:33:05,631 > ++++++++++++++인지컨트롤스++++++++++++++++++++51/2894
[DEBUG|open_api.py:656] 2021-02-09 15:33:05,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:33:05,983 > 58
[DEBUG|open_api.py:303] 2021-02-09 15:37:15,502 > connected
[DEBUG|open_api.py:244] 2021-02-09 15:37:15,503 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 15:37:15,503 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 15:37:15,509 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 15:37:15,509 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 15:37:15,509 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 15:37:15,510 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 15:37:15,523 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 15:37:15,553 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 15:37:15,553 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 15:37:15,553 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 15:37:15,568 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 15:37:15,599 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 15:37:18,645 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 15:37:18,646 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 15:37:18,691 > ++++++++++++++인지컨트롤스++++++++++++++++++++51/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:18,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:18,692 > 1
[DEBUG|collector_api.py:200] 2021-02-09 15:37:19,788 > ++++++++++++++인터지스++++++++++++++++++++52/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:19,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:19,789 > 2
[DEBUG|collector_api.py:200] 2021-02-09 15:37:20,007 > ++++++++++++++일성건설++++++++++++++++++++53/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:20,007 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:20,396 > 3
[DEBUG|collector_api.py:200] 2021-02-09 15:37:20,660 > ++++++++++++++일진다이아++++++++++++++++++++54/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:20,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:21,003 > 4
[DEBUG|collector_api.py:200] 2021-02-09 15:37:21,244 > ++++++++++++++제일약품++++++++++++++++++++55/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:21,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:21,610 > 5
[DEBUG|collector_api.py:200] 2021-02-09 15:37:21,843 > ++++++++++++++제일연마++++++++++++++++++++56/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:21,843 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:22,218 > 6
[DEBUG|collector_api.py:200] 2021-02-09 15:37:22,444 > ++++++++++++++제일파마홀딩스++++++++++++++++++++57/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:22,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:22,825 > 7
[DEBUG|collector_api.py:200] 2021-02-09 15:37:23,074 > ++++++++++++++조흥++++++++++++++++++++58/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:23,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:23,433 > 8
[DEBUG|collector_api.py:200] 2021-02-09 15:37:23,689 > ++++++++++++++지역난방공사++++++++++++++++++++59/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:23,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:24,040 > 9
[DEBUG|collector_api.py:200] 2021-02-09 15:37:24,275 > ++++++++++++++진도++++++++++++++++++++60/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:24,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:24,647 > 10
[DEBUG|collector_api.py:200] 2021-02-09 15:37:24,882 > ++++++++++++++코오롱인더++++++++++++++++++++61/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:24,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:25,254 > 11
[DEBUG|collector_api.py:200] 2021-02-09 15:37:25,503 > ++++++++++++++키다리스튜디오++++++++++++++++++++62/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:25,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:25,861 > 12
[DEBUG|collector_api.py:200] 2021-02-09 15:37:26,117 > ++++++++++++++태경산업++++++++++++++++++++63/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:26,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:26,469 > 13
[DEBUG|collector_api.py:200] 2021-02-09 15:37:26,705 > ++++++++++++++태양금속++++++++++++++++++++64/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:26,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:27,075 > 14
[DEBUG|collector_api.py:200] 2021-02-09 15:37:27,328 > ++++++++++++++포스코강판++++++++++++++++++++65/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:27,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:27,683 > 15
[DEBUG|collector_api.py:200] 2021-02-09 15:37:27,943 > ++++++++++++++필룩스++++++++++++++++++++66/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:27,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:28,291 > 16
[DEBUG|collector_api.py:200] 2021-02-09 15:37:28,539 > ++++++++++++++한국공항++++++++++++++++++++67/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:28,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:28,897 > 17
[DEBUG|collector_api.py:200] 2021-02-09 15:37:29,161 > ++++++++++++++한국종합기술++++++++++++++++++++68/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:29,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:29,504 > 18
[DEBUG|collector_api.py:200] 2021-02-09 15:37:29,744 > ++++++++++++++한국패러랠++++++++++++++++++++69/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:29,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:30,111 > 19
[DEBUG|collector_api.py:200] 2021-02-09 15:37:30,328 > ++++++++++++++한솔로지스틱스++++++++++++++++++++70/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:30,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:30,719 > 20
[DEBUG|collector_api.py:200] 2021-02-09 15:37:30,956 > ++++++++++++++한일철강++++++++++++++++++++71/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:30,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:31,326 > 21
[DEBUG|collector_api.py:200] 2021-02-09 15:37:31,563 > ++++++++++++++한일현대시멘트++++++++++++++++++++72/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:31,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:31,934 > 22
[DEBUG|collector_api.py:200] 2021-02-09 15:37:32,205 > ++++++++++++++한창제지++++++++++++++++++++73/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:32,205 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:32,542 > 23
[DEBUG|collector_api.py:200] 2021-02-09 15:37:32,819 > ++++++++++++++한화생명++++++++++++++++++++74/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:32,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:33,149 > 24
[DEBUG|collector_api.py:200] 2021-02-09 15:37:33,378 > ++++++++++++++현대건설기계++++++++++++++++++++75/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:33,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:33,756 > 25
[DEBUG|collector_api.py:200] 2021-02-09 15:37:34,024 > ++++++++++++++현대모비스++++++++++++++++++++76/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:34,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:34,363 > 26
[DEBUG|collector_api.py:200] 2021-02-09 15:37:34,651 > ++++++++++++++현대엘리베이++++++++++++++++++++77/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:34,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:34,969 > 27
[DEBUG|collector_api.py:200] 2021-02-09 15:37:35,210 > ++++++++++++++현대차증권++++++++++++++++++++78/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:35,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:35,577 > 28
[DEBUG|collector_api.py:200] 2021-02-09 15:37:35,823 > ++++++++++++++호전실업++++++++++++++++++++79/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:35,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:36,184 > 29
[DEBUG|collector_api.py:200] 2021-02-09 15:37:36,396 > ++++++++++++++CJ CGV++++++++++++++++++++80/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:36,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:36,792 > 30
[DEBUG|collector_api.py:200] 2021-02-09 15:37:37,061 > ++++++++++++++CJ제일제당++++++++++++++++++++81/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:37,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:37,401 > 31
[DEBUG|collector_api.py:200] 2021-02-09 15:37:37,640 > ++++++++++++++HDC현대EP++++++++++++++++++++82/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:37,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:38,007 > 32
[DEBUG|collector_api.py:200] 2021-02-09 15:37:38,247 > ++++++++++++++JW홀딩스++++++++++++++++++++83/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:38,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:38,614 > 33
[DEBUG|collector_api.py:200] 2021-02-09 15:37:38,862 > ++++++++++++++KB금융++++++++++++++++++++84/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:38,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:39,221 > 34
[DEBUG|collector_api.py:200] 2021-02-09 15:37:39,456 > ++++++++++++++KC코트렐++++++++++++++++++++85/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:39,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:39,827 > 35
[DEBUG|collector_api.py:200] 2021-02-09 15:37:40,071 > ++++++++++++++KPX케미칼++++++++++++++++++++86/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:40,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:40,433 > 36
[DEBUG|collector_api.py:200] 2021-02-09 15:37:40,680 > ++++++++++++++SG충방++++++++++++++++++++87/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:40,680 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:41,040 > 37
[DEBUG|collector_api.py:200] 2021-02-09 15:37:41,302 > ++++++++++++++금강공업++++++++++++++++++++88/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:41,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:41,647 > 38
[DEBUG|collector_api.py:200] 2021-02-09 15:37:41,910 > ++++++++++++++금호산업++++++++++++++++++++89/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:41,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:42,254 > 39
[DEBUG|collector_api.py:200] 2021-02-09 15:37:42,504 > ++++++++++++++금호전기++++++++++++++++++++90/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:42,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:42,862 > 40
[DEBUG|collector_api.py:200] 2021-02-09 15:37:43,137 > ++++++++++++++기업은행++++++++++++++++++++91/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:43,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:43,470 > 41
[DEBUG|collector_api.py:200] 2021-02-09 15:37:43,718 > ++++++++++++++남성++++++++++++++++++++92/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:43,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:44,077 > 42
[DEBUG|collector_api.py:200] 2021-02-09 15:37:44,315 > ++++++++++++++넷마블++++++++++++++++++++93/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:44,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:44,685 > 43
[DEBUG|collector_api.py:200] 2021-02-09 15:37:44,922 > ++++++++++++++대구백화점++++++++++++++++++++94/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:44,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:45,294 > 44
[DEBUG|collector_api.py:200] 2021-02-09 15:37:45,551 > ++++++++++++++대우건설++++++++++++++++++++95/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:45,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:45,901 > 45
[DEBUG|collector_api.py:200] 2021-02-09 15:37:46,147 > ++++++++++++++대원제약++++++++++++++++++++96/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:46,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:46,507 > 46
[DEBUG|collector_api.py:200] 2021-02-09 15:37:46,753 > ++++++++++++++대한방직++++++++++++++++++++97/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:46,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:47,114 > 47
[DEBUG|collector_api.py:200] 2021-02-09 15:37:47,360 > ++++++++++++++대한제당++++++++++++++++++++98/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:47,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:47,720 > 48
[DEBUG|collector_api.py:200] 2021-02-09 15:37:48,005 > ++++++++++++++대한해운++++++++++++++++++++99/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:48,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:48,326 > 49
[DEBUG|collector_api.py:200] 2021-02-09 15:37:48,577 > ++++++++++++++덕양산업++++++++++++++++++++100/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:48,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:48,933 > 50
[DEBUG|collector_api.py:200] 2021-02-09 15:37:49,174 > ++++++++++++++동원금속++++++++++++++++++++101/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:49,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:49,541 > 51
[DEBUG|collector_api.py:200] 2021-02-09 15:37:49,777 > ++++++++++++++두산인프라코어++++++++++++++++++++102/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:49,777 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:50,148 > 52
[DEBUG|collector_api.py:200] 2021-02-09 15:37:50,391 > ++++++++++++++디씨엠++++++++++++++++++++103/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:50,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:50,754 > 53
[DEBUG|collector_api.py:200] 2021-02-09 15:37:51,034 > ++++++++++++++디티알오토모티브++++++++++++++++++++104/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:51,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:51,361 > 54
[DEBUG|collector_api.py:200] 2021-02-09 15:37:51,631 > ++++++++++++++롯데손해보험++++++++++++++++++++105/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:51,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:51,969 > 55
[DEBUG|collector_api.py:200] 2021-02-09 15:37:52,227 > ++++++++++++++롯데제과++++++++++++++++++++106/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:52,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:52,577 > 56
[DEBUG|collector_api.py:200] 2021-02-09 15:37:52,830 > ++++++++++++++롯데칠성++++++++++++++++++++107/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:52,831 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:53,185 > 57
[DEBUG|collector_api.py:200] 2021-02-09 15:37:53,431 > ++++++++++++++롯데케미칼++++++++++++++++++++108/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:53,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:53,791 > 58
[DEBUG|collector_api.py:200] 2021-02-09 15:37:54,073 > ++++++++++++++롯데하이마트++++++++++++++++++++109/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:54,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:54,397 > 59
[DEBUG|collector_api.py:200] 2021-02-09 15:37:54,629 > ++++++++++++++미원홀딩스++++++++++++++++++++110/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:54,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:55,005 > 60
[DEBUG|collector_api.py:200] 2021-02-09 15:37:55,248 > ++++++++++++++백산++++++++++++++++++++111/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:55,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:55,612 > 61
[DEBUG|collector_api.py:200] 2021-02-09 15:37:55,849 > ++++++++++++++보락++++++++++++++++++++112/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:55,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:56,219 > 62
[DEBUG|collector_api.py:200] 2021-02-09 15:37:56,461 > ++++++++++++++사조대림++++++++++++++++++++113/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:56,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:56,826 > 63
[DEBUG|collector_api.py:200] 2021-02-09 15:37:57,090 > ++++++++++++++사조동아원++++++++++++++++++++114/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:57,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:57,433 > 64
[DEBUG|collector_api.py:200] 2021-02-09 15:37:57,692 > ++++++++++++++삼양식품++++++++++++++++++++115/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:57,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:58,041 > 65
[DEBUG|collector_api.py:200] 2021-02-09 15:37:58,290 > ++++++++++++++서원++++++++++++++++++++116/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:58,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:58,648 > 66
[DEBUG|collector_api.py:200] 2021-02-09 15:37:58,897 > ++++++++++++++성안++++++++++++++++++++117/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:58,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:59,255 > 67
[DEBUG|collector_api.py:200] 2021-02-09 15:37:59,494 > ++++++++++++++세방++++++++++++++++++++118/2894
[DEBUG|open_api.py:656] 2021-02-09 15:37:59,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:37:59,861 > 68
[DEBUG|collector_api.py:200] 2021-02-09 15:38:00,127 > ++++++++++++++세아홀딩스++++++++++++++++++++119/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:00,127 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:00,469 > 69
[DEBUG|collector_api.py:200] 2021-02-09 15:38:00,693 > ++++++++++++++세이브존I&C++++++++++++++++++++120/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:00,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:01,076 > 70
[DEBUG|collector_api.py:200] 2021-02-09 15:38:01,303 > ++++++++++++++신송홀딩스++++++++++++++++++++121/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:01,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:01,683 > 71
[DEBUG|collector_api.py:200] 2021-02-09 15:38:01,910 > ++++++++++++++신일전자++++++++++++++++++++122/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:01,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:02,290 > 72
[DEBUG|collector_api.py:200] 2021-02-09 15:38:02,534 > ++++++++++++++신풍제약++++++++++++++++++++123/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:02,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:02,897 > 73
[DEBUG|collector_api.py:200] 2021-02-09 15:38:03,150 > ++++++++++++++써니전자++++++++++++++++++++124/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:03,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:03,503 > 74
[DEBUG|collector_api.py:200] 2021-02-09 15:38:03,769 > ++++++++++++++아이마켓코리아++++++++++++++++++++125/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:03,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:04,112 > 75
[DEBUG|collector_api.py:200] 2021-02-09 15:38:04,339 > ++++++++++++++IHQ++++++++++++++++++++126/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:04,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:04,719 > 76
[DEBUG|collector_api.py:200] 2021-02-09 15:38:04,980 > ++++++++++++++에이블씨엔씨++++++++++++++++++++127/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:04,980 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:05,326 > 77
[DEBUG|collector_api.py:200] 2021-02-09 15:38:05,558 > ++++++++++++++엔씨소프트++++++++++++++++++++128/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:05,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:05,933 > 78
[DEBUG|collector_api.py:200] 2021-02-09 15:38:06,185 > ++++++++++++++영보화학++++++++++++++++++++129/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:06,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:06,540 > 79
[DEBUG|collector_api.py:200] 2021-02-09 15:38:06,809 > ++++++++++++++영진약품++++++++++++++++++++130/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:06,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:07,147 > 80
[DEBUG|collector_api.py:200] 2021-02-09 15:38:07,405 > ++++++++++++++영풍++++++++++++++++++++131/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:07,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:07,755 > 81
[DEBUG|collector_api.py:200] 2021-02-09 15:38:08,016 > ++++++++++++++우리금융캐피탈++++++++++++++++++++132/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:08,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:08,361 > 82
[DEBUG|collector_api.py:200] 2021-02-09 15:38:08,604 > ++++++++++++++유니온머티리얼++++++++++++++++++++133/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:08,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:08,968 > 83
[DEBUG|collector_api.py:200] 2021-02-09 15:38:09,222 > ++++++++++++++유유제약++++++++++++++++++++134/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:09,223 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:09,576 > 84
[DEBUG|collector_api.py:200] 2021-02-09 15:38:09,833 > ++++++++++++++유한양행++++++++++++++++++++135/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:09,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:10,184 > 85
[DEBUG|collector_api.py:200] 2021-02-09 15:38:10,445 > ++++++++++++++이마트++++++++++++++++++++136/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:10,446 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:10,794 > 86
[DEBUG|collector_api.py:200] 2021-02-09 15:38:11,032 > ++++++++++++++이수화학++++++++++++++++++++137/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:11,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:11,400 > 87
[DEBUG|collector_api.py:200] 2021-02-09 15:38:11,660 > ++++++++++++++이스타코++++++++++++++++++++138/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:11,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:12,006 > 88
[DEBUG|collector_api.py:200] 2021-02-09 15:38:12,260 > ++++++++++++++인천도시가스++++++++++++++++++++139/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:12,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:12,614 > 89
[DEBUG|collector_api.py:200] 2021-02-09 15:38:12,853 > ++++++++++++++일정실업++++++++++++++++++++140/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:12,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:13,222 > 90
[DEBUG|collector_api.py:200] 2021-02-09 15:38:13,459 > ++++++++++++++종근당홀딩스++++++++++++++++++++141/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:13,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:13,829 > 91
[DEBUG|collector_api.py:200] 2021-02-09 15:38:14,095 > ++++++++++++++지엠비코리아++++++++++++++++++++142/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:14,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:14,436 > 92
[DEBUG|collector_api.py:200] 2021-02-09 15:38:14,673 > ++++++++++++++진원생명과학++++++++++++++++++++143/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:14,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:15,043 > 93
[DEBUG|collector_api.py:200] 2021-02-09 15:38:15,295 > ++++++++++++++컨버즈++++++++++++++++++++144/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:15,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:15,649 > 94
[DEBUG|collector_api.py:200] 2021-02-09 15:38:15,894 > ++++++++++++++케이씨텍++++++++++++++++++++145/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:15,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:16,256 > 95
[DEBUG|collector_api.py:200] 2021-02-09 15:38:16,481 > ++++++++++++++코리아써키트++++++++++++++++++++146/2894
[DEBUG|open_api.py:656] 2021-02-09 15:38:16,482 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:38:16,863 > 96
[DEBUG|open_api.py:303] 2021-02-09 15:42:16,098 > connected
[DEBUG|open_api.py:244] 2021-02-09 15:42:16,098 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 15:42:16,098 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 15:42:16,099 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 15:42:16,099 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 15:42:16,099 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 15:42:16,099 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 15:42:16,118 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 15:42:16,140 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 15:42:16,141 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 15:42:16,141 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 15:42:16,158 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 15:42:16,195 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 15:42:18,869 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 15:42:18,870 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 15:42:18,908 > ++++++++++++++코리아써키트++++++++++++++++++++146/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:18,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:18,910 > 1
[DEBUG|collector_api.py:200] 2021-02-09 15:42:20,015 > ++++++++++++++코스모화학++++++++++++++++++++147/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:20,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:20,016 > 2
[DEBUG|collector_api.py:200] 2021-02-09 15:42:20,276 > ++++++++++++++코아스++++++++++++++++++++148/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:20,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:20,623 > 3
[DEBUG|collector_api.py:200] 2021-02-09 15:42:20,855 > ++++++++++++++코오롱플라스틱++++++++++++++++++++149/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:20,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:21,231 > 4
[DEBUG|collector_api.py:200] 2021-02-09 15:42:21,458 > ++++++++++++++쿠쿠홀딩스++++++++++++++++++++150/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:21,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:21,838 > 5
[DEBUG|collector_api.py:200] 2021-02-09 15:42:22,073 > ++++++++++++++큐로++++++++++++++++++++151/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:22,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:22,444 > 6
[DEBUG|collector_api.py:200] 2021-02-09 15:42:22,689 > ++++++++++++++TBH글로벌++++++++++++++++++++152/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:22,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:23,051 > 7
[DEBUG|collector_api.py:200] 2021-02-09 15:42:23,302 > ++++++++++++++포스코케미칼++++++++++++++++++++153/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:23,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:23,656 > 8
[DEBUG|collector_api.py:200] 2021-02-09 15:42:23,898 > ++++++++++++++하이트론++++++++++++++++++++154/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:23,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:24,263 > 9
[DEBUG|collector_api.py:200] 2021-02-09 15:42:24,500 > ++++++++++++++한국금융지주++++++++++++++++++++155/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:24,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:24,870 > 10
[DEBUG|collector_api.py:200] 2021-02-09 15:42:25,119 > ++++++++++++++한국전자홀딩스++++++++++++++++++++156/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:25,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:25,476 > 11
[DEBUG|collector_api.py:200] 2021-02-09 15:42:25,757 > ++++++++++++++한국타이어앤테크놀로지++++++++++++++++++++157/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:25,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:26,081 > 12
[DEBUG|collector_api.py:200] 2021-02-09 15:42:26,328 > ++++++++++++++한국토지신탁++++++++++++++++++++158/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:26,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:26,687 > 13
[DEBUG|collector_api.py:200] 2021-02-09 15:42:26,921 > ++++++++++++++한국특수형강++++++++++++++++++++159/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:26,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:27,293 > 14
[DEBUG|collector_api.py:200] 2021-02-09 15:42:27,541 > ++++++++++++++한온시스템++++++++++++++++++++160/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:27,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:27,899 > 15
[DEBUG|collector_api.py:200] 2021-02-09 15:42:28,158 > ++++++++++++++한화솔루션++++++++++++++++++++161/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:28,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:28,506 > 16
[DEBUG|collector_api.py:200] 2021-02-09 15:42:28,762 > ++++++++++++++해태제과식품++++++++++++++++++++162/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:28,762 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:29,111 > 17
[DEBUG|collector_api.py:200] 2021-02-09 15:42:29,350 > ++++++++++++++현대에너지솔루션++++++++++++++++++++163/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:29,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:29,718 > 18
[DEBUG|collector_api.py:200] 2021-02-09 15:42:29,905 > ++++++++++++++현대위아++++++++++++++++++++164/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:29,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:30,325 > 19
[DEBUG|collector_api.py:200] 2021-02-09 15:42:30,552 > ++++++++++++++현대코퍼레이션홀딩스++++++++++++++++++++165/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:30,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:30,931 > 20
[DEBUG|collector_api.py:200] 2021-02-09 15:42:31,157 > ++++++++++++++호텔신라++++++++++++++++++++166/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:31,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:31,537 > 21
[DEBUG|collector_api.py:200] 2021-02-09 15:42:31,790 > ++++++++++++++화승인더++++++++++++++++++++167/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:31,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:32,144 > 22
[DEBUG|collector_api.py:200] 2021-02-09 15:42:32,398 > ++++++++++++++화천기공++++++++++++++++++++168/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:32,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:32,751 > 23
[DEBUG|collector_api.py:200] 2021-02-09 15:42:33,006 > ++++++++++++++환인제약++++++++++++++++++++169/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:33,006 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:33,360 > 24
[DEBUG|collector_api.py:200] 2021-02-09 15:42:33,610 > ++++++++++++++효성++++++++++++++++++++170/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:33,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:33,966 > 25
[DEBUG|collector_api.py:200] 2021-02-09 15:42:34,239 > ++++++++++++++효성화학++++++++++++++++++++171/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:34,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:34,573 > 26
[DEBUG|collector_api.py:200] 2021-02-09 15:42:34,803 > ++++++++++++++흥아해운++++++++++++++++++++172/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:34,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:35,181 > 27
[DEBUG|collector_api.py:200] 2021-02-09 15:42:35,454 > ++++++++++++++BGF리테일++++++++++++++++++++173/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:35,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:35,787 > 28
[DEBUG|collector_api.py:200] 2021-02-09 15:42:36,025 > ++++++++++++++BNK금융지주++++++++++++++++++++174/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:36,026 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:36,393 > 29
[DEBUG|collector_api.py:200] 2021-02-09 15:42:36,626 > ++++++++++++++DRB동일++++++++++++++++++++175/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:36,627 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:37,000 > 30
[DEBUG|collector_api.py:200] 2021-02-09 15:42:37,248 > ++++++++++++++GS건설++++++++++++++++++++176/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:37,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:37,607 > 31
[DEBUG|collector_api.py:200] 2021-02-09 15:42:37,869 > ++++++++++++++HDC아이콘트롤스++++++++++++++++++++177/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:37,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:38,213 > 32
[DEBUG|collector_api.py:200] 2021-02-09 15:42:38,428 > ++++++++++++++KTis++++++++++++++++++++178/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:38,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:38,820 > 33
[DEBUG|collector_api.py:200] 2021-02-09 15:42:39,044 > ++++++++++++++LG상사++++++++++++++++++++179/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:39,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:39,426 > 34
[DEBUG|collector_api.py:200] 2021-02-09 15:42:39,674 > ++++++++++++++MH에탄올++++++++++++++++++++180/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:39,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:40,033 > 35
[DEBUG|collector_api.py:200] 2021-02-09 15:42:40,292 > ++++++++++++++SBS++++++++++++++++++++181/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:40,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:40,639 > 36
[DEBUG|collector_api.py:200] 2021-02-09 15:42:40,874 > ++++++++++++++SBS미디어홀딩스++++++++++++++++++++182/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:40,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:41,246 > 37
[DEBUG|collector_api.py:200] 2021-02-09 15:42:41,480 > ++++++++++++++SK텔레콤++++++++++++++++++++183/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:41,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:41,853 > 38
[DEBUG|collector_api.py:200] 2021-02-09 15:42:42,109 > ++++++++++++++강원랜드++++++++++++++++++++184/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:42,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:42,458 > 39
[DEBUG|collector_api.py:200] 2021-02-09 15:42:42,699 > ++++++++++++++교보증권++++++++++++++++++++185/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:42,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:43,065 > 40
[DEBUG|collector_api.py:200] 2021-02-09 15:42:43,331 > ++++++++++++++국제약품++++++++++++++++++++186/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:43,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:43,672 > 41
[DEBUG|collector_api.py:200] 2021-02-09 15:42:43,922 > ++++++++++++++금양++++++++++++++++++++187/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:43,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:44,279 > 42
[DEBUG|collector_api.py:200] 2021-02-09 15:42:44,532 > ++++++++++++++넥센타이어++++++++++++++++++++188/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:44,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:44,887 > 43
[DEBUG|collector_api.py:200] 2021-02-09 15:42:45,148 > ++++++++++++++녹십자홀딩스++++++++++++++++++++189/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:45,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:45,494 > 44
[DEBUG|collector_api.py:200] 2021-02-09 15:42:45,770 > ++++++++++++++농심홀딩스++++++++++++++++++++190/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:45,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:46,100 > 45
[DEBUG|collector_api.py:200] 2021-02-09 15:42:46,352 > ++++++++++++++다스코++++++++++++++++++++191/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:46,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:46,709 > 46
[DEBUG|collector_api.py:200] 2021-02-09 15:42:46,948 > ++++++++++++++대교++++++++++++++++++++192/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:46,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:47,316 > 47
[DEBUG|collector_api.py:200] 2021-02-09 15:42:47,553 > ++++++++++++++대림건설++++++++++++++++++++193/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:47,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:47,922 > 48
[DEBUG|collector_api.py:200] 2021-02-09 15:42:48,185 > ++++++++++++++대웅제약++++++++++++++++++++194/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:48,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:48,529 > 49
[DEBUG|collector_api.py:200] 2021-02-09 15:42:48,781 > ++++++++++++++더존비즈온++++++++++++++++++++195/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:48,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:49,136 > 50
[DEBUG|collector_api.py:200] 2021-02-09 15:42:49,396 > ++++++++++++++덕성++++++++++++++++++++196/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:49,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:49,744 > 51
[DEBUG|collector_api.py:200] 2021-02-09 15:42:50,017 > ++++++++++++++동방아그로++++++++++++++++++++197/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:50,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:50,351 > 52
[DEBUG|collector_api.py:200] 2021-02-09 15:42:50,600 > ++++++++++++++동서++++++++++++++++++++198/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:50,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:50,957 > 53
[DEBUG|collector_api.py:200] 2021-02-09 15:42:51,205 > ++++++++++++++동성코퍼레이션++++++++++++++++++++199/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:51,205 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:51,563 > 54
[DEBUG|collector_api.py:200] 2021-02-09 15:42:51,851 > ++++++++++++++동아쏘시오홀딩스++++++++++++++++++++200/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:51,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:52,168 > 55
[DEBUG|collector_api.py:200] 2021-02-09 15:42:52,417 > ++++++++++++++동양++++++++++++++++++++201/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:52,418 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:52,775 > 56
[DEBUG|collector_api.py:200] 2021-02-09 15:42:53,038 > ++++++++++++++동양생명++++++++++++++++++++202/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:53,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:53,381 > 57
[DEBUG|collector_api.py:200] 2021-02-09 15:42:53,617 > ++++++++++++++동원산업++++++++++++++++++++203/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:53,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:53,986 > 58
[DEBUG|collector_api.py:200] 2021-02-09 15:42:54,248 > ++++++++++++++디아이++++++++++++++++++++204/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:54,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:54,592 > 59
[DEBUG|collector_api.py:200] 2021-02-09 15:42:54,838 > ++++++++++++++디와이++++++++++++++++++++205/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:54,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:55,199 > 60
[DEBUG|collector_api.py:200] 2021-02-09 15:42:55,447 > ++++++++++++++디피씨++++++++++++++++++++206/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:55,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:55,804 > 61
[DEBUG|collector_api.py:200] 2021-02-09 15:42:56,065 > ++++++++++++++롯데정밀화학++++++++++++++++++++207/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:56,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:56,410 > 62
[DEBUG|collector_api.py:200] 2021-02-09 15:42:56,652 > ++++++++++++++롯데푸드++++++++++++++++++++208/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:56,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:57,016 > 63
[DEBUG|collector_api.py:200] 2021-02-09 15:42:57,272 > ++++++++++++++맥쿼리인프라++++++++++++++++++++209/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:57,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:57,622 > 64
[DEBUG|collector_api.py:200] 2021-02-09 15:42:57,868 > ++++++++++++++메타랩스++++++++++++++++++++210/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:57,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:58,229 > 65
[DEBUG|collector_api.py:200] 2021-02-09 15:42:58,466 > ++++++++++++++명문제약++++++++++++++++++++211/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:58,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:58,836 > 66
[DEBUG|collector_api.py:200] 2021-02-09 15:42:59,084 > ++++++++++++++모토닉++++++++++++++++++++212/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:59,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:42:59,442 > 67
[DEBUG|collector_api.py:200] 2021-02-09 15:42:59,690 > ++++++++++++++미래에셋맵스리츠++++++++++++++++++++213/2894
[DEBUG|open_api.py:656] 2021-02-09 15:42:59,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:00,048 > 68
[DEBUG|collector_api.py:200] 2021-02-09 15:43:00,243 > ++++++++++++++미원화학++++++++++++++++++++214/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:00,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:00,653 > 69
[DEBUG|collector_api.py:200] 2021-02-09 15:43:00,889 > ++++++++++++++범양건영++++++++++++++++++++215/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:00,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:01,259 > 70
[DEBUG|collector_api.py:200] 2021-02-09 15:43:01,504 > ++++++++++++++베트남개발1++++++++++++++++++++216/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:01,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:01,865 > 71
[DEBUG|collector_api.py:200] 2021-02-09 15:43:02,120 > ++++++++++++++빙그레++++++++++++++++++++217/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:02,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:02,471 > 72
[DEBUG|collector_api.py:200] 2021-02-09 15:43:02,721 > ++++++++++++++삼성바이오로직스++++++++++++++++++++218/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:02,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:03,078 > 73
[DEBUG|collector_api.py:200] 2021-02-09 15:43:03,307 > ++++++++++++++삼성에스디에스++++++++++++++++++++219/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:03,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:03,685 > 74
[DEBUG|collector_api.py:200] 2021-02-09 15:43:03,919 > ++++++++++++++삼성증권++++++++++++++++++++220/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:03,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:04,292 > 75
[DEBUG|collector_api.py:200] 2021-02-09 15:43:04,537 > ++++++++++++++삼성카드++++++++++++++++++++221/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:04,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:04,898 > 76
[DEBUG|collector_api.py:200] 2021-02-09 15:43:05,167 > ++++++++++++++삼양통상++++++++++++++++++++222/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:05,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:05,505 > 77
[DEBUG|collector_api.py:200] 2021-02-09 15:43:05,757 > ++++++++++++++삼영무역++++++++++++++++++++223/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:05,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:06,112 > 78
[DEBUG|collector_api.py:200] 2021-02-09 15:43:06,369 > ++++++++++++++삼정펄프++++++++++++++++++++224/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:06,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:06,718 > 79
[DEBUG|collector_api.py:200] 2021-02-09 15:43:06,954 > ++++++++++++++샘표식품++++++++++++++++++++225/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:06,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:07,326 > 80
[DEBUG|collector_api.py:200] 2021-02-09 15:43:07,592 > ++++++++++++++서연이화++++++++++++++++++++226/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:07,592 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:07,933 > 81
[DEBUG|collector_api.py:200] 2021-02-09 15:43:08,162 > ++++++++++++++성보화학++++++++++++++++++++227/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:08,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:08,540 > 82
[DEBUG|collector_api.py:200] 2021-02-09 15:43:08,787 > ++++++++++++++세아제강++++++++++++++++++++228/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:08,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:09,147 > 83
[DEBUG|collector_api.py:200] 2021-02-09 15:43:09,382 > ++++++++++++++센트랄모텍++++++++++++++++++++229/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:09,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:09,754 > 84
[DEBUG|collector_api.py:200] 2021-02-09 15:43:09,967 > ++++++++++++++솔루스첨단소재++++++++++++++++++++230/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:09,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:10,361 > 85
[DEBUG|collector_api.py:200] 2021-02-09 15:43:10,549 > ++++++++++++++송원산업++++++++++++++++++++231/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:10,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:10,968 > 86
[DEBUG|collector_api.py:200] 2021-02-09 15:43:11,215 > ++++++++++++++신성이엔지++++++++++++++++++++232/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:11,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:11,574 > 87
[DEBUG|collector_api.py:200] 2021-02-09 15:43:11,811 > ++++++++++++++신세계인터내셔날++++++++++++++++++++233/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:11,811 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:12,181 > 88
[DEBUG|collector_api.py:200] 2021-02-09 15:43:12,408 > ++++++++++++++신세계푸드++++++++++++++++++++234/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:12,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:12,786 > 89
[DEBUG|collector_api.py:200] 2021-02-09 15:43:13,031 > ++++++++++++++신화실업++++++++++++++++++++235/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:13,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:13,392 > 90
[DEBUG|collector_api.py:200] 2021-02-09 15:43:13,642 > ++++++++++++++씨아이테크++++++++++++++++++++236/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:13,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:13,999 > 91
[DEBUG|collector_api.py:200] 2021-02-09 15:43:14,255 > ++++++++++++++아모레G++++++++++++++++++++237/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:14,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:14,606 > 92
[DEBUG|collector_api.py:200] 2021-02-09 15:43:14,856 > ++++++++++++++아세아시멘트++++++++++++++++++++238/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:14,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:15,212 > 93
[DEBUG|collector_api.py:200] 2021-02-09 15:43:15,435 > ++++++++++++++애경산업++++++++++++++++++++239/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:15,436 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:15,819 > 94
[DEBUG|collector_api.py:200] 2021-02-09 15:43:16,048 > ++++++++++++++에이플러스에셋++++++++++++++++++++240/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:16,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:16,425 > 95
[DEBUG|collector_api.py:200] 2021-02-09 15:43:16,590 > ++++++++++++++NHN++++++++++++++++++++241/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:16,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:17,031 > 96
[DEBUG|collector_api.py:200] 2021-02-09 15:43:17,254 > ++++++++++++++유니켐++++++++++++++++++++242/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:17,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:17,638 > 97
[DEBUG|collector_api.py:200] 2021-02-09 15:43:17,899 > ++++++++++++++유양디앤유++++++++++++++++++++243/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:17,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:18,244 > 98
[DEBUG|collector_api.py:200] 2021-02-09 15:43:18,485 > ++++++++++++++유화증권++++++++++++++++++++244/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:18,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:18,850 > 99
[DEBUG|collector_api.py:200] 2021-02-09 15:43:19,107 > ++++++++++++++이구산업++++++++++++++++++++245/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:19,108 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:19,456 > 100
[DEBUG|collector_api.py:200] 2021-02-09 15:43:19,692 > ++++++++++++++이월드++++++++++++++++++++246/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:19,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:20,063 > 101
[DEBUG|collector_api.py:200] 2021-02-09 15:43:20,306 > ++++++++++++++일성신약++++++++++++++++++++247/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:20,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:20,670 > 102
[DEBUG|collector_api.py:200] 2021-02-09 15:43:20,922 > ++++++++++++++제이에스코퍼레이션++++++++++++++++++++248/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:20,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:21,276 > 103
[DEBUG|collector_api.py:200] 2021-02-09 15:43:21,499 > ++++++++++++++제이준코스메틱++++++++++++++++++++249/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:21,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:21,881 > 104
[DEBUG|collector_api.py:200] 2021-02-09 15:43:22,140 > ++++++++++++++조비++++++++++++++++++++250/2894
[DEBUG|open_api.py:656] 2021-02-09 15:43:22,140 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:43:22,489 > 105
[DEBUG|open_api.py:303] 2021-02-09 15:47:20,799 > connected
[DEBUG|open_api.py:244] 2021-02-09 15:47:20,805 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 15:47:20,805 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 15:47:20,806 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 15:47:20,806 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 15:47:20,806 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 15:47:20,807 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 15:47:20,822 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 15:47:20,855 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 15:47:20,855 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 15:47:20,855 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 15:47:20,871 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 15:47:20,907 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 15:47:23,404 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 15:47:23,405 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 15:47:23,445 > ++++++++++++++조비++++++++++++++++++++250/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:23,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:23,447 > 1
[DEBUG|collector_api.py:200] 2021-02-09 15:47:24,517 > ++++++++++++++조선선재++++++++++++++++++++251/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:24,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:24,519 > 2
[DEBUG|collector_api.py:200] 2021-02-09 15:47:24,744 > ++++++++++++++종근당바이오++++++++++++++++++++252/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:24,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:25,126 > 3
[DEBUG|collector_api.py:200] 2021-02-09 15:47:25,370 > ++++++++++++++지누스++++++++++++++++++++253/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:25,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:25,733 > 4
[DEBUG|collector_api.py:200] 2021-02-09 15:47:25,959 > ++++++++++++++진양화학++++++++++++++++++++254/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:25,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:26,341 > 5
[DEBUG|collector_api.py:200] 2021-02-09 15:47:26,575 > ++++++++++++++케이탑리츠++++++++++++++++++++255/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:26,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:26,948 > 6
[DEBUG|collector_api.py:200] 2021-02-09 15:47:27,175 > ++++++++++++++코람코에너지리츠++++++++++++++++++++256/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:27,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:27,556 > 7
[DEBUG|collector_api.py:200] 2021-02-09 15:47:27,723 > ++++++++++++++코스모신소재++++++++++++++++++++257/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:27,723 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:28,162 > 8
[DEBUG|collector_api.py:200] 2021-02-09 15:47:28,413 > ++++++++++++++코웨이++++++++++++++++++++258/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:28,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:28,769 > 9
[DEBUG|collector_api.py:200] 2021-02-09 15:47:29,039 > ++++++++++++++쿠쿠홈시스++++++++++++++++++++259/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:29,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:29,377 > 10
[DEBUG|collector_api.py:200] 2021-02-09 15:47:29,595 > ++++++++++++++키위미디어그룹++++++++++++++++++++260/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:29,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:29,984 > 11
[DEBUG|collector_api.py:200] 2021-02-09 15:47:30,253 > ++++++++++++++태평양물산++++++++++++++++++++261/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:30,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:30,592 > 12
[DEBUG|collector_api.py:200] 2021-02-09 15:47:30,823 > ++++++++++++++테이팩스++++++++++++++++++++262/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:30,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:31,199 > 13
[DEBUG|collector_api.py:200] 2021-02-09 15:47:31,440 > ++++++++++++++텔코웨어++++++++++++++++++++263/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:31,440 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:31,805 > 14
[DEBUG|collector_api.py:200] 2021-02-09 15:47:32,035 > ++++++++++++++티와이홀딩스++++++++++++++++++++264/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:32,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:32,411 > 15
[DEBUG|collector_api.py:200] 2021-02-09 15:47:32,565 > ++++++++++++++팜스코++++++++++++++++++++265/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:32,566 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:33,018 > 16
[DEBUG|collector_api.py:200] 2021-02-09 15:47:33,257 > ++++++++++++++퍼시스++++++++++++++++++++266/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:33,258 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:33,625 > 17
[DEBUG|collector_api.py:200] 2021-02-09 15:47:33,864 > ++++++++++++++풍산홀딩스++++++++++++++++++++267/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:33,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:34,233 > 18
[DEBUG|collector_api.py:200] 2021-02-09 15:47:34,497 > ++++++++++++++하이스틸++++++++++++++++++++268/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:34,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:34,840 > 19
[DEBUG|collector_api.py:200] 2021-02-09 15:47:35,100 > ++++++++++++++하이트진로++++++++++++++++++++269/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:35,100 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:35,448 > 20
[DEBUG|collector_api.py:200] 2021-02-09 15:47:35,690 > ++++++++++++++한국석유++++++++++++++++++++270/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:35,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:36,054 > 21
[DEBUG|collector_api.py:200] 2021-02-09 15:47:36,318 > ++++++++++++++한국수출포장++++++++++++++++++++271/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:36,319 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:36,662 > 22
[DEBUG|collector_api.py:200] 2021-02-09 15:47:36,929 > ++++++++++++++한국자산신탁++++++++++++++++++++272/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:36,929 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:37,269 > 23
[DEBUG|collector_api.py:200] 2021-02-09 15:47:37,491 > ++++++++++++++한국주강++++++++++++++++++++273/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:37,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:37,876 > 24
[DEBUG|collector_api.py:200] 2021-02-09 15:47:38,133 > ++++++++++++++한국콜마홀딩스++++++++++++++++++++274/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:38,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:38,483 > 25
[DEBUG|collector_api.py:200] 2021-02-09 15:47:38,748 > ++++++++++++++한국항공우주++++++++++++++++++++275/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:38,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:39,091 > 26
[DEBUG|collector_api.py:200] 2021-02-09 15:47:39,331 > ++++++++++++++한라홀딩스++++++++++++++++++++276/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:39,331 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:39,697 > 27
[DEBUG|collector_api.py:200] 2021-02-09 15:47:39,916 > ++++++++++++++한미사이언스++++++++++++++++++++277/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:39,916 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:40,305 > 28
[DEBUG|collector_api.py:200] 2021-02-09 15:47:40,596 > ++++++++++++++한샘++++++++++++++++++++278/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:40,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:40,913 > 29
[DEBUG|collector_api.py:200] 2021-02-09 15:47:41,141 > ++++++++++++++한솔홀딩스++++++++++++++++++++279/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:41,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:41,520 > 30
[DEBUG|collector_api.py:200] 2021-02-09 15:47:41,757 > ++++++++++++++한신기계++++++++++++++++++++280/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:41,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:42,127 > 31
[DEBUG|collector_api.py:200] 2021-02-09 15:47:42,393 > ++++++++++++++한화++++++++++++++++++++281/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:42,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:42,736 > 32
[DEBUG|collector_api.py:200] 2021-02-09 15:47:42,997 > ++++++++++++++한화에어로스페이스++++++++++++++++++++282/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:42,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:43,344 > 33
[DEBUG|collector_api.py:200] 2021-02-09 15:47:43,590 > ++++++++++++++현대차++++++++++++++++++++283/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:43,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:43,950 > 34
[DEBUG|collector_api.py:200] 2021-02-09 15:47:44,210 > ++++++++++++++현대퓨처넷++++++++++++++++++++284/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:44,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:44,558 > 35
[DEBUG|collector_api.py:200] 2021-02-09 15:47:44,782 > ++++++++++++++효성ITX++++++++++++++++++++285/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:44,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:45,164 > 36
[DEBUG|collector_api.py:200] 2021-02-09 15:47:45,401 > ++++++++++++++휴니드++++++++++++++++++++286/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:45,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:45,770 > 37
[DEBUG|collector_api.py:200] 2021-02-09 15:47:46,012 > ++++++++++++++CJ대한통운++++++++++++++++++++287/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:46,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:46,376 > 38
[DEBUG|collector_api.py:200] 2021-02-09 15:47:46,618 > ++++++++++++++DSR제강++++++++++++++++++++288/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:46,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:46,982 > 39
[DEBUG|collector_api.py:200] 2021-02-09 15:47:47,220 > ++++++++++++++ESR켄달스퀘어리츠++++++++++++++++++++289/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:47,220 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:47,589 > 40
[DEBUG|collector_api.py:200] 2021-02-09 15:47:47,748 > ++++++++++++++GKL++++++++++++++++++++290/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:47,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:48,195 > 41
[DEBUG|collector_api.py:200] 2021-02-09 15:47:48,421 > ++++++++++++++JW중외제약++++++++++++++++++++291/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:48,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:48,802 > 42
[DEBUG|collector_api.py:200] 2021-02-09 15:47:49,057 > ++++++++++++++KPX홀딩스++++++++++++++++++++292/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:49,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:49,409 > 43
[DEBUG|collector_api.py:200] 2021-02-09 15:47:49,639 > ++++++++++++++KSS해운++++++++++++++++++++293/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:49,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:50,016 > 44
[DEBUG|collector_api.py:200] 2021-02-09 15:47:50,255 > ++++++++++++++LF++++++++++++++++++++294/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:50,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:50,623 > 45
[DEBUG|collector_api.py:200] 2021-02-09 15:47:50,858 > ++++++++++++++LG하우시스++++++++++++++++++++295/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:50,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:51,230 > 46
[DEBUG|collector_api.py:200] 2021-02-09 15:47:51,461 > ++++++++++++++LG화학++++++++++++++++++++296/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:51,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:51,838 > 47
[DEBUG|collector_api.py:200] 2021-02-09 15:47:52,080 > ++++++++++++++LIG넥스원++++++++++++++++++++297/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:52,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:52,444 > 48
[DEBUG|collector_api.py:200] 2021-02-09 15:47:52,665 > ++++++++++++++LS++++++++++++++++++++298/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:52,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:53,053 > 49
[DEBUG|collector_api.py:200] 2021-02-09 15:47:53,300 > ++++++++++++++NAVER++++++++++++++++++++299/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:53,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:53,659 > 50
[DEBUG|collector_api.py:200] 2021-02-09 15:47:53,892 > ++++++++++++++NICE++++++++++++++++++++300/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:53,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:54,267 > 51
[DEBUG|collector_api.py:200] 2021-02-09 15:47:54,502 > ++++++++++++++NI스틸++++++++++++++++++++301/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:54,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:54,875 > 52
[DEBUG|collector_api.py:200] 2021-02-09 15:47:55,141 > ++++++++++++++SGC에너지++++++++++++++++++++302/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:55,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:55,481 > 53
[DEBUG|collector_api.py:200] 2021-02-09 15:47:55,721 > ++++++++++++++SH에너지화학++++++++++++++++++++303/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:55,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:56,088 > 54
[DEBUG|collector_api.py:200] 2021-02-09 15:47:56,365 > ++++++++++++++SK증권++++++++++++++++++++304/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:56,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:56,695 > 55
[DEBUG|collector_api.py:200] 2021-02-09 15:47:56,975 > ++++++++++++++SK하이닉스++++++++++++++++++++305/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:56,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:57,302 > 56
[DEBUG|collector_api.py:200] 2021-02-09 15:47:57,557 > ++++++++++++++경인양행++++++++++++++++++++306/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:57,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:57,911 > 57
[DEBUG|collector_api.py:200] 2021-02-09 15:47:58,167 > ++++++++++++++경인전자++++++++++++++++++++307/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:58,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:58,518 > 58
[DEBUG|collector_api.py:200] 2021-02-09 15:47:58,758 > ++++++++++++++국보++++++++++++++++++++308/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:58,759 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:59,125 > 59
[DEBUG|collector_api.py:200] 2021-02-09 15:47:59,378 > ++++++++++++++기신정기++++++++++++++++++++309/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:59,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:47:59,733 > 60
[DEBUG|collector_api.py:200] 2021-02-09 15:47:59,968 > ++++++++++++++녹십자++++++++++++++++++++310/2894
[DEBUG|open_api.py:656] 2021-02-09 15:47:59,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:00,341 > 61
[DEBUG|collector_api.py:200] 2021-02-09 15:48:00,583 > ++++++++++++++대덕++++++++++++++++++++311/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:00,584 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:00,947 > 62
[DEBUG|collector_api.py:200] 2021-02-09 15:48:01,204 > ++++++++++++++대동전자++++++++++++++++++++312/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:01,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:01,553 > 63
[DEBUG|collector_api.py:200] 2021-02-09 15:48:01,798 > ++++++++++++++대림B&Co++++++++++++++++++++313/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:01,799 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:02,160 > 64
[DEBUG|collector_api.py:200] 2021-02-09 15:48:02,423 > ++++++++++++++대양금속++++++++++++++++++++314/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:02,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:02,767 > 65
[DEBUG|collector_api.py:200] 2021-02-09 15:48:03,023 > ++++++++++++++대창++++++++++++++++++++315/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:03,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:03,374 > 66
[DEBUG|collector_api.py:200] 2021-02-09 15:48:03,627 > ++++++++++++++동국제강++++++++++++++++++++316/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:03,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:03,982 > 67
[DEBUG|collector_api.py:200] 2021-02-09 15:48:04,256 > ++++++++++++++동양물산++++++++++++++++++++317/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:04,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:04,590 > 68
[DEBUG|collector_api.py:200] 2021-02-09 15:48:04,864 > ++++++++++++++동화약품++++++++++++++++++++318/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:04,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:05,197 > 69
[DEBUG|collector_api.py:200] 2021-02-09 15:48:05,454 > ++++++++++++++두산중공업++++++++++++++++++++319/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:05,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:05,805 > 70
[DEBUG|collector_api.py:200] 2021-02-09 15:48:06,067 > ++++++++++++++DI동일++++++++++++++++++++320/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:06,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:06,413 > 71
[DEBUG|collector_api.py:200] 2021-02-09 15:48:06,670 > ++++++++++++++디아이씨++++++++++++++++++++321/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:06,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:07,022 > 72
[DEBUG|collector_api.py:200] 2021-02-09 15:48:07,264 > ++++++++++++++롯데관광개발++++++++++++++++++++322/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:07,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:07,628 > 73
[DEBUG|collector_api.py:200] 2021-02-09 15:48:07,868 > ++++++++++++++맵스리얼티1++++++++++++++++++++323/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:07,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:08,236 > 74
[DEBUG|collector_api.py:200] 2021-02-09 15:48:08,468 > ++++++++++++++명신산업++++++++++++++++++++324/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:08,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:08,844 > 75
[DEBUG|collector_api.py:200] 2021-02-09 15:48:09,004 > ++++++++++++++무학++++++++++++++++++++325/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:09,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:09,450 > 76
[DEBUG|collector_api.py:200] 2021-02-09 15:48:09,691 > ++++++++++++++미래아이앤지++++++++++++++++++++326/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:09,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:10,057 > 77
[DEBUG|collector_api.py:200] 2021-02-09 15:48:10,305 > ++++++++++++++바다로19호++++++++++++++++++++327/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:10,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:10,664 > 78
[DEBUG|collector_api.py:200] 2021-02-09 15:48:10,895 > ++++++++++++++부산주공++++++++++++++++++++328/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:10,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:11,271 > 79
[DEBUG|collector_api.py:200] 2021-02-09 15:48:11,509 > ++++++++++++++비케이탑스++++++++++++++++++++329/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:11,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:11,879 > 80
[DEBUG|collector_api.py:200] 2021-02-09 15:48:12,146 > ++++++++++++++사조씨푸드++++++++++++++++++++330/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:12,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:12,487 > 81
[DEBUG|collector_api.py:200] 2021-02-09 15:48:12,750 > ++++++++++++++삼성물산++++++++++++++++++++331/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:12,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:13,095 > 82
[DEBUG|collector_api.py:200] 2021-02-09 15:48:13,324 > ++++++++++++++삼성전자++++++++++++++++++++332/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:13,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:13,702 > 83
[DEBUG|collector_api.py:200] 2021-02-09 15:48:13,970 > ++++++++++++++삼성제약++++++++++++++++++++333/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:13,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:14,309 > 84
[DEBUG|collector_api.py:200] 2021-02-09 15:48:14,565 > ++++++++++++++삼원강재++++++++++++++++++++334/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:14,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:14,917 > 85
[DEBUG|collector_api.py:200] 2021-02-09 15:48:15,153 > ++++++++++++++삼익THK++++++++++++++++++++335/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:15,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:15,523 > 86
[DEBUG|collector_api.py:200] 2021-02-09 15:48:15,766 > ++++++++++++++삼일제약++++++++++++++++++++336/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:15,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:16,130 > 87
[DEBUG|collector_api.py:200] 2021-02-09 15:48:16,389 > ++++++++++++++삼진제약++++++++++++++++++++337/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:16,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:16,739 > 88
[DEBUG|collector_api.py:200] 2021-02-09 15:48:16,994 > ++++++++++++++삼화왕관++++++++++++++++++++338/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:16,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:17,346 > 89
[DEBUG|collector_api.py:200] 2021-02-09 15:48:17,583 > ++++++++++++++서연++++++++++++++++++++339/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:17,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:17,955 > 90
[DEBUG|collector_api.py:200] 2021-02-09 15:48:18,221 > ++++++++++++++선창산업++++++++++++++++++++340/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:18,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:18,562 > 91
[DEBUG|collector_api.py:200] 2021-02-09 15:48:18,807 > ++++++++++++++성신양회++++++++++++++++++++341/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:18,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:19,170 > 92
[DEBUG|collector_api.py:200] 2021-02-09 15:48:19,430 > ++++++++++++++세기상사++++++++++++++++++++342/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:19,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:19,777 > 93
[DEBUG|collector_api.py:200] 2021-02-09 15:48:20,048 > ++++++++++++++세아특수강++++++++++++++++++++343/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:20,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:20,385 > 94
[DEBUG|collector_api.py:200] 2021-02-09 15:48:20,617 > ++++++++++++++세우글로벌++++++++++++++++++++344/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:20,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:20,994 > 95
[DEBUG|collector_api.py:200] 2021-02-09 15:48:21,255 > ++++++++++++++세원정공++++++++++++++++++++345/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:21,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:21,601 > 96
[DEBUG|collector_api.py:200] 2021-02-09 15:48:21,846 > ++++++++++++++세진중공업++++++++++++++++++++346/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:21,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:22,207 > 97
[DEBUG|collector_api.py:200] 2021-02-09 15:48:22,440 > ++++++++++++++세화아이엠씨++++++++++++++++++++347/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:22,440 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:22,814 > 98
[DEBUG|collector_api.py:200] 2021-02-09 15:48:23,041 > ++++++++++++++셀트리온++++++++++++++++++++348/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:23,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:23,421 > 99
[DEBUG|collector_api.py:200] 2021-02-09 15:48:23,650 > ++++++++++++++신라교역++++++++++++++++++++349/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:23,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:24,029 > 100
[DEBUG|collector_api.py:200] 2021-02-09 15:48:24,298 > ++++++++++++++신성통상++++++++++++++++++++350/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:24,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:24,635 > 101
[DEBUG|collector_api.py:200] 2021-02-09 15:48:24,913 > ++++++++++++++신세계++++++++++++++++++++351/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:24,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:25,242 > 102
[DEBUG|collector_api.py:200] 2021-02-09 15:48:25,504 > ++++++++++++++아모레퍼시픽++++++++++++++++++++352/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:25,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:25,851 > 103
[DEBUG|collector_api.py:200] 2021-02-09 15:48:26,103 > ++++++++++++++아세아++++++++++++++++++++353/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:26,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:26,458 > 104
[DEBUG|collector_api.py:200] 2021-02-09 15:48:26,704 > ++++++++++++++아이에스동서++++++++++++++++++++354/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:26,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:27,064 > 105
[DEBUG|collector_api.py:200] 2021-02-09 15:48:27,334 > ++++++++++++++SJM++++++++++++++++++++355/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:27,334 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:27,672 > 106
[DEBUG|collector_api.py:200] 2021-02-09 15:48:27,913 > ++++++++++++++에이리츠++++++++++++++++++++356/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:27,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:28,278 > 107
[DEBUG|collector_api.py:200] 2021-02-09 15:48:28,539 > ++++++++++++++엔에스쇼핑++++++++++++++++++++357/2894
[DEBUG|open_api.py:656] 2021-02-09 15:48:28,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:48:28,886 > 108
[DEBUG|open_api.py:303] 2021-02-09 15:52:23,975 > connected
[DEBUG|open_api.py:244] 2021-02-09 15:52:23,981 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 15:52:23,981 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 15:52:23,982 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 15:52:23,983 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 15:52:23,983 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 15:52:23,983 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 15:52:23,996 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 15:52:24,024 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 15:52:24,025 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 15:52:24,025 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 15:52:24,044 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 15:52:24,074 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 15:52:26,519 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 15:52:26,520 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 15:52:26,569 > ++++++++++++++엔에스쇼핑++++++++++++++++++++357/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:26,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:26,572 > 1
[DEBUG|collector_api.py:200] 2021-02-09 15:52:27,598 > ++++++++++++++엔케이++++++++++++++++++++358/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:27,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:27,600 > 2
[DEBUG|collector_api.py:200] 2021-02-09 15:52:27,825 > ++++++++++++++NPC++++++++++++++++++++359/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:27,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:28,206 > 3
[DEBUG|collector_api.py:200] 2021-02-09 15:52:28,443 > ++++++++++++++영원무역++++++++++++++++++++360/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:28,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:28,813 > 4
[DEBUG|collector_api.py:200] 2021-02-09 15:52:29,056 > ++++++++++++++영원무역홀딩스++++++++++++++++++++361/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:29,056 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:29,421 > 5
[DEBUG|collector_api.py:200] 2021-02-09 15:52:29,678 > ++++++++++++++우리들휴브레인++++++++++++++++++++362/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:29,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:30,027 > 6
[DEBUG|collector_api.py:200] 2021-02-09 15:52:30,281 > ++++++++++++++우신시스템++++++++++++++++++++363/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:30,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:30,635 > 7
[DEBUG|collector_api.py:200] 2021-02-09 15:52:30,868 > ++++++++++++++우진++++++++++++++++++++364/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:30,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:31,243 > 8
[DEBUG|collector_api.py:200] 2021-02-09 15:52:31,491 > ++++++++++++++우진플라임++++++++++++++++++++365/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:31,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:31,850 > 9
[DEBUG|collector_api.py:200] 2021-02-09 15:52:32,102 > ++++++++++++++유니드++++++++++++++++++++366/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:32,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:32,459 > 10
[DEBUG|collector_api.py:200] 2021-02-09 15:52:32,685 > ++++++++++++++유진투자증권++++++++++++++++++++367/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:32,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:33,066 > 11
[DEBUG|collector_api.py:200] 2021-02-09 15:52:33,343 > ++++++++++++++이건산업++++++++++++++++++++368/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:33,343 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:33,673 > 12
[DEBUG|collector_api.py:200] 2021-02-09 15:52:33,914 > ++++++++++++++이노션++++++++++++++++++++369/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:33,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:34,280 > 13
[DEBUG|collector_api.py:200] 2021-02-09 15:52:34,521 > ++++++++++++++이연제약++++++++++++++++++++370/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:34,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:34,886 > 14
[DEBUG|collector_api.py:200] 2021-02-09 15:52:35,124 > ++++++++++++++인스코비++++++++++++++++++++371/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:35,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:35,493 > 15
[DEBUG|collector_api.py:200] 2021-02-09 15:52:35,743 > ++++++++++++++잇츠한불++++++++++++++++++++372/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:35,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:36,100 > 16
[DEBUG|collector_api.py:200] 2021-02-09 15:52:36,340 > ++++++++++++++조광페인트++++++++++++++++++++373/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:36,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:36,707 > 17
[DEBUG|collector_api.py:200] 2021-02-09 15:52:36,980 > ++++++++++++++조선내화++++++++++++++++++++374/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:36,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:37,314 > 18
[DEBUG|collector_api.py:200] 2021-02-09 15:52:37,561 > ++++++++++++++진에어++++++++++++++++++++375/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:37,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:37,921 > 19
[DEBUG|collector_api.py:200] 2021-02-09 15:52:38,169 > ++++++++++++++참엔지니어링++++++++++++++++++++376/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:38,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:38,527 > 20
[DEBUG|collector_api.py:200] 2021-02-09 15:52:38,765 > ++++++++++++++케이씨씨글라스++++++++++++++++++++377/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:38,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:39,135 > 21
[DEBUG|collector_api.py:200] 2021-02-09 15:52:39,332 > ++++++++++++++코오롱글로벌++++++++++++++++++++378/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:39,333 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:39,742 > 22
[DEBUG|collector_api.py:200] 2021-02-09 15:52:39,999 > ++++++++++++++태경케미컬++++++++++++++++++++379/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:39,999 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:40,349 > 23
[DEBUG|collector_api.py:200] 2021-02-09 15:52:40,601 > ++++++++++++++토니모리++++++++++++++++++++380/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:40,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:40,957 > 24
[DEBUG|collector_api.py:200] 2021-02-09 15:52:41,191 > ++++++++++++++페이퍼코리아++++++++++++++++++++381/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:41,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:41,563 > 25
[DEBUG|collector_api.py:200] 2021-02-09 15:52:41,823 > ++++++++++++++POSCO++++++++++++++++++++382/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:41,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:42,171 > 26
[DEBUG|collector_api.py:200] 2021-02-09 15:52:42,424 > ++++++++++++++폴루스바이오팜++++++++++++++++++++383/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:42,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:42,779 > 27
[DEBUG|collector_api.py:200] 2021-02-09 15:52:43,060 > ++++++++++++++하나제약++++++++++++++++++++384/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:43,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:43,385 > 28
[DEBUG|collector_api.py:200] 2021-02-09 15:52:43,595 > ++++++++++++++한국쉘석유++++++++++++++++++++385/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:43,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:43,991 > 29
[DEBUG|collector_api.py:200] 2021-02-09 15:52:44,249 > ++++++++++++++한국철강++++++++++++++++++++386/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:44,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:44,598 > 30
[DEBUG|collector_api.py:200] 2021-02-09 15:52:44,828 > ++++++++++++++한국화장품제조++++++++++++++++++++387/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:44,829 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:45,205 > 31
[DEBUG|collector_api.py:200] 2021-02-09 15:52:45,465 > ++++++++++++++한미글로벌++++++++++++++++++++388/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:45,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:45,812 > 32
[DEBUG|collector_api.py:200] 2021-02-09 15:52:46,052 > ++++++++++++++한솔PNS++++++++++++++++++++389/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:46,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:46,420 > 33
[DEBUG|collector_api.py:200] 2021-02-09 15:52:46,669 > ++++++++++++++한양증권++++++++++++++++++++390/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:46,669 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:47,027 > 34
[DEBUG|collector_api.py:200] 2021-02-09 15:52:47,298 > ++++++++++++++한진중공업++++++++++++++++++++391/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:47,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:47,634 > 35
[DEBUG|collector_api.py:200] 2021-02-09 15:52:47,870 > ++++++++++++++한진중공업홀딩스++++++++++++++++++++392/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:47,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:48,243 > 36
[DEBUG|collector_api.py:200] 2021-02-09 15:52:48,504 > ++++++++++++++현대일렉트릭++++++++++++++++++++393/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:48,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:48,850 > 37
[DEBUG|collector_api.py:200] 2021-02-09 15:52:49,091 > ++++++++++++++현대제철++++++++++++++++++++394/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:49,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:49,456 > 38
[DEBUG|collector_api.py:200] 2021-02-09 15:52:49,706 > ++++++++++++++황금에스티++++++++++++++++++++395/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:49,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:50,064 > 39
[DEBUG|collector_api.py:200] 2021-02-09 15:52:50,323 > ++++++++++++++AJ네트웍스++++++++++++++++++++396/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:50,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:50,671 > 40
[DEBUG|collector_api.py:200] 2021-02-09 15:52:50,910 > ++++++++++++++AK홀딩스++++++++++++++++++++397/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:50,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:51,278 > 41
[DEBUG|collector_api.py:200] 2021-02-09 15:52:51,529 > ++++++++++++++CJ++++++++++++++++++++398/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:51,530 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:51,887 > 42
[DEBUG|collector_api.py:200] 2021-02-09 15:52:52,130 > ++++++++++++++CJ씨푸드++++++++++++++++++++399/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:52,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:52,494 > 43
[DEBUG|collector_api.py:200] 2021-02-09 15:52:52,748 > ++++++++++++++DB금융투자++++++++++++++++++++400/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:52,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:53,101 > 44
[DEBUG|collector_api.py:200] 2021-02-09 15:52:53,360 > ++++++++++++++DGB금융지주++++++++++++++++++++401/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:53,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:53,709 > 45
[DEBUG|collector_api.py:200] 2021-02-09 15:52:53,947 > ++++++++++++++E1++++++++++++++++++++402/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:53,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:54,316 > 46
[DEBUG|collector_api.py:200] 2021-02-09 15:52:54,556 > ++++++++++++++F&F++++++++++++++++++++403/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:54,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:54,923 > 47
[DEBUG|collector_api.py:200] 2021-02-09 15:52:55,176 > ++++++++++++++KEC++++++++++++++++++++404/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:55,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:55,531 > 48
[DEBUG|collector_api.py:200] 2021-02-09 15:52:55,757 > ++++++++++++++KISCO홀딩스++++++++++++++++++++405/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:55,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:56,138 > 49
[DEBUG|collector_api.py:200] 2021-02-09 15:52:56,404 > ++++++++++++++LG++++++++++++++++++++406/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:56,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:56,745 > 50
[DEBUG|collector_api.py:200] 2021-02-09 15:52:57,012 > ++++++++++++++LG디스플레이++++++++++++++++++++407/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:57,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:57,353 > 51
[DEBUG|collector_api.py:200] 2021-02-09 15:52:57,594 > ++++++++++++++LS전선아시아++++++++++++++++++++408/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:57,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:57,961 > 52
[DEBUG|collector_api.py:200] 2021-02-09 15:52:58,189 > ++++++++++++++NH프라임리츠++++++++++++++++++++409/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:58,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:58,568 > 53
[DEBUG|collector_api.py:200] 2021-02-09 15:52:58,751 > ++++++++++++++S&T중공업++++++++++++++++++++410/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:58,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:59,177 > 54
[DEBUG|collector_api.py:200] 2021-02-09 15:52:59,473 > ++++++++++++++S&T홀딩스++++++++++++++++++++411/2894
[DEBUG|open_api.py:656] 2021-02-09 15:52:59,473 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:52:59,785 > 55
[DEBUG|collector_api.py:200] 2021-02-09 15:53:00,035 > ++++++++++++++S-Oil++++++++++++++++++++412/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:00,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:00,393 > 56
[DEBUG|collector_api.py:200] 2021-02-09 15:53:00,644 > ++++++++++++++SK네트웍스++++++++++++++++++++413/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:00,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:01,001 > 57
[DEBUG|collector_api.py:200] 2021-02-09 15:53:01,262 > ++++++++++++++SK케미칼++++++++++++++++++++414/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:01,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:01,609 > 58
[DEBUG|collector_api.py:200] 2021-02-09 15:53:01,838 > ++++++++++++++경동인베스트++++++++++++++++++++415/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:01,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:02,217 > 59
[DEBUG|collector_api.py:200] 2021-02-09 15:53:02,476 > ++++++++++++++계룡건설++++++++++++++++++++416/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:02,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:02,825 > 60
[DEBUG|collector_api.py:200] 2021-02-09 15:53:03,065 > ++++++++++++++국동++++++++++++++++++++417/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:03,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:03,432 > 61
[DEBUG|collector_api.py:200] 2021-02-09 15:53:03,677 > ++++++++++++++남양유업++++++++++++++++++++418/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:03,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:04,039 > 62
[DEBUG|collector_api.py:200] 2021-02-09 15:53:04,307 > ++++++++++++++남해화학++++++++++++++++++++419/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:04,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:04,647 > 63
[DEBUG|collector_api.py:200] 2021-02-09 15:53:04,885 > ++++++++++++++노루페인트++++++++++++++++++++420/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:04,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:05,255 > 64
[DEBUG|collector_api.py:200] 2021-02-09 15:53:05,502 > ++++++++++++++대상++++++++++++++++++++421/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:05,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:05,861 > 65
[DEBUG|collector_api.py:200] 2021-02-09 15:53:06,116 > ++++++++++++++대성홀딩스++++++++++++++++++++422/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:06,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:06,469 > 66
[DEBUG|collector_api.py:200] 2021-02-09 15:53:06,704 > ++++++++++++++대한제강++++++++++++++++++++423/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:06,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:07,077 > 67
[DEBUG|collector_api.py:200] 2021-02-09 15:53:07,329 > ++++++++++++++대호에이엘++++++++++++++++++++424/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:07,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:07,683 > 68
[DEBUG|collector_api.py:200] 2021-02-09 15:53:07,933 > ++++++++++++++덴티움++++++++++++++++++++425/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:07,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:08,291 > 69
[DEBUG|collector_api.py:200] 2021-02-09 15:53:08,528 > ++++++++++++++동원F&B++++++++++++++++++++426/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:08,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:08,898 > 70
[DEBUG|collector_api.py:200] 2021-02-09 15:53:09,135 > ++++++++++++++두산퓨얼셀++++++++++++++++++++427/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:09,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:09,505 > 71
[DEBUG|collector_api.py:200] 2021-02-09 15:53:09,690 > ++++++++++++++만호제강++++++++++++++++++++428/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:09,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:10,111 > 72
[DEBUG|collector_api.py:200] 2021-02-09 15:53:10,371 > ++++++++++++++모나미++++++++++++++++++++429/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:10,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:10,719 > 73
[DEBUG|collector_api.py:200] 2021-02-09 15:53:10,974 > ++++++++++++++문배철강++++++++++++++++++++430/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:10,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:11,327 > 74
[DEBUG|collector_api.py:200] 2021-02-09 15:53:11,581 > ++++++++++++++미래에셋생명++++++++++++++++++++431/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:11,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:11,935 > 75
[DEBUG|collector_api.py:200] 2021-02-09 15:53:12,161 > ++++++++++++++미창석유++++++++++++++++++++432/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:12,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:12,542 > 76
[DEBUG|collector_api.py:200] 2021-02-09 15:53:12,794 > ++++++++++++++백광산업++++++++++++++++++++433/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:12,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:13,151 > 77
[DEBUG|collector_api.py:200] 2021-02-09 15:53:13,415 > ++++++++++++++벽산++++++++++++++++++++434/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:13,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:13,757 > 78
[DEBUG|collector_api.py:200] 2021-02-09 15:53:14,018 > ++++++++++++++부국철강++++++++++++++++++++435/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:14,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:14,364 > 79
[DEBUG|collector_api.py:200] 2021-02-09 15:53:14,604 > ++++++++++++++부산가스++++++++++++++++++++436/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:14,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:14,970 > 80
[DEBUG|collector_api.py:200] 2021-02-09 15:53:15,217 > ++++++++++++++비비안++++++++++++++++++++437/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:15,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:15,577 > 81
[DEBUG|collector_api.py:200] 2021-02-09 15:53:15,830 > ++++++++++++++비상교육++++++++++++++++++++438/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:15,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:16,184 > 82
[DEBUG|collector_api.py:200] 2021-02-09 15:53:16,438 > ++++++++++++++사조산업++++++++++++++++++++439/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:16,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:16,791 > 83
[DEBUG|collector_api.py:200] 2021-02-09 15:53:17,043 > ++++++++++++++삼부토건++++++++++++++++++++440/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:17,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:17,398 > 84
[DEBUG|collector_api.py:200] 2021-02-09 15:53:17,638 > ++++++++++++++삼성공조++++++++++++++++++++441/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:17,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:18,005 > 85
[DEBUG|collector_api.py:200] 2021-02-09 15:53:18,258 > ++++++++++++++삼성생명++++++++++++++++++++442/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:18,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:18,613 > 86
[DEBUG|collector_api.py:200] 2021-02-09 15:53:18,841 > ++++++++++++++삼성전기++++++++++++++++++++443/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:18,841 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:19,221 > 87
[DEBUG|collector_api.py:200] 2021-02-09 15:53:19,489 > ++++++++++++++삼양사++++++++++++++++++++444/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:19,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:19,828 > 88
[DEBUG|collector_api.py:200] 2021-02-09 15:53:20,075 > ++++++++++++++삼양패키징++++++++++++++++++++445/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:20,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:20,436 > 89
[DEBUG|collector_api.py:200] 2021-02-09 15:53:20,663 > ++++++++++++++삼일씨엔에스++++++++++++++++++++446/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:20,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:21,042 > 90
[DEBUG|collector_api.py:200] 2021-02-09 15:53:21,278 > ++++++++++++++삼화전기++++++++++++++++++++447/2894
[DEBUG|open_api.py:656] 2021-02-09 15:53:21,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:53:21,649 > 91
[DEBUG|open_api.py:303] 2021-02-09 15:57:27,006 > connected
[DEBUG|open_api.py:244] 2021-02-09 15:57:27,006 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 15:57:27,007 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 15:57:27,013 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 15:57:27,013 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 15:57:27,013 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 15:57:27,013 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 15:57:27,027 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 15:57:27,058 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 15:57:27,059 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 15:57:27,059 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 15:57:27,075 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 15:57:27,112 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 15:57:30,306 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 15:57:30,308 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 15:57:30,345 > ++++++++++++++삼화전기++++++++++++++++++++447/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:30,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:30,391 > 1
[DEBUG|collector_api.py:200] 2021-02-09 15:57:32,603 > ++++++++++++++샘표++++++++++++++++++++448/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:32,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:32,605 > 2
[DEBUG|collector_api.py:200] 2021-02-09 15:57:33,670 > ++++++++++++++서흥++++++++++++++++++++449/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:33,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:33,672 > 3
[DEBUG|collector_api.py:200] 2021-02-09 15:57:34,281 > ++++++++++++++세아베스틸++++++++++++++++++++450/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:34,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:34,284 > 4
[DEBUG|collector_api.py:200] 2021-02-09 15:57:35,614 > ++++++++++++++세하++++++++++++++++++++451/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:35,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:35,616 > 5
[DEBUG|collector_api.py:200] 2021-02-09 15:57:36,303 > ++++++++++++++수산중공업++++++++++++++++++++452/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:36,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:36,304 > 6
[DEBUG|collector_api.py:200] 2021-02-09 15:57:37,634 > ++++++++++++++신세계건설++++++++++++++++++++453/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:37,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:37,635 > 7
[DEBUG|collector_api.py:200] 2021-02-09 15:57:38,463 > ++++++++++++++신영와코루++++++++++++++++++++454/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:38,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:38,465 > 8
[DEBUG|collector_api.py:200] 2021-02-09 15:57:39,096 > ++++++++++++++신영증권++++++++++++++++++++455/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:39,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:39,097 > 9
[DEBUG|collector_api.py:200] 2021-02-09 15:57:40,483 > ++++++++++++++신원++++++++++++++++++++456/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:40,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:40,484 > 10
[DEBUG|collector_api.py:200] 2021-02-09 15:57:41,775 > ++++++++++++++신풍제지++++++++++++++++++++457/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:41,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:41,776 > 11
[DEBUG|collector_api.py:200] 2021-02-09 15:57:42,341 > ++++++++++++++에스엘++++++++++++++++++++458/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:42,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:42,385 > 12
[DEBUG|collector_api.py:200] 2021-02-09 15:57:42,634 > ++++++++++++++에이프로젠 KIC++++++++++++++++++++459/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:42,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:42,992 > 13
[DEBUG|collector_api.py:200] 2021-02-09 15:57:43,249 > ++++++++++++++엘브이엠씨홀딩스++++++++++++++++++++460/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:43,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:43,601 > 14
[DEBUG|collector_api.py:200] 2021-02-09 15:57:43,836 > ++++++++++++++LS ELECTRIC++++++++++++++++++++461/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:43,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:44,209 > 15
[DEBUG|collector_api.py:200] 2021-02-09 15:57:44,465 > ++++++++++++++오리온++++++++++++++++++++462/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:44,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:44,817 > 16
[DEBUG|collector_api.py:200] 2021-02-09 15:57:45,035 > ++++++++++++++우리금융지주++++++++++++++++++++463/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:45,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:45,425 > 17
[DEBUG|collector_api.py:200] 2021-02-09 15:57:45,642 > ++++++++++++++우성사료++++++++++++++++++++464/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:45,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:46,031 > 18
[DEBUG|collector_api.py:200] 2021-02-09 15:57:46,274 > ++++++++++++++웰바이오텍++++++++++++++++++++465/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:46,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:46,638 > 19
[DEBUG|collector_api.py:200] 2021-02-09 15:57:46,887 > ++++++++++++++유니온++++++++++++++++++++466/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:46,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:47,246 > 20
[DEBUG|collector_api.py:200] 2021-02-09 15:57:47,491 > ++++++++++++++유안타증권++++++++++++++++++++467/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:47,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:47,852 > 21
[DEBUG|collector_api.py:200] 2021-02-09 15:57:48,128 > ++++++++++++++일진전기++++++++++++++++++++468/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:48,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:48,459 > 22
[DEBUG|collector_api.py:200] 2021-02-09 15:57:48,700 > ++++++++++++++조광피혁++++++++++++++++++++469/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:48,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:49,065 > 23
[DEBUG|collector_api.py:200] 2021-02-09 15:57:49,323 > ++++++++++++++조일알미늄++++++++++++++++++++470/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:49,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:49,673 > 24
[DEBUG|collector_api.py:200] 2021-02-09 15:57:49,960 > ++++++++++++++진흥기업++++++++++++++++++++471/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:49,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:50,279 > 25
[DEBUG|collector_api.py:200] 2021-02-09 15:57:50,548 > ++++++++++++++카카오++++++++++++++++++++472/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:50,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:50,886 > 26
[DEBUG|collector_api.py:200] 2021-02-09 15:57:51,142 > ++++++++++++++KCTC++++++++++++++++++++473/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:51,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:51,493 > 27
[DEBUG|collector_api.py:200] 2021-02-09 15:57:51,747 > ++++++++++++++KT++++++++++++++++++++474/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:51,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:52,099 > 28
[DEBUG|collector_api.py:200] 2021-02-09 15:57:52,338 > ++++++++++++++코리안리++++++++++++++++++++475/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:52,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:52,705 > 29
[DEBUG|collector_api.py:200] 2021-02-09 15:57:52,959 > ++++++++++++++코스맥스비티아이++++++++++++++++++++476/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:52,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:53,312 > 30
[DEBUG|collector_api.py:200] 2021-02-09 15:57:53,559 > ++++++++++++++코오롱머티리얼++++++++++++++++++++477/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:53,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:53,919 > 31
[DEBUG|collector_api.py:200] 2021-02-09 15:57:54,147 > ++++++++++++++크라운제과++++++++++++++++++++478/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:54,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:54,527 > 32
[DEBUG|collector_api.py:200] 2021-02-09 15:57:54,744 > ++++++++++++++크라운해태홀딩스++++++++++++++++++++479/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:54,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:55,136 > 33
[DEBUG|collector_api.py:200] 2021-02-09 15:57:55,387 > ++++++++++++++키움증권++++++++++++++++++++480/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:55,387 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:55,743 > 34
[DEBUG|collector_api.py:200] 2021-02-09 15:57:55,970 > ++++++++++++++태림포장++++++++++++++++++++481/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:55,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:56,351 > 35
[DEBUG|collector_api.py:200] 2021-02-09 15:57:56,610 > ++++++++++++++태원물산++++++++++++++++++++482/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:56,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:56,958 > 36
[DEBUG|collector_api.py:200] 2021-02-09 15:57:57,220 > ++++++++++++++티에이치엔++++++++++++++++++++483/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:57,220 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:57,566 > 37
[DEBUG|collector_api.py:200] 2021-02-09 15:57:57,806 > ++++++++++++++팬오션++++++++++++++++++++484/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:57,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:58,173 > 38
[DEBUG|collector_api.py:200] 2021-02-09 15:57:58,416 > ++++++++++++++평화산업++++++++++++++++++++485/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:58,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:58,779 > 39
[DEBUG|collector_api.py:200] 2021-02-09 15:57:59,017 > ++++++++++++++피비파마++++++++++++++++++++486/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:59,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:59,387 > 40
[DEBUG|collector_api.py:200] 2021-02-09 15:57:59,547 > ++++++++++++++하나투어++++++++++++++++++++487/2894
[DEBUG|open_api.py:656] 2021-02-09 15:57:59,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:57:59,995 > 41
[DEBUG|collector_api.py:200] 2021-02-09 15:58:00,241 > ++++++++++++++하이골드12호++++++++++++++++++++488/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:00,241 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:00,601 > 42
[DEBUG|collector_api.py:200] 2021-02-09 15:58:00,822 > ++++++++++++++한국앤컴퍼니++++++++++++++++++++489/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:00,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:01,209 > 43
[DEBUG|collector_api.py:200] 2021-02-09 15:58:01,477 > ++++++++++++++한국프랜지++++++++++++++++++++490/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:01,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:01,816 > 44
[DEBUG|collector_api.py:200] 2021-02-09 15:58:02,080 > ++++++++++++++한독++++++++++++++++++++491/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:02,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:02,423 > 45
[DEBUG|collector_api.py:200] 2021-02-09 15:58:02,682 > ++++++++++++++한세엠케이++++++++++++++++++++492/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:02,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:03,031 > 46
[DEBUG|collector_api.py:200] 2021-02-09 15:58:03,294 > ++++++++++++++한솔제지++++++++++++++++++++493/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:03,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:03,638 > 47
[DEBUG|collector_api.py:200] 2021-02-09 15:58:03,865 > ++++++++++++++한솔케미칼++++++++++++++++++++494/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:03,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:04,246 > 48
[DEBUG|collector_api.py:200] 2021-02-09 15:58:04,499 > ++++++++++++++한솔테크닉스++++++++++++++++++++495/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:04,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:04,853 > 49
[DEBUG|collector_api.py:200] 2021-02-09 15:58:05,118 > ++++++++++++++한진++++++++++++++++++++496/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:05,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:05,460 > 50
[DEBUG|collector_api.py:200] 2021-02-09 15:58:05,732 > ++++++++++++++해성디에스++++++++++++++++++++497/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:05,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:06,068 > 51
[DEBUG|collector_api.py:200] 2021-02-09 15:58:06,287 > ++++++++++++++현대리바트++++++++++++++++++++498/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:06,287 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:06,675 > 52
[DEBUG|collector_api.py:200] 2021-02-09 15:58:06,896 > ++++++++++++++현대백화점++++++++++++++++++++499/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:06,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:07,284 > 53
[DEBUG|collector_api.py:200] 2021-02-09 15:58:07,500 > ++++++++++++++형지엘리트++++++++++++++++++++500/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:07,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:07,891 > 54
[DEBUG|collector_api.py:200] 2021-02-09 15:58:08,150 > ++++++++++++++혜인++++++++++++++++++++501/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:08,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:08,498 > 55
[DEBUG|collector_api.py:200] 2021-02-09 15:58:08,751 > ++++++++++++++화성산업++++++++++++++++++++502/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:08,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:09,106 > 56
[DEBUG|collector_api.py:200] 2021-02-09 15:58:09,358 > ++++++++++++++휴비스++++++++++++++++++++503/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:09,358 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:09,712 > 57
[DEBUG|collector_api.py:200] 2021-02-09 15:58:09,936 > ++++++++++++++BGF++++++++++++++++++++504/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:09,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:10,320 > 58
[DEBUG|collector_api.py:200] 2021-02-09 15:58:10,550 > ++++++++++++++CS홀딩스++++++++++++++++++++505/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:10,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:10,927 > 59
[DEBUG|collector_api.py:200] 2021-02-09 15:58:11,170 > ++++++++++++++DB++++++++++++++++++++506/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:11,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:11,534 > 60
[DEBUG|collector_api.py:200] 2021-02-09 15:58:11,776 > ++++++++++++++DL++++++++++++++++++++507/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:11,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:12,141 > 61
[DEBUG|collector_api.py:200] 2021-02-09 15:58:12,382 > ++++++++++++++GS리테일++++++++++++++++++++508/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:12,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:12,747 > 62
[DEBUG|collector_api.py:200] 2021-02-09 15:58:12,988 > ++++++++++++++HDC++++++++++++++++++++509/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:12,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:13,353 > 63
[DEBUG|collector_api.py:200] 2021-02-09 15:58:13,609 > ++++++++++++++JW생명과학++++++++++++++++++++510/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:13,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:13,960 > 64
[DEBUG|collector_api.py:200] 2021-02-09 15:58:14,187 > ++++++++++++++KC그린홀딩스++++++++++++++++++++511/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:14,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:14,568 > 65
[DEBUG|collector_api.py:200] 2021-02-09 15:58:14,810 > ++++++++++++++KR모터스++++++++++++++++++++512/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:14,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:15,174 > 66
[DEBUG|collector_api.py:200] 2021-02-09 15:58:15,427 > ++++++++++++++LG유플러스++++++++++++++++++++513/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:15,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:15,781 > 67
[DEBUG|collector_api.py:200] 2021-02-09 15:58:16,011 > ++++++++++++++SPC삼립++++++++++++++++++++514/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:16,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:16,388 > 68
[DEBUG|collector_api.py:200] 2021-02-09 15:58:16,661 > ++++++++++++++경농++++++++++++++++++++515/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:16,662 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:16,995 > 69
[DEBUG|collector_api.py:200] 2021-02-09 15:58:17,262 > ++++++++++++++경동도시가스++++++++++++++++++++516/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:17,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:17,602 > 70
[DEBUG|collector_api.py:200] 2021-02-09 15:58:17,826 > ++++++++++++++경방++++++++++++++++++++517/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:17,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:18,209 > 71
[DEBUG|collector_api.py:200] 2021-02-09 15:58:18,475 > ++++++++++++++고려제강++++++++++++++++++++518/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:18,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:18,817 > 72
[DEBUG|collector_api.py:200] 2021-02-09 15:58:19,078 > ++++++++++++++광동제약++++++++++++++++++++519/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:19,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:19,423 > 73
[DEBUG|collector_api.py:200] 2021-02-09 15:58:19,680 > ++++++++++++++광주신세계++++++++++++++++++++520/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:19,681 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:20,031 > 74
[DEBUG|collector_api.py:200] 2021-02-09 15:58:20,289 > ++++++++++++++국도화학++++++++++++++++++++521/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:20,289 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:20,637 > 75
[DEBUG|collector_api.py:200] 2021-02-09 15:58:20,893 > ++++++++++++++금비++++++++++++++++++++522/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:20,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:21,245 > 76
[DEBUG|collector_api.py:200] 2021-02-09 15:58:21,501 > ++++++++++++++금호타이어++++++++++++++++++++523/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:21,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:21,854 > 77
[DEBUG|collector_api.py:200] 2021-02-09 15:58:22,113 > ++++++++++++++대림통상++++++++++++++++++++524/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:22,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:22,461 > 78
[DEBUG|collector_api.py:200] 2021-02-09 15:58:22,716 > ++++++++++++++대신증권++++++++++++++++++++525/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:22,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:23,068 > 79
[DEBUG|collector_api.py:200] 2021-02-09 15:58:23,360 > ++++++++++++++대원강업++++++++++++++++++++526/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:23,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:23,676 > 80
[DEBUG|collector_api.py:200] 2021-02-09 15:58:23,932 > ++++++++++++++대원전선++++++++++++++++++++527/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:23,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:24,285 > 81
[DEBUG|collector_api.py:200] 2021-02-09 15:58:24,541 > ++++++++++++++대원화성++++++++++++++++++++528/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:24,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:24,892 > 82
[DEBUG|collector_api.py:200] 2021-02-09 15:58:25,137 > ++++++++++++++대유에이텍++++++++++++++++++++529/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:25,137 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:25,499 > 83
[DEBUG|collector_api.py:200] 2021-02-09 15:58:25,768 > ++++++++++++++더블유게임즈++++++++++++++++++++530/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:25,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:26,105 > 84
[DEBUG|collector_api.py:200] 2021-02-09 15:58:26,331 > ++++++++++++++동부건설++++++++++++++++++++531/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:26,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:26,712 > 85
[DEBUG|collector_api.py:200] 2021-02-09 15:58:26,959 > ++++++++++++++동성제약++++++++++++++++++++532/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:26,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:27,318 > 86
[DEBUG|collector_api.py:200] 2021-02-09 15:58:27,580 > ++++++++++++++동아에스티++++++++++++++++++++533/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:27,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:27,925 > 87
[DEBUG|collector_api.py:200] 2021-02-09 15:58:28,155 > ++++++++++++++동양고속++++++++++++++++++++534/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:28,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:28,532 > 88
[DEBUG|collector_api.py:200] 2021-02-09 15:58:28,768 > ++++++++++++++동양철관++++++++++++++++++++535/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:28,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:29,140 > 89
[DEBUG|collector_api.py:200] 2021-02-09 15:58:29,390 > ++++++++++++++동원수산++++++++++++++++++++536/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:29,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:29,747 > 90
[DEBUG|collector_api.py:200] 2021-02-09 15:58:29,990 > ++++++++++++++롯데쇼핑++++++++++++++++++++537/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:29,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:30,354 > 91
[DEBUG|collector_api.py:200] 2021-02-09 15:58:30,597 > ++++++++++++++메리츠화재++++++++++++++++++++538/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:30,597 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:30,960 > 92
[DEBUG|collector_api.py:200] 2021-02-09 15:58:31,216 > ++++++++++++++미원에스씨++++++++++++++++++++539/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:31,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:31,567 > 93
[DEBUG|collector_api.py:200] 2021-02-09 15:58:31,783 > ++++++++++++++부광약품++++++++++++++++++++540/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:31,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:32,174 > 94
[DEBUG|collector_api.py:200] 2021-02-09 15:58:32,437 > ++++++++++++++부산산업++++++++++++++++++++541/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:32,437 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:32,782 > 95
[DEBUG|collector_api.py:200] 2021-02-09 15:58:33,041 > ++++++++++++++삼익악기++++++++++++++++++++542/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:33,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:33,390 > 96
[DEBUG|collector_api.py:200] 2021-02-09 15:58:33,653 > ++++++++++++++삼천리++++++++++++++++++++543/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:33,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:33,996 > 97
[DEBUG|collector_api.py:200] 2021-02-09 15:58:34,270 > ++++++++++++++서울식품++++++++++++++++++++544/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:34,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:34,605 > 98
[DEBUG|collector_api.py:200] 2021-02-09 15:58:34,842 > ++++++++++++++성창기업지주++++++++++++++++++++545/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:34,843 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:35,212 > 99
[DEBUG|collector_api.py:200] 2021-02-09 15:58:35,478 > ++++++++++++++세종공업++++++++++++++++++++546/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:35,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:35,820 > 100
[DEBUG|collector_api.py:200] 2021-02-09 15:58:36,104 > ++++++++++++++솔루엠++++++++++++++++++++547/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:36,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:36,426 > 101
[DEBUG|collector_api.py:200] 2021-02-09 15:58:36,568 > ++++++++++++++시디즈++++++++++++++++++++548/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:36,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:37,033 > 102
[DEBUG|collector_api.py:200] 2021-02-09 15:58:37,259 > ++++++++++++++아시아나항공++++++++++++++++++++549/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:37,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:37,640 > 103
[DEBUG|collector_api.py:200] 2021-02-09 15:58:37,875 > ++++++++++++++알루코++++++++++++++++++++550/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:37,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:38,247 > 104
[DEBUG|collector_api.py:200] 2021-02-09 15:58:38,495 > ++++++++++++++SJM홀딩스++++++++++++++++++++551/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:38,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:38,854 > 105
[DEBUG|collector_api.py:200] 2021-02-09 15:58:39,096 > ++++++++++++++오뚜기++++++++++++++++++++552/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:39,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:39,462 > 106
[DEBUG|collector_api.py:200] 2021-02-09 15:58:39,704 > ++++++++++++++유성기업++++++++++++++++++++553/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:39,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:40,068 > 107
[DEBUG|collector_api.py:200] 2021-02-09 15:58:40,311 > ++++++++++++++이리츠코크렙++++++++++++++++++++554/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:40,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:40,674 > 108
[DEBUG|collector_api.py:200] 2021-02-09 15:58:40,892 > ++++++++++++++이수페타시스++++++++++++++++++++555/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:40,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:41,281 > 109
[DEBUG|collector_api.py:200] 2021-02-09 15:58:41,542 > ++++++++++++++이아이디++++++++++++++++++++556/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:41,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:41,889 > 110
[DEBUG|collector_api.py:200] 2021-02-09 15:58:42,131 > ++++++++++++++인디에프++++++++++++++++++++557/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:42,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:42,497 > 111
[DEBUG|collector_api.py:200] 2021-02-09 15:58:42,756 > ++++++++++++++일동홀딩스++++++++++++++++++++558/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:42,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:43,105 > 112
[DEBUG|collector_api.py:200] 2021-02-09 15:58:43,357 > ++++++++++++++일진홀딩스++++++++++++++++++++559/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:43,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:43,712 > 113
[DEBUG|collector_api.py:200] 2021-02-09 15:58:43,955 > ++++++++++++++자이에스앤디++++++++++++++++++++560/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:43,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:44,318 > 114
[DEBUG|collector_api.py:200] 2021-02-09 15:58:44,516 > ++++++++++++++자화전자++++++++++++++++++++561/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:44,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:44,926 > 115
[DEBUG|collector_api.py:200] 2021-02-09 15:58:45,161 > ++++++++++++++전방++++++++++++++++++++562/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:45,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:45,534 > 116
[DEBUG|collector_api.py:200] 2021-02-09 15:58:45,782 > ++++++++++++++제이알글로벌리츠++++++++++++++++++++563/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:45,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:46,140 > 117
[DEBUG|collector_api.py:200] 2021-02-09 15:58:46,308 > ++++++++++++++제이콘텐트리++++++++++++++++++++564/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:46,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:46,746 > 118
[DEBUG|collector_api.py:200] 2021-02-09 15:58:46,984 > ++++++++++++++제일기획++++++++++++++++++++565/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:46,985 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:47,354 > 119
[DEBUG|collector_api.py:200] 2021-02-09 15:58:47,600 > ++++++++++++++지투알++++++++++++++++++++566/2894
[DEBUG|open_api.py:656] 2021-02-09 15:58:47,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 15:58:47,960 > 120
[DEBUG|open_api.py:303] 2021-02-09 16:02:36,799 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:02:36,799 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:02:36,800 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:02:36,806 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:02:36,806 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:02:36,806 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:02:36,806 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:02:36,820 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:02:36,853 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:02:36,854 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:02:36,854 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:02:36,885 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:02:36,918 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:02:39,424 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:02:39,426 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:02:39,469 > ++++++++++++++지투알++++++++++++++++++++566/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:39,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:39,471 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:02:40,633 > ++++++++++++++진양폴리++++++++++++++++++++567/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:40,633 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:40,635 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:02:40,905 > ++++++++++++++KCC++++++++++++++++++++568/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:40,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:41,243 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:02:41,515 > ++++++++++++++코스맥스++++++++++++++++++++569/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:41,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:41,850 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:02:42,096 > ++++++++++++++콤텍시스템++++++++++++++++++++570/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:42,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:42,457 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:02:42,732 > ++++++++++++++태경비케이++++++++++++++++++++571/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:42,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:43,064 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:02:43,340 > ++++++++++++++티웨이항공++++++++++++++++++++572/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:43,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:43,671 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:02:43,916 > ++++++++++++++퍼스텍++++++++++++++++++++573/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:43,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:44,277 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:02:44,557 > ++++++++++++++포스코인터내셔널++++++++++++++++++++574/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:44,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:44,884 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:02:45,129 > ++++++++++++++하이골드3호++++++++++++++++++++575/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:45,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:45,490 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:02:45,742 > ++++++++++++++한국ANKOR유전++++++++++++++++++++576/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:45,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:46,097 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:02:46,370 > ++++++++++++++한국내화++++++++++++++++++++577/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:46,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:46,704 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:02:46,978 > ++++++++++++++한국주철관++++++++++++++++++++578/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:46,978 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:47,312 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:02:47,584 > ++++++++++++++한국화장품++++++++++++++++++++579/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:47,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:47,920 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:02:48,172 > ++++++++++++++한라++++++++++++++++++++580/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:48,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:48,528 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:02:48,808 > ++++++++++++++한미반도체++++++++++++++++++++581/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:48,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:49,137 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:02:49,389 > ++++++++++++++한섬++++++++++++++++++++582/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:49,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:49,746 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:02:50,010 > ++++++++++++++한세실업++++++++++++++++++++583/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:50,010 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:50,354 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:02:50,636 > ++++++++++++++한솔홈데코++++++++++++++++++++584/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:50,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:50,960 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:02:51,218 > ++++++++++++++한올바이오파마++++++++++++++++++++585/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:51,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:51,567 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:02:51,860 > ++++++++++++++한전산업++++++++++++++++++++586/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:51,860 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:52,176 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:02:52,462 > ++++++++++++++한화손해보험++++++++++++++++++++587/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:52,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:52,782 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:02:53,062 > ++++++++++++++핸즈코퍼레이션++++++++++++++++++++588/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:53,063 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:53,388 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:02:53,675 > ++++++++++++++현대비앤지스틸++++++++++++++++++++589/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:53,675 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:53,995 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:02:54,274 > ++++++++++++++현대오토에버++++++++++++++++++++590/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:54,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:54,603 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:02:54,845 > ++++++++++++++화승엔터프라이즈++++++++++++++++++++591/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:54,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:55,210 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:02:55,487 > ++++++++++++++화인베스틸++++++++++++++++++++592/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:55,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:55,816 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:02:56,039 > ++++++++++++++화천기계++++++++++++++++++++593/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:56,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:56,423 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:02:56,676 > ++++++++++++++효성첨단소재++++++++++++++++++++594/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:56,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:57,033 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:02:57,263 > ++++++++++++++후성++++++++++++++++++++595/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:57,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:57,640 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:02:57,886 > ++++++++++++++휠라홀딩스++++++++++++++++++++596/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:57,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:58,248 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:02:58,495 > ++++++++++++++휴스틸++++++++++++++++++++597/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:58,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:58,855 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:02:59,118 > ++++++++++++++DB하이텍++++++++++++++++++++598/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:59,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:02:59,462 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:02:59,735 > ++++++++++++++DL이앤씨++++++++++++++++++++599/2894
[DEBUG|open_api.py:656] 2021-02-09 16:02:59,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:00,070 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:03:00,234 > ++++++++++++++HSD엔진++++++++++++++++++++600/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:00,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:00,676 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:03:00,923 > ++++++++++++++KG동부제철++++++++++++++++++++601/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:00,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:01,285 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:03:01,565 > ++++++++++++++KTB투자증권++++++++++++++++++++602/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:01,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:01,894 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:03:02,185 > ++++++++++++++KTcs++++++++++++++++++++603/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:02,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:02,502 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:03:02,763 > ++++++++++++++LG생활건강++++++++++++++++++++604/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:02,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:03,113 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:03:03,373 > ++++++++++++++SG세계물산++++++++++++++++++++605/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:03,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:03,722 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:03:04,012 > ++++++++++++++SIMPAC++++++++++++++++++++606/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:04,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:04,330 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:03:04,630 > ++++++++++++++SKC++++++++++++++++++++607/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:04,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:04,939 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:03:05,199 > ++++++++++++++SK가스++++++++++++++++++++608/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:05,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:05,547 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:03:05,822 > ++++++++++++++SK디앤디++++++++++++++++++++609/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:05,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:06,155 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:03:06,412 > ++++++++++++++SK렌터카++++++++++++++++++++610/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:06,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:06,764 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:03:07,002 > ++++++++++++++STX엔진++++++++++++++++++++611/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:07,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:07,370 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:03:07,608 > ++++++++++++++STX중공업++++++++++++++++++++612/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:07,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:07,977 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:03:08,236 > ++++++++++++++TCC스틸++++++++++++++++++++613/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:08,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:08,584 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:03:08,854 > ++++++++++++++가온전선++++++++++++++++++++614/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:08,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:09,192 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:03:09,484 > ++++++++++++++경보제약++++++++++++++++++++615/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:09,485 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:09,800 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:03:10,032 > ++++++++++++++계양전기++++++++++++++++++++616/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:10,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:10,409 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:03:10,702 > ++++++++++++++고려산업++++++++++++++++++++617/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:10,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:11,018 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:03:11,335 > ++++++++++++++광전자++++++++++++++++++++618/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:11,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:11,626 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:03:11,872 > ++++++++++++++기아차++++++++++++++++++++619/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:11,872 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:12,232 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:03:12,531 > ++++++++++++++넥센++++++++++++++++++++620/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:12,531 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:12,840 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:03:13,100 > ++++++++++++++넥스트사이언스++++++++++++++++++++621/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:13,101 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:13,447 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:03:13,732 > ++++++++++++++농심++++++++++++++++++++622/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:13,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:14,056 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:03:14,346 > ++++++++++++++다우기술++++++++++++++++++++623/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:14,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:14,664 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:03:14,919 > ++++++++++++++대성산업++++++++++++++++++++624/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:14,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:15,272 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:03:15,545 > ++++++++++++++대유플러스++++++++++++++++++++625/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:15,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:15,880 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:03:16,143 > ++++++++++++++대한전선++++++++++++++++++++626/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:16,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:16,489 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:03:16,792 > ++++++++++++++대한제분++++++++++++++++++++627/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:16,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:17,097 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:03:17,385 > ++++++++++++++대한항공++++++++++++++++++++628/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:17,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:17,704 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:03:17,971 > ++++++++++++++대한화섬++++++++++++++++++++629/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:17,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:18,310 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:03:18,596 > ++++++++++++++동남합성++++++++++++++++++++630/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:18,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:18,918 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:03:19,178 > ++++++++++++++동방++++++++++++++++++++631/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:19,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:19,527 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:03:19,817 > ++++++++++++++동아타이어++++++++++++++++++++632/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:19,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:20,135 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:03:20,402 > ++++++++++++++동양피스톤++++++++++++++++++++633/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:20,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:20,742 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:03:21,018 > ++++++++++++++동원시스템즈++++++++++++++++++++634/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:21,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:21,351 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:03:21,622 > ++++++++++++++디와이파워++++++++++++++++++++635/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:21,623 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:21,959 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:03:22,226 > ++++++++++++++롯데리츠++++++++++++++++++++636/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:22,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:22,567 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:03:22,791 > ++++++++++++++메리츠금융지주++++++++++++++++++++637/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:22,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:23,174 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:03:23,434 > ++++++++++++++무림P&P++++++++++++++++++++638/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:23,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:23,782 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:03:24,074 > ++++++++++++++미원상사++++++++++++++++++++639/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:24,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:24,390 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:03:24,670 > ++++++++++++++방림++++++++++++++++++++640/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:24,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:24,997 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:03:25,278 > ++++++++++++++보령제약++++++++++++++++++++641/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:25,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:25,603 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:03:25,893 > ++++++++++++++사조오양++++++++++++++++++++642/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:25,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:26,211 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:03:26,539 > ++++++++++++++삼아알미늄++++++++++++++++++++643/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:26,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:26,817 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:03:27,095 > ++++++++++++++삼호개발++++++++++++++++++++644/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:27,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:27,424 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:03:27,693 > ++++++++++++++삼화전자++++++++++++++++++++645/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:27,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:28,031 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:03:28,299 > ++++++++++++++삼화페인트++++++++++++++++++++646/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:28,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:28,638 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:03:28,931 > ++++++++++++++새론오토모티브++++++++++++++++++++647/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:28,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:29,246 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:03:29,515 > ++++++++++++++성문전자++++++++++++++++++++648/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:29,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:29,855 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:03:30,167 > ++++++++++++++세아제강지주++++++++++++++++++++649/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:30,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:30,463 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:03:30,753 > ++++++++++++++신세계 I&C++++++++++++++++++++650/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:30,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:31,071 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:03:31,359 > ++++++++++++++쌍방울++++++++++++++++++++651/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:31,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:31,678 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:03:31,938 > ++++++++++++++쌍용양회++++++++++++++++++++652/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:31,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:32,286 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:03:32,580 > ++++++++++++++아남전자++++++++++++++++++++653/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:32,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:32,893 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:03:33,169 > ++++++++++++++아세아제지++++++++++++++++++++654/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:33,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:33,501 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:03:33,791 > ++++++++++++++아시아나IDT++++++++++++++++++++655/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:33,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:34,110 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:03:34,377 > ++++++++++++++애경유화++++++++++++++++++++656/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:34,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:34,718 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:03:34,964 > ++++++++++++++에어부산++++++++++++++++++++657/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:34,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:35,326 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:03:35,573 > ++++++++++++++에이엔피++++++++++++++++++++658/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:35,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:35,933 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:03:36,224 > ++++++++++++++엔케이물산++++++++++++++++++++659/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:36,224 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:36,541 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:03:36,849 > ++++++++++++++영흥++++++++++++++++++++660/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:36,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:37,149 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:03:37,395 > ++++++++++++++오리엔트바이오++++++++++++++++++++661/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:37,395 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:37,756 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:03:38,045 > ++++++++++++++오리온홀딩스++++++++++++++++++++662/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:38,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:38,363 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:03:38,687 > ++++++++++++++용평리조트++++++++++++++++++++663/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:38,687 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:38,971 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:03:39,196 > ++++++++++++++웅진++++++++++++++++++++664/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:39,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:39,578 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:03:39,847 > ++++++++++++++원림++++++++++++++++++++665/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:39,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:40,186 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:03:40,452 > ++++++++++++++유니퀘스트++++++++++++++++++++666/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:40,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:40,794 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:03:41,039 > ++++++++++++++이엔플러스++++++++++++++++++++667/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:41,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:41,400 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:03:41,636 > ++++++++++++++이지스밸류리츠++++++++++++++++++++668/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:41,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:42,007 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:03:42,226 > ++++++++++++++인바이오젠++++++++++++++++++++669/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:42,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:42,614 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:03:42,844 > ++++++++++++++일동제약++++++++++++++++++++670/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:42,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:43,222 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:03:43,439 > ++++++++++++++일신석재++++++++++++++++++++671/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:43,440 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:43,829 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:03:44,068 > ++++++++++++++일양약품++++++++++++++++++++672/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:44,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:44,438 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:03:44,692 > ++++++++++++++주연테크++++++++++++++++++++673/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:44,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:45,046 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:03:45,290 > ++++++++++++++지코++++++++++++++++++++674/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:45,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:45,654 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:03:45,889 > ++++++++++++++진양산업++++++++++++++++++++675/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:45,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:46,260 > 110
[DEBUG|collector_api.py:200] 2021-02-09 16:03:46,525 > ++++++++++++++케이비아이동국실업++++++++++++++++++++676/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:46,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:46,868 > 111
[DEBUG|collector_api.py:200] 2021-02-09 16:03:47,130 > ++++++++++++++케이씨++++++++++++++++++++677/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:47,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:47,476 > 112
[DEBUG|collector_api.py:200] 2021-02-09 16:03:47,734 > ++++++++++++++스카이라이프++++++++++++++++++++678/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:47,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:48,083 > 113
[DEBUG|collector_api.py:200] 2021-02-09 16:03:48,331 > ++++++++++++++코오롱++++++++++++++++++++679/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:48,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:48,690 > 114
[DEBUG|collector_api.py:200] 2021-02-09 16:03:48,945 > ++++++++++++++티웨이홀딩스++++++++++++++++++++680/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:48,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:49,298 > 115
[DEBUG|collector_api.py:200] 2021-02-09 16:03:49,578 > ++++++++++++++파미셀++++++++++++++++++++681/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:49,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:49,904 > 116
[DEBUG|collector_api.py:200] 2021-02-09 16:03:50,158 > ++++++++++++++평화홀딩스++++++++++++++++++++682/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:50,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:50,513 > 117
[DEBUG|collector_api.py:200] 2021-02-09 16:03:50,778 > ++++++++++++++풀무원++++++++++++++++++++683/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:50,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:51,121 > 118
[DEBUG|collector_api.py:200] 2021-02-09 16:03:51,373 > ++++++++++++++하이트진로홀딩스++++++++++++++++++++684/2894
[DEBUG|open_api.py:656] 2021-02-09 16:03:51,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:03:51,729 > 119
[DEBUG|open_api.py:303] 2021-02-09 16:08:00,325 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:08:00,326 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:08:00,326 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:08:00,327 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:08:00,327 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:08:00,327 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:08:00,327 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:08:00,342 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:08:00,372 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:08:00,373 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:08:00,373 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:08:00,389 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:08:00,422 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:08:03,005 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:08:03,006 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:08:03,044 > ++++++++++++++하이트진로홀딩스++++++++++++++++++++684/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:03,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:03,045 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:08:04,224 > ++++++++++++++한국단자++++++++++++++++++++685/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:04,224 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:04,225 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:08:04,486 > ++++++++++++++한국조선해양++++++++++++++++++++686/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:04,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:04,833 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:08:05,080 > ++++++++++++++한국카본++++++++++++++++++++687/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:05,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:05,441 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:08:05,712 > ++++++++++++++한농화성++++++++++++++++++++688/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:05,712 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:06,048 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:08:06,290 > ++++++++++++++한미약품++++++++++++++++++++689/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:06,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:06,654 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:08:06,913 > ++++++++++++++한신공영++++++++++++++++++++690/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:06,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:07,262 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:08:07,523 > ++++++++++++++한익스프레스++++++++++++++++++++691/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:07,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:07,870 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:08:08,129 > ++++++++++++++한전기술++++++++++++++++++++692/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:08,130 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:08,477 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:08:08,724 > ++++++++++++++한화시스템++++++++++++++++++++693/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:08,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:09,085 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:08:09,274 > ++++++++++++++한화투자증권++++++++++++++++++++694/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:09,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:09,693 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:08:09,973 > ++++++++++++++현대글로비스++++++++++++++++++++695/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:09,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:10,299 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:08:10,566 > ++++++++++++++현대약품++++++++++++++++++++696/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:10,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:10,907 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:08:11,171 > ++++++++++++++현대중공업지주++++++++++++++++++++697/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:11,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:11,515 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:08:11,749 > ++++++++++++++현대해상++++++++++++++++++++698/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:11,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:12,123 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:08:12,376 > ++++++++++++++현대홈쇼핑++++++++++++++++++++699/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:12,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:12,729 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:08:12,973 > ++++++++++++++화승알앤에이++++++++++++++++++++700/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:12,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:13,335 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:08:13,601 > ++++++++++++++효성중공업++++++++++++++++++++701/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:13,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:13,943 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:08:14,178 > ++++++++++++++효성티앤씨++++++++++++++++++++702/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:14,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:14,551 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:08:14,796 > ++++++++++++++BYC++++++++++++++++++++703/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:14,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:15,158 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:08:15,412 > ++++++++++++++DB손해보험++++++++++++++++++++704/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:15,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:15,766 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:08:16,019 > ++++++++++++++GS++++++++++++++++++++705/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:16,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:16,372 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:08:16,629 > ++++++++++++++HMM++++++++++++++++++++706/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:16,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:16,980 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:08:17,244 > ++++++++++++++JB금융지주++++++++++++++++++++707/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:17,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:17,589 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:08:17,848 > ++++++++++++++LS네트웍스++++++++++++++++++++708/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:17,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:18,198 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:08:18,464 > ++++++++++++++NH투자증권++++++++++++++++++++709/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:18,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:18,805 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:08:19,065 > ++++++++++++++SK++++++++++++++++++++710/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:19,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:19,414 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:08:19,690 > ++++++++++++++SK디스커버리++++++++++++++++++++711/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:19,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:20,021 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:08:20,290 > ++++++++++++++WISCOM++++++++++++++++++++712/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:20,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:20,628 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:08:20,880 > ++++++++++++++강남제비스코++++++++++++++++++++713/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:20,881 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:21,236 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:08:21,493 > ++++++++++++++경동나비엔++++++++++++++++++++714/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:21,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:21,842 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:08:22,101 > ++++++++++++++광명전기++++++++++++++++++++715/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:22,101 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:22,450 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:08:22,716 > ++++++++++++++교촌에프앤비++++++++++++++++++++716/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:22,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:23,059 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:08:23,209 > ++++++++++++++그린케미칼++++++++++++++++++++717/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:23,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:23,666 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:08:23,920 > ++++++++++++++금호석유++++++++++++++++++++718/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:23,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:24,273 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:08:24,539 > ++++++++++++++금호에이치티++++++++++++++++++++719/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:24,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:24,880 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:08:25,116 > ++++++++++++++깨끗한나라++++++++++++++++++++720/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:25,116 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:25,488 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:08:25,765 > ++++++++++++++남광토건++++++++++++++++++++721/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:25,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:26,096 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:08:26,364 > ++++++++++++++노루홀딩스++++++++++++++++++++722/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:26,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:26,703 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:08:26,953 > ++++++++++++++대동공업++++++++++++++++++++723/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:26,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:27,311 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:08:27,593 > ++++++++++++++대상홀딩스++++++++++++++++++++724/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:27,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:27,919 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:08:28,167 > ++++++++++++++대성에너지++++++++++++++++++++725/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:28,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:28,525 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:08:28,767 > ++++++++++++++대우부품++++++++++++++++++++726/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:28,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:29,132 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:08:29,391 > ++++++++++++++대우조선해양++++++++++++++++++++727/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:29,392 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:29,740 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:08:29,978 > ++++++++++++++대창단조++++++++++++++++++++728/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:29,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:30,346 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:08:30,609 > ++++++++++++++대현++++++++++++++++++++729/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:30,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:30,954 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:08:31,207 > ++++++++++++++도화엔지니어링++++++++++++++++++++730/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:31,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:31,560 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:08:31,812 > ++++++++++++++동성화학++++++++++++++++++++731/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:31,813 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:32,169 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:08:32,422 > ++++++++++++++동아지질++++++++++++++++++++732/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:32,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:32,778 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:08:33,004 > ++++++++++++++동일고무벨트++++++++++++++++++++733/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:33,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:33,385 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:08:33,631 > ++++++++++++++동일산업++++++++++++++++++++734/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:33,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:33,993 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:08:34,237 > ++++++++++++++동일제강++++++++++++++++++++735/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:34,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:34,599 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:08:34,833 > ++++++++++++++두올++++++++++++++++++++736/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:34,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:35,207 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:08:35,467 > ++++++++++++++드림텍++++++++++++++++++++737/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:35,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:35,815 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:08:36,039 > ++++++++++++++롯데지주++++++++++++++++++++738/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:36,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:36,422 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:08:36,673 > ++++++++++++++모나리자++++++++++++++++++++739/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:36,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:37,029 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:08:37,282 > ++++++++++++++무림페이퍼++++++++++++++++++++740/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:37,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:37,638 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:08:37,905 > ++++++++++++++미래산업++++++++++++++++++++741/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:37,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:38,246 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:08:38,500 > ++++++++++++++미래에셋대우++++++++++++++++++++742/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:38,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:38,853 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:08:39,097 > ++++++++++++++보해양조++++++++++++++++++++743/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:39,098 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:39,459 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:08:39,722 > ++++++++++++++빅히트++++++++++++++++++++744/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:39,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:40,067 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:08:40,225 > ++++++++++++++삼화콘덴서++++++++++++++++++++745/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:40,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:40,674 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:08:40,942 > ++++++++++++++상신브레이크++++++++++++++++++++746/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:40,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:41,282 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:08:41,538 > ++++++++++++++서울가스++++++++++++++++++++747/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:41,538 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:41,889 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:08:42,138 > ++++++++++++++세원셀론텍++++++++++++++++++++748/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:42,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:42,495 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:08:42,749 > ++++++++++++++센트럴인사이트++++++++++++++++++++749/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:42,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:43,103 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:08:43,362 > ++++++++++++++신대양제지++++++++++++++++++++750/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:43,362 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:43,710 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:08:43,980 > ++++++++++++++신도리코++++++++++++++++++++751/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:43,980 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:44,318 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:08:44,587 > ++++++++++++++신흥++++++++++++++++++++752/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:44,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:44,927 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:08:45,176 > ++++++++++++++쎌마테라퓨틱스++++++++++++++++++++753/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:45,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:45,534 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:08:45,806 > ++++++++++++++씨에스윈드++++++++++++++++++++754/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:45,806 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:46,142 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:08:46,390 > ++++++++++++++에스원++++++++++++++++++++755/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:46,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:46,749 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:08:47,014 > ++++++++++++++SK바이오팜++++++++++++++++++++756/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:47,014 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:47,357 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:08:47,527 > ++++++++++++++에쓰씨엔지니어링++++++++++++++++++++757/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:47,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:47,964 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:08:48,212 > ++++++++++++++에이프로젠제약++++++++++++++++++++758/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:48,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:48,572 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:08:48,826 > ++++++++++++++영풍제지++++++++++++++++++++759/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:48,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:49,180 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:08:49,433 > ++++++++++++++예스코홀딩스++++++++++++++++++++760/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:49,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:49,787 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:08:50,039 > ++++++++++++++우리들제약++++++++++++++++++++761/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:50,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:50,395 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:08:50,771 > ++++++++++++++우리종금++++++++++++++++++++762/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:50,772 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:51,003 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:08:51,293 > ++++++++++++++우진아이엔에스++++++++++++++++++++763/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:51,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:51,611 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:08:51,857 > ++++++++++++++웅진씽크빅++++++++++++++++++++764/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:51,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:52,219 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:08:52,459 > ++++++++++++++유수홀딩스++++++++++++++++++++765/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:52,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:52,827 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:08:53,081 > ++++++++++++++유엔젤++++++++++++++++++++766/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:53,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:53,435 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:08:53,725 > ++++++++++++++율촌화학++++++++++++++++++++767/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:53,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:54,041 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:08:54,305 > ++++++++++++++이지스레지던스리츠++++++++++++++++++++768/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:54,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:54,649 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:08:54,824 > ++++++++++++++이화산업++++++++++++++++++++769/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:54,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:55,256 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:08:55,497 > ++++++++++++++인팩++++++++++++++++++++770/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:55,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:55,862 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:08:56,102 > ++++++++++++++일신방직++++++++++++++++++++771/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:56,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:56,470 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:08:56,760 > ++++++++++++++일진디스플++++++++++++++++++++772/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:56,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:57,077 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:08:57,323 > ++++++++++++++일진머티리얼즈++++++++++++++++++++773/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:57,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:57,683 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:08:57,931 > ++++++++++++++제주은행++++++++++++++++++++774/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:57,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:58,290 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:08:58,552 > ++++++++++++++제주항공++++++++++++++++++++775/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:58,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:58,897 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:08:59,133 > ++++++++++++++종근당++++++++++++++++++++776/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:59,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:08:59,505 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:08:59,751 > ++++++++++++++진양홀딩스++++++++++++++++++++777/2894
[DEBUG|open_api.py:656] 2021-02-09 16:08:59,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:00,111 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:09:00,352 > ++++++++++++++천일고속++++++++++++++++++++778/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:00,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:00,719 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:09:00,986 > ++++++++++++++체시스++++++++++++++++++++779/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:00,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:01,327 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:09:01,593 > ++++++++++++++카프로++++++++++++++++++++780/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:01,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:01,935 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:09:02,206 > ++++++++++++++KT&G++++++++++++++++++++781/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:02,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:02,544 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:09:02,792 > ++++++++++++++태광산업++++++++++++++++++++782/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:02,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:03,150 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:09:03,397 > ++++++++++++++태영건설++++++++++++++++++++783/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:03,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:03,757 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:09:04,009 > ++++++++++++++풍산++++++++++++++++++++784/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:04,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:04,365 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:09:04,609 > ++++++++++++++하나금융지주++++++++++++++++++++785/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:04,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:04,972 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:09:05,196 > ++++++++++++++한국가스공사++++++++++++++++++++786/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:05,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:05,579 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:09:05,821 > ++++++++++++++한국전력++++++++++++++++++++787/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:05,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:06,186 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:09:06,430 > ++++++++++++++한국콜마++++++++++++++++++++788/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:06,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:06,792 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:09:07,056 > ++++++++++++++한성기업++++++++++++++++++++789/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:07,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:07,400 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:09:07,658 > ++++++++++++++한세예스24홀딩스++++++++++++++++++++790/2894
[DEBUG|open_api.py:656] 2021-02-09 16:09:07,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:09:08,009 > 107
[DEBUG|open_api.py:303] 2021-02-09 16:13:14,266 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:13:14,266 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:13:14,266 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:13:14,267 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:13:14,267 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:13:14,267 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:13:14,267 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:13:14,287 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:13:14,311 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:13:14,311 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:13:14,312 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:13:14,327 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:13:14,360 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:13:16,904 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:13:16,905 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:13:16,949 > ++++++++++++++한세예스24홀딩스++++++++++++++++++++790/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:16,949 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:16,950 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:13:18,021 > ++++++++++++++한일시멘트++++++++++++++++++++791/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:18,022 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:18,023 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:13:18,254 > ++++++++++++++한일홀딩스++++++++++++++++++++792/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:18,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:18,630 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:13:18,888 > ++++++++++++++한전KPS++++++++++++++++++++793/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:18,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:19,238 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:13:19,470 > ++++++++++++++한진칼++++++++++++++++++++794/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:19,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:19,846 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:13:20,070 > ++++++++++++++한창++++++++++++++++++++795/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:20,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:20,455 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:13:20,689 > ++++++++++++++현대건설++++++++++++++++++++796/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:20,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:21,064 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:13:21,321 > ++++++++++++++현대그린푸드++++++++++++++++++++797/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:21,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:21,671 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:13:21,931 > ++++++++++++++현대로템++++++++++++++++++++798/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:21,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:22,279 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:13:22,510 > ++++++++++++++현대미포조선++++++++++++++++++++799/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:22,510 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:22,887 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:13:23,147 > ++++++++++++++현대상사++++++++++++++++++++800/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:23,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:23,494 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:13:23,791 > ++++++++++++++화신++++++++++++++++++++801/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:23,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:24,101 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:13:24,349 > ++++++++++++++휴켐스++++++++++++++++++++802/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:24,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:24,707 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:13:24,953 > ++++++++++++++흥국화재++++++++++++++++++++803/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:24,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:25,313 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:13:25,555 > ++++++++++++++EDGC++++++++++++++++++++804/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:25,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:25,922 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:13:26,149 > ++++++++++++++GST++++++++++++++++++++805/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:26,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:26,529 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:13:26,790 > ++++++++++++++GS홈쇼핑++++++++++++++++++++806/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:26,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:27,138 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:13:27,368 > ++++++++++++++IBKS제13호스팩++++++++++++++++++++807/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:27,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:27,745 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:13:27,918 > ++++++++++++++ITX-AI++++++++++++++++++++808/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:27,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:28,352 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:13:28,578 > ++++++++++++++JW신약++++++++++++++++++++809/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:28,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:28,961 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:13:29,201 > ++++++++++++++KB오토시스++++++++++++++++++++810/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:29,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:29,568 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:13:29,821 > ++++++++++++++KH바텍++++++++++++++++++++811/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:29,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:30,175 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:13:30,403 > ++++++++++++++SK5호스팩++++++++++++++++++++812/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:30,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:30,781 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:13:30,984 > ++++++++++++++SK6호스팩++++++++++++++++++++813/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:30,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:31,388 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:13:31,569 > ++++++++++++++YW++++++++++++++++++++814/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:31,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:31,995 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:13:32,242 > ++++++++++++++경창산업++++++++++++++++++++815/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:32,243 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:32,602 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:13:32,844 > ++++++++++++++고려시멘트++++++++++++++++++++816/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:32,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:33,210 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:13:33,436 > ++++++++++++++골프존++++++++++++++++++++817/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:33,436 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:33,818 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:13:34,054 > ++++++++++++++구영테크++++++++++++++++++++818/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:34,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:34,425 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:13:34,673 > ++++++++++++++국순당++++++++++++++++++++819/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:34,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:35,031 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:13:35,311 > ++++++++++++++그리티++++++++++++++++++++820/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:35,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:35,637 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:13:35,864 > ++++++++++++++나노브릭++++++++++++++++++++821/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:35,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:36,244 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:13:36,429 > ++++++++++++++네오티스++++++++++++++++++++822/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:36,429 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:36,851 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:13:37,081 > ++++++++++++++네이처셀++++++++++++++++++++823/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:37,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:37,459 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:13:37,702 > ++++++++++++++녹십자셀++++++++++++++++++++824/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:37,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:38,067 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:13:38,308 > ++++++++++++++뉴인텍++++++++++++++++++++825/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:38,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:38,673 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:13:38,936 > ++++++++++++++뉴프렉스++++++++++++++++++++826/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:38,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:39,279 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:13:39,524 > ++++++++++++++대봉엘에스++++++++++++++++++++827/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:39,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:39,885 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:13:40,112 > ++++++++++++++대신밸런스제9호스팩++++++++++++++++++++828/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:40,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:40,494 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:13:40,651 > ++++++++++++++대유++++++++++++++++++++829/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:40,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:41,103 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:13:41,335 > ++++++++++++++대유에이피++++++++++++++++++++830/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:41,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:41,710 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:13:41,923 > ++++++++++++++대주산업++++++++++++++++++++831/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:41,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:42,318 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:13:42,569 > ++++++++++++++대한약품++++++++++++++++++++832/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:42,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:42,926 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:13:43,166 > ++++++++++++++동구바이오제약++++++++++++++++++++833/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:43,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:43,532 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:13:43,778 > ++++++++++++++동방선기++++++++++++++++++++834/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:43,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:44,139 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:13:44,384 > ++++++++++++++디에이테크놀로지++++++++++++++++++++835/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:44,384 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:44,747 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:13:44,978 > ++++++++++++++디에이피++++++++++++++++++++836/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:44,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:45,356 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:13:45,598 > ++++++++++++++디엔에이링크++++++++++++++++++++837/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:45,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:45,963 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:13:46,217 > ++++++++++++++디엔에프++++++++++++++++++++838/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:46,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:46,571 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:13:46,815 > ++++++++++++++디지틀조선++++++++++++++++++++839/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:46,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:47,178 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:13:47,427 > ++++++++++++++룽투코리아++++++++++++++++++++840/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:47,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:47,785 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:13:48,027 > ++++++++++++++링크제니시스++++++++++++++++++++841/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:48,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:48,392 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:13:48,628 > ++++++++++++++메디톡스++++++++++++++++++++842/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:48,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:49,000 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:13:49,226 > ++++++++++++++메이슨캐피탈++++++++++++++++++++843/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:49,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:49,606 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:13:49,868 > ++++++++++++++메탈라이프++++++++++++++++++++844/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:49,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:50,213 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:13:50,395 > ++++++++++++++모두투어++++++++++++++++++++845/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:50,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:50,822 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:13:51,050 > ++++++++++++++모비스++++++++++++++++++++846/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:51,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:51,429 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:13:51,659 > ++++++++++++++모트렉스++++++++++++++++++++847/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:51,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:52,035 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:13:52,265 > ++++++++++++++미래SCI++++++++++++++++++++848/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:52,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:52,644 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:13:52,931 > ++++++++++++++미스터블루++++++++++++++++++++849/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:52,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:53,250 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:13:53,468 > ++++++++++++++미코바이오메드++++++++++++++++++++850/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:53,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:53,858 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:13:54,076 > ++++++++++++++바디텍메드++++++++++++++++++++851/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:54,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:54,464 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:13:54,691 > ++++++++++++++바이넥스++++++++++++++++++++852/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:54,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:55,072 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:13:55,295 > ++++++++++++++브랜드엑스코퍼레이션++++++++++++++++++++853/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:55,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:55,680 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:13:55,863 > ++++++++++++++삼보판지++++++++++++++++++++854/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:55,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:56,289 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:13:56,524 > ++++++++++++++삼본전자++++++++++++++++++++855/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:56,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:56,897 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:13:57,131 > ++++++++++++++삼아제약++++++++++++++++++++856/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:57,132 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:57,504 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:13:57,774 > ++++++++++++++상지카일룸++++++++++++++++++++857/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:57,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:58,113 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:13:58,374 > ++++++++++++++서암기계공업++++++++++++++++++++858/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:58,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:58,721 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:13:58,965 > ++++++++++++++선진뷰티사이언스++++++++++++++++++++859/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:58,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:59,328 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:13:59,473 > ++++++++++++++성창오토텍++++++++++++++++++++860/2894
[DEBUG|open_api.py:656] 2021-02-09 16:13:59,473 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:13:59,936 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:14:00,165 > ++++++++++++++세보엠이씨++++++++++++++++++++861/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:00,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:00,543 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:14:00,789 > ++++++++++++++세종메디칼++++++++++++++++++++862/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:00,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:01,149 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:14:01,371 > ++++++++++++++세코닉스++++++++++++++++++++863/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:01,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:01,756 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:14:02,012 > ++++++++++++++셀루메드++++++++++++++++++++864/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:02,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:02,364 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:14:02,605 > ++++++++++++++셀바스헬스케어++++++++++++++++++++865/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:02,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:02,970 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:14:03,203 > ++++++++++++++셀트리온제약++++++++++++++++++++866/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:03,203 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:03,577 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:14:03,820 > ++++++++++++++소리바다++++++++++++++++++++867/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:03,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:04,186 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:14:04,421 > ++++++++++++++스튜디오산타클로스++++++++++++++++++++868/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:04,422 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:04,793 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:14:05,040 > ++++++++++++++스페코++++++++++++++++++++869/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:05,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:05,401 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:14:05,641 > ++++++++++++++승일++++++++++++++++++++870/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:05,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:06,008 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:14:06,238 > ++++++++++++++시스웍++++++++++++++++++++871/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:06,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:06,615 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:14:06,872 > ++++++++++++++심텍++++++++++++++++++++872/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:06,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:07,223 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:14:07,467 > ++++++++++++++쌍용정보통신++++++++++++++++++++873/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:07,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:07,830 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:14:08,059 > ++++++++++++++씨유메디칼++++++++++++++++++++874/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:08,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:08,438 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:14:08,673 > ++++++++++++++씨케이에이치++++++++++++++++++++875/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:08,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:09,045 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:14:09,278 > ++++++++++++++아나패스++++++++++++++++++++876/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:09,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:09,653 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:14:09,883 > ++++++++++++++아이센스++++++++++++++++++++877/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:09,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:10,260 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:14:10,500 > ++++++++++++++아이씨디++++++++++++++++++++878/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:10,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:10,868 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:14:11,138 > ++++++++++++++아이씨케이++++++++++++++++++++879/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:11,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:11,476 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:14:11,719 > ++++++++++++++아이오케이++++++++++++++++++++880/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:11,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:12,083 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:14:12,311 > ++++++++++++++아이원스++++++++++++++++++++881/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:12,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:12,690 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:14:12,920 > ++++++++++++++아이즈비전++++++++++++++++++++882/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:12,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:13,297 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:14:13,549 > ++++++++++++++아이티센++++++++++++++++++++883/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:13,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:13,905 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:14:14,140 > ++++++++++++++알리코제약++++++++++++++++++++884/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:14,140 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:14,512 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:14:14,767 > ++++++++++++++알에프세미++++++++++++++++++++885/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:14,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:15,119 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:14:15,353 > ++++++++++++++알에프텍++++++++++++++++++++886/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:15,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:15,727 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:14:15,985 > ++++++++++++++애니플러스++++++++++++++++++++887/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:15,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:16,335 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:14:16,549 > ++++++++++++++어보브반도체++++++++++++++++++++888/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:16,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:16,944 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:14:17,171 > ++++++++++++++에스아이리소스++++++++++++++++++++889/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:17,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:17,552 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:14:17,787 > ++++++++++++++에스앤더블류++++++++++++++++++++890/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:17,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:18,160 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:14:18,406 > ++++++++++++++에스앤에스텍++++++++++++++++++++891/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:18,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:18,767 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:14:19,015 > ++++++++++++++에스에너지++++++++++++++++++++892/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:19,016 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:19,375 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:14:19,619 > ++++++++++++++에스코넥++++++++++++++++++++893/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:19,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:19,982 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:14:20,209 > ++++++++++++++에쎈테크++++++++++++++++++++894/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:20,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:20,588 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:14:20,840 > ++++++++++++++에이루트++++++++++++++++++++895/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:20,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:21,198 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:14:21,437 > ++++++++++++++에이스토리++++++++++++++++++++896/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:21,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:21,805 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:14:22,013 > ++++++++++++++에이티넘인베스트++++++++++++++++++++897/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:22,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:22,412 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:14:22,663 > ++++++++++++++엑사이엔씨++++++++++++++++++++898/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:22,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:23,020 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:14:23,256 > ++++++++++++++엑세스바이오++++++++++++++++++++899/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:23,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:23,627 > 110
[DEBUG|collector_api.py:200] 2021-02-09 16:14:23,891 > ++++++++++++++엑스큐어++++++++++++++++++++900/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:23,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:24,234 > 111
[DEBUG|collector_api.py:200] 2021-02-09 16:14:24,478 > ++++++++++++++엑시콘++++++++++++++++++++901/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:24,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:24,840 > 112
[DEBUG|collector_api.py:200] 2021-02-09 16:14:25,071 > ++++++++++++++엔피케이++++++++++++++++++++902/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:25,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:25,447 > 113
[DEBUG|collector_api.py:200] 2021-02-09 16:14:25,682 > ++++++++++++++엠게임++++++++++++++++++++903/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:25,682 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:26,055 > 114
[DEBUG|collector_api.py:200] 2021-02-09 16:14:26,329 > ++++++++++++++엠벤처투자++++++++++++++++++++904/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:26,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:26,663 > 115
[DEBUG|collector_api.py:200] 2021-02-09 16:14:26,911 > ++++++++++++++엠씨넥스++++++++++++++++++++905/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:26,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:27,270 > 116
[DEBUG|collector_api.py:200] 2021-02-09 16:14:27,487 > ++++++++++++++영화테크++++++++++++++++++++906/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:27,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:27,877 > 117
[DEBUG|collector_api.py:200] 2021-02-09 16:14:28,104 > ++++++++++++++오공++++++++++++++++++++907/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:28,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:28,485 > 118
[DEBUG|collector_api.py:200] 2021-02-09 16:14:28,721 > ++++++++++++++오스템임플란트++++++++++++++++++++908/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:28,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:29,093 > 119
[DEBUG|collector_api.py:200] 2021-02-09 16:14:29,323 > ++++++++++++++오픈베이스++++++++++++++++++++909/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:29,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:29,700 > 120
[DEBUG|collector_api.py:200] 2021-02-09 16:14:29,964 > ++++++++++++++옵티시스++++++++++++++++++++910/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:29,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:30,307 > 121
[DEBUG|collector_api.py:200] 2021-02-09 16:14:30,540 > ++++++++++++++와이지-원++++++++++++++++++++911/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:30,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:30,916 > 122
[DEBUG|collector_api.py:200] 2021-02-09 16:14:31,159 > ++++++++++++++우리바이오++++++++++++++++++++912/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:31,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:31,522 > 123
[DEBUG|collector_api.py:200] 2021-02-09 16:14:31,781 > ++++++++++++++원바이오젠++++++++++++++++++++913/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:31,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:32,131 > 124
[DEBUG|collector_api.py:200] 2021-02-09 16:14:32,346 > ++++++++++++++원익QnC++++++++++++++++++++914/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:32,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:32,737 > 125
[DEBUG|collector_api.py:200] 2021-02-09 16:14:32,985 > ++++++++++++++원익큐브++++++++++++++++++++915/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:32,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:33,343 > 126
[DEBUG|collector_api.py:200] 2021-02-09 16:14:33,600 > ++++++++++++++원풍물산++++++++++++++++++++916/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:33,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:33,952 > 127
[DEBUG|collector_api.py:200] 2021-02-09 16:14:34,200 > ++++++++++++++웨이브일렉트로++++++++++++++++++++917/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:34,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:34,562 > 128
[DEBUG|collector_api.py:200] 2021-02-09 16:14:34,816 > ++++++++++++++웰크론++++++++++++++++++++918/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:34,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:35,169 > 129
[DEBUG|collector_api.py:200] 2021-02-09 16:14:35,406 > ++++++++++++++위지트++++++++++++++++++++919/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:35,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:35,776 > 130
[DEBUG|collector_api.py:200] 2021-02-09 16:14:36,040 > ++++++++++++++유니온커뮤니티++++++++++++++++++++920/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:36,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:36,385 > 131
[DEBUG|collector_api.py:200] 2021-02-09 16:14:36,628 > ++++++++++++++유니테크노++++++++++++++++++++921/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:36,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:36,992 > 132
[DEBUG|collector_api.py:200] 2021-02-09 16:14:37,215 > ++++++++++++++유비쿼스홀딩스++++++++++++++++++++922/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:37,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:37,599 > 133
[DEBUG|collector_api.py:200] 2021-02-09 16:14:37,834 > ++++++++++++++유신++++++++++++++++++++923/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:37,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:38,206 > 134
[DEBUG|collector_api.py:200] 2021-02-09 16:14:38,474 > ++++++++++++++유안타제5호스팩++++++++++++++++++++924/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:38,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:38,814 > 135
[DEBUG|collector_api.py:200] 2021-02-09 16:14:39,024 > ++++++++++++++유안타제7호스팩++++++++++++++++++++925/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:39,025 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:39,422 > 136
[DEBUG|collector_api.py:200] 2021-02-09 16:14:39,585 > ++++++++++++++유진스팩5호++++++++++++++++++++926/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:39,586 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:40,028 > 137
[DEBUG|collector_api.py:200] 2021-02-09 16:14:40,227 > ++++++++++++++유테크++++++++++++++++++++927/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:40,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:40,635 > 138
[DEBUG|collector_api.py:200] 2021-02-09 16:14:40,863 > ++++++++++++++유티아이++++++++++++++++++++928/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:40,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:41,242 > 139
[DEBUG|collector_api.py:200] 2021-02-09 16:14:41,492 > ++++++++++++++이스트소프트++++++++++++++++++++929/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:41,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:41,850 > 140
[DEBUG|collector_api.py:200] 2021-02-09 16:14:42,118 > ++++++++++++++이스트아시아홀딩스++++++++++++++++++++930/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:42,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:42,459 > 141
[DEBUG|collector_api.py:200] 2021-02-09 16:14:42,734 > ++++++++++++++이엠네트웍스++++++++++++++++++++931/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:42,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:43,067 > 142
[DEBUG|collector_api.py:200] 2021-02-09 16:14:43,306 > ++++++++++++++이엠넷++++++++++++++++++++932/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:43,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:43,674 > 143
[DEBUG|collector_api.py:200] 2021-02-09 16:14:43,917 > ++++++++++++++이지바이오++++++++++++++++++++933/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:43,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:44,280 > 144
[DEBUG|collector_api.py:200] 2021-02-09 16:14:44,466 > ++++++++++++++인베니아++++++++++++++++++++934/2894
[DEBUG|open_api.py:656] 2021-02-09 16:14:44,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:14:44,887 > 145
[DEBUG|open_api.py:303] 2021-02-09 16:18:25,260 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:18:25,260 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:18:25,260 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:18:25,260 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:18:25,260 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:18:25,261 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:18:25,261 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:18:25,280 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:18:25,305 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:18:25,305 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:18:25,305 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:18:25,320 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:18:25,351 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:18:27,731 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:18:27,732 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:18:27,775 > ++++++++++++++인베니아++++++++++++++++++++934/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:27,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:27,777 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:18:28,869 > ++++++++++++++인텍플러스++++++++++++++++++++935/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:28,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:28,871 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:18:29,113 > ++++++++++++++자비스++++++++++++++++++++936/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:29,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:29,477 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:18:29,717 > ++++++++++++++자이글++++++++++++++++++++937/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:29,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:30,085 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:18:30,309 > ++++++++++++++장원테크++++++++++++++++++++938/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:30,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:30,692 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:18:30,935 > ++++++++++++++정상제이엘에스++++++++++++++++++++939/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:30,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:31,302 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:18:31,539 > ++++++++++++++제넨바이오++++++++++++++++++++940/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:31,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:31,908 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:18:32,152 > ++++++++++++++제우스++++++++++++++++++++941/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:32,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:32,514 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:18:32,760 > ++++++++++++++제이엠티++++++++++++++++++++942/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:32,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:33,121 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:18:33,351 > ++++++++++++++제일제강++++++++++++++++++++943/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:33,351 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:33,728 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:18:33,987 > ++++++++++++++제주반도체++++++++++++++++++++944/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:33,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:34,336 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:18:34,598 > ++++++++++++++젬백스++++++++++++++++++++945/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:34,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:34,944 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:18:35,188 > ++++++++++++++조아제약++++++++++++++++++++946/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:35,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:35,551 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:18:35,794 > ++++++++++++++주성엔지니어링++++++++++++++++++++947/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:35,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:36,158 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:18:36,396 > ++++++++++++++지엔씨에너지++++++++++++++++++++948/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:36,397 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:36,766 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:18:37,017 > ++++++++++++++지엔코++++++++++++++++++++949/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:37,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:37,374 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:18:37,618 > ++++++++++++++캐스텍코리아++++++++++++++++++++950/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:37,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:37,981 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:18:38,214 > ++++++++++++++케이비제20호스팩++++++++++++++++++++951/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:38,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:38,588 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:18:38,777 > ++++++++++++++케이피엠테크++++++++++++++++++++952/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:38,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:39,196 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:18:39,423 > ++++++++++++++케이피티유++++++++++++++++++++953/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:39,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:39,803 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:18:40,054 > ++++++++++++++켄코아에어로스페이스++++++++++++++++++++954/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:40,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:40,411 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:18:40,588 > ++++++++++++++코렌++++++++++++++++++++955/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:40,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:41,018 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:18:41,258 > ++++++++++++++코프라++++++++++++++++++++956/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:41,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:41,624 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:18:41,864 > ++++++++++++++크로바하이텍++++++++++++++++++++957/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:41,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:42,232 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:18:42,457 > ++++++++++++++클리노믹스++++++++++++++++++++958/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:42,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:42,838 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:18:43,023 > ++++++++++++++키네마스터++++++++++++++++++++959/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:43,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:43,445 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:18:43,673 > ++++++++++++++토탈소프트++++++++++++++++++++960/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:43,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:44,053 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:18:44,295 > ++++++++++++++트루윈++++++++++++++++++++961/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:44,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:44,659 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:18:44,944 > ++++++++++++++특수건설++++++++++++++++++++962/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:44,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:45,266 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:18:45,516 > ++++++++++++++티앤알바이오팹++++++++++++++++++++963/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:45,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:45,874 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:18:46,109 > ++++++++++++++티에스이++++++++++++++++++++964/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:46,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:46,481 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:18:46,717 > ++++++++++++++파라텍++++++++++++++++++++965/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:46,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:47,087 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:18:47,338 > ++++++++++++++파세코++++++++++++++++++++966/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:47,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:47,695 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:18:47,953 > ++++++++++++++파커스++++++++++++++++++++967/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:47,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:48,303 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:18:48,537 > ++++++++++++++패션플랫폼++++++++++++++++++++968/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:48,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:48,911 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:18:49,150 > ++++++++++++++푸드웰++++++++++++++++++++969/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:49,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:49,518 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:18:49,761 > ++++++++++++++프로스테믹스++++++++++++++++++++970/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:49,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:50,125 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:18:50,362 > ++++++++++++++프리시젼바이오++++++++++++++++++++971/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:50,362 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:50,733 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:18:50,906 > ++++++++++++++피델릭스++++++++++++++++++++972/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:50,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:51,341 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:18:51,585 > ++++++++++++++피에스엠씨++++++++++++++++++++973/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:51,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:51,948 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:18:52,192 > ++++++++++++++하나금융15호스팩++++++++++++++++++++974/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:52,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:52,555 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:18:52,738 > ++++++++++++++하나기술++++++++++++++++++++975/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:52,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:53,163 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:18:53,312 > ++++++++++++++하이즈항공++++++++++++++++++++976/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:53,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:53,771 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:18:54,014 > ++++++++++++++한국맥널티++++++++++++++++++++977/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:54,014 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:54,378 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:18:54,610 > ++++++++++++++한국코퍼레이션++++++++++++++++++++978/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:54,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:54,984 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:18:55,218 > ++++++++++++++한양디지텍++++++++++++++++++++979/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:55,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:55,593 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:18:55,839 > ++++++++++++++한일진공++++++++++++++++++++980/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:55,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:56,200 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:18:56,432 > ++++++++++++++한일화학++++++++++++++++++++981/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:56,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:56,808 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:18:57,057 > ++++++++++++++해성산업++++++++++++++++++++982/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:57,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:57,415 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:18:57,658 > ++++++++++++++현대바이오++++++++++++++++++++983/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:57,658 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:58,022 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:18:58,264 > ++++++++++++++화성밸브++++++++++++++++++++984/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:58,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:58,628 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:18:58,878 > ++++++++++++++휴맥스++++++++++++++++++++985/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:58,878 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:59,236 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:18:59,479 > ++++++++++++++APS홀딩스++++++++++++++++++++986/2894
[DEBUG|open_api.py:656] 2021-02-09 16:18:59,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:18:59,844 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:19:00,102 > ++++++++++++++CJ ENM++++++++++++++++++++987/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:00,103 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:00,452 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:19:00,709 > ++++++++++++++CMG제약++++++++++++++++++++988/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:00,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:01,060 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:19:01,335 > ++++++++++++++CS++++++++++++++++++++989/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:01,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:01,667 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:19:01,913 > ++++++++++++++CSA 코스믹++++++++++++++++++++990/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:01,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:02,274 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:19:02,508 > ++++++++++++++DB금융스팩8호++++++++++++++++++++991/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:02,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:02,881 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:19:03,047 > ++++++++++++++EG++++++++++++++++++++992/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:03,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:03,488 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:19:03,737 > ++++++++++++++HRS++++++++++++++++++++993/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:03,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:04,097 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:19:04,338 > ++++++++++++++NICE평가정보++++++++++++++++++++994/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:04,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:04,706 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:19:04,984 > ++++++++++++++PN풍년++++++++++++++++++++995/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:04,985 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:05,314 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:19:05,564 > ++++++++++++++SCI평가정보++++++++++++++++++++996/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:05,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:05,921 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:19:06,169 > ++++++++++++++SM C&C++++++++++++++++++++997/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:06,169 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:06,528 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:19:06,775 > ++++++++++++++TS트릴리온++++++++++++++++++++998/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:06,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:07,135 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:19:07,336 > ++++++++++++++UCI++++++++++++++++++++999/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:07,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:07,742 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:19:07,987 > ++++++++++++++감마누++++++++++++++++++++1000/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:07,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:08,348 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:19:08,577 > ++++++++++++++강스템바이오텍++++++++++++++++++++1001/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:08,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:08,957 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:19:09,208 > ++++++++++++++게임빌++++++++++++++++++++1002/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:09,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:09,565 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:19:09,800 > ++++++++++++++경남바이오파마++++++++++++++++++++1003/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:09,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:10,174 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:19:10,427 > ++++++++++++++경남제약헬스케어++++++++++++++++++++1004/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:10,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:10,781 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:19:11,043 > ++++++++++++++고영++++++++++++++++++++1005/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:11,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:11,388 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:19:11,625 > ++++++++++++++광림++++++++++++++++++++1006/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:11,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:11,996 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:19:12,256 > ++++++++++++++국영지앤엠++++++++++++++++++++1007/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:12,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:12,605 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:19:12,858 > ++++++++++++++나노엔텍++++++++++++++++++++1008/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:12,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:13,211 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:19:13,449 > ++++++++++++++나이벡++++++++++++++++++++1009/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:13,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:13,818 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:19:14,071 > ++++++++++++++남화토건++++++++++++++++++++1010/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:14,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:14,426 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:19:14,661 > ++++++++++++++네스엠++++++++++++++++++++1011/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:14,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:15,035 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:19:15,276 > ++++++++++++++네오팜++++++++++++++++++++1012/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:15,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:15,642 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:19:15,897 > ++++++++++++++넥스턴++++++++++++++++++++1013/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:15,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:16,250 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:19:16,496 > ++++++++++++++넥스틴++++++++++++++++++++1014/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:16,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:16,857 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:19:17,029 > ++++++++++++++넵튠++++++++++++++++++++1015/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:17,030 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:17,465 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:19:17,730 > ++++++++++++++녹원씨엔아이++++++++++++++++++++1016/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:17,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:18,074 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:19:18,327 > ++++++++++++++누리텔레콤++++++++++++++++++++1017/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:18,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:18,682 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:19:18,920 > ++++++++++++++뉴파워프라즈마++++++++++++++++++++1018/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:18,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:19,289 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:19:19,527 > ++++++++++++++대성파인텍++++++++++++++++++++1019/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:19,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:19,896 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:19:20,139 > ++++++++++++++대아티아이++++++++++++++++++++1020/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:20,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:20,504 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:19:20,754 > ++++++++++++++대주전자재료++++++++++++++++++++1021/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:20,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:21,111 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:19:21,351 > ++++++++++++++대창솔루션++++++++++++++++++++1022/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:21,351 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:21,718 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:19:21,973 > ++++++++++++++덕산네오룩스++++++++++++++++++++1023/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:21,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:22,326 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:19:22,565 > ++++++++++++++동국S&C++++++++++++++++++++1024/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:22,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:22,934 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:19:23,172 > ++++++++++++++동아엘텍++++++++++++++++++++1025/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:23,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:23,542 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:19:23,774 > ++++++++++++++듀오백++++++++++++++++++++1026/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:23,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:24,149 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:19:24,402 > ++++++++++++++디알텍++++++++++++++++++++1027/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:24,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:24,758 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:19:25,020 > ++++++++++++++디엠티++++++++++++++++++++1028/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:25,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:25,366 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:19:25,603 > ++++++++++++++디오++++++++++++++++++++1029/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:25,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:25,972 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:19:26,220 > ++++++++++++++딜리++++++++++++++++++++1030/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:26,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:26,580 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:19:26,845 > ++++++++++++++럭슬++++++++++++++++++++1031/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:26,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:27,187 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:19:27,431 > ++++++++++++++레드캡투어++++++++++++++++++++1032/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:27,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:27,794 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:19:28,040 > ++++++++++++++레이언스++++++++++++++++++++1033/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:28,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:28,401 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:19:28,646 > ++++++++++++++로보로보++++++++++++++++++++1034/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:28,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:29,007 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:19:29,230 > ++++++++++++++매일홀딩스++++++++++++++++++++1035/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:29,231 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:29,615 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:19:29,852 > ++++++++++++++머큐리++++++++++++++++++++1036/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:29,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:30,222 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:19:30,432 > ++++++++++++++메디앙스++++++++++++++++++++1037/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:30,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:30,829 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:19:31,195 > ++++++++++++++메타바이오메드++++++++++++++++++++1038/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:31,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:31,436 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:19:31,676 > ++++++++++++++멕아이씨에스++++++++++++++++++++1039/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:31,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:32,042 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:19:32,274 > ++++++++++++++명성티엔에스++++++++++++++++++++1040/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:32,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:32,651 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:19:33,006 > ++++++++++++++무림SP++++++++++++++++++++1041/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:33,006 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:33,259 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:19:33,494 > ++++++++++++++미래에셋대우스팩3호++++++++++++++++++++1042/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:33,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:33,866 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:19:34,100 > ++++++++++++++미래에셋벤처투자++++++++++++++++++++1043/2894
[DEBUG|open_api.py:656] 2021-02-09 16:19:34,100 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:19:34,473 > 110
[DEBUG|open_api.py:303] 2021-02-09 16:23:37,221 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:23:37,221 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:23:37,222 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:23:37,222 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:23:37,222 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:23:37,222 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:23:37,222 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:23:37,241 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:23:37,267 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:23:37,268 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:23:37,268 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:23:37,282 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:23:37,316 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:23:39,895 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:23:39,896 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:23:39,941 > ++++++++++++++미래에셋벤처투자++++++++++++++++++++1043/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:39,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:39,943 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:23:41,015 > ++++++++++++++박셀바이오++++++++++++++++++++1044/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:41,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:41,016 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:23:41,177 > ++++++++++++++부스타++++++++++++++++++++1045/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:41,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:41,624 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:23:41,859 > ++++++++++++++비즈니스온++++++++++++++++++++1046/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:41,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:42,231 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:23:42,467 > ++++++++++++++비트컴퓨터++++++++++++++++++++1047/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:42,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:42,838 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:23:43,090 > ++++++++++++++사람인에이치알++++++++++++++++++++1048/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:43,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:43,446 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:23:43,676 > ++++++++++++++삼륭물산++++++++++++++++++++1049/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:43,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:44,053 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:23:44,315 > ++++++++++++++삼양옵틱스++++++++++++++++++++1050/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:44,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:44,660 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:23:44,900 > ++++++++++++++삼일++++++++++++++++++++1051/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:44,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:45,267 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:23:45,524 > ++++++++++++++삼일기업공사++++++++++++++++++++1052/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:45,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:45,874 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:23:46,138 > ++++++++++++++삼지전자++++++++++++++++++++1053/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:46,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:46,483 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:23:46,753 > ++++++++++++++삼진++++++++++++++++++++1054/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:46,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:47,090 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:23:47,357 > ++++++++++++++상보++++++++++++++++++++1055/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:47,358 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:47,699 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:23:47,941 > ++++++++++++++상신이디피++++++++++++++++++++1056/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:47,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:48,305 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:23:48,540 > ++++++++++++++서린바이오++++++++++++++++++++1057/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:48,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:48,912 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:23:49,160 > ++++++++++++++서호전기++++++++++++++++++++1058/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:49,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:49,518 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:23:49,768 > ++++++++++++++세경하이테크++++++++++++++++++++1059/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:49,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:50,126 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:23:50,331 > ++++++++++++++세명전기++++++++++++++++++++1060/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:50,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:50,733 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:23:50,988 > ++++++++++++++셀바스AI++++++++++++++++++++1061/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:50,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:51,340 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:23:51,562 > ++++++++++++++손오공++++++++++++++++++++1062/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:51,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:51,947 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:23:52,202 > ++++++++++++++솔루에타++++++++++++++++++++1063/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:52,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:52,555 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:23:52,782 > ++++++++++++++수성++++++++++++++++++++1064/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:52,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:53,162 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:23:53,398 > ++++++++++++++슈프리마++++++++++++++++++++1065/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:53,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:53,770 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:23:54,001 > ++++++++++++++스튜디오드래곤++++++++++++++++++++1066/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:54,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:54,377 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:23:54,607 > ++++++++++++++신라젠++++++++++++++++++++1067/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:54,608 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:54,984 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:23:55,245 > ++++++++++++++신영스팩5호++++++++++++++++++++1068/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:55,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:55,592 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:23:55,783 > ++++++++++++++신한제6호스팩++++++++++++++++++++1069/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:55,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:56,199 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:23:56,395 > ++++++++++++++씨앤투스성진++++++++++++++++++++1070/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:56,395 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:56,807 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:23:56,989 > ++++++++++++++아가방컴퍼니++++++++++++++++++++1071/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:56,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:57,416 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:23:57,657 > ++++++++++++++아모텍++++++++++++++++++++1072/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:57,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:58,022 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:23:58,267 > ++++++++++++++아미코젠++++++++++++++++++++1073/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:58,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:58,630 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:23:58,865 > ++++++++++++++아이에이++++++++++++++++++++1074/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:58,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:59,237 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:23:59,475 > ++++++++++++++아이에이네트웍스++++++++++++++++++++1075/2894
[DEBUG|open_api.py:656] 2021-02-09 16:23:59,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:23:59,844 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:24:00,092 > ++++++++++++++아이퀘스트++++++++++++++++++++1076/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:00,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:00,451 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:24:00,595 > ++++++++++++++액트로++++++++++++++++++++1077/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:00,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:01,058 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:24:01,289 > ++++++++++++++앱코++++++++++++++++++++1078/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:01,289 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:01,665 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:24:01,826 > ++++++++++++++에스에스알++++++++++++++++++++1079/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:01,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:02,272 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:24:02,496 > ++++++++++++++에스제이그룹++++++++++++++++++++1080/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:02,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:02,879 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:24:03,064 > ++++++++++++++에스제이케이++++++++++++++++++++1081/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:03,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:03,486 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:24:03,721 > ++++++++++++++에스티팜++++++++++++++++++++1082/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:03,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:04,095 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:24:04,337 > ++++++++++++++에이씨티++++++++++++++++++++1083/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:04,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:04,702 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:24:04,940 > ++++++++++++++에프알텍++++++++++++++++++++1084/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:04,940 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:05,308 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:24:05,545 > ++++++++++++++에프에스티++++++++++++++++++++1085/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:05,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:05,917 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:24:06,160 > ++++++++++++++엠에프엠코리아++++++++++++++++++++1086/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:06,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:06,524 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:24:06,742 > ++++++++++++++영신금속++++++++++++++++++++1087/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:06,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:07,134 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:24:07,371 > ++++++++++++++예림당++++++++++++++++++++1088/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:07,372 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:07,742 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:24:07,985 > ++++++++++++++오성첨단소재++++++++++++++++++++1089/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:07,985 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:08,348 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:24:08,588 > ++++++++++++++와이더플래닛++++++++++++++++++++1090/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:08,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:08,955 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:24:09,129 > ++++++++++++++우리손에프앤지++++++++++++++++++++1091/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:09,129 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:09,563 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:24:09,797 > ++++++++++++++우림기계++++++++++++++++++++1092/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:09,798 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:10,169 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:24:10,411 > ++++++++++++++우수AMS++++++++++++++++++++1093/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:10,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:10,777 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:24:11,008 > ++++++++++++++원일특강++++++++++++++++++++1094/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:11,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:11,385 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:24:11,617 > ++++++++++++++윈하이텍++++++++++++++++++++1095/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:11,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:11,993 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:24:12,242 > ++++++++++++++윌링스++++++++++++++++++++1096/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:12,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:12,602 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:24:12,817 > ++++++++++++++유니테스트++++++++++++++++++++1097/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:12,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:13,208 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:24:13,482 > ++++++++++++++유바이오로직스++++++++++++++++++++1098/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:13,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:13,815 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:24:14,050 > ++++++++++++++유안타제6호스팩++++++++++++++++++++1099/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:14,050 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:14,423 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:24:14,617 > ++++++++++++++육일씨엔에쓰++++++++++++++++++++1100/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:14,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:15,029 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:24:15,269 > ++++++++++++++이글루시큐리티++++++++++++++++++++1101/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:15,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:15,639 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:24:15,881 > ++++++++++++++이글벳++++++++++++++++++++1102/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:15,881 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:16,246 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:24:16,493 > ++++++++++++++이녹스++++++++++++++++++++1103/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:16,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:16,854 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:24:17,109 > ++++++++++++++이랜시스++++++++++++++++++++1104/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:17,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:17,461 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:24:17,684 > ++++++++++++++이베스트스팩5호++++++++++++++++++++1105/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:17,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:18,068 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:24:18,252 > ++++++++++++++이엠앤아이++++++++++++++++++++1106/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:18,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:18,677 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:24:18,921 > ++++++++++++++이엠텍++++++++++++++++++++1107/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:18,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:19,285 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:24:19,517 > ++++++++++++++이즈미디어++++++++++++++++++++1108/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:19,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:19,892 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:24:20,141 > ++++++++++++++이지케어텍++++++++++++++++++++1109/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:20,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:20,500 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:24:20,726 > ++++++++++++++이트론++++++++++++++++++++1110/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:20,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:21,107 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:24:21,356 > ++++++++++++++인바디++++++++++++++++++++1111/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:21,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:21,714 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:24:21,955 > ++++++++++++++인선이엔티++++++++++++++++++++1112/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:21,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:22,320 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:24:22,558 > ++++++++++++++인포마크++++++++++++++++++++1113/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:22,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:22,927 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:24:23,172 > ++++++++++++++인포바인++++++++++++++++++++1114/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:23,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:23,535 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:24:23,768 > ++++++++++++++인포뱅크++++++++++++++++++++1115/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:23,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:24,144 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:24:24,375 > ++++++++++++++잉크테크++++++++++++++++++++1116/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:24,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:24,752 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:24:24,999 > ++++++++++++++전진바이오팜++++++++++++++++++++1117/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:25,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:25,358 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:24:25,575 > ++++++++++++++정다운++++++++++++++++++++1118/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:25,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:25,966 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:24:26,201 > ++++++++++++++제놀루션++++++++++++++++++++1119/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:26,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:26,573 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:24:26,800 > ++++++++++++++제이스텍++++++++++++++++++++1120/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:26,801 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:27,180 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:24:27,418 > ++++++++++++++제이엘케이++++++++++++++++++++1121/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:27,418 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:27,788 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:24:27,975 > ++++++++++++++제일바이오++++++++++++++++++++1122/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:27,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:28,394 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:24:28,628 > ++++++++++++++젬백스지오++++++++++++++++++++1123/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:28,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:29,001 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:24:29,276 > ++++++++++++++조이맥스++++++++++++++++++++1124/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:29,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:29,608 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:24:29,837 > ++++++++++++++조이시티++++++++++++++++++++1125/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:29,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:30,216 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:24:30,475 > ++++++++++++++지니뮤직++++++++++++++++++++1126/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:30,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:30,824 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:24:31,069 > ++++++++++++++지니언스++++++++++++++++++++1127/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:31,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:31,431 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:24:31,657 > ++++++++++++++지란지교시큐리티++++++++++++++++++++1128/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:31,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:32,038 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:24:32,271 > ++++++++++++++지스마트글로벌++++++++++++++++++++1129/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:32,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:32,647 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:24:32,890 > ++++++++++++++지티지웰니스++++++++++++++++++++1130/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:32,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:33,254 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:24:33,487 > ++++++++++++++참좋은여행++++++++++++++++++++1131/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:33,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:33,861 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:24:34,113 > ++++++++++++++천보++++++++++++++++++++1132/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:34,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:34,469 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:24:34,675 > ++++++++++++++초록뱀++++++++++++++++++++1133/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:34,675 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:35,076 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:24:35,323 > ++++++++++++++컴투스++++++++++++++++++++1134/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:35,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:35,683 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:24:35,923 > ++++++++++++++케이비제19호스팩++++++++++++++++++++1135/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:35,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:36,289 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:24:36,486 > ++++++++++++++케이씨피드++++++++++++++++++++1136/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:36,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:36,895 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:24:37,149 > ++++++++++++++케이엔더블유++++++++++++++++++++1137/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:37,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:37,503 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:24:37,768 > ++++++++++++++코데즈컴바인++++++++++++++++++++1138/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:37,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:38,109 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:24:38,352 > ++++++++++++++코리아센터++++++++++++++++++++1139/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:38,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:38,717 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:24:38,914 > ++++++++++++++코메론++++++++++++++++++++1140/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:38,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:39,324 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:24:39,551 > ++++++++++++++코미팜++++++++++++++++++++1141/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:39,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:39,931 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:24:40,167 > ++++++++++++++코아시아++++++++++++++++++++1142/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:40,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:40,541 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:24:40,782 > ++++++++++++++코오롱생명과학++++++++++++++++++++1143/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:40,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:41,148 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:24:41,378 > ++++++++++++++코웰패션++++++++++++++++++++1144/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:41,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:41,756 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:24:42,010 > ++++++++++++++코위버++++++++++++++++++++1145/2894
[DEBUG|open_api.py:656] 2021-02-09 16:24:42,010 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:24:42,365 > 103
[DEBUG|open_api.py:303] 2021-02-09 16:28:56,187 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:28:56,187 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:28:56,187 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:28:56,188 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:28:56,188 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:28:56,188 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:28:56,188 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:28:56,209 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:28:56,234 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:28:56,235 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:28:56,235 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:28:56,251 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:28:56,281 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:28:59,137 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:28:59,138 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:28:59,187 > ++++++++++++++코위버++++++++++++++++++++1145/2894
[DEBUG|open_api.py:656] 2021-02-09 16:28:59,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:28:59,189 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:29:00,269 > ++++++++++++++큐브엔터++++++++++++++++++++1146/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:00,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:00,271 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:29:00,502 > ++++++++++++++크리스탈지노믹스++++++++++++++++++++1147/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:00,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:00,879 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:29:01,122 > ++++++++++++++클리오++++++++++++++++++++1148/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:01,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:01,487 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:29:01,718 > ++++++++++++++키움제5호스팩++++++++++++++++++++1149/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:01,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:02,095 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:29:02,307 > ++++++++++++++테고사이언스++++++++++++++++++++1150/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:02,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:02,703 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:29:02,935 > ++++++++++++++테라사이언스++++++++++++++++++++1151/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:02,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:03,312 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:29:03,552 > ++++++++++++++테라젠이텍스++++++++++++++++++++1152/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:03,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:03,920 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:29:04,175 > ++++++++++++++테스나++++++++++++++++++++1153/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:04,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:04,529 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:29:04,765 > ++++++++++++++티에스아이++++++++++++++++++++1154/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:04,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:05,136 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:29:05,366 > ++++++++++++++파루++++++++++++++++++++1155/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:05,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:05,744 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:29:06,005 > ++++++++++++++파멥신++++++++++++++++++++1156/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:06,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:06,353 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:29:06,575 > ++++++++++++++파수++++++++++++++++++++1157/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:06,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:06,959 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:29:07,196 > ++++++++++++++파인디지털++++++++++++++++++++1158/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:07,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:07,568 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:29:07,808 > ++++++++++++++팬엔터테인먼트++++++++++++++++++++1159/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:07,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:08,174 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:29:08,425 > ++++++++++++++펌텍코리아++++++++++++++++++++1160/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:08,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:08,782 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:29:08,993 > ++++++++++++++풍강++++++++++++++++++++1161/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:08,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:09,390 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:29:09,628 > ++++++++++++++플레이디++++++++++++++++++++1162/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:09,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:09,999 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:29:10,189 > ++++++++++++++피앤이솔루션++++++++++++++++++++1163/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:10,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:10,607 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:29:10,848 > ++++++++++++++피에스텍++++++++++++++++++++1164/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:10,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:11,213 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:29:11,461 > ++++++++++++++피엔티++++++++++++++++++++1165/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:11,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:11,820 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:29:12,077 > ++++++++++++++핌스++++++++++++++++++++1166/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:12,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:12,429 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:29:12,589 > ++++++++++++++핑거++++++++++++++++++++1167/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:12,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:13,036 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:29:13,192 > ++++++++++++++하나마이크론++++++++++++++++++++1168/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:13,193 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:13,644 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:29:13,888 > ++++++++++++++한국경제TV++++++++++++++++++++1169/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:13,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:14,251 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:29:14,516 > ++++++++++++++한국기업평가++++++++++++++++++++1170/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:14,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:14,859 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:29:15,118 > ++++++++++++++한국바이오젠++++++++++++++++++++1171/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:15,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:15,467 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:29:15,693 > ++++++++++++++한국비엔씨++++++++++++++++++++1172/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:15,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:16,076 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:29:16,308 > ++++++++++++++한국아트라스비엑스++++++++++++++++++++1173/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:16,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:16,684 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:29:16,927 > ++++++++++++++한국알콜++++++++++++++++++++1174/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:16,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:17,292 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:29:17,535 > ++++++++++++++한국전자금융++++++++++++++++++++1175/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:17,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:17,900 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:29:18,180 > ++++++++++++++한국정보인증++++++++++++++++++++1176/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:18,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:18,507 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:29:18,752 > ++++++++++++++한국정보통신++++++++++++++++++++1177/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:18,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:19,114 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:29:19,369 > ++++++++++++++한국팩키지++++++++++++++++++++1178/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:19,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:19,723 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:29:19,978 > ++++++++++++++한글과컴퓨터++++++++++++++++++++1179/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:19,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:20,329 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:29:20,578 > ++++++++++++++한일단조++++++++++++++++++++1180/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:20,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:20,937 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:29:21,203 > ++++++++++++++한컴위드++++++++++++++++++++1181/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:21,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:21,544 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:29:21,778 > ++++++++++++++한탑++++++++++++++++++++1182/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:21,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:22,152 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:29:22,402 > ++++++++++++++현진소재++++++++++++++++++++1183/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:22,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:22,760 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:29:23,002 > ++++++++++++++형지I&C++++++++++++++++++++1184/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:23,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:23,367 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:29:23,621 > ++++++++++++++휴네시온++++++++++++++++++++1185/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:23,621 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:23,975 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:29:24,228 > ++++++++++++++휴맥스홀딩스++++++++++++++++++++1186/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:24,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:24,583 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:29:24,835 > ++++++++++++++흥국에프엔비++++++++++++++++++++1187/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:24,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:25,190 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:29:25,431 > ++++++++++++++EMW++++++++++++++++++++1188/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:25,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:25,799 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:29:26,042 > ++++++++++++++JTC++++++++++++++++++++1189/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:26,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:26,406 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:29:26,628 > ++++++++++++++KCC건설++++++++++++++++++++1190/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:26,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:27,015 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:29:27,249 > ++++++++++++++KCI++++++++++++++++++++1191/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:27,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:27,622 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:29:27,876 > ++++++++++++++KD++++++++++++++++++++1192/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:27,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:28,230 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:29:28,474 > ++++++++++++++KG ETS++++++++++++++++++++1193/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:28,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:28,837 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:29:29,084 > ++++++++++++++KG모빌리언스++++++++++++++++++++1194/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:29,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:29,445 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:29:29,676 > ++++++++++++++NEW++++++++++++++++++++1195/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:29,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:30,053 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:29:30,276 > ++++++++++++++SBI핀테크솔루션즈++++++++++++++++++++1196/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:30,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:30,660 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:29:30,884 > ++++++++++++++SGA솔루션즈++++++++++++++++++++1197/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:30,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:31,268 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:29:31,534 > ++++++++++++++SM Life Design++++++++++++++++++++1198/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:31,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:31,877 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:29:32,140 > ++++++++++++++W홀딩컴퍼니++++++++++++++++++++1199/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:32,140 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:32,485 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:29:32,714 > ++++++++++++++교보9호스팩++++++++++++++++++++1200/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:32,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:33,092 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:29:33,300 > ++++++++++++++국전약품++++++++++++++++++++1201/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:33,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:33,701 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:29:33,920 > ++++++++++++++나노신소재++++++++++++++++++++1202/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:33,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:34,309 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:29:34,545 > ++++++++++++++나인테크++++++++++++++++++++1203/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:34,545 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:34,917 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:29:35,135 > ++++++++++++++네패스아크++++++++++++++++++++1204/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:35,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:35,524 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:29:35,686 > ++++++++++++++넥스트아이++++++++++++++++++++1205/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:35,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:36,130 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:29:36,364 > ++++++++++++++넥슨지티++++++++++++++++++++1206/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:36,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:36,738 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:29:36,984 > ++++++++++++++노터스++++++++++++++++++++1207/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:36,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:37,344 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:29:37,534 > ++++++++++++++누리플랜++++++++++++++++++++1208/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:37,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:37,953 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:29:38,187 > ++++++++++++++뉴로스++++++++++++++++++++1209/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:38,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:38,561 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:29:38,811 > ++++++++++++++뉴프라이드++++++++++++++++++++1210/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:38,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:39,169 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:29:39,432 > ++++++++++++++다산네트웍스++++++++++++++++++++1211/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:39,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:39,777 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:29:40,033 > ++++++++++++++다원시스++++++++++++++++++++1212/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:40,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:40,384 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:29:40,636 > ++++++++++++++대명소노시즌++++++++++++++++++++1213/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:40,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:40,991 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:29:41,256 > ++++++++++++++대성미생물++++++++++++++++++++1214/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:41,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:41,599 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:29:41,845 > ++++++++++++++대원산업++++++++++++++++++++1215/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:41,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:42,206 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:29:42,453 > ++++++++++++++더블유에스아이++++++++++++++++++++1216/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:42,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:42,813 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:29:43,038 > ++++++++++++++덕신하우징++++++++++++++++++++1217/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:43,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:43,422 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:29:43,667 > ++++++++++++++덴티스++++++++++++++++++++1218/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:43,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:44,029 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:29:44,270 > ++++++++++++++동신건설++++++++++++++++++++1219/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:44,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:44,637 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:29:44,894 > ++++++++++++++동일기연++++++++++++++++++++1220/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:44,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:45,244 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:29:45,491 > ++++++++++++++드림어스컴퍼니++++++++++++++++++++1221/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:45,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:45,851 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:29:46,096 > ++++++++++++++디지아이++++++++++++++++++++1222/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:46,097 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:46,459 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:29:46,689 > ++++++++++++++디지털대성++++++++++++++++++++1223/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:46,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:47,067 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:29:47,347 > ++++++++++++++디티앤씨++++++++++++++++++++1224/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:47,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:47,674 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:29:47,912 > ++++++++++++++라이브플렉스++++++++++++++++++++1225/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:47,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:48,280 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:29:48,525 > ++++++++++++++램테크놀러지++++++++++++++++++++1226/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:48,526 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:48,887 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:29:49,130 > ++++++++++++++레고켐바이오++++++++++++++++++++1227/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:49,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:49,494 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:29:49,738 > ++++++++++++++레몬++++++++++++++++++++1228/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:49,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:50,102 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:29:50,275 > ++++++++++++++로보스타++++++++++++++++++++1229/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:50,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:50,708 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:29:50,947 > ++++++++++++++리드코프++++++++++++++++++++1230/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:50,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:51,317 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:29:51,553 > ++++++++++++++메디콕스++++++++++++++++++++1231/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:51,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:51,924 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:29:52,194 > ++++++++++++++메디포스트++++++++++++++++++++1232/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:52,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:52,533 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:29:52,777 > ++++++++++++++미래컴퍼니++++++++++++++++++++1233/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:52,777 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:53,140 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:29:53,409 > ++++++++++++++바이브컴퍼니++++++++++++++++++++1234/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:53,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:53,747 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:29:53,906 > ++++++++++++++바이오니아++++++++++++++++++++1235/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:53,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:54,354 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:29:54,595 > ++++++++++++++베뉴지++++++++++++++++++++1236/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:54,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:54,960 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:29:55,222 > ++++++++++++++베셀++++++++++++++++++++1237/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:55,223 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:55,567 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:29:55,794 > ++++++++++++++보라티알++++++++++++++++++++1238/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:55,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:56,175 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:29:56,414 > ++++++++++++++부방++++++++++++++++++++1239/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:56,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:56,783 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:29:57,021 > ++++++++++++++브리지텍++++++++++++++++++++1240/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:57,022 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:57,389 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:29:57,626 > ++++++++++++++삼진엘앤디++++++++++++++++++++1241/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:57,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:57,996 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:29:58,285 > ++++++++++++++삼천리자전거++++++++++++++++++++1242/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:58,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:58,603 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:29:58,858 > ++++++++++++++삼현철강++++++++++++++++++++1243/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:58,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:59,210 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:29:59,459 > ++++++++++++++서산++++++++++++++++++++1244/2894
[DEBUG|open_api.py:656] 2021-02-09 16:29:59,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:29:59,817 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:30:00,060 > ++++++++++++++서진오토모티브++++++++++++++++++++1245/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:00,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:00,423 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:30:00,652 > ++++++++++++++성우테크론++++++++++++++++++++1246/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:00,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:01,029 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:30:01,281 > ++++++++++++++성우하이텍++++++++++++++++++++1247/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:01,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:01,638 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:30:01,884 > ++++++++++++++세운메디칼++++++++++++++++++++1248/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:01,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:02,245 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:30:02,484 > ++++++++++++++세종텔레콤++++++++++++++++++++1249/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:02,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:02,853 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:30:03,125 > ++++++++++++++셀리버리++++++++++++++++++++1250/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:03,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:03,460 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:30:03,702 > ++++++++++++++솔고바이오++++++++++++++++++++1251/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:03,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:04,068 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:30:04,312 > ++++++++++++++솔본++++++++++++++++++++1252/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:04,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:04,674 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:30:04,899 > ++++++++++++++수산아이앤티++++++++++++++++++++1253/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:04,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:05,281 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:30:05,519 > ++++++++++++++슈펙스비앤피++++++++++++++++++++1254/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:05,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:05,892 > 110
[DEBUG|collector_api.py:200] 2021-02-09 16:30:06,133 > ++++++++++++++슈피겐코리아++++++++++++++++++++1255/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:06,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:06,500 > 111
[DEBUG|collector_api.py:200] 2021-02-09 16:30:06,738 > ++++++++++++++스카이이앤엠++++++++++++++++++++1256/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:06,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:07,109 > 112
[DEBUG|collector_api.py:200] 2021-02-09 16:30:07,343 > ++++++++++++++스킨앤스킨++++++++++++++++++++1257/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:07,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:07,716 > 113
[DEBUG|collector_api.py:200] 2021-02-09 16:30:07,953 > ++++++++++++++시공테크++++++++++++++++++++1258/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:07,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:08,323 > 114
[DEBUG|collector_api.py:200] 2021-02-09 16:30:08,567 > ++++++++++++++시그네틱스++++++++++++++++++++1259/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:08,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:08,931 > 115
[DEBUG|collector_api.py:200] 2021-02-09 16:30:09,179 > ++++++++++++++시큐브++++++++++++++++++++1260/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:09,180 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:09,538 > 116
[DEBUG|collector_api.py:200] 2021-02-09 16:30:09,775 > ++++++++++++++신도기연++++++++++++++++++++1261/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:09,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:10,145 > 117
[DEBUG|collector_api.py:200] 2021-02-09 16:30:10,309 > ++++++++++++++신테카바이오++++++++++++++++++++1262/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:10,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:10,753 > 118
[DEBUG|collector_api.py:200] 2021-02-09 16:30:10,945 > ++++++++++++++실리콘웍스++++++++++++++++++++1263/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:10,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:11,361 > 119
[DEBUG|collector_api.py:200] 2021-02-09 16:30:11,592 > ++++++++++++++쎄노텍++++++++++++++++++++1264/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:11,592 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:11,969 > 120
[DEBUG|collector_api.py:200] 2021-02-09 16:30:12,199 > ++++++++++++++쎄미시스코++++++++++++++++++++1265/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:12,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:12,577 > 121
[DEBUG|collector_api.py:200] 2021-02-09 16:30:12,806 > ++++++++++++++씨엠에스에듀++++++++++++++++++++1266/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:12,806 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:13,186 > 122
[DEBUG|collector_api.py:200] 2021-02-09 16:30:13,417 > ++++++++++++++씨큐브++++++++++++++++++++1267/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:13,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:13,793 > 123
[DEBUG|collector_api.py:200] 2021-02-09 16:30:14,037 > ++++++++++++++아비코전자++++++++++++++++++++1268/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:14,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:14,401 > 124
[DEBUG|collector_api.py:200] 2021-02-09 16:30:14,643 > ++++++++++++++아이디피++++++++++++++++++++1269/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:14,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:15,008 > 125
[DEBUG|collector_api.py:200] 2021-02-09 16:30:15,181 > ++++++++++++++아이톡시++++++++++++++++++++1270/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:15,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:15,616 > 126
[DEBUG|collector_api.py:200] 2021-02-09 16:30:15,892 > ++++++++++++++아진산업++++++++++++++++++++1271/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:15,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:16,223 > 127
[DEBUG|collector_api.py:200] 2021-02-09 16:30:16,457 > ++++++++++++++아프리카TV++++++++++++++++++++1272/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:16,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:16,833 > 128
[DEBUG|collector_api.py:200] 2021-02-09 16:30:17,080 > ++++++++++++++알체라++++++++++++++++++++1273/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:17,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:17,440 > 129
[DEBUG|collector_api.py:200] 2021-02-09 16:30:17,592 > ++++++++++++++알티캐스트++++++++++++++++++++1274/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:17,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:18,048 > 130
[DEBUG|collector_api.py:200] 2021-02-09 16:30:18,290 > ++++++++++++++애니젠++++++++++++++++++++1275/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:18,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:18,655 > 131
[DEBUG|collector_api.py:200] 2021-02-09 16:30:18,890 > ++++++++++++++액션스퀘어++++++++++++++++++++1276/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:18,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:19,262 > 132
[DEBUG|collector_api.py:200] 2021-02-09 16:30:19,529 > ++++++++++++++앤디포스++++++++++++++++++++1277/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:19,530 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:19,869 > 133
[DEBUG|collector_api.py:200] 2021-02-09 16:30:20,111 > ++++++++++++++앱클론++++++++++++++++++++1278/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:20,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:20,476 > 134
[DEBUG|collector_api.py:200] 2021-02-09 16:30:20,709 > ++++++++++++++에스와이++++++++++++++++++++1279/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:20,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:21,084 > 135
[DEBUG|collector_api.py:200] 2021-02-09 16:30:21,314 > ++++++++++++++에스트래픽++++++++++++++++++++1280/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:21,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:21,692 > 136
[DEBUG|collector_api.py:200] 2021-02-09 16:30:21,920 > ++++++++++++++에스퓨얼셀++++++++++++++++++++1281/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:21,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:22,299 > 137
[DEBUG|collector_api.py:200] 2021-02-09 16:30:22,518 > ++++++++++++++에이디칩스++++++++++++++++++++1282/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:22,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:22,907 > 138
[DEBUG|collector_api.py:200] 2021-02-09 16:30:23,153 > ++++++++++++++에이비엘바이오++++++++++++++++++++1283/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:23,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:23,515 > 139
[DEBUG|collector_api.py:200] 2021-02-09 16:30:23,741 > ++++++++++++++에이스침대++++++++++++++++++++1284/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:23,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:24,121 > 140
[DEBUG|collector_api.py:200] 2021-02-09 16:30:24,402 > ++++++++++++++에이아이비트++++++++++++++++++++1285/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:24,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:24,728 > 141
[DEBUG|collector_api.py:200] 2021-02-09 16:30:24,963 > ++++++++++++++에이치시티++++++++++++++++++++1286/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:24,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:25,335 > 142
[DEBUG|collector_api.py:200] 2021-02-09 16:30:25,568 > ++++++++++++++에이텍티앤++++++++++++++++++++1287/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:25,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:25,942 > 143
[DEBUG|collector_api.py:200] 2021-02-09 16:30:26,181 > ++++++++++++++에이팸++++++++++++++++++++1288/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:26,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:26,548 > 144
[DEBUG|collector_api.py:200] 2021-02-09 16:30:26,784 > ++++++++++++++엑셈++++++++++++++++++++1289/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:26,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:27,157 > 145
[DEBUG|collector_api.py:200] 2021-02-09 16:30:27,382 > ++++++++++++++엔브이에이치코리아++++++++++++++++++++1290/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:27,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:27,765 > 146
[DEBUG|collector_api.py:200] 2021-02-09 16:30:28,006 > ++++++++++++++엔지켐생명과학++++++++++++++++++++1291/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:28,006 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:28,372 > 147
[DEBUG|collector_api.py:200] 2021-02-09 16:30:28,601 > ++++++++++++++엔케이맥스++++++++++++++++++++1292/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:28,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:28,979 > 148
[DEBUG|collector_api.py:200] 2021-02-09 16:30:29,214 > ++++++++++++++엔텔스++++++++++++++++++++1293/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:29,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:29,587 > 149
[DEBUG|collector_api.py:200] 2021-02-09 16:30:29,833 > ++++++++++++++엘디티++++++++++++++++++++1294/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:29,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:30,194 > 150
[DEBUG|collector_api.py:200] 2021-02-09 16:30:30,434 > ++++++++++++++엘컴텍++++++++++++++++++++1295/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:30,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:30,801 > 151
[DEBUG|collector_api.py:200] 2021-02-09 16:30:31,045 > ++++++++++++++영림원소프트랩++++++++++++++++++++1296/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:31,046 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:31,408 > 152
[DEBUG|collector_api.py:200] 2021-02-09 16:30:31,569 > ++++++++++++++예스티++++++++++++++++++++1297/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:31,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:32,014 > 153
[DEBUG|collector_api.py:200] 2021-02-09 16:30:32,244 > ++++++++++++++오스테오닉++++++++++++++++++++1298/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:32,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:32,621 > 154
[DEBUG|collector_api.py:200] 2021-02-09 16:30:32,876 > ++++++++++++++오텍++++++++++++++++++++1299/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:32,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:33,228 > 155
[DEBUG|collector_api.py:200] 2021-02-09 16:30:33,469 > ++++++++++++++와이즈버즈++++++++++++++++++++1300/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:33,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:33,835 > 156
[DEBUG|collector_api.py:200] 2021-02-09 16:30:34,060 > ++++++++++++++원익머트리얼즈++++++++++++++++++++1301/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:34,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:34,442 > 157
[DEBUG|collector_api.py:200] 2021-02-09 16:30:34,678 > ++++++++++++++원풍++++++++++++++++++++1302/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:34,679 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:35,050 > 158
[DEBUG|collector_api.py:200] 2021-02-09 16:30:35,294 > ++++++++++++++웹젠++++++++++++++++++++1303/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:35,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:35,657 > 159
[DEBUG|collector_api.py:200] 2021-02-09 16:30:35,950 > ++++++++++++++위닉스++++++++++++++++++++1304/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:35,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:36,264 > 160
[DEBUG|collector_api.py:200] 2021-02-09 16:30:36,499 > ++++++++++++++위메이드++++++++++++++++++++1305/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:36,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:36,871 > 161
[DEBUG|collector_api.py:200] 2021-02-09 16:30:37,105 > ++++++++++++++유비벨록스++++++++++++++++++++1306/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:37,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:37,479 > 162
[DEBUG|collector_api.py:200] 2021-02-09 16:30:37,705 > ++++++++++++++유비쿼스++++++++++++++++++++1307/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:37,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:38,085 > 163
[DEBUG|collector_api.py:200] 2021-02-09 16:30:38,316 > ++++++++++++++유안타제4호스팩++++++++++++++++++++1308/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:38,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:38,693 > 164
[DEBUG|collector_api.py:200] 2021-02-09 16:30:38,894 > ++++++++++++++유진테크++++++++++++++++++++1309/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:38,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:39,300 > 165
[DEBUG|collector_api.py:200] 2021-02-09 16:30:39,535 > ++++++++++++++이건홀딩스++++++++++++++++++++1310/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:39,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:39,908 > 166
[DEBUG|collector_api.py:200] 2021-02-09 16:30:40,136 > ++++++++++++++이노와이어리스++++++++++++++++++++1311/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:40,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:40,516 > 167
[DEBUG|collector_api.py:200] 2021-02-09 16:30:40,741 > ++++++++++++++이녹스첨단소재++++++++++++++++++++1312/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:40,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:41,124 > 168
[DEBUG|collector_api.py:200] 2021-02-09 16:30:41,366 > ++++++++++++++이랜텍++++++++++++++++++++1313/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:41,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:41,730 > 169
[DEBUG|collector_api.py:200] 2021-02-09 16:30:41,972 > ++++++++++++++이미지스++++++++++++++++++++1314/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:41,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:42,337 > 170
[DEBUG|collector_api.py:200] 2021-02-09 16:30:42,561 > ++++++++++++++이수앱지스++++++++++++++++++++1315/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:42,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:42,944 > 171
[DEBUG|collector_api.py:200] 2021-02-09 16:30:43,196 > ++++++++++++++인산가++++++++++++++++++++1316/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:43,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:43,551 > 172
[DEBUG|collector_api.py:200] 2021-02-09 16:30:43,774 > ++++++++++++++인성정보++++++++++++++++++++1317/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:43,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:44,158 > 173
[DEBUG|collector_api.py:200] 2021-02-09 16:30:44,390 > ++++++++++++++인탑스++++++++++++++++++++1318/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:44,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:44,765 > 174
[DEBUG|collector_api.py:200] 2021-02-09 16:30:44,995 > ++++++++++++++인터파크++++++++++++++++++++1319/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:44,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:45,372 > 175
[DEBUG|collector_api.py:200] 2021-02-09 16:30:45,608 > ++++++++++++++인텔리안테크++++++++++++++++++++1320/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:45,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:45,980 > 176
[DEBUG|collector_api.py:200] 2021-02-09 16:30:46,221 > ++++++++++++++자안++++++++++++++++++++1321/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:46,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:46,587 > 177
[DEBUG|collector_api.py:200] 2021-02-09 16:30:46,813 > ++++++++++++++재영솔루텍++++++++++++++++++++1322/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:46,814 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:47,194 > 178
[DEBUG|collector_api.py:200] 2021-02-09 16:30:47,431 > ++++++++++++++제낙스++++++++++++++++++++1323/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:47,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:47,802 > 179
[DEBUG|collector_api.py:200] 2021-02-09 16:30:48,042 > ++++++++++++++제이앤티씨++++++++++++++++++++1324/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:48,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:48,409 > 180
[DEBUG|collector_api.py:200] 2021-02-09 16:30:48,587 > ++++++++++++++제이티++++++++++++++++++++1325/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:48,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:49,017 > 181
[DEBUG|collector_api.py:200] 2021-02-09 16:30:49,250 > ++++++++++++++지더블유바이텍++++++++++++++++++++1326/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:49,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:49,624 > 182
[DEBUG|collector_api.py:200] 2021-02-09 16:30:49,873 > ++++++++++++++진바이오텍++++++++++++++++++++1327/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:49,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:50,232 > 183
[DEBUG|collector_api.py:200] 2021-02-09 16:30:50,486 > ++++++++++++++진성티이씨++++++++++++++++++++1328/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:50,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:50,840 > 184
[DEBUG|collector_api.py:200] 2021-02-09 16:30:51,100 > ++++++++++++++카이노스메드++++++++++++++++++++1329/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:51,100 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:51,446 > 185
[DEBUG|collector_api.py:200] 2021-02-09 16:30:51,705 > ++++++++++++++캐리소프트++++++++++++++++++++1330/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:51,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:52,053 > 186
[DEBUG|collector_api.py:200] 2021-02-09 16:30:52,255 > ++++++++++++++캔서롭++++++++++++++++++++1331/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:52,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:52,661 > 187
[DEBUG|collector_api.py:200] 2021-02-09 16:30:52,882 > ++++++++++++++캠시스++++++++++++++++++++1332/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:52,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:53,269 > 188
[DEBUG|collector_api.py:200] 2021-02-09 16:30:53,505 > ++++++++++++++케이비제18호스팩++++++++++++++++++++1333/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:53,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:53,876 > 189
[DEBUG|collector_api.py:200] 2021-02-09 16:30:54,091 > ++++++++++++++케이엠더블유++++++++++++++++++++1334/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:54,091 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:54,484 > 190
[DEBUG|collector_api.py:200] 2021-02-09 16:30:54,736 > ++++++++++++++케이피에프++++++++++++++++++++1335/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:54,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:55,091 > 191
[DEBUG|collector_api.py:200] 2021-02-09 16:30:55,335 > ++++++++++++++코닉글로리++++++++++++++++++++1336/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:55,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:55,698 > 192
[DEBUG|collector_api.py:200] 2021-02-09 16:30:55,927 > ++++++++++++++코드네이처++++++++++++++++++++1337/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:55,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:56,306 > 193
[DEBUG|collector_api.py:200] 2021-02-09 16:30:56,536 > ++++++++++++++코디엠++++++++++++++++++++1338/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:56,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:56,914 > 194
[DEBUG|collector_api.py:200] 2021-02-09 16:30:57,163 > ++++++++++++++코리아에셋투자증권++++++++++++++++++++1339/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:57,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:57,522 > 195
[DEBUG|collector_api.py:200] 2021-02-09 16:30:57,720 > ++++++++++++++코미코++++++++++++++++++++1340/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:57,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:58,128 > 196
[DEBUG|collector_api.py:200] 2021-02-09 16:30:58,361 > ++++++++++++++코이즈++++++++++++++++++++1341/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:58,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:58,735 > 197
[DEBUG|collector_api.py:200] 2021-02-09 16:30:58,987 > ++++++++++++++큐브앤컴퍼니++++++++++++++++++++1342/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:58,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:59,342 > 198
[DEBUG|collector_api.py:200] 2021-02-09 16:30:59,586 > ++++++++++++++키이스트++++++++++++++++++++1343/2894
[DEBUG|open_api.py:656] 2021-02-09 16:30:59,586 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:30:59,950 > 199
[DEBUG|collector_api.py:200] 2021-02-09 16:31:00,204 > ++++++++++++++탑엔지니어링++++++++++++++++++++1344/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:00,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:00,557 > 200
[DEBUG|collector_api.py:200] 2021-02-09 16:31:00,783 > ++++++++++++++태웅로직스++++++++++++++++++++1345/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:00,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:01,165 > 201
[DEBUG|collector_api.py:200] 2021-02-09 16:31:01,358 > ++++++++++++++텔콘RF제약++++++++++++++++++++1346/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:01,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:01,772 > 202
[DEBUG|collector_api.py:200] 2021-02-09 16:31:02,007 > ++++++++++++++토비스++++++++++++++++++++1347/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:02,007 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:02,378 > 203
[DEBUG|collector_api.py:200] 2021-02-09 16:31:02,613 > ++++++++++++++티라유텍++++++++++++++++++++1348/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:02,614 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:02,987 > 204
[DEBUG|collector_api.py:200] 2021-02-09 16:31:03,208 > ++++++++++++++티엘비++++++++++++++++++++1349/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:03,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:03,593 > 205
[DEBUG|collector_api.py:200] 2021-02-09 16:31:03,744 > ++++++++++++++파라다이스++++++++++++++++++++1350/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:03,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:04,201 > 206
[DEBUG|collector_api.py:200] 2021-02-09 16:31:04,439 > ++++++++++++++파버나인++++++++++++++++++++1351/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:04,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:04,809 > 207
[DEBUG|collector_api.py:200] 2021-02-09 16:31:05,050 > ++++++++++++++파워넷++++++++++++++++++++1352/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:05,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:05,417 > 208
[DEBUG|collector_api.py:200] 2021-02-09 16:31:05,652 > ++++++++++++++팍스넷++++++++++++++++++++1353/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:05,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:06,025 > 209
[DEBUG|collector_api.py:200] 2021-02-09 16:31:06,254 > ++++++++++++++프로텍++++++++++++++++++++1354/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:06,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:06,632 > 210
[DEBUG|collector_api.py:200] 2021-02-09 16:31:06,883 > ++++++++++++++피에스케이++++++++++++++++++++1355/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:06,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:07,239 > 211
[DEBUG|collector_api.py:200] 2021-02-09 16:31:07,442 > ++++++++++++++픽셀플러스++++++++++++++++++++1356/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:07,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:07,849 > 212
[DEBUG|collector_api.py:200] 2021-02-09 16:31:08,133 > ++++++++++++++필옵틱스++++++++++++++++++++1357/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:08,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:08,455 > 213
[DEBUG|collector_api.py:200] 2021-02-09 16:31:08,688 > ++++++++++++++하나금융14호스팩++++++++++++++++++++1358/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:08,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:09,063 > 214
[DEBUG|collector_api.py:200] 2021-02-09 16:31:09,251 > ++++++++++++++하나금융16호스팩++++++++++++++++++++1359/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:09,252 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:09,670 > 215
[DEBUG|collector_api.py:200] 2021-02-09 16:31:09,835 > ++++++++++++++한국캐피탈++++++++++++++++++++1360/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:09,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:10,276 > 216
[DEBUG|collector_api.py:200] 2021-02-09 16:31:10,524 > ++++++++++++++한류타임즈++++++++++++++++++++1361/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:10,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:10,884 > 217
[DEBUG|collector_api.py:200] 2021-02-09 16:31:11,131 > ++++++++++++++한일네트웍스++++++++++++++++++++1362/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:11,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:11,491 > 218
[DEBUG|collector_api.py:200] 2021-02-09 16:31:11,734 > ++++++++++++++해마로푸드서비스++++++++++++++++++++1363/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:11,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:12,097 > 219
[DEBUG|collector_api.py:200] 2021-02-09 16:31:12,347 > ++++++++++++++헬릭스미스++++++++++++++++++++1364/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:12,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:12,704 > 220
[DEBUG|collector_api.py:200] 2021-02-09 16:31:12,943 > ++++++++++++++휴먼엔++++++++++++++++++++1365/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:12,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:13,313 > 221
[DEBUG|collector_api.py:200] 2021-02-09 16:31:13,558 > ++++++++++++++희림++++++++++++++++++++1366/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:13,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:13,921 > 222
[DEBUG|collector_api.py:200] 2021-02-09 16:31:14,183 > ++++++++++++++DSC인베스트먼트++++++++++++++++++++1367/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:14,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:14,529 > 223
[DEBUG|collector_api.py:200] 2021-02-09 16:31:14,771 > ++++++++++++++KMH++++++++++++++++++++1368/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:14,772 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:15,136 > 224
[DEBUG|collector_api.py:200] 2021-02-09 16:31:15,356 > ++++++++++++++NHN벅스++++++++++++++++++++1369/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:15,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:15,744 > 225
[DEBUG|collector_api.py:200] 2021-02-09 16:31:15,978 > ++++++++++++++SDN++++++++++++++++++++1370/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:15,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:16,351 > 226
[DEBUG|collector_api.py:200] 2021-02-09 16:31:16,596 > ++++++++++++++SK4호스팩++++++++++++++++++++1371/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:16,597 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:16,957 > 227
[DEBUG|collector_api.py:200] 2021-02-09 16:31:17,174 > ++++++++++++++SK머티리얼즈++++++++++++++++++++1372/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:17,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:17,567 > 228
[DEBUG|collector_api.py:200] 2021-02-09 16:31:17,793 > ++++++++++++++SNK++++++++++++++++++++1373/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:17,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:18,175 > 229
[DEBUG|collector_api.py:200] 2021-02-09 16:31:18,379 > ++++++++++++++WI++++++++++++++++++++1374/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:18,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:18,782 > 230
[DEBUG|collector_api.py:200] 2021-02-09 16:31:19,019 > ++++++++++++++가비아++++++++++++++++++++1375/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:19,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:19,388 > 231
[DEBUG|collector_api.py:200] 2021-02-09 16:31:19,624 > ++++++++++++++경남스틸++++++++++++++++++++1376/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:19,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:19,995 > 232
[DEBUG|collector_api.py:200] 2021-02-09 16:31:20,256 > ++++++++++++++국일신동++++++++++++++++++++1377/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:20,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:20,603 > 233
[DEBUG|collector_api.py:200] 2021-02-09 16:31:20,837 > ++++++++++++++글로벌텍스프리++++++++++++++++++++1378/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:20,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:21,211 > 234
[DEBUG|collector_api.py:200] 2021-02-09 16:31:21,448 > ++++++++++++++글로본++++++++++++++++++++1379/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:21,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:21,819 > 235
[DEBUG|collector_api.py:200] 2021-02-09 16:31:22,065 > ++++++++++++++나노++++++++++++++++++++1380/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:22,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:22,428 > 236
[DEBUG|collector_api.py:200] 2021-02-09 16:31:22,663 > ++++++++++++++네오셈++++++++++++++++++++1381/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:22,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:23,035 > 237
[DEBUG|collector_api.py:200] 2021-02-09 16:31:23,282 > ++++++++++++++네오위즈홀딩스++++++++++++++++++++1382/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:23,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:23,643 > 238
[DEBUG|collector_api.py:200] 2021-02-09 16:31:23,888 > ++++++++++++++네이블++++++++++++++++++++1383/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:23,888 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:24,250 > 239
[DEBUG|collector_api.py:200] 2021-02-09 16:31:24,524 > ++++++++++++++넥스트BT++++++++++++++++++++1384/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:24,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:24,858 > 240
[DEBUG|collector_api.py:200] 2021-02-09 16:31:25,123 > ++++++++++++++노바렉스++++++++++++++++++++1385/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:25,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:25,465 > 241
[DEBUG|collector_api.py:200] 2021-02-09 16:31:25,683 > ++++++++++++++대신밸런스제7호스팩++++++++++++++++++++1386/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:25,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:26,071 > 242
[DEBUG|collector_api.py:200] 2021-02-09 16:31:26,261 > ++++++++++++++대양전기공업++++++++++++++++++++1387/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:26,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:26,678 > 243
[DEBUG|collector_api.py:200] 2021-02-09 16:31:26,904 > ++++++++++++++대원++++++++++++++++++++1388/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:26,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:27,285 > 244
[DEBUG|collector_api.py:200] 2021-02-09 16:31:27,504 > ++++++++++++++대한뉴팜++++++++++++++++++++1389/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:27,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:27,893 > 245
[DEBUG|collector_api.py:200] 2021-02-09 16:31:28,148 > ++++++++++++++더블유에프엠++++++++++++++++++++1390/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:28,148 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:28,500 > 246
[DEBUG|collector_api.py:200] 2021-02-09 16:31:28,742 > ++++++++++++++덕산테코피아++++++++++++++++++++1391/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:28,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:29,106 > 247
[DEBUG|collector_api.py:200] 2021-02-09 16:31:29,322 > ++++++++++++++덕산하이메탈++++++++++++++++++++1392/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:29,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:29,715 > 248
[DEBUG|collector_api.py:200] 2021-02-09 16:31:29,947 > ++++++++++++++동국제약++++++++++++++++++++1393/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:29,947 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:30,324 > 249
[DEBUG|collector_api.py:200] 2021-02-09 16:31:30,559 > ++++++++++++++동진쎄미켐++++++++++++++++++++1394/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:30,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:30,932 > 250
[DEBUG|collector_api.py:200] 2021-02-09 16:31:31,191 > ++++++++++++++디바이스이엔지++++++++++++++++++++1395/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:31,191 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:31,540 > 251
[DEBUG|collector_api.py:200] 2021-02-09 16:31:31,766 > ++++++++++++++디알젬++++++++++++++++++++1396/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:31,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:32,147 > 252
[DEBUG|collector_api.py:200] 2021-02-09 16:31:32,369 > ++++++++++++++디에스티++++++++++++++++++++1397/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:32,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:32,755 > 253
[DEBUG|collector_api.py:200] 2021-02-09 16:31:33,009 > ++++++++++++++라이온켐텍++++++++++++++++++++1398/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:33,010 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:33,363 > 254
[DEBUG|collector_api.py:200] 2021-02-09 16:31:33,590 > ++++++++++++++레이크머티리얼즈++++++++++++++++++++1399/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:33,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:33,971 > 255
[DEBUG|collector_api.py:200] 2021-02-09 16:31:34,228 > ++++++++++++++레인보우로보틱스++++++++++++++++++++1400/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:34,229 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:34,578 > 256
[DEBUG|collector_api.py:200] 2021-02-09 16:31:34,726 > ++++++++++++++로지시스++++++++++++++++++++1401/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:34,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:35,185 > 257
[DEBUG|collector_api.py:200] 2021-02-09 16:31:35,403 > ++++++++++++++릭스솔루션++++++++++++++++++++1402/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:35,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:35,793 > 258
[DEBUG|collector_api.py:200] 2021-02-09 16:31:36,038 > ++++++++++++++링네트++++++++++++++++++++1403/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:36,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:36,400 > 259
[DEBUG|collector_api.py:200] 2021-02-09 16:31:36,639 > ++++++++++++++마이크로프랜드++++++++++++++++++++1404/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:36,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:37,008 > 260
[DEBUG|collector_api.py:200] 2021-02-09 16:31:37,250 > ++++++++++++++매직마이크로++++++++++++++++++++1405/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:37,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:37,615 > 261
[DEBUG|collector_api.py:200] 2021-02-09 16:31:37,864 > ++++++++++++++메가스터디교육++++++++++++++++++++1406/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:37,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:38,222 > 262
[DEBUG|collector_api.py:200] 2021-02-09 16:31:38,441 > ++++++++++++++메드팩토++++++++++++++++++++1407/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:38,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:38,830 > 263
[DEBUG|collector_api.py:200] 2021-02-09 16:31:39,013 > ++++++++++++++모헨즈++++++++++++++++++++1408/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:39,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:39,436 > 264
[DEBUG|collector_api.py:200] 2021-02-09 16:31:39,679 > ++++++++++++++미코++++++++++++++++++++1409/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:39,679 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:40,043 > 265
[DEBUG|collector_api.py:200] 2021-02-09 16:31:40,312 > ++++++++++++++민앤지++++++++++++++++++++1410/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:40,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:40,652 > 266
[DEBUG|collector_api.py:200] 2021-02-09 16:31:40,938 > ++++++++++++++바른손이앤에이++++++++++++++++++++1411/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:40,938 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:41,258 > 267
[DEBUG|collector_api.py:200] 2021-02-09 16:31:41,505 > ++++++++++++++바이온++++++++++++++++++++1412/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:41,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:41,866 > 268
[DEBUG|collector_api.py:200] 2021-02-09 16:31:42,118 > ++++++++++++++베노홀딩스++++++++++++++++++++1413/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:42,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:42,474 > 269
[DEBUG|collector_api.py:200] 2021-02-09 16:31:42,710 > ++++++++++++++비디아이++++++++++++++++++++1414/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:42,711 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:43,081 > 270
[DEBUG|collector_api.py:200] 2021-02-09 16:31:43,330 > ++++++++++++++비보존 헬스케어++++++++++++++++++++1415/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:43,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:43,689 > 271
[DEBUG|collector_api.py:200] 2021-02-09 16:31:43,925 > ++++++++++++++비에이치아이++++++++++++++++++++1416/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:43,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:44,295 > 272
[DEBUG|collector_api.py:200] 2021-02-09 16:31:44,526 > ++++++++++++++새로닉스++++++++++++++++++++1417/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:44,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:44,904 > 273
[DEBUG|collector_api.py:200] 2021-02-09 16:31:45,161 > ++++++++++++++서연탑메탈++++++++++++++++++++1418/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:45,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:45,511 > 274
[DEBUG|collector_api.py:200] 2021-02-09 16:31:45,731 > ++++++++++++++서울반도체++++++++++++++++++++1419/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:45,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:46,119 > 275
[DEBUG|collector_api.py:200] 2021-02-09 16:31:46,370 > ++++++++++++++서울전자통신++++++++++++++++++++1420/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:46,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:46,727 > 276
[DEBUG|collector_api.py:200] 2021-02-09 16:31:46,983 > ++++++++++++++서원인텍++++++++++++++++++++1421/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:46,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:47,334 > 277
[DEBUG|collector_api.py:200] 2021-02-09 16:31:47,564 > ++++++++++++++선데이토즈++++++++++++++++++++1422/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:47,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:47,942 > 278
[DEBUG|collector_api.py:200] 2021-02-09 16:31:48,181 > ++++++++++++++성호전자++++++++++++++++++++1423/2894
[DEBUG|open_api.py:656] 2021-02-09 16:31:48,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:31:48,549 > 279
[DEBUG|open_api.py:303] 2021-02-09 16:34:10,257 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:34:10,258 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:34:10,258 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:34:10,258 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:34:10,258 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:34:10,258 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:34:10,259 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:34:10,277 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:34:10,303 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:34:10,303 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:34:10,303 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:34:10,327 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:34:10,359 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:34:12,960 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:34:12,962 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:34:13,001 > ++++++++++++++성호전자++++++++++++++++++++1423/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:13,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:13,004 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:34:14,064 > ++++++++++++++세틀뱅크++++++++++++++++++++1424/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:14,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:14,066 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:34:14,262 > ++++++++++++++센코++++++++++++++++++++1425/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:14,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:14,674 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:34:14,834 > ++++++++++++++슈프리마에이치큐++++++++++++++++++++1426/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:14,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:15,280 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:34:15,533 > ++++++++++++++스타플렉스++++++++++++++++++++1427/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:15,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:15,888 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:34:16,124 > ++++++++++++++시노펙스++++++++++++++++++++1428/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:16,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:16,496 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:34:16,744 > ++++++++++++++신라에스지++++++++++++++++++++1429/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:16,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:17,104 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:34:17,367 > ++++++++++++++신원종합개발++++++++++++++++++++1430/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:17,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:17,712 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:34:17,964 > ++++++++++++++신한제7호스팩++++++++++++++++++++1431/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:17,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:18,319 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:34:18,470 > ++++++++++++++신흥에스이씨++++++++++++++++++++1432/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:18,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:18,926 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:34:19,146 > ++++++++++++++쎄트렉아이++++++++++++++++++++1433/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:19,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:19,533 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:34:19,773 > ++++++++++++++씨앤지하이테크++++++++++++++++++++1434/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:19,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:20,139 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:34:20,354 > ++++++++++++++씨티씨바이오++++++++++++++++++++1435/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:20,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:20,746 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:34:20,972 > ++++++++++++++아스타++++++++++++++++++++1436/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:20,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:21,355 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:34:21,604 > ++++++++++++++아시아종묘++++++++++++++++++++1437/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:21,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:21,962 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:34:22,207 > ++++++++++++++아우딘퓨쳐스++++++++++++++++++++1438/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:22,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:22,570 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:34:22,812 > ++++++++++++++아이엘사이언스++++++++++++++++++++1439/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:22,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:23,176 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:34:23,390 > ++++++++++++++아이진++++++++++++++++++++1440/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:23,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:23,785 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:34:24,011 > ++++++++++++++아이큐어++++++++++++++++++++1441/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:24,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:24,392 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:34:24,629 > ++++++++++++++아이크래프트++++++++++++++++++++1442/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:24,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:24,998 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:34:25,236 > ++++++++++++++안트로젠++++++++++++++++++++1443/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:25,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:25,604 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:34:25,821 > ++++++++++++++알에스오토메이션++++++++++++++++++++1444/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:25,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:26,213 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:34:26,457 > ++++++++++++++에스디생명공학++++++++++++++++++++1445/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:26,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:26,820 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:34:27,055 > ++++++++++++++에스씨엠생명과학++++++++++++++++++++1446/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:27,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:27,427 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:34:27,589 > ++++++++++++++에스앤씨엔진그룹++++++++++++++++++++1447/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:27,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:28,034 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:34:28,287 > ++++++++++++++에스텍파마++++++++++++++++++++1448/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:28,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:28,642 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:34:28,881 > ++++++++++++++에이비프로바이오++++++++++++++++++++1449/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:28,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:29,250 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:34:29,503 > ++++++++++++++에이스테크++++++++++++++++++++1450/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:29,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:29,858 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:34:30,099 > ++++++++++++++에이치엔티++++++++++++++++++++1451/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:30,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:30,467 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:34:30,703 > ++++++++++++++에이치엘사이언스++++++++++++++++++++1452/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:30,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:31,074 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:34:31,298 > ++++++++++++++에이치엠씨제4호스팩++++++++++++++++++++1453/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:31,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:31,681 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:34:31,858 > ++++++++++++++에이티세미콘++++++++++++++++++++1454/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:31,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:32,288 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:34:32,519 > ++++++++++++++에이팩트++++++++++++++++++++1455/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:32,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:32,896 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:34:33,122 > ++++++++++++++에이프로젠 H&G++++++++++++++++++++1456/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:33,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:33,503 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:34:33,729 > ++++++++++++++에코플라스틱++++++++++++++++++++1457/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:33,729 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:34,111 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:34:34,353 > ++++++++++++++엔에스++++++++++++++++++++1458/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:34,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:34,719 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:34:34,949 > ++++++++++++++엔에스엔++++++++++++++++++++1459/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:34,950 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:35,326 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:34:35,573 > ++++++++++++++엔지스테크널러지++++++++++++++++++++1460/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:35,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:35,935 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:34:36,188 > ++++++++++++++엔피디++++++++++++++++++++1461/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:36,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:36,542 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:34:36,713 > ++++++++++++++엘아이에스++++++++++++++++++++1462/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:36,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:37,149 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:34:37,405 > ++++++++++++++엘앤씨바이오++++++++++++++++++++1463/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:37,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:37,756 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:34:37,973 > ++++++++++++++엘오티베큠++++++++++++++++++++1464/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:37,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:38,363 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:34:38,589 > ++++++++++++++엠브레인++++++++++++++++++++1465/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:38,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:38,971 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:34:39,139 > ++++++++++++++엠투아이++++++++++++++++++++1466/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:39,140 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:39,579 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:34:39,749 > ++++++++++++++엠플러스++++++++++++++++++++1467/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:39,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:40,186 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:34:40,412 > ++++++++++++++예스24++++++++++++++++++++1468/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:40,413 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:40,794 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:34:41,028 > ++++++++++++++오가닉티코스메틱++++++++++++++++++++1469/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:41,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:41,401 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:34:41,629 > ++++++++++++++오하임아이엔티++++++++++++++++++++1470/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:41,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:42,007 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:34:42,233 > ++++++++++++++옵트론텍++++++++++++++++++++1471/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:42,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:42,614 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:34:42,852 > ++++++++++++++옵티팜++++++++++++++++++++1472/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:42,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:43,220 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:34:43,450 > ++++++++++++++와이솔++++++++++++++++++++1473/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:43,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:43,828 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:34:44,056 > ++++++++++++++와이아이케이++++++++++++++++++++1474/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:44,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:44,436 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:34:44,668 > ++++++++++++++우노앤컴퍼니++++++++++++++++++++1475/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:44,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:45,043 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:34:45,308 > ++++++++++++++우리산업홀딩스++++++++++++++++++++1476/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:45,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:45,651 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:34:45,898 > ++++++++++++++우양++++++++++++++++++++1477/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:45,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:46,258 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:34:46,454 > ++++++++++++++우진비앤지++++++++++++++++++++1478/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:46,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:46,866 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:34:47,094 > ++++++++++++++원익++++++++++++++++++++1479/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:47,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:47,472 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:34:47,717 > ++++++++++++++유성티엔에스++++++++++++++++++++1480/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:47,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:48,078 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:34:48,348 > ++++++++++++++유에스티++++++++++++++++++++1481/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:48,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:48,687 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:34:48,920 > ++++++++++++++이루온++++++++++++++++++++1482/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:48,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:49,293 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:34:49,532 > ++++++++++++++이엔에프테크놀로지++++++++++++++++++++1483/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:49,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:49,901 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:34:50,144 > ++++++++++++++이엘피++++++++++++++++++++1484/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:50,145 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:50,508 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:34:50,737 > ++++++++++++++이지홀딩스++++++++++++++++++++1485/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:50,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:51,115 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:34:51,353 > ++++++++++++++인터엠++++++++++++++++++++1486/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:51,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:51,723 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:34:51,992 > ++++++++++++++인터플렉스++++++++++++++++++++1487/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:51,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:52,330 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:34:52,573 > ++++++++++++++전파기지국++++++++++++++++++++1488/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:52,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:52,936 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:34:53,176 > ++++++++++++++제너셈++++++++++++++++++++1489/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:53,177 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:53,543 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:34:53,757 > ++++++++++++++제넥신++++++++++++++++++++1490/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:53,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:54,150 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:34:54,388 > ++++++++++++++제노레이++++++++++++++++++++1491/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:54,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:54,757 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:34:54,963 > ++++++++++++++제로투세븐++++++++++++++++++++1492/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:54,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:55,364 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:34:55,598 > ++++++++++++++제룡전기++++++++++++++++++++1493/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:55,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:55,971 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:34:56,221 > ++++++++++++++제이씨현시스템++++++++++++++++++++1494/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:56,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:56,579 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:34:56,819 > ++++++++++++++조광ILI++++++++++++++++++++1495/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:56,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:57,185 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:34:57,435 > ++++++++++++++칩스앤미디어++++++++++++++++++++1496/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:57,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:57,792 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:34:58,019 > ++++++++++++++컴퍼니케이++++++++++++++++++++1497/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:58,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:58,399 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:34:58,610 > ++++++++++++++케이사인++++++++++++++++++++1498/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:58,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:59,006 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:34:59,233 > ++++++++++++++케이씨에스++++++++++++++++++++1499/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:59,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:34:59,613 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:34:59,838 > ++++++++++++++케이아이엔엑스++++++++++++++++++++1500/2894
[DEBUG|open_api.py:656] 2021-02-09 16:34:59,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:00,220 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:35:00,456 > ++++++++++++++켐온++++++++++++++++++++1501/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:00,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:00,828 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:35:01,065 > ++++++++++++++코맥스++++++++++++++++++++1502/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:01,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:01,435 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:35:01,717 > ++++++++++++++코세스++++++++++++++++++++1503/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:01,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:02,041 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:35:02,286 > ++++++++++++++코스메카코리아++++++++++++++++++++1504/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:02,287 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:02,647 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:35:02,870 > ++++++++++++++코스온++++++++++++++++++++1505/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:02,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:03,254 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:35:03,501 > ++++++++++++++코엔텍++++++++++++++++++++1506/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:03,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:03,861 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:35:04,105 > ++++++++++++++코텍++++++++++++++++++++1507/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:04,106 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:04,468 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:35:04,708 > ++++++++++++++콜마비앤에이치++++++++++++++++++++1508/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:04,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:05,076 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:35:05,314 > ++++++++++++++큐캐피탈++++++++++++++++++++1509/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:05,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:05,685 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:35:05,934 > ++++++++++++++타이거일렉++++++++++++++++++++1510/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:05,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:06,292 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:35:06,523 > ++++++++++++++태광++++++++++++++++++++1511/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:06,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:06,900 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:35:07,155 > ++++++++++++++티로보틱스++++++++++++++++++++1512/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:07,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:07,509 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:35:07,737 > ++++++++++++++티앤엘++++++++++++++++++++1513/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:07,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:08,116 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:35:08,296 > ++++++++++++++파마리서치프로덕트++++++++++++++++++++1514/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:08,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:08,724 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:35:08,969 > ++++++++++++++파인디앤씨++++++++++++++++++++1515/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:08,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:09,332 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:35:09,562 > ++++++++++++++파인텍++++++++++++++++++++1516/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:09,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:09,938 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:35:10,176 > ++++++++++++++펩트론++++++++++++++++++++1517/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:10,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:10,547 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:35:10,780 > ++++++++++++++포스링크++++++++++++++++++++1518/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:10,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:11,154 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:35:11,387 > ++++++++++++++풍국주정++++++++++++++++++++1519/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:11,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:11,761 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:35:12,031 > ++++++++++++++퓨쳐스트림네트웍스++++++++++++++++++++1520/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:12,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:12,368 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:35:12,594 > ++++++++++++++퓨쳐켐++++++++++++++++++++1521/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:12,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:12,975 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:35:13,210 > ++++++++++++++피씨디렉트++++++++++++++++++++1522/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:13,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:13,585 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:35:13,810 > ++++++++++++++피에스케이홀딩스++++++++++++++++++++1523/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:13,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:14,192 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:35:14,441 > ++++++++++++++피플바이오++++++++++++++++++++1524/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:14,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:14,799 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:35:14,965 > ++++++++++++++하이로닉++++++++++++++++++++1525/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:14,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:15,407 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:35:15,638 > ++++++++++++++하이소닉++++++++++++++++++++1526/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:15,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:16,015 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:35:16,246 > ++++++++++++++한국유니온제약++++++++++++++++++++1527/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:16,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:16,623 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:35:16,850 > ++++++++++++++한국컴퓨터++++++++++++++++++++1528/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:16,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:17,230 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:35:17,504 > ++++++++++++++한국테크놀로지++++++++++++++++++++1529/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:17,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:17,839 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:35:18,087 > ++++++++++++++한송네오텍++++++++++++++++++++1530/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:18,088 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:18,447 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:35:18,687 > ++++++++++++++한일사료++++++++++++++++++++1531/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:18,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:19,053 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:35:19,292 > ++++++++++++++헝셩그룹++++++++++++++++++++1532/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:19,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:19,660 > 110
[DEBUG|collector_api.py:200] 2021-02-09 16:35:19,886 > ++++++++++++++화일약품++++++++++++++++++++1533/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:19,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:20,268 > 111
[DEBUG|collector_api.py:200] 2021-02-09 16:35:20,532 > ++++++++++++++효성오앤비++++++++++++++++++++1534/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:20,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:20,875 > 112
[DEBUG|collector_api.py:200] 2021-02-09 16:35:21,113 > ++++++++++++++휴온스++++++++++++++++++++1535/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:21,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:21,483 > 113
[DEBUG|collector_api.py:200] 2021-02-09 16:35:21,709 > ++++++++++++++휴젤++++++++++++++++++++1536/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:21,710 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:22,090 > 114
[DEBUG|collector_api.py:200] 2021-02-09 16:35:22,322 > ++++++++++++++CNH++++++++++++++++++++1537/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:22,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:22,697 > 115
[DEBUG|collector_api.py:200] 2021-02-09 16:35:22,952 > ++++++++++++++DMS++++++++++++++++++++1538/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:22,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:23,304 > 116
[DEBUG|collector_api.py:200] 2021-02-09 16:35:23,534 > ++++++++++++++GH신소재++++++++++++++++++++1539/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:23,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:23,910 > 117
[DEBUG|collector_api.py:200] 2021-02-09 16:35:24,157 > ++++++++++++++IBKS제14호스팩++++++++++++++++++++1540/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:24,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:24,517 > 118
[DEBUG|collector_api.py:200] 2021-02-09 16:35:24,685 > ++++++++++++++KBI메탈++++++++++++++++++++1541/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:24,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:25,124 > 119
[DEBUG|collector_api.py:200] 2021-02-09 16:35:25,368 > ++++++++++++++KMH하이텍++++++++++++++++++++1542/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:25,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:25,730 > 120
[DEBUG|collector_api.py:200] 2021-02-09 16:35:25,971 > ++++++++++++++KNN++++++++++++++++++++1543/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:25,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:26,339 > 121
[DEBUG|collector_api.py:200] 2021-02-09 16:35:26,569 > ++++++++++++++KPX생명과학++++++++++++++++++++1544/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:26,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:26,945 > 122
[DEBUG|collector_api.py:200] 2021-02-09 16:35:27,181 > ++++++++++++++KTH++++++++++++++++++++1545/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:27,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:27,553 > 123
[DEBUG|collector_api.py:200] 2021-02-09 16:35:27,793 > ++++++++++++++KT서브마린++++++++++++++++++++1546/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:27,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:28,160 > 124
[DEBUG|collector_api.py:200] 2021-02-09 16:35:28,404 > ++++++++++++++SBS콘텐츠허브++++++++++++++++++++1547/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:28,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:28,768 > 125
[DEBUG|collector_api.py:200] 2021-02-09 16:35:28,995 > ++++++++++++++SG&G++++++++++++++++++++1548/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:28,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:29,376 > 126
[DEBUG|collector_api.py:200] 2021-02-09 16:35:29,624 > ++++++++++++++SGA++++++++++++++++++++1549/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:29,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:29,983 > 127
[DEBUG|collector_api.py:200] 2021-02-09 16:35:30,224 > ++++++++++++++SV인베스트먼트++++++++++++++++++++1550/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:30,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:30,590 > 128
[DEBUG|collector_api.py:200] 2021-02-09 16:35:30,825 > ++++++++++++++TPC++++++++++++++++++++1551/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:30,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:31,197 > 129
[DEBUG|collector_api.py:200] 2021-02-09 16:35:31,448 > ++++++++++++++TS인베스트먼트++++++++++++++++++++1552/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:31,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:31,804 > 130
[DEBUG|collector_api.py:200] 2021-02-09 16:35:32,036 > ++++++++++++++YBM넷++++++++++++++++++++1553/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:32,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:32,412 > 131
[DEBUG|collector_api.py:200] 2021-02-09 16:35:32,648 > ++++++++++++++iMBC++++++++++++++++++++1554/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:32,649 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:33,019 > 132
[DEBUG|collector_api.py:200] 2021-02-09 16:35:33,267 > ++++++++++++++가온미디어++++++++++++++++++++1555/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:33,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:33,626 > 133
[DEBUG|collector_api.py:200] 2021-02-09 16:35:33,880 > ++++++++++++++경동제약++++++++++++++++++++1556/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:33,880 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:34,234 > 134
[DEBUG|collector_api.py:200] 2021-02-09 16:35:34,502 > ++++++++++++++골든센츄리++++++++++++++++++++1557/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:34,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:34,841 > 135
[DEBUG|collector_api.py:200] 2021-02-09 16:35:35,066 > ++++++++++++++광진윈텍++++++++++++++++++++1558/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:35,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:35,449 > 136
[DEBUG|collector_api.py:200] 2021-02-09 16:35:35,683 > ++++++++++++++국보디자인++++++++++++++++++++1559/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:35,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:36,056 > 137
[DEBUG|collector_api.py:200] 2021-02-09 16:35:36,290 > ++++++++++++++나스미디어++++++++++++++++++++1560/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:36,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:36,663 > 138
[DEBUG|collector_api.py:200] 2021-02-09 16:35:36,906 > ++++++++++++++나이스정보통신++++++++++++++++++++1561/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:36,906 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:37,271 > 139
[DEBUG|collector_api.py:200] 2021-02-09 16:35:37,509 > ++++++++++++++남화산업++++++++++++++++++++1562/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:37,510 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:37,877 > 140
[DEBUG|collector_api.py:200] 2021-02-09 16:35:38,115 > ++++++++++++++네오오토++++++++++++++++++++1563/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:38,116 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:38,484 > 141
[DEBUG|collector_api.py:200] 2021-02-09 16:35:38,713 > ++++++++++++++네오위즈++++++++++++++++++++1564/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:38,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:39,092 > 142
[DEBUG|collector_api.py:200] 2021-02-09 16:35:39,327 > ++++++++++++++네오크레마++++++++++++++++++++1565/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:39,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:39,699 > 143
[DEBUG|collector_api.py:200] 2021-02-09 16:35:39,893 > ++++++++++++++넷게임즈++++++++++++++++++++1566/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:39,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:40,308 > 144
[DEBUG|collector_api.py:200] 2021-02-09 16:35:40,539 > ++++++++++++++노랑풍선++++++++++++++++++++1567/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:40,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:40,916 > 145
[DEBUG|collector_api.py:200] 2021-02-09 16:35:41,134 > ++++++++++++++노바텍++++++++++++++++++++1568/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:41,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:41,523 > 146
[DEBUG|collector_api.py:200] 2021-02-09 16:35:41,749 > ++++++++++++++뉴보텍++++++++++++++++++++1569/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:41,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:42,130 > 147
[DEBUG|collector_api.py:200] 2021-02-09 16:35:42,371 > ++++++++++++++다날++++++++++++++++++++1570/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:42,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:42,738 > 148
[DEBUG|collector_api.py:200] 2021-02-09 16:35:42,994 > ++++++++++++++대원미디어++++++++++++++++++++1571/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:42,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:43,345 > 149
[DEBUG|collector_api.py:200] 2021-02-09 16:35:43,582 > ++++++++++++++대한과학++++++++++++++++++++1572/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:43,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:43,953 > 150
[DEBUG|collector_api.py:200] 2021-02-09 16:35:44,187 > ++++++++++++++대호피앤씨++++++++++++++++++++1573/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:44,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:44,561 > 151
[DEBUG|collector_api.py:200] 2021-02-09 16:35:44,810 > ++++++++++++++대화제약++++++++++++++++++++1574/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:44,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:45,169 > 152
[DEBUG|collector_api.py:200] 2021-02-09 16:35:45,422 > ++++++++++++++동아화성++++++++++++++++++++1575/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:45,422 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:45,776 > 153
[DEBUG|collector_api.py:200] 2021-02-09 16:35:46,009 > ++++++++++++++동양파일++++++++++++++++++++1576/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:46,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:46,384 > 154
[DEBUG|collector_api.py:200] 2021-02-09 16:35:46,634 > ++++++++++++++디앤씨미디어++++++++++++++++++++1577/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:46,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:46,991 > 155
[DEBUG|collector_api.py:200] 2021-02-09 16:35:47,220 > ++++++++++++++디오스텍++++++++++++++++++++1578/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:47,220 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:47,598 > 156
[DEBUG|collector_api.py:200] 2021-02-09 16:35:47,824 > ++++++++++++++디이엔티++++++++++++++++++++1579/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:47,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:48,205 > 157
[DEBUG|collector_api.py:200] 2021-02-09 16:35:48,441 > ++++++++++++++라닉스++++++++++++++++++++1580/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:48,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:48,813 > 158
[DEBUG|collector_api.py:200] 2021-02-09 16:35:49,007 > ++++++++++++++라온피플++++++++++++++++++++1581/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:49,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:49,421 > 159
[DEBUG|collector_api.py:200] 2021-02-09 16:35:49,650 > ++++++++++++++라이트론++++++++++++++++++++1582/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:49,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:50,027 > 160
[DEBUG|collector_api.py:200] 2021-02-09 16:35:50,265 > ++++++++++++++랩지노믹스++++++++++++++++++++1583/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:50,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:50,634 > 161
[DEBUG|collector_api.py:200] 2021-02-09 16:35:50,859 > ++++++++++++++로스웰++++++++++++++++++++1584/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:50,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:51,241 > 162
[DEBUG|collector_api.py:200] 2021-02-09 16:35:51,471 > ++++++++++++++리더스코스메틱++++++++++++++++++++1585/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:51,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:51,848 > 163
[DEBUG|collector_api.py:200] 2021-02-09 16:35:52,081 > ++++++++++++++리메드++++++++++++++++++++1586/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:52,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:52,456 > 164
[DEBUG|collector_api.py:200] 2021-02-09 16:35:52,685 > ++++++++++++++린드먼아시아++++++++++++++++++++1587/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:52,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:53,063 > 165
[DEBUG|collector_api.py:200] 2021-02-09 16:35:53,303 > ++++++++++++++마니커에프앤지++++++++++++++++++++1588/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:53,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:53,672 > 166
[DEBUG|collector_api.py:200] 2021-02-09 16:35:53,866 > ++++++++++++++메가엠디++++++++++++++++++++1589/2894
[DEBUG|open_api.py:656] 2021-02-09 16:35:53,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:35:54,279 > 167
[DEBUG|open_api.py:303] 2021-02-09 16:39:19,846 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:39:19,847 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:39:19,847 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:39:19,848 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:39:19,848 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:39:19,848 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:39:19,848 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:39:19,868 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:39:19,893 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:39:19,894 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:39:19,894 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:39:19,908 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:39:19,940 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:39:22,279 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:39:22,280 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:39:22,336 > ++++++++++++++메가엠디++++++++++++++++++++1589/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:22,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:22,337 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:39:23,413 > ++++++++++++++메카로++++++++++++++++++++1590/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:23,413 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:23,415 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:39:23,650 > ++++++++++++++모베이스++++++++++++++++++++1591/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:23,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:24,022 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:39:24,260 > ++++++++++++++모아텍++++++++++++++++++++1592/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:24,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:24,630 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:39:24,862 > ++++++++++++++바이오스마트++++++++++++++++++++1593/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:24,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:25,238 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:39:25,487 > ++++++++++++++보광산업++++++++++++++++++++1594/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:25,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:25,846 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:39:26,070 > ++++++++++++++본느++++++++++++++++++++1595/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:26,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:26,454 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:39:26,681 > ++++++++++++++브릿지바이오테라퓨틱스++++++++++++++++++++1596/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:26,681 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:27,061 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:39:27,251 > ++++++++++++++블러썸엠앤씨++++++++++++++++++++1597/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:27,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:27,669 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:39:27,889 > ++++++++++++++비엠티++++++++++++++++++++1598/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:27,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:28,276 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:39:28,498 > ++++++++++++++비츠로셀++++++++++++++++++++1599/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:28,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:28,884 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:39:29,125 > ++++++++++++++삼보모터스++++++++++++++++++++1600/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:29,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:29,491 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:39:29,733 > ++++++++++++++삼영엠텍++++++++++++++++++++1601/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:29,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:30,098 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:39:30,337 > ++++++++++++++삼천당제약++++++++++++++++++++1602/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:30,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:30,706 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:39:30,940 > ++++++++++++++삼화네트웍스++++++++++++++++++++1603/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:30,940 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:31,313 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:39:31,576 > ++++++++++++++샘코++++++++++++++++++++1604/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:31,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:31,921 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:39:32,163 > ++++++++++++++서울바이오시스++++++++++++++++++++1605/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:32,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:32,527 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:39:32,726 > ++++++++++++++서울옥션++++++++++++++++++++1606/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:32,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:33,135 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:39:33,371 > ++++++++++++++서한++++++++++++++++++++1607/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:33,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:33,743 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:39:33,997 > ++++++++++++++성도이엔지++++++++++++++++++++1608/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:33,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:34,350 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:39:34,607 > ++++++++++++++세동++++++++++++++++++++1609/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:34,608 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:34,958 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:39:35,201 > ++++++++++++++세미콘라이트++++++++++++++++++++1610/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:35,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:35,565 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:39:35,788 > ++++++++++++++세원++++++++++++++++++++1611/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:35,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:36,172 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:39:36,409 > ++++++++++++++세원물산++++++++++++++++++++1612/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:36,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:36,779 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:39:37,022 > ++++++++++++++센트럴바이오++++++++++++++++++++1613/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:37,022 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:37,386 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:39:37,637 > ++++++++++++++소룩스++++++++++++++++++++1614/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:37,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:37,993 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:39:38,145 > ++++++++++++++소프트캠프++++++++++++++++++++1615/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:38,145 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:38,602 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:39:38,829 > ++++++++++++++솔브레인++++++++++++++++++++1616/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:38,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:39,208 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:39:39,405 > ++++++++++++++스카이문스테크놀로지++++++++++++++++++++1617/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:39,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:39,816 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:39:40,061 > ++++++++++++++시너지이노베이션++++++++++++++++++++1618/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:40,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:40,423 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:39:40,658 > ++++++++++++++시티랩스++++++++++++++++++++1619/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:40,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:41,030 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:39:41,272 > ++++++++++++++신성델타테크++++++++++++++++++++1620/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:41,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:41,637 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:39:41,869 > ++++++++++++++신화인터텍++++++++++++++++++++1621/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:41,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:42,245 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:39:42,490 > ++++++++++++++싸이토젠++++++++++++++++++++1622/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:42,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:42,851 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:39:43,071 > ++++++++++++++아이컴포넌트++++++++++++++++++++1623/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:43,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:43,459 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:39:43,690 > ++++++++++++++아즈텍WB++++++++++++++++++++1624/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:43,691 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:44,066 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:39:44,305 > ++++++++++++++안랩++++++++++++++++++++1625/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:44,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:44,674 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:39:44,915 > ++++++++++++++알서포트++++++++++++++++++++1626/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:44,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:45,281 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:39:45,532 > ++++++++++++++액트++++++++++++++++++++1627/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:45,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:45,888 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:39:46,133 > ++++++++++++++에너토크++++++++++++++++++++1628/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:46,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:46,494 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:39:46,747 > ++++++++++++++에버다임++++++++++++++++++++1629/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:46,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:47,103 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:39:47,341 > ++++++++++++++에스넷++++++++++++++++++++1630/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:47,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:47,709 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:39:47,941 > ++++++++++++++에스디시스템++++++++++++++++++++1631/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:47,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:48,318 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:39:48,561 > ++++++++++++++에스에이엠티++++++++++++++++++++1632/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:48,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:48,924 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:39:49,164 > ++++++++++++++에스티큐브++++++++++++++++++++1633/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:49,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:49,531 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:39:49,763 > ++++++++++++++에스피지++++++++++++++++++++1634/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:49,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:50,139 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:39:50,385 > ++++++++++++++에이프로++++++++++++++++++++1635/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:50,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:50,745 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:39:50,908 > ++++++++++++++에이피티씨++++++++++++++++++++1636/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:50,909 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:51,352 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:39:51,590 > ++++++++++++++에코마케팅++++++++++++++++++++1637/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:51,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:51,960 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:39:52,214 > ++++++++++++++에코바이오++++++++++++++++++++1638/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:52,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:52,568 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:39:52,808 > ++++++++++++++에코캡++++++++++++++++++++1639/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:52,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:53,175 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:39:53,411 > ++++++++++++++에프앤가이드++++++++++++++++++++1640/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:53,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:53,782 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:39:54,015 > ++++++++++++++에프앤리퍼블릭++++++++++++++++++++1641/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:54,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:54,390 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:39:54,620 > ++++++++++++++에프엔에스테크++++++++++++++++++++1642/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:54,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:54,997 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:39:55,248 > ++++++++++++++엔바이오니아++++++++++++++++++++1643/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:55,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:55,605 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:39:55,820 > ++++++++++++++엔에이치스팩13호++++++++++++++++++++1644/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:55,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:56,212 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:39:56,432 > ++++++++++++++엘엠에스++++++++++++++++++++1645/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:56,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:56,820 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:39:57,055 > ++++++++++++++엠아이텍++++++++++++++++++++1646/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:57,056 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:57,429 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:39:57,644 > ++++++++++++++엠에스오토텍++++++++++++++++++++1647/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:57,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:58,035 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:39:58,270 > ++++++++++++++엠케이전자++++++++++++++++++++1648/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:58,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:58,643 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:39:58,884 > ++++++++++++++오르비텍++++++++++++++++++++1649/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:58,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:59,250 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:39:59,491 > ++++++++++++++오이솔루션++++++++++++++++++++1650/2894
[DEBUG|open_api.py:656] 2021-02-09 16:39:59,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:39:59,857 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:40:00,086 > ++++++++++++++올리패스++++++++++++++++++++1651/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:00,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:00,465 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:40:00,652 > ++++++++++++++와이엠씨++++++++++++++++++++1652/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:00,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:01,072 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:40:01,312 > ++++++++++++++와이엠티++++++++++++++++++++1653/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:01,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:01,679 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:40:01,902 > ++++++++++++++와이제이엠게임즈++++++++++++++++++++1654/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:01,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:02,286 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:40:02,528 > ++++++++++++++와이팜++++++++++++++++++++1655/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:02,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:02,892 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:40:03,059 > ++++++++++++++우리넷++++++++++++++++++++1656/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:03,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:03,499 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:40:03,761 > ++++++++++++++우리조명++++++++++++++++++++1657/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:03,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:04,107 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:40:04,346 > ++++++++++++++원익IPS++++++++++++++++++++1658/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:04,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:04,715 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:40:04,946 > ++++++++++++++위세아이텍++++++++++++++++++++1659/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:04,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:05,324 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:40:05,542 > ++++++++++++++유니슨++++++++++++++++++++1660/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:05,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:05,932 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:40:06,173 > ++++++++++++++유니크++++++++++++++++++++1661/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:06,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:06,539 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:40:06,775 > ++++++++++++++유아이디++++++++++++++++++++1662/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:06,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:07,146 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:40:07,417 > ++++++++++++++유아이엘++++++++++++++++++++1663/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:07,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:07,753 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:40:07,999 > ++++++++++++++이상네트웍스++++++++++++++++++++1664/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:08,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:08,359 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:40:08,604 > ++++++++++++++이에스에이++++++++++++++++++++1665/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:08,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:08,967 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:40:09,212 > ++++++++++++++이엠코리아++++++++++++++++++++1666/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:09,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:09,574 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:40:09,808 > ++++++++++++++이오플로우++++++++++++++++++++1667/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:09,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:10,181 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:40:10,350 > ++++++++++++++이큐셀++++++++++++++++++++1668/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:10,351 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:10,789 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:40:11,081 > ++++++++++++++이퓨쳐++++++++++++++++++++1669/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:11,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:11,396 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:40:11,628 > ++++++++++++++이화공영++++++++++++++++++++1670/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:11,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:12,004 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:40:12,245 > ++++++++++++++인피니트헬스케어++++++++++++++++++++1671/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:12,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:12,611 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:40:12,857 > ++++++++++++++일신바이오++++++++++++++++++++1672/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:12,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:13,219 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:40:13,463 > ++++++++++++++잉글우드랩++++++++++++++++++++1673/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:13,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:13,826 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:40:14,047 > ++++++++++++++정원엔시스++++++++++++++++++++1674/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:14,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:14,434 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:40:14,675 > ++++++++++++++제이씨케미칼++++++++++++++++++++1675/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:14,675 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:15,042 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:40:15,283 > ++++++++++++++젬백스링크++++++++++++++++++++1676/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:15,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:15,649 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:40:15,887 > ++++++++++++++좋은사람들++++++++++++++++++++1677/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:15,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:16,257 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:40:16,509 > ++++++++++++++줌인터넷++++++++++++++++++++1678/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:16,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:16,865 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:40:17,099 > ++++++++++++++중앙백신++++++++++++++++++++1679/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:17,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:17,472 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:40:17,721 > ++++++++++++++지놈앤컴퍼니++++++++++++++++++++1680/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:17,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:18,079 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:40:18,293 > ++++++++++++++지트리비앤티++++++++++++++++++++1681/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:18,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:18,687 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:40:18,917 > ++++++++++++++카스++++++++++++++++++++1682/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:18,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:19,293 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:40:19,551 > ++++++++++++++카카오게임즈++++++++++++++++++++1683/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:19,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:19,901 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:40:20,069 > ++++++++++++++카페24++++++++++++++++++++1684/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:20,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:20,509 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:40:20,739 > ++++++++++++++케이비17호스팩++++++++++++++++++++1685/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:20,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:21,116 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:40:21,352 > ++++++++++++++케이에스피++++++++++++++++++++1686/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:21,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:21,724 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:40:21,966 > ++++++++++++++큐리언트++++++++++++++++++++1687/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:21,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:22,331 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:40:22,572 > ++++++++++++++크리스탈신소재++++++++++++++++++++1688/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:22,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:22,937 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:40:23,173 > ++++++++++++++크린앤사이언스++++++++++++++++++++1689/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:23,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:23,544 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:40:23,781 > ++++++++++++++클래시스++++++++++++++++++++1690/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:23,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:24,152 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:40:24,388 > ++++++++++++++태웅++++++++++++++++++++1691/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:24,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:24,760 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:40:25,003 > ++++++++++++++테라셈++++++++++++++++++++1692/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:25,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:25,368 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:40:25,612 > ++++++++++++++토박스코리아++++++++++++++++++++1693/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:25,614 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:25,975 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:40:26,273 > ++++++++++++++티사이언티픽++++++++++++++++++++1694/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:26,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:26,584 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:40:26,822 > ++++++++++++++티씨케이++++++++++++++++++++1695/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:26,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:27,191 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:40:27,426 > ++++++++++++++티케이케미칼++++++++++++++++++++1696/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:27,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:27,799 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:40:28,040 > ++++++++++++++팅크웨어++++++++++++++++++++1697/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:28,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:28,406 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:40:28,650 > ++++++++++++++팜스토리++++++++++++++++++++1698/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:28,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:29,013 > 110
[DEBUG|collector_api.py:200] 2021-02-09 16:40:29,274 > ++++++++++++++포인트모바일++++++++++++++++++++1699/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:29,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:29,621 > 111
[DEBUG|collector_api.py:200] 2021-02-09 16:40:29,805 > ++++++++++++++푸드나무++++++++++++++++++++1700/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:29,805 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:30,228 > 112
[DEBUG|collector_api.py:200] 2021-02-09 16:40:30,459 > ++++++++++++++푸른저축은행++++++++++++++++++++1701/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:30,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:30,838 > 113
[DEBUG|collector_api.py:200] 2021-02-09 16:40:31,066 > ++++++++++++++프리엠스++++++++++++++++++++1702/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:31,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:31,444 > 114
[DEBUG|collector_api.py:200] 2021-02-09 16:40:31,684 > ++++++++++++++플랜티넷++++++++++++++++++++1703/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:31,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:32,051 > 115
[DEBUG|collector_api.py:200] 2021-02-09 16:40:32,321 > ++++++++++++++피제이메탈++++++++++++++++++++1704/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:32,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:32,658 > 116
[DEBUG|collector_api.py:200] 2021-02-09 16:40:32,892 > ++++++++++++++하나머티리얼즈++++++++++++++++++++1705/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:32,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:33,265 > 117
[DEBUG|collector_api.py:200] 2021-02-09 16:40:33,507 > ++++++++++++++한국선재++++++++++++++++++++1706/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:33,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:33,872 > 118
[DEBUG|collector_api.py:200] 2021-02-09 16:40:34,118 > ++++++++++++++한국전자인증++++++++++++++++++++1707/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:34,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:34,480 > 119
[DEBUG|collector_api.py:200] 2021-02-09 16:40:34,710 > ++++++++++++++한국큐빅++++++++++++++++++++1708/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:34,711 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:35,089 > 120
[DEBUG|collector_api.py:200] 2021-02-09 16:40:35,358 > ++++++++++++++한독크린텍++++++++++++++++++++1709/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:35,358 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:35,697 > 121
[DEBUG|collector_api.py:200] 2021-02-09 16:40:35,883 > ++++++++++++++한화플러스제1호스팩++++++++++++++++++++1710/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:35,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:36,305 > 122
[DEBUG|collector_api.py:200] 2021-02-09 16:40:36,489 > ++++++++++++++현대사료++++++++++++++++++++1711/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:36,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:36,913 > 123
[DEBUG|collector_api.py:200] 2021-02-09 16:40:37,141 > ++++++++++++++현우산업++++++++++++++++++++1712/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:37,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:37,520 > 124
[DEBUG|collector_api.py:200] 2021-02-09 16:40:37,753 > ++++++++++++++홈캐스트++++++++++++++++++++1713/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:37,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:38,128 > 125
[DEBUG|collector_api.py:200] 2021-02-09 16:40:38,370 > ++++++++++++++휴메딕스++++++++++++++++++++1714/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:38,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:38,735 > 126
[DEBUG|collector_api.py:200] 2021-02-09 16:40:38,973 > ++++++++++++++휴온스글로벌++++++++++++++++++++1715/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:38,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:39,342 > 127
[DEBUG|collector_api.py:200] 2021-02-09 16:40:39,589 > ++++++++++++++흥구석유++++++++++++++++++++1716/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:39,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:39,950 > 128
[DEBUG|collector_api.py:200] 2021-02-09 16:40:40,188 > ++++++++++++++3S++++++++++++++++++++1717/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:40,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:40,557 > 129
[DEBUG|collector_api.py:200] 2021-02-09 16:40:40,789 > ++++++++++++++CJ프레시웨이++++++++++++++++++++1718/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:40,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:41,163 > 130
[DEBUG|collector_api.py:200] 2021-02-09 16:40:41,405 > ++++++++++++++JYP Ent.++++++++++++++++++++1719/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:41,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:41,771 > 131
[DEBUG|collector_api.py:200] 2021-02-09 16:40:42,014 > ++++++++++++++RFHIC++++++++++++++++++++1720/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:42,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:42,378 > 132
[DEBUG|collector_api.py:200] 2021-02-09 16:40:42,635 > ++++++++++++++강원++++++++++++++++++++1721/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:42,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:42,986 > 133
[DEBUG|collector_api.py:200] 2021-02-09 16:40:43,223 > ++++++++++++++경남제약++++++++++++++++++++1722/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:43,224 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:43,594 > 134
[DEBUG|collector_api.py:200] 2021-02-09 16:40:43,824 > ++++++++++++++고려신용정보++++++++++++++++++++1723/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:43,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:44,202 > 135
[DEBUG|collector_api.py:200] 2021-02-09 16:40:44,450 > ++++++++++++++고바이오랩++++++++++++++++++++1724/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:44,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:44,810 > 136
[DEBUG|collector_api.py:200] 2021-02-09 16:40:44,971 > ++++++++++++++골드퍼시픽++++++++++++++++++++1725/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:44,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:45,416 > 137
[DEBUG|collector_api.py:200] 2021-02-09 16:40:45,664 > ++++++++++++++광진실업++++++++++++++++++++1726/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:45,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:46,022 > 138
[DEBUG|collector_api.py:200] 2021-02-09 16:40:46,277 > ++++++++++++++그린플러스++++++++++++++++++++1727/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:46,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:46,631 > 139
[DEBUG|collector_api.py:200] 2021-02-09 16:40:46,858 > ++++++++++++++기산텔레콤++++++++++++++++++++1728/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:46,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:47,238 > 140
[DEBUG|collector_api.py:200] 2021-02-09 16:40:47,511 > ++++++++++++++나무기술++++++++++++++++++++1729/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:47,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:47,847 > 141
[DEBUG|collector_api.py:200] 2021-02-09 16:40:48,079 > ++++++++++++++나이스디앤비++++++++++++++++++++1730/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:48,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:48,455 > 142
[DEBUG|collector_api.py:200] 2021-02-09 16:40:48,685 > ++++++++++++++네패스++++++++++++++++++++1731/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:48,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:49,062 > 143
[DEBUG|collector_api.py:200] 2021-02-09 16:40:49,305 > ++++++++++++++대동금속++++++++++++++++++++1732/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:49,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:49,670 > 144
[DEBUG|collector_api.py:200] 2021-02-09 16:40:49,918 > ++++++++++++++대림제지++++++++++++++++++++1733/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:49,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:50,276 > 145
[DEBUG|collector_api.py:200] 2021-02-09 16:40:50,536 > ++++++++++++++대신정보통신++++++++++++++++++++1734/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:50,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:50,884 > 146
[DEBUG|collector_api.py:200] 2021-02-09 16:40:51,134 > ++++++++++++++대한그린파워++++++++++++++++++++1735/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:51,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:51,492 > 147
[DEBUG|collector_api.py:200] 2021-02-09 16:40:51,727 > ++++++++++++++동국알앤에스++++++++++++++++++++1736/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:51,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:52,099 > 148
[DEBUG|collector_api.py:200] 2021-02-09 16:40:52,349 > ++++++++++++++동우팜투테이블++++++++++++++++++++1737/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:52,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:52,707 > 149
[DEBUG|collector_api.py:200] 2021-02-09 16:40:52,943 > ++++++++++++++동운아나텍++++++++++++++++++++1738/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:52,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:53,315 > 150
[DEBUG|collector_api.py:200] 2021-02-09 16:40:53,573 > ++++++++++++++드림씨아이에스++++++++++++++++++++1739/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:53,574 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:53,921 > 151
[DEBUG|collector_api.py:200] 2021-02-09 16:40:54,092 > ++++++++++++++디아이티++++++++++++++++++++1740/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:54,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:54,529 > 152
[DEBUG|collector_api.py:200] 2021-02-09 16:40:54,761 > ++++++++++++++디에이치피코리아++++++++++++++++++++1741/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:54,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:55,137 > 153
[DEBUG|collector_api.py:200] 2021-02-09 16:40:55,528 > ++++++++++++++디케이락++++++++++++++++++++1742/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:55,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:55,744 > 154
[DEBUG|collector_api.py:200] 2021-02-09 16:40:55,989 > ++++++++++++++디케이앤디++++++++++++++++++++1743/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:55,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:56,352 > 155
[DEBUG|collector_api.py:200] 2021-02-09 16:40:56,567 > ++++++++++++++디케이티++++++++++++++++++++1744/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:56,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:56,960 > 156
[DEBUG|collector_api.py:200] 2021-02-09 16:40:57,175 > ++++++++++++++라온시큐어++++++++++++++++++++1745/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:57,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:57,568 > 157
[DEBUG|collector_api.py:200] 2021-02-09 16:40:57,806 > ++++++++++++++라파스++++++++++++++++++++1746/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:57,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:58,176 > 158
[DEBUG|collector_api.py:200] 2021-02-09 16:40:58,372 > ++++++++++++++리노스++++++++++++++++++++1747/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:58,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:58,784 > 159
[DEBUG|collector_api.py:200] 2021-02-09 16:40:59,076 > ++++++++++++++리더스 기술투자++++++++++++++++++++1748/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:59,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:59,392 > 160
[DEBUG|collector_api.py:200] 2021-02-09 16:40:59,634 > ++++++++++++++마이크로컨텍솔++++++++++++++++++++1749/2894
[DEBUG|open_api.py:656] 2021-02-09 16:40:59,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:40:59,999 > 161
[DEBUG|collector_api.py:200] 2021-02-09 16:41:00,226 > ++++++++++++++메지온++++++++++++++++++++1750/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:00,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:00,607 > 162
[DEBUG|collector_api.py:200] 2021-02-09 16:41:00,837 > ++++++++++++++모다이노칩++++++++++++++++++++1751/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:00,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:01,216 > 163
[DEBUG|collector_api.py:200] 2021-02-09 16:41:01,457 > ++++++++++++++모베이스전자++++++++++++++++++++1752/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:01,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:01,823 > 164
[DEBUG|collector_api.py:200] 2021-02-09 16:41:02,071 > ++++++++++++++모비릭스++++++++++++++++++++1753/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:02,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:02,431 > 165
[DEBUG|collector_api.py:200] 2021-02-09 16:41:02,592 > ++++++++++++++미디어젠++++++++++++++++++++1754/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:02,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:03,037 > 166
[DEBUG|collector_api.py:200] 2021-02-09 16:41:03,278 > ++++++++++++++미래나노텍++++++++++++++++++++1755/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:03,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:03,644 > 167
[DEBUG|collector_api.py:200] 2021-02-09 16:41:03,881 > ++++++++++++++미래에셋대우스팩 5호++++++++++++++++++++1756/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:03,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:04,252 > 168
[DEBUG|collector_api.py:200] 2021-02-09 16:41:04,419 > ++++++++++++++미래에셋대우스팩4호++++++++++++++++++++1757/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:04,420 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:04,859 > 169
[DEBUG|collector_api.py:200] 2021-02-09 16:41:05,068 > ++++++++++++++미래테크놀로지++++++++++++++++++++1758/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:05,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:05,467 > 170
[DEBUG|collector_api.py:200] 2021-02-09 16:41:05,696 > ++++++++++++++미투젠++++++++++++++++++++1759/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:05,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:06,075 > 171
[DEBUG|collector_api.py:200] 2021-02-09 16:41:06,248 > ++++++++++++++바이오리더스++++++++++++++++++++1760/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:06,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:06,682 > 172
[DEBUG|collector_api.py:200] 2021-02-09 16:41:06,916 > ++++++++++++++바텍++++++++++++++++++++1761/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:06,916 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:07,290 > 173
[DEBUG|collector_api.py:200] 2021-02-09 16:41:07,533 > ++++++++++++++뷰웍스++++++++++++++++++++1762/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:07,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:07,897 > 174
[DEBUG|collector_api.py:200] 2021-02-09 16:41:08,141 > ++++++++++++++브레인콘텐츠++++++++++++++++++++1763/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:08,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:08,504 > 175
[DEBUG|collector_api.py:200] 2021-02-09 16:41:08,742 > ++++++++++++++블루콤++++++++++++++++++++1764/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:08,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:09,112 > 176
[DEBUG|collector_api.py:200] 2021-02-09 16:41:09,359 > ++++++++++++++비덴트++++++++++++++++++++1765/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:09,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:09,720 > 177
[DEBUG|collector_api.py:200] 2021-02-09 16:41:09,958 > ++++++++++++++비에이치++++++++++++++++++++1766/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:09,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:10,329 > 178
[DEBUG|collector_api.py:200] 2021-02-09 16:41:10,564 > ++++++++++++++비올++++++++++++++++++++1767/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:10,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:10,937 > 179
[DEBUG|collector_api.py:200] 2021-02-09 16:41:11,122 > ++++++++++++++비츠로테크++++++++++++++++++++1768/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:11,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:11,545 > 180
[DEBUG|collector_api.py:200] 2021-02-09 16:41:11,784 > ++++++++++++++비피도++++++++++++++++++++1769/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:11,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:12,152 > 181
[DEBUG|collector_api.py:200] 2021-02-09 16:41:12,379 > ++++++++++++++빅텍++++++++++++++++++++1770/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:12,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:12,760 > 182
[DEBUG|collector_api.py:200] 2021-02-09 16:41:13,011 > ++++++++++++++삼강엠앤티++++++++++++++++++++1771/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:13,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:13,368 > 183
[DEBUG|collector_api.py:200] 2021-02-09 16:41:13,622 > ++++++++++++++삼보산업++++++++++++++++++++1772/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:13,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:13,975 > 184
[DEBUG|collector_api.py:200] 2021-02-09 16:41:14,224 > ++++++++++++++삼영이엔씨++++++++++++++++++++1773/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:14,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:14,582 > 185
[DEBUG|collector_api.py:200] 2021-02-09 16:41:14,870 > ++++++++++++++삼표시멘트++++++++++++++++++++1774/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:14,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:15,189 > 186
[DEBUG|collector_api.py:200] 2021-02-09 16:41:15,437 > ++++++++++++++상상인이안1호스팩++++++++++++++++++++1775/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:15,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:15,796 > 187
[DEBUG|collector_api.py:200] 2021-02-09 16:41:16,012 > ++++++++++++++상아프론테크++++++++++++++++++++1776/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:16,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:16,405 > 188
[DEBUG|collector_api.py:200] 2021-02-09 16:41:16,636 > ++++++++++++++서부T&D++++++++++++++++++++1777/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:16,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:17,012 > 189
[DEBUG|collector_api.py:200] 2021-02-09 16:41:17,266 > ++++++++++++++석경에이티++++++++++++++++++++1778/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:17,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:17,620 > 190
[DEBUG|collector_api.py:200] 2021-02-09 16:41:17,779 > ++++++++++++++선광++++++++++++++++++++1779/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:17,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:18,228 > 191
[DEBUG|collector_api.py:200] 2021-02-09 16:41:18,486 > ++++++++++++++세진티에스++++++++++++++++++++1780/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:18,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:18,835 > 192
[DEBUG|collector_api.py:200] 2021-02-09 16:41:19,075 > ++++++++++++++세화피앤씨++++++++++++++++++++1781/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:19,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:19,444 > 193
[DEBUG|collector_api.py:200] 2021-02-09 16:41:19,673 > ++++++++++++++셀레믹스++++++++++++++++++++1782/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:19,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:20,051 > 194
[DEBUG|collector_api.py:200] 2021-02-09 16:41:20,211 > ++++++++++++++셀리드++++++++++++++++++++1783/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:20,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:20,658 > 195
[DEBUG|collector_api.py:200] 2021-02-09 16:41:20,867 > ++++++++++++++소마젠(Reg.S)++++++++++++++++++++1784/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:20,867 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:21,265 > 196
[DEBUG|collector_api.py:200] 2021-02-09 16:41:21,440 > ++++++++++++++수젠텍++++++++++++++++++++1785/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:21,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:21,872 > 197
[DEBUG|collector_api.py:200] 2021-02-09 16:41:22,113 > ++++++++++++++스맥++++++++++++++++++++1786/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:22,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:22,480 > 198
[DEBUG|collector_api.py:200] 2021-02-09 16:41:22,715 > ++++++++++++++신라섬유++++++++++++++++++++1787/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:22,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:23,088 > 199
[DEBUG|collector_api.py:200] 2021-02-09 16:41:23,327 > ++++++++++++++신화콘텍++++++++++++++++++++1788/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:23,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:23,695 > 200
[DEBUG|collector_api.py:200] 2021-02-09 16:41:23,919 > ++++++++++++++쎄니트++++++++++++++++++++1789/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:23,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:24,302 > 201
[DEBUG|collector_api.py:200] 2021-02-09 16:41:24,542 > ++++++++++++++씨씨에스++++++++++++++++++++1790/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:24,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:24,910 > 202
[DEBUG|collector_api.py:200] 2021-02-09 16:41:25,153 > ++++++++++++++씨엔플러스++++++++++++++++++++1791/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:25,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:25,517 > 203
[DEBUG|collector_api.py:200] 2021-02-09 16:41:25,732 > ++++++++++++++씨젠++++++++++++++++++++1792/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:25,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:26,124 > 204
[DEBUG|collector_api.py:200] 2021-02-09 16:41:26,362 > ++++++++++++++아리온++++++++++++++++++++1793/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:26,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:26,730 > 205
[DEBUG|collector_api.py:200] 2021-02-09 16:41:26,965 > ++++++++++++++아시아경제++++++++++++++++++++1794/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:26,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:27,337 > 206
[DEBUG|collector_api.py:200] 2021-02-09 16:41:27,574 > ++++++++++++++아이디스홀딩스++++++++++++++++++++1795/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:27,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:27,944 > 207
[DEBUG|collector_api.py:200] 2021-02-09 16:41:28,183 > ++++++++++++++아이쓰리시스템++++++++++++++++++++1796/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:28,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:28,552 > 208
[DEBUG|collector_api.py:200] 2021-02-09 16:41:28,781 > ++++++++++++++아주IB투자++++++++++++++++++++1797/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:28,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:29,159 > 209
[DEBUG|collector_api.py:200] 2021-02-09 16:41:29,394 > ++++++++++++++안국약품++++++++++++++++++++1798/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:29,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:29,766 > 210
[DEBUG|collector_api.py:200] 2021-02-09 16:41:30,015 > ++++++++++++++알테오젠++++++++++++++++++++1799/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:30,016 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:30,373 > 211
[DEBUG|collector_api.py:200] 2021-02-09 16:41:30,609 > ++++++++++++++알톤스포츠++++++++++++++++++++1800/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:30,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:30,981 > 212
[DEBUG|collector_api.py:200] 2021-02-09 16:41:31,267 > ++++++++++++++알파홀딩스++++++++++++++++++++1801/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:31,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:31,589 > 213
[DEBUG|collector_api.py:200] 2021-02-09 16:41:31,816 > ++++++++++++++압타바이오++++++++++++++++++++1802/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:31,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:32,197 > 214
[DEBUG|collector_api.py:200] 2021-02-09 16:41:32,391 > ++++++++++++++야스++++++++++++++++++++1803/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:32,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:32,805 > 215
[DEBUG|collector_api.py:200] 2021-02-09 16:41:33,043 > ++++++++++++++에스맥++++++++++++++++++++1804/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:33,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:33,414 > 216
[DEBUG|collector_api.py:200] 2021-02-09 16:41:33,649 > ++++++++++++++에스에이티++++++++++++++++++++1805/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:33,649 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:34,021 > 217
[DEBUG|collector_api.py:200] 2021-02-09 16:41:34,255 > ++++++++++++++에스엔유++++++++++++++++++++1806/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:34,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:34,628 > 218
[DEBUG|collector_api.py:200] 2021-02-09 16:41:34,863 > ++++++++++++++에스엠코어++++++++++++++++++++1807/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:34,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:35,235 > 219
[DEBUG|collector_api.py:200] 2021-02-09 16:41:35,480 > ++++++++++++++에스티오++++++++++++++++++++1808/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:35,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:35,841 > 220
[DEBUG|collector_api.py:200] 2021-02-09 16:41:36,069 > ++++++++++++++에이치엘비++++++++++++++++++++1809/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:36,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:36,448 > 221
[DEBUG|collector_api.py:200] 2021-02-09 16:41:36,692 > ++++++++++++++에이테크솔루션++++++++++++++++++++1810/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:36,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:37,054 > 222
[DEBUG|collector_api.py:200] 2021-02-09 16:41:37,300 > ++++++++++++++에코마이스터++++++++++++++++++++1811/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:37,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:37,661 > 223
[DEBUG|collector_api.py:200] 2021-02-09 16:41:37,876 > ++++++++++++++에프엔씨엔터++++++++++++++++++++1812/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:37,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:38,269 > 224
[DEBUG|collector_api.py:200] 2021-02-09 16:41:38,503 > ++++++++++++++엔시트론++++++++++++++++++++1813/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:38,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:38,876 > 225
[DEBUG|collector_api.py:200] 2021-02-09 16:41:39,107 > ++++++++++++++엔에프씨++++++++++++++++++++1814/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:39,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:39,485 > 226
[DEBUG|collector_api.py:200] 2021-02-09 16:41:39,647 > ++++++++++++++엘비세미콘++++++++++++++++++++1815/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:39,647 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:40,091 > 227
[DEBUG|collector_api.py:200] 2021-02-09 16:41:40,324 > ++++++++++++++엘이티++++++++++++++++++++1816/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:40,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:40,700 > 228
[DEBUG|collector_api.py:200] 2021-02-09 16:41:40,871 > ++++++++++++++엠에스씨++++++++++++++++++++1817/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:40,872 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:41,308 > 229
[DEBUG|collector_api.py:200] 2021-02-09 16:41:41,554 > ++++++++++++++엠젠플러스++++++++++++++++++++1818/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:41,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:41,914 > 230
[DEBUG|collector_api.py:200] 2021-02-09 16:41:42,165 > ++++++++++++++연우++++++++++++++++++++1819/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:42,165 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:42,522 > 231
[DEBUG|collector_api.py:200] 2021-02-09 16:41:42,747 > ++++++++++++++오디텍++++++++++++++++++++1820/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:42,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:43,129 > 232
[DEBUG|collector_api.py:200] 2021-02-09 16:41:43,369 > ++++++++++++++오상자이엘++++++++++++++++++++1821/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:43,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:43,735 > 233
[DEBUG|collector_api.py:200] 2021-02-09 16:41:43,973 > ++++++++++++++오킨스전자++++++++++++++++++++1822/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:43,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:44,343 > 234
[DEBUG|collector_api.py:200] 2021-02-09 16:41:44,590 > ++++++++++++++와이엔텍++++++++++++++++++++1823/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:44,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:44,949 > 235
[DEBUG|collector_api.py:200] 2021-02-09 16:41:45,196 > ++++++++++++++와이오엠++++++++++++++++++++1824/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:45,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:45,556 > 236
[DEBUG|collector_api.py:200] 2021-02-09 16:41:45,791 > ++++++++++++++와이지엔터테인먼트++++++++++++++++++++1825/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:45,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:46,164 > 237
[DEBUG|collector_api.py:200] 2021-02-09 16:41:46,404 > ++++++++++++++우리기술투자++++++++++++++++++++1826/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:46,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:46,771 > 238
[DEBUG|collector_api.py:200] 2021-02-09 16:41:47,018 > ++++++++++++++우주일렉트로++++++++++++++++++++1827/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:47,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:47,378 > 239
[DEBUG|collector_api.py:200] 2021-02-09 16:41:47,628 > ++++++++++++++웹케시++++++++++++++++++++1828/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:47,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:47,985 > 240
[DEBUG|collector_api.py:200] 2021-02-09 16:41:48,263 > ++++++++++++++위니아딤채++++++++++++++++++++1829/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:48,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:48,592 > 241
[DEBUG|collector_api.py:200] 2021-02-09 16:41:48,819 > ++++++++++++++위더스제약++++++++++++++++++++1830/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:48,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:49,199 > 242
[DEBUG|collector_api.py:200] 2021-02-09 16:41:49,371 > ++++++++++++++위드텍++++++++++++++++++++1831/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:49,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:49,806 > 243
[DEBUG|collector_api.py:200] 2021-02-09 16:41:49,961 > ++++++++++++++위지윅스튜디오++++++++++++++++++++1832/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:49,961 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:50,413 > 244
[DEBUG|collector_api.py:200] 2021-02-09 16:41:50,627 > ++++++++++++++윈스++++++++++++++++++++1833/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:50,627 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:51,020 > 245
[DEBUG|collector_api.py:200] 2021-02-09 16:41:51,256 > ++++++++++++++윈텍++++++++++++++++++++1834/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:51,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:51,627 > 246
[DEBUG|collector_api.py:200] 2021-02-09 16:41:51,815 > ++++++++++++++유라테크++++++++++++++++++++1835/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:51,815 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:52,235 > 247
[DEBUG|collector_api.py:200] 2021-02-09 16:41:52,467 > ++++++++++++++유틸렉스++++++++++++++++++++1836/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:52,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:52,843 > 248
[DEBUG|collector_api.py:200] 2021-02-09 16:41:53,069 > ++++++++++++++율호++++++++++++++++++++1837/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:53,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:53,452 > 249
[DEBUG|collector_api.py:200] 2021-02-09 16:41:53,678 > ++++++++++++++이그잭스++++++++++++++++++++1838/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:53,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:54,060 > 250
[DEBUG|collector_api.py:200] 2021-02-09 16:41:54,307 > ++++++++++++++이니텍++++++++++++++++++++1839/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:54,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:54,666 > 251
[DEBUG|collector_api.py:200] 2021-02-09 16:41:54,892 > ++++++++++++++이더블유케이++++++++++++++++++++1840/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:54,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:55,273 > 252
[DEBUG|collector_api.py:200] 2021-02-09 16:41:55,532 > ++++++++++++++인지디스플레++++++++++++++++++++1841/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:55,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:55,882 > 253
[DEBUG|collector_api.py:200] 2021-02-09 16:41:56,114 > ++++++++++++++인콘++++++++++++++++++++1842/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:56,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:56,488 > 254
[DEBUG|collector_api.py:200] 2021-02-09 16:41:56,723 > ++++++++++++++인크로스++++++++++++++++++++1843/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:56,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:57,095 > 255
[DEBUG|collector_api.py:200] 2021-02-09 16:41:57,358 > ++++++++++++++일지테크++++++++++++++++++++1844/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:57,358 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:57,704 > 256
[DEBUG|collector_api.py:200] 2021-02-09 16:41:57,952 > ++++++++++++++제이에스티나++++++++++++++++++++1845/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:57,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:58,312 > 257
[DEBUG|collector_api.py:200] 2021-02-09 16:41:58,562 > ++++++++++++++제이엠아이++++++++++++++++++++1846/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:58,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:58,919 > 258
[DEBUG|collector_api.py:200] 2021-02-09 16:41:59,158 > ++++++++++++++제이웨이++++++++++++++++++++1847/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:59,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:41:59,526 > 259
[DEBUG|collector_api.py:200] 2021-02-09 16:41:59,757 > ++++++++++++++제일전기공업++++++++++++++++++++1848/2894
[DEBUG|open_api.py:656] 2021-02-09 16:41:59,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:00,134 > 260
[DEBUG|collector_api.py:200] 2021-02-09 16:42:00,305 > ++++++++++++++지니틱스++++++++++++++++++++1849/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:00,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:00,741 > 261
[DEBUG|collector_api.py:200] 2021-02-09 16:42:00,963 > ++++++++++++++진로발효++++++++++++++++++++1850/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:00,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:01,349 > 262
[DEBUG|collector_api.py:200] 2021-02-09 16:42:01,584 > ++++++++++++++체리부로++++++++++++++++++++1851/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:01,584 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:01,956 > 263
[DEBUG|collector_api.py:200] 2021-02-09 16:42:02,192 > ++++++++++++++케이디켐++++++++++++++++++++1852/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:02,193 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:02,563 > 264
[DEBUG|collector_api.py:200] 2021-02-09 16:42:02,781 > ++++++++++++++케이씨티++++++++++++++++++++1853/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:02,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:03,172 > 265
[DEBUG|collector_api.py:200] 2021-02-09 16:42:03,409 > ++++++++++++++케이피에스++++++++++++++++++++1854/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:03,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:03,778 > 266
[DEBUG|collector_api.py:200] 2021-02-09 16:42:04,031 > ++++++++++++++코나아이++++++++++++++++++++1855/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:04,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:04,385 > 267
[DEBUG|collector_api.py:200] 2021-02-09 16:42:04,629 > ++++++++++++++코디++++++++++++++++++++1856/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:04,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:04,991 > 268
[DEBUG|collector_api.py:200] 2021-02-09 16:42:05,226 > ++++++++++++++코리아에스이++++++++++++++++++++1857/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:05,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:05,598 > 269
[DEBUG|collector_api.py:200] 2021-02-09 16:42:05,849 > ++++++++++++++코스나인++++++++++++++++++++1858/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:05,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:06,207 > 270
[DEBUG|collector_api.py:200] 2021-02-09 16:42:06,435 > ++++++++++++++코아스템++++++++++++++++++++1859/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:06,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:06,815 > 271
[DEBUG|collector_api.py:200] 2021-02-09 16:42:07,049 > ++++++++++++++큐렉소++++++++++++++++++++1860/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:07,049 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:07,423 > 272
[DEBUG|collector_api.py:200] 2021-02-09 16:42:07,663 > ++++++++++++++큐로컴++++++++++++++++++++1861/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:07,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:08,030 > 273
[DEBUG|collector_api.py:200] 2021-02-09 16:42:08,273 > ++++++++++++++태양++++++++++++++++++++1862/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:08,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:08,638 > 274
[DEBUG|collector_api.py:200] 2021-02-09 16:42:08,873 > ++++++++++++++테크윙++++++++++++++++++++1863/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:08,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:09,246 > 275
[DEBUG|collector_api.py:200] 2021-02-09 16:42:09,488 > ++++++++++++++투비소프트++++++++++++++++++++1864/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:09,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:09,854 > 276
[DEBUG|collector_api.py:200] 2021-02-09 16:42:10,081 > ++++++++++++++티엘아이++++++++++++++++++++1865/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:10,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:10,461 > 277
[DEBUG|collector_api.py:200] 2021-02-09 16:42:10,697 > ++++++++++++++티움바이오++++++++++++++++++++1866/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:10,697 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:11,068 > 278
[DEBUG|collector_api.py:200] 2021-02-09 16:42:11,256 > ++++++++++++++파인테크닉스++++++++++++++++++++1867/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:11,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:11,676 > 279
[DEBUG|collector_api.py:200] 2021-02-09 16:42:11,908 > ++++++++++++++팜스빌++++++++++++++++++++1868/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:11,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:12,284 > 280
[DEBUG|collector_api.py:200] 2021-02-09 16:42:12,475 > ++++++++++++++팬스타엔터프라이즈++++++++++++++++++++1869/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:12,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:12,892 > 281
[DEBUG|collector_api.py:200] 2021-02-09 16:42:13,116 > ++++++++++++++펄어비스++++++++++++++++++++1870/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:13,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:13,500 > 282
[DEBUG|collector_api.py:200] 2021-02-09 16:42:13,732 > ++++++++++++++평화정공++++++++++++++++++++1871/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:13,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:14,108 > 283
[DEBUG|collector_api.py:200] 2021-02-09 16:42:14,373 > ++++++++++++++포메탈++++++++++++++++++++1872/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:14,374 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:14,716 > 284
[DEBUG|collector_api.py:200] 2021-02-09 16:42:14,936 > ++++++++++++++포스코 ICT++++++++++++++++++++1873/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:14,937 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:15,324 > 285
[DEBUG|collector_api.py:200] 2021-02-09 16:42:15,581 > ++++++++++++++플레이위드++++++++++++++++++++1874/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:15,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:15,931 > 286
[DEBUG|collector_api.py:200] 2021-02-09 16:42:16,172 > ++++++++++++++피씨엘++++++++++++++++++++1875/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:16,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:16,538 > 287
[DEBUG|collector_api.py:200] 2021-02-09 16:42:16,775 > ++++++++++++++피피아이++++++++++++++++++++1876/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:16,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:17,145 > 288
[DEBUG|collector_api.py:200] 2021-02-09 16:42:17,355 > ++++++++++++++한국제8호스팩++++++++++++++++++++1877/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:17,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:17,754 > 289
[DEBUG|collector_api.py:200] 2021-02-09 16:42:17,970 > ++++++++++++++한국파마++++++++++++++++++++1878/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:17,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:18,362 > 290
[DEBUG|collector_api.py:200] 2021-02-09 16:42:18,536 > ++++++++++++++한솔인티큐브++++++++++++++++++++1879/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:18,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:18,969 > 291
[DEBUG|collector_api.py:200] 2021-02-09 16:42:19,206 > ++++++++++++++한창산업++++++++++++++++++++1880/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:19,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:19,577 > 292
[DEBUG|collector_api.py:200] 2021-02-09 16:42:19,819 > ++++++++++++++한컴MDS++++++++++++++++++++1881/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:19,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:20,184 > 293
[DEBUG|collector_api.py:200] 2021-02-09 16:42:20,465 > ++++++++++++++한화에스비아이스팩++++++++++++++++++++1882/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:20,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:20,791 > 294
[DEBUG|collector_api.py:200] 2021-02-09 16:42:20,989 > ++++++++++++++핸디소프트++++++++++++++++++++1883/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:20,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:21,400 > 295
[DEBUG|collector_api.py:200] 2021-02-09 16:42:21,639 > ++++++++++++++현대공업++++++++++++++++++++1884/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:21,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:22,006 > 296
[DEBUG|collector_api.py:200] 2021-02-09 16:42:22,236 > ++++++++++++++화신정공++++++++++++++++++++1885/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:22,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:22,615 > 297
[DEBUG|collector_api.py:200] 2021-02-09 16:42:22,839 > ++++++++++++++휴마시스++++++++++++++++++++1886/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:22,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:23,222 > 298
[DEBUG|collector_api.py:200] 2021-02-09 16:42:23,478 > ++++++++++++++휴비츠++++++++++++++++++++1887/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:23,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:23,830 > 299
[DEBUG|collector_api.py:200] 2021-02-09 16:42:24,073 > ++++++++++++++흥국++++++++++++++++++++1888/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:24,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:24,437 > 300
[DEBUG|collector_api.py:200] 2021-02-09 16:42:24,667 > ++++++++++++++GV++++++++++++++++++++1889/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:24,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:25,044 > 301
[DEBUG|collector_api.py:200] 2021-02-09 16:42:25,286 > ++++++++++++++HB테크놀러지++++++++++++++++++++1890/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:25,287 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:25,651 > 302
[DEBUG|collector_api.py:200] 2021-02-09 16:42:25,880 > ++++++++++++++IBKS제12호스팩++++++++++++++++++++1891/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:25,880 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:26,259 > 303
[DEBUG|collector_api.py:200] 2021-02-09 16:42:26,453 > ++++++++++++++ISC++++++++++++++++++++1892/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:26,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:26,866 > 304
[DEBUG|collector_api.py:200] 2021-02-09 16:42:27,090 > ++++++++++++++KG이니시스++++++++++++++++++++1893/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:27,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:27,474 > 305
[DEBUG|collector_api.py:200] 2021-02-09 16:42:27,703 > ++++++++++++++MP한강++++++++++++++++++++1894/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:27,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:28,083 > 306
[DEBUG|collector_api.py:200] 2021-02-09 16:42:28,323 > ++++++++++++++NE능률++++++++++++++++++++1895/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:28,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:28,691 > 307
[DEBUG|collector_api.py:200] 2021-02-09 16:42:28,918 > ++++++++++++++NHN한국사이버결제++++++++++++++++++++1896/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:28,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:29,298 > 308
[DEBUG|collector_api.py:200] 2021-02-09 16:42:29,541 > ++++++++++++++SBI인베스트먼트++++++++++++++++++++1897/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:29,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:29,905 > 309
[DEBUG|collector_api.py:200] 2021-02-09 16:42:30,138 > ++++++++++++++SG++++++++++++++++++++1898/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:30,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:30,512 > 310
[DEBUG|collector_api.py:200] 2021-02-09 16:42:30,735 > ++++++++++++++갤럭시아머니트리++++++++++++++++++++1899/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:30,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:31,119 > 311
[DEBUG|collector_api.py:200] 2021-02-09 16:42:31,353 > ++++++++++++++고려제약++++++++++++++++++++1900/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:31,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:31,727 > 312
[DEBUG|collector_api.py:200] 2021-02-09 16:42:31,990 > ++++++++++++++국일제지++++++++++++++++++++1901/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:31,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:32,335 > 313
[DEBUG|collector_api.py:200] 2021-02-09 16:42:32,580 > ++++++++++++++금강철강++++++++++++++++++++1902/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:32,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:32,942 > 314
[DEBUG|collector_api.py:200] 2021-02-09 16:42:33,188 > ++++++++++++++기가레인++++++++++++++++++++1903/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:33,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:33,550 > 315
[DEBUG|collector_api.py:200] 2021-02-09 16:42:33,770 > ++++++++++++++나노스++++++++++++++++++++1904/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:33,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:34,157 > 316
[DEBUG|collector_api.py:200] 2021-02-09 16:42:34,409 > ++++++++++++++나노캠텍++++++++++++++++++++1905/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:34,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:34,766 > 317
[DEBUG|collector_api.py:200] 2021-02-09 16:42:34,994 > ++++++++++++++나라엠앤디++++++++++++++++++++1906/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:34,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:35,373 > 318
[DEBUG|collector_api.py:200] 2021-02-09 16:42:35,644 > ++++++++++++++나우IB++++++++++++++++++++1907/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:35,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:35,981 > 319
[DEBUG|collector_api.py:200] 2021-02-09 16:42:36,216 > ++++++++++++++내츄럴엔도텍++++++++++++++++++++1908/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:36,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:36,589 > 320
[DEBUG|collector_api.py:200] 2021-02-09 16:42:36,818 > ++++++++++++++네오펙트++++++++++++++++++++1909/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:36,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:37,197 > 321
[DEBUG|collector_api.py:200] 2021-02-09 16:42:37,416 > ++++++++++++++녹십자엠에스++++++++++++++++++++1910/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:37,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:37,805 > 322
[DEBUG|collector_api.py:200] 2021-02-09 16:42:38,044 > ++++++++++++++뉴지랩++++++++++++++++++++1911/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:38,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:38,413 > 323
[DEBUG|collector_api.py:200] 2021-02-09 16:42:38,643 > ++++++++++++++대동기어++++++++++++++++++++1912/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:38,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:39,019 > 324
[DEBUG|collector_api.py:200] 2021-02-09 16:42:39,261 > ++++++++++++++대륙제관++++++++++++++++++++1913/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:39,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:39,627 > 325
[DEBUG|collector_api.py:200] 2021-02-09 16:42:39,873 > ++++++++++++++대모++++++++++++++++++++1914/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:39,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:40,234 > 326
[DEBUG|collector_api.py:200] 2021-02-09 16:42:40,484 > ++++++++++++++대보마그네틱++++++++++++++++++++1915/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:40,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:40,842 > 327
[DEBUG|collector_api.py:200] 2021-02-09 16:42:41,067 > ++++++++++++++대성엘텍++++++++++++++++++++1916/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:41,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:41,451 > 328
[DEBUG|collector_api.py:200] 2021-02-09 16:42:41,699 > ++++++++++++++대성창투++++++++++++++++++++1917/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:41,699 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:42,059 > 329
[DEBUG|collector_api.py:200] 2021-02-09 16:42:42,309 > ++++++++++++++대양제지++++++++++++++++++++1918/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:42,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:42,666 > 330
[DEBUG|collector_api.py:200] 2021-02-09 16:42:42,918 > ++++++++++++++대정화금++++++++++++++++++++1919/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:42,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:43,273 > 331
[DEBUG|collector_api.py:200] 2021-02-09 16:42:43,528 > ++++++++++++++대창스틸++++++++++++++++++++1920/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:43,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:43,880 > 332
[DEBUG|collector_api.py:200] 2021-02-09 16:42:44,107 > ++++++++++++++덕우전자++++++++++++++++++++1921/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:44,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:44,487 > 333
[DEBUG|collector_api.py:200] 2021-02-09 16:42:44,711 > ++++++++++++++데브시스터즈++++++++++++++++++++1922/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:44,712 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:45,094 > 334
[DEBUG|collector_api.py:200] 2021-02-09 16:42:45,322 > ++++++++++++++동성화인텍++++++++++++++++++++1923/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:45,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:45,701 > 335
[DEBUG|collector_api.py:200] 2021-02-09 16:42:45,950 > ++++++++++++++동양에스텍++++++++++++++++++++1924/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:45,950 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:46,309 > 336
[DEBUG|collector_api.py:200] 2021-02-09 16:42:46,571 > ++++++++++++++동양이엔피++++++++++++++++++++1925/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:46,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:46,917 > 337
[DEBUG|collector_api.py:200] 2021-02-09 16:42:47,151 > ++++++++++++++동일철강++++++++++++++++++++1926/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:47,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:47,524 > 338
[DEBUG|collector_api.py:200] 2021-02-09 16:42:47,768 > ++++++++++++++디스플레이텍++++++++++++++++++++1927/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:47,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:48,131 > 339
[DEBUG|collector_api.py:200] 2021-02-09 16:42:48,388 > ++++++++++++++디에스케이++++++++++++++++++++1928/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:48,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:48,739 > 340
[DEBUG|collector_api.py:200] 2021-02-09 16:42:48,973 > ++++++++++++++디자인++++++++++++++++++++1929/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:48,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:49,347 > 341
[DEBUG|collector_api.py:200] 2021-02-09 16:42:49,599 > ++++++++++++++디젠스++++++++++++++++++++1930/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:49,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:49,953 > 342
[DEBUG|collector_api.py:200] 2021-02-09 16:42:50,190 > ++++++++++++++러셀++++++++++++++++++++1931/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:50,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:50,561 > 343
[DEBUG|collector_api.py:200] 2021-02-09 16:42:50,789 > ++++++++++++++레이++++++++++++++++++++1932/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:50,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:51,168 > 344
[DEBUG|collector_api.py:200] 2021-02-09 16:42:51,369 > ++++++++++++++매일유업++++++++++++++++++++1933/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:51,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:51,776 > 345
[DEBUG|collector_api.py:200] 2021-02-09 16:42:52,053 > ++++++++++++++맥스로텍++++++++++++++++++++1934/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:52,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:52,384 > 346
[DEBUG|collector_api.py:200] 2021-02-09 16:42:52,606 > ++++++++++++++멀티캠퍼스++++++++++++++++++++1935/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:52,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:52,992 > 347
[DEBUG|collector_api.py:200] 2021-02-09 16:42:53,235 > ++++++++++++++메가스터디++++++++++++++++++++1936/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:53,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:53,599 > 348
[DEBUG|collector_api.py:200] 2021-02-09 16:42:53,829 > ++++++++++++++메디프론++++++++++++++++++++1937/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:53,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:54,207 > 349
[DEBUG|collector_api.py:200] 2021-02-09 16:42:54,457 > ++++++++++++++모바일어플라이언스++++++++++++++++++++1938/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:54,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:54,814 > 350
[DEBUG|collector_api.py:200] 2021-02-09 16:42:55,038 > ++++++++++++++미투온++++++++++++++++++++1939/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:55,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:55,421 > 351
[DEBUG|collector_api.py:200] 2021-02-09 16:42:55,645 > ++++++++++++++바른손++++++++++++++++++++1940/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:55,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:56,029 > 352
[DEBUG|collector_api.py:200] 2021-02-09 16:42:56,273 > ++++++++++++++바이오로그디바이스++++++++++++++++++++1941/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:56,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:56,636 > 353
[DEBUG|collector_api.py:200] 2021-02-09 16:42:56,870 > ++++++++++++++바이오솔루션++++++++++++++++++++1942/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:56,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:57,243 > 354
[DEBUG|collector_api.py:200] 2021-02-09 16:42:57,488 > ++++++++++++++바이오톡스텍++++++++++++++++++++1943/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:57,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:57,850 > 355
[DEBUG|collector_api.py:200] 2021-02-09 16:42:58,110 > ++++++++++++++버추얼텍++++++++++++++++++++1944/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:58,110 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:58,458 > 356
[DEBUG|collector_api.py:200] 2021-02-09 16:42:58,700 > ++++++++++++++베스파++++++++++++++++++++1945/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:58,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:59,065 > 357
[DEBUG|collector_api.py:200] 2021-02-09 16:42:59,285 > ++++++++++++++비나텍++++++++++++++++++++1946/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:59,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:42:59,673 > 358
[DEBUG|collector_api.py:200] 2021-02-09 16:42:59,924 > ++++++++++++++빅솔론++++++++++++++++++++1947/2894
[DEBUG|open_api.py:656] 2021-02-09 16:42:59,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:00,279 > 359
[DEBUG|collector_api.py:200] 2021-02-09 16:43:00,516 > ++++++++++++++삼목에스폼++++++++++++++++++++1948/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:00,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:00,886 > 360
[DEBUG|collector_api.py:200] 2021-02-09 16:43:01,120 > ++++++++++++++삼성스팩2호++++++++++++++++++++1949/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:01,121 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:01,495 > 361
[DEBUG|collector_api.py:200] 2021-02-09 16:43:01,709 > ++++++++++++++상상인++++++++++++++++++++1950/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:01,710 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:02,103 > 362
[DEBUG|collector_api.py:200] 2021-02-09 16:43:02,336 > ++++++++++++++상신전자++++++++++++++++++++1951/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:02,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:02,710 > 363
[DEBUG|collector_api.py:200] 2021-02-09 16:43:02,924 > ++++++++++++++서진시스템++++++++++++++++++++1952/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:02,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:03,317 > 364
[DEBUG|collector_api.py:200] 2021-02-09 16:43:03,547 > ++++++++++++++서플러스글로벌++++++++++++++++++++1953/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:03,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:03,924 > 365
[DEBUG|collector_api.py:200] 2021-02-09 16:43:04,149 > ++++++++++++++선익시스템++++++++++++++++++++1954/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:04,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:04,532 > 366
[DEBUG|collector_api.py:200] 2021-02-09 16:43:04,756 > ++++++++++++++성광벤드++++++++++++++++++++1955/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:04,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:05,140 > 367
[DEBUG|collector_api.py:200] 2021-02-09 16:43:05,390 > ++++++++++++++성우전자++++++++++++++++++++1956/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:05,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:05,747 > 368
[DEBUG|collector_api.py:200] 2021-02-09 16:43:05,989 > ++++++++++++++소프트센++++++++++++++++++++1957/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:05,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:06,353 > 369
[DEBUG|collector_api.py:200] 2021-02-09 16:43:06,647 > ++++++++++++++스타모빌리티++++++++++++++++++++1958/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:06,647 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:06,960 > 370
[DEBUG|collector_api.py:200] 2021-02-09 16:43:07,186 > ++++++++++++++신진에스엠++++++++++++++++++++1959/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:07,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:07,569 > 371
[DEBUG|collector_api.py:200] 2021-02-09 16:43:07,804 > ++++++++++++++심텍홀딩스++++++++++++++++++++1960/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:07,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:08,176 > 372
[DEBUG|collector_api.py:200] 2021-02-09 16:43:08,450 > ++++++++++++++쎌바이오텍++++++++++++++++++++1961/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:08,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:08,783 > 373
[DEBUG|collector_api.py:200] 2021-02-09 16:43:09,030 > ++++++++++++++씨티케이코스메틱스++++++++++++++++++++1962/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:09,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:09,390 > 374
[DEBUG|collector_api.py:200] 2021-02-09 16:43:09,630 > ++++++++++++++아래스++++++++++++++++++++1963/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:09,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:09,998 > 375
[DEBUG|collector_api.py:200] 2021-02-09 16:43:10,237 > ++++++++++++++아모그린텍++++++++++++++++++++1964/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:10,238 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:10,606 > 376
[DEBUG|collector_api.py:200] 2021-02-09 16:43:10,815 > ++++++++++++++아미노로직스++++++++++++++++++++1965/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:10,815 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:11,214 > 377
[DEBUG|collector_api.py:200] 2021-02-09 16:43:11,458 > ++++++++++++++아바텍++++++++++++++++++++1966/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:11,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:11,821 > 378
[DEBUG|collector_api.py:200] 2021-02-09 16:43:12,071 > ++++++++++++++아이디스++++++++++++++++++++1967/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:12,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:12,428 > 379
[DEBUG|collector_api.py:200] 2021-02-09 16:43:12,669 > ++++++++++++++아이비김영++++++++++++++++++++1968/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:12,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:13,035 > 380
[DEBUG|collector_api.py:200] 2021-02-09 16:43:13,212 > ++++++++++++++아이앤씨++++++++++++++++++++1969/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:13,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:13,643 > 381
[DEBUG|collector_api.py:200] 2021-02-09 16:43:13,869 > ++++++++++++++아이에스이커머스++++++++++++++++++++1970/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:13,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:14,250 > 382
[DEBUG|collector_api.py:200] 2021-02-09 16:43:14,496 > ++++++++++++++아이엠++++++++++++++++++++1971/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:14,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:14,858 > 383
[DEBUG|collector_api.py:200] 2021-02-09 16:43:15,091 > ++++++++++++++아이엠텍++++++++++++++++++++1972/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:15,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:15,466 > 384
[DEBUG|collector_api.py:200] 2021-02-09 16:43:15,712 > ++++++++++++++아진엑스텍++++++++++++++++++++1973/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:15,713 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:16,073 > 385
[DEBUG|collector_api.py:200] 2021-02-09 16:43:16,300 > ++++++++++++++아톤++++++++++++++++++++1974/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:16,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:16,681 > 386
[DEBUG|collector_api.py:200] 2021-02-09 16:43:16,867 > ++++++++++++++알엔투테크놀로지++++++++++++++++++++1975/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:16,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:17,288 > 387
[DEBUG|collector_api.py:200] 2021-02-09 16:43:17,532 > ++++++++++++++압타머사이언스++++++++++++++++++++1976/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:17,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:17,894 > 388
[DEBUG|collector_api.py:200] 2021-02-09 16:43:18,053 > ++++++++++++++액토즈소프트++++++++++++++++++++1977/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:18,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:18,502 > 389
[DEBUG|collector_api.py:200] 2021-02-09 16:43:18,744 > ++++++++++++++앤씨앤++++++++++++++++++++1978/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:18,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:19,109 > 390
[DEBUG|collector_api.py:200] 2021-02-09 16:43:19,369 > ++++++++++++++에스엠++++++++++++++++++++1979/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:19,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:19,718 > 391
[DEBUG|collector_api.py:200] 2021-02-09 16:43:19,954 > ++++++++++++++에스티아이++++++++++++++++++++1980/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:19,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:20,324 > 392
[DEBUG|collector_api.py:200] 2021-02-09 16:43:20,572 > ++++++++++++++에이치엘비제약++++++++++++++++++++1981/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:20,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:20,931 > 393
[DEBUG|collector_api.py:200] 2021-02-09 16:43:21,157 > ++++++++++++++에이치케이++++++++++++++++++++1982/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:21,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:21,538 > 394
[DEBUG|collector_api.py:200] 2021-02-09 16:43:21,765 > ++++++++++++++에이텍++++++++++++++++++++1983/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:21,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:22,145 > 395
[DEBUG|collector_api.py:200] 2021-02-09 16:43:22,387 > ++++++++++++++에코프로++++++++++++++++++++1984/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:22,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:22,753 > 396
[DEBUG|collector_api.py:200] 2021-02-09 16:43:22,993 > ++++++++++++++에코프로비엠++++++++++++++++++++1985/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:22,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:23,361 > 397
[DEBUG|collector_api.py:200] 2021-02-09 16:43:23,591 > ++++++++++++++엔비티++++++++++++++++++++1986/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:23,592 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:23,969 > 398
[DEBUG|collector_api.py:200] 2021-02-09 16:43:24,159 > ++++++++++++++엔에이치스팩17호++++++++++++++++++++1987/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:24,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:24,577 > 399
[DEBUG|collector_api.py:200] 2021-02-09 16:43:24,745 > ++++++++++++++엔에이치스팩18호++++++++++++++++++++1988/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:24,746 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:25,185 > 400
[DEBUG|collector_api.py:200] 2021-02-09 16:43:25,333 > ++++++++++++++엘앤케이바이오++++++++++++++++++++1989/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:25,333 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:25,793 > 401
[DEBUG|collector_api.py:200] 2021-02-09 16:43:26,019 > ++++++++++++++오리엔탈정공++++++++++++++++++++1990/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:26,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:26,400 > 402
[DEBUG|collector_api.py:200] 2021-02-09 16:43:26,637 > ++++++++++++++오리콤++++++++++++++++++++1991/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:26,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:27,008 > 403
[DEBUG|collector_api.py:200] 2021-02-09 16:43:27,261 > ++++++++++++++오션브릿지++++++++++++++++++++1992/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:27,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:27,616 > 404
[DEBUG|collector_api.py:200] 2021-02-09 16:43:27,853 > ++++++++++++++오스템++++++++++++++++++++1993/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:27,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:28,224 > 405
[DEBUG|collector_api.py:200] 2021-02-09 16:43:28,486 > ++++++++++++++우리기술++++++++++++++++++++1994/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:28,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:28,832 > 406
[DEBUG|collector_api.py:200] 2021-02-09 16:43:29,079 > ++++++++++++++우리로++++++++++++++++++++1995/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:29,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:29,438 > 407
[DEBUG|collector_api.py:200] 2021-02-09 16:43:29,667 > ++++++++++++++우정바이오++++++++++++++++++++1996/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:29,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:30,045 > 408
[DEBUG|collector_api.py:200] 2021-02-09 16:43:30,284 > ++++++++++++++원방테크++++++++++++++++++++1997/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:30,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:30,652 > 409
[DEBUG|collector_api.py:200] 2021-02-09 16:43:30,817 > ++++++++++++++원익홀딩스++++++++++++++++++++1998/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:30,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:31,260 > 410
[DEBUG|collector_api.py:200] 2021-02-09 16:43:31,509 > ++++++++++++++월덱스++++++++++++++++++++1999/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:31,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:31,867 > 411
[DEBUG|collector_api.py:200] 2021-02-09 16:43:32,099 > ++++++++++++++웰크론한텍++++++++++++++++++++2000/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:32,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:32,474 > 412
[DEBUG|collector_api.py:200] 2021-02-09 16:43:32,722 > ++++++++++++++웹스++++++++++++++++++++2001/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:32,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:33,081 > 413
[DEBUG|collector_api.py:200] 2021-02-09 16:43:33,317 > ++++++++++++++윙입푸드++++++++++++++++++++2002/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:33,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:33,689 > 414
[DEBUG|collector_api.py:200] 2021-02-09 16:43:33,911 > ++++++++++++++유니셈++++++++++++++++++++2003/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:33,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:34,296 > 415
[DEBUG|collector_api.py:200] 2021-02-09 16:43:34,532 > ++++++++++++++유니트론텍++++++++++++++++++++2004/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:34,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:34,905 > 416
[DEBUG|collector_api.py:200] 2021-02-09 16:43:35,133 > ++++++++++++++유진기업++++++++++++++++++++2005/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:35,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:35,511 > 417
[DEBUG|collector_api.py:200] 2021-02-09 16:43:35,760 > ++++++++++++++유진로봇++++++++++++++++++++2006/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:35,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:36,119 > 418
[DEBUG|collector_api.py:200] 2021-02-09 16:43:36,364 > ++++++++++++++이노와이즈++++++++++++++++++++2007/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:36,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:36,726 > 419
[DEBUG|collector_api.py:200] 2021-02-09 16:43:36,975 > ++++++++++++++이노인스트루먼트++++++++++++++++++++2008/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:36,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:37,333 > 420
[DEBUG|collector_api.py:200] 2021-02-09 16:43:37,567 > ++++++++++++++이라이콤++++++++++++++++++++2009/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:37,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:37,941 > 421
[DEBUG|collector_api.py:200] 2021-02-09 16:43:38,174 > ++++++++++++++이베스트투자증권++++++++++++++++++++2010/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:38,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:38,549 > 422
[DEBUG|collector_api.py:200] 2021-02-09 16:43:38,783 > ++++++++++++++이엑스티++++++++++++++++++++2011/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:38,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:39,157 > 423
[DEBUG|collector_api.py:200] 2021-02-09 16:43:39,389 > ++++++++++++++이원컴포텍++++++++++++++++++++2012/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:39,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:39,765 > 424
[DEBUG|collector_api.py:200] 2021-02-09 16:43:40,041 > ++++++++++++++이지웰++++++++++++++++++++2013/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:40,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:40,375 > 425
[DEBUG|collector_api.py:200] 2021-02-09 16:43:40,608 > ++++++++++++++이크레더블++++++++++++++++++++2014/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:40,608 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:40,983 > 426
[DEBUG|collector_api.py:200] 2021-02-09 16:43:41,205 > ++++++++++++++이화전기++++++++++++++++++++2015/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:41,205 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:41,589 > 427
[DEBUG|collector_api.py:200] 2021-02-09 16:43:41,849 > ++++++++++++++인트로메딕++++++++++++++++++++2016/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:41,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:42,199 > 428
[DEBUG|collector_api.py:200] 2021-02-09 16:43:42,442 > ++++++++++++++인트론바이오++++++++++++++++++++2017/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:42,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:42,805 > 429
[DEBUG|collector_api.py:200] 2021-02-09 16:43:43,045 > ++++++++++++++인프라웨어++++++++++++++++++++2018/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:43,046 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:43,411 > 430
[DEBUG|collector_api.py:200] 2021-02-09 16:43:43,644 > ++++++++++++++일야++++++++++++++++++++2019/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:43,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:44,017 > 431
[DEBUG|collector_api.py:200] 2021-02-09 16:43:44,253 > ++++++++++++++일진파워++++++++++++++++++++2020/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:44,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:44,624 > 432
[DEBUG|collector_api.py:200] 2021-02-09 16:43:44,857 > ++++++++++++++제노포커스++++++++++++++++++++2021/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:44,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:45,232 > 433
[DEBUG|collector_api.py:200] 2021-02-09 16:43:45,471 > ++++++++++++++제닉++++++++++++++++++++2022/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:45,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:45,839 > 434
[DEBUG|collector_api.py:200] 2021-02-09 16:43:46,068 > ++++++++++++++제룡산업++++++++++++++++++++2023/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:46,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:46,447 > 435
[DEBUG|collector_api.py:200] 2021-02-09 16:43:46,672 > ++++++++++++++젠큐릭스++++++++++++++++++++2024/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:46,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:47,055 > 436
[DEBUG|collector_api.py:200] 2021-02-09 16:43:47,278 > ++++++++++++++중앙에너비스++++++++++++++++++++2025/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:47,279 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:47,661 > 437
[DEBUG|collector_api.py:200] 2021-02-09 16:43:47,903 > ++++++++++++++지엘팜텍++++++++++++++++++++2026/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:47,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:48,270 > 438
[DEBUG|collector_api.py:200] 2021-02-09 16:43:48,506 > ++++++++++++++진매트릭스++++++++++++++++++++2027/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:48,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:48,877 > 439
[DEBUG|collector_api.py:200] 2021-02-09 16:43:49,109 > ++++++++++++++창해에탄올++++++++++++++++++++2028/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:49,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:49,485 > 440
[DEBUG|collector_api.py:200] 2021-02-09 16:43:49,706 > ++++++++++++++청담러닝++++++++++++++++++++2029/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:49,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:50,093 > 441
[DEBUG|collector_api.py:200] 2021-02-09 16:43:50,341 > ++++++++++++++청보산업++++++++++++++++++++2030/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:50,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:50,700 > 442
[DEBUG|collector_api.py:200] 2021-02-09 16:43:50,942 > ++++++++++++++컬러레이++++++++++++++++++++2031/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:50,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:51,307 > 443
[DEBUG|collector_api.py:200] 2021-02-09 16:43:51,561 > ++++++++++++++케어랩스++++++++++++++++++++2032/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:51,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:51,914 > 444
[DEBUG|collector_api.py:200] 2021-02-09 16:43:52,145 > ++++++++++++++케어젠++++++++++++++++++++2033/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:52,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:52,521 > 445
[DEBUG|collector_api.py:200] 2021-02-09 16:43:52,748 > ++++++++++++++케이엔제이++++++++++++++++++++2034/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:52,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:53,130 > 446
[DEBUG|collector_api.py:200] 2021-02-09 16:43:53,318 > ++++++++++++++케이엠++++++++++++++++++++2035/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:53,319 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:53,737 > 447
[DEBUG|collector_api.py:200] 2021-02-09 16:43:53,981 > ++++++++++++++케이엠제약++++++++++++++++++++2036/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:53,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:54,344 > 448
[DEBUG|collector_api.py:200] 2021-02-09 16:43:54,582 > ++++++++++++++케이프++++++++++++++++++++2037/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:54,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:54,951 > 449
[DEBUG|collector_api.py:200] 2021-02-09 16:43:55,189 > ++++++++++++++켐트로닉스++++++++++++++++++++2038/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:55,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:55,559 > 450
[DEBUG|collector_api.py:200] 2021-02-09 16:43:55,791 > ++++++++++++++켐트로스++++++++++++++++++++2039/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:55,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:56,167 > 451
[DEBUG|collector_api.py:200] 2021-02-09 16:43:56,439 > ++++++++++++++코다코++++++++++++++++++++2040/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:56,440 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:56,775 > 452
[DEBUG|collector_api.py:200] 2021-02-09 16:43:57,002 > ++++++++++++++코리아에프티++++++++++++++++++++2041/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:57,003 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:57,382 > 453
[DEBUG|collector_api.py:200] 2021-02-09 16:43:57,619 > ++++++++++++++코센++++++++++++++++++++2042/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:57,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:57,991 > 454
[DEBUG|collector_api.py:200] 2021-02-09 16:43:58,243 > ++++++++++++++코퍼스코리아++++++++++++++++++++2043/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:58,243 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:58,598 > 455
[DEBUG|collector_api.py:200] 2021-02-09 16:43:58,791 > ++++++++++++++큐로홀딩스++++++++++++++++++++2044/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:58,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:59,205 > 456
[DEBUG|collector_api.py:200] 2021-02-09 16:43:59,474 > ++++++++++++++티피씨글로벌++++++++++++++++++++2045/2894
[DEBUG|open_api.py:656] 2021-02-09 16:43:59,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:43:59,812 > 457
[DEBUG|collector_api.py:200] 2021-02-09 16:44:00,054 > ++++++++++++++파크시스템스++++++++++++++++++++2046/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:00,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:00,418 > 458
[DEBUG|collector_api.py:200] 2021-02-09 16:44:00,664 > ++++++++++++++파트론++++++++++++++++++++2047/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:00,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:01,024 > 459
[DEBUG|collector_api.py:200] 2021-02-09 16:44:01,266 > ++++++++++++++판타지오++++++++++++++++++++2048/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:01,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:01,633 > 460
[DEBUG|collector_api.py:200] 2021-02-09 16:44:01,884 > ++++++++++++++팬젠++++++++++++++++++++2049/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:01,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:02,241 > 461
[DEBUG|collector_api.py:200] 2021-02-09 16:44:02,486 > ++++++++++++++포스코엠텍++++++++++++++++++++2050/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:02,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:02,847 > 462
[DEBUG|collector_api.py:200] 2021-02-09 16:44:03,095 > ++++++++++++++포인트엔지니어링++++++++++++++++++++2051/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:03,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:03,454 > 463
[DEBUG|collector_api.py:200] 2021-02-09 16:44:03,685 > ++++++++++++++포티스++++++++++++++++++++2052/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:03,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:04,062 > 464
[DEBUG|collector_api.py:200] 2021-02-09 16:44:04,324 > ++++++++++++++피앤씨테크++++++++++++++++++++2053/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:04,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:04,669 > 465
[DEBUG|collector_api.py:200] 2021-02-09 16:44:04,895 > ++++++++++++++필로시스헬스케어++++++++++++++++++++2054/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:04,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:05,277 > 466
[DEBUG|collector_api.py:200] 2021-02-09 16:44:05,514 > ++++++++++++++하나머스트제6호스팩++++++++++++++++++++2055/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:05,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:05,884 > 467
[DEBUG|collector_api.py:200] 2021-02-09 16:44:06,098 > ++++++++++++++하림지주++++++++++++++++++++2056/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:06,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:06,493 > 468
[DEBUG|collector_api.py:200] 2021-02-09 16:44:06,717 > ++++++++++++++하이제5호스팩++++++++++++++++++++2057/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:06,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:07,101 > 469
[DEBUG|collector_api.py:200] 2021-02-09 16:44:07,288 > ++++++++++++++하이텍팜++++++++++++++++++++2058/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:07,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:07,708 > 470
[DEBUG|collector_api.py:200] 2021-02-09 16:44:07,943 > ++++++++++++++한국가구++++++++++++++++++++2059/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:07,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:08,315 > 471
[DEBUG|collector_api.py:200] 2021-02-09 16:44:08,566 > ++++++++++++++한국정밀기계++++++++++++++++++++2060/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:08,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:08,921 > 472
[DEBUG|collector_api.py:200] 2021-02-09 16:44:09,164 > ++++++++++++++한빛소프트++++++++++++++++++++2061/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:09,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:09,528 > 473
[DEBUG|collector_api.py:200] 2021-02-09 16:44:09,770 > ++++++++++++++한스바이오메드++++++++++++++++++++2062/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:09,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:10,136 > 474
[DEBUG|collector_api.py:200] 2021-02-09 16:44:10,382 > ++++++++++++++현대바이오랜드++++++++++++++++++++2063/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:10,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:10,744 > 475
[DEBUG|collector_api.py:200] 2021-02-09 16:44:10,982 > ++++++++++++++현대통신++++++++++++++++++++2064/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:10,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:11,352 > 476
[DEBUG|collector_api.py:200] 2021-02-09 16:44:11,599 > ++++++++++++++휘닉스소재++++++++++++++++++++2065/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:11,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:11,958 > 477
[DEBUG|collector_api.py:200] 2021-02-09 16:44:12,215 > ++++++++++++++휴림로봇++++++++++++++++++++2066/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:12,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:12,567 > 478
[DEBUG|collector_api.py:200] 2021-02-09 16:44:12,873 > ++++++++++++++AP시스템++++++++++++++++++++2067/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:12,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:13,176 > 479
[DEBUG|collector_api.py:200] 2021-02-09 16:44:13,407 > ++++++++++++++AP위성++++++++++++++++++++2068/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:13,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:13,782 > 480
[DEBUG|collector_api.py:200] 2021-02-09 16:44:14,011 > ++++++++++++++GRT++++++++++++++++++++2069/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:14,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:14,390 > 481
[DEBUG|collector_api.py:200] 2021-02-09 16:44:14,605 > ++++++++++++++MP그룹++++++++++++++++++++2070/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:14,606 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:14,997 > 482
[DEBUG|collector_api.py:200] 2021-02-09 16:44:15,223 > ++++++++++++++OQP++++++++++++++++++++2071/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:15,223 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:15,605 > 483
[DEBUG|collector_api.py:200] 2021-02-09 16:44:15,853 > ++++++++++++++PI첨단소재++++++++++++++++++++2072/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:15,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:16,212 > 484
[DEBUG|collector_api.py:200] 2021-02-09 16:44:16,455 > ++++++++++++++S&K폴리텍++++++++++++++++++++2073/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:16,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:16,819 > 485
[DEBUG|collector_api.py:200] 2021-02-09 16:44:17,076 > ++++++++++++++SFA반도체++++++++++++++++++++2074/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:17,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:17,427 > 486
[DEBUG|collector_api.py:200] 2021-02-09 16:44:17,688 > ++++++++++++++SGC이테크건설++++++++++++++++++++2075/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:17,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:18,034 > 487
[DEBUG|collector_api.py:200] 2021-02-09 16:44:18,307 > ++++++++++++++THE E&M++++++++++++++++++++2076/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:18,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:18,641 > 488
[DEBUG|collector_api.py:200] 2021-02-09 16:44:18,901 > ++++++++++++++THE MIDONG++++++++++++++++++++2077/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:18,902 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:19,250 > 489
[DEBUG|collector_api.py:200] 2021-02-09 16:44:19,504 > ++++++++++++++TJ미디어++++++++++++++++++++2078/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:19,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:19,858 > 490
[DEBUG|collector_api.py:200] 2021-02-09 16:44:20,104 > ++++++++++++++YTN++++++++++++++++++++2079/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:20,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:20,465 > 491
[DEBUG|collector_api.py:200] 2021-02-09 16:44:20,713 > ++++++++++++++골프존뉴딘홀딩스++++++++++++++++++++2080/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:20,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:21,073 > 492
[DEBUG|collector_api.py:200] 2021-02-09 16:44:21,362 > ++++++++++++++교보10호스팩++++++++++++++++++++2081/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:21,362 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:21,681 > 493
[DEBUG|collector_api.py:200] 2021-02-09 16:44:21,851 > ++++++++++++++글로벌에스엠++++++++++++++++++++2082/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:21,851 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:22,290 > 494
[DEBUG|collector_api.py:200] 2021-02-09 16:44:22,540 > ++++++++++++++금화피에스시++++++++++++++++++++2083/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:22,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:22,898 > 495
[DEBUG|collector_api.py:200] 2021-02-09 16:44:23,148 > ++++++++++++++까스텔바작++++++++++++++++++++2084/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:23,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:23,506 > 496
[DEBUG|collector_api.py:200] 2021-02-09 16:44:23,715 > ++++++++++++++나무가++++++++++++++++++++2085/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:23,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:24,114 > 497
[DEBUG|collector_api.py:200] 2021-02-09 16:44:24,370 > ++++++++++++++네온테크++++++++++++++++++++2086/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:24,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:24,723 > 498
[DEBUG|collector_api.py:200] 2021-02-09 16:44:24,957 > ++++++++++++++녹십자랩셀++++++++++++++++++++2087/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:24,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:25,332 > 499
[DEBUG|collector_api.py:200] 2021-02-09 16:44:25,576 > ++++++++++++++녹십자웰빙++++++++++++++++++++2088/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:25,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:25,940 > 500
[DEBUG|collector_api.py:200] 2021-02-09 16:44:26,148 > ++++++++++++++농우바이오++++++++++++++++++++2089/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:26,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:303] 2021-02-09 16:44:36,180 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:44:36,180 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:44:36,180 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:44:36,187 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:44:36,187 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:44:36,187 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:44:36,187 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:44:36,200 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:44:36,233 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:44:36,233 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:44:36,233 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:44:36,249 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:44:36,285 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:44:38,803 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:44:38,804 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:44:38,848 > ++++++++++++++농우바이오++++++++++++++++++++2089/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:38,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:38,850 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:44:40,005 > ++++++++++++++뉴트리++++++++++++++++++++2090/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:40,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:40,006 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:44:40,233 > ++++++++++++++다나와++++++++++++++++++++2091/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:40,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:40,614 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:44:40,855 > ++++++++++++++다믈멀티미디어++++++++++++++++++++2092/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:40,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:41,222 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:44:41,470 > ++++++++++++++다우데이타++++++++++++++++++++2093/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:41,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:41,829 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:44:42,107 > ++++++++++++++대동스틸++++++++++++++++++++2094/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:42,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:42,437 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:44:42,685 > ++++++++++++++대신밸런스제8호스팩++++++++++++++++++++2095/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:42,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:43,043 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:44:43,244 > ++++++++++++++대한광통신++++++++++++++++++++2096/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:43,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:43,650 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:44:43,912 > ++++++++++++++더네이쳐홀딩스++++++++++++++++++++2097/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:43,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:44,256 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:44:44,447 > ++++++++++++++데이타솔루션++++++++++++++++++++2098/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:44,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:44,864 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:44:45,123 > ++++++++++++++덱스터++++++++++++++++++++2099/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:45,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:45,472 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:44:45,736 > ++++++++++++++도이치모터스++++++++++++++++++++2100/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:45,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:46,080 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:44:46,331 > ++++++++++++++동국산업++++++++++++++++++++2101/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:46,331 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:46,686 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:44:46,931 > ++++++++++++++동원개발++++++++++++++++++++2102/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:46,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:47,293 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:44:47,603 > ++++++++++++++동일금속++++++++++++++++++++2103/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:47,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:47,902 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:44:48,153 > ++++++++++++++동화기업++++++++++++++++++++2104/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:48,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:48,508 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:44:48,753 > ++++++++++++++드래곤플라이++++++++++++++++++++2105/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:48,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:49,114 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:44:49,398 > ++++++++++++++드림시큐리티++++++++++++++++++++2106/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:49,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:49,722 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:44:49,963 > ++++++++++++++디딤++++++++++++++++++++2107/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:49,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:50,327 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:44:50,585 > ++++++++++++++디와이피엔에프++++++++++++++++++++2108/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:50,586 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:50,934 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:44:51,191 > ++++++++++++++디지캡++++++++++++++++++++2109/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:51,191 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:51,543 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:44:51,799 > ++++++++++++++디지탈옵틱++++++++++++++++++++2110/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:51,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:52,152 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:44:52,419 > ++++++++++++++레드로버++++++++++++++++++++2111/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:52,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:52,760 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:44:53,012 > ++++++++++++++로보티즈++++++++++++++++++++2112/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:53,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:53,367 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:44:53,642 > ++++++++++++++로체시스템즈++++++++++++++++++++2113/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:53,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:53,976 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:44:54,250 > ++++++++++++++루멘스++++++++++++++++++++2114/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:54,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:54,584 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:44:54,874 > ++++++++++++++루트로닉++++++++++++++++++++2115/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:54,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:55,191 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:44:55,451 > ++++++++++++++리노공업++++++++++++++++++++2116/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:55,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:55,797 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:44:56,064 > ++++++++++++++마이더스AI++++++++++++++++++++2117/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:56,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:56,403 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:44:56,651 > ++++++++++++++마이크로디지탈++++++++++++++++++++2118/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:56,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:57,010 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:44:57,233 > ++++++++++++++마크로젠++++++++++++++++++++2119/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:57,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:57,617 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:44:57,874 > ++++++++++++++매커스++++++++++++++++++++2120/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:57,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:58,222 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:44:58,477 > ++++++++++++++메디아나++++++++++++++++++++2121/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:58,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:58,830 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:44:59,076 > ++++++++++++++멜파스++++++++++++++++++++2122/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:59,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:44:59,438 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:44:59,690 > ++++++++++++++모바일리더++++++++++++++++++++2123/2894
[DEBUG|open_api.py:656] 2021-02-09 16:44:59,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:00,044 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:45:00,308 > ++++++++++++++미래생명자원++++++++++++++++++++2124/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:00,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:00,652 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:45:00,896 > ++++++++++++++바른전자++++++++++++++++++++2125/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:00,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:01,258 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:45:01,522 > ++++++++++++++배럴++++++++++++++++++++2126/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:01,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:01,865 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:45:02,111 > ++++++++++++++백금T&A++++++++++++++++++++2127/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:02,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:02,471 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:45:02,727 > ++++++++++++++버킷스튜디오++++++++++++++++++++2128/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:02,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:03,078 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:45:03,361 > ++++++++++++++보성파워텍++++++++++++++++++++2129/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:03,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:03,685 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:45:03,955 > ++++++++++++++브이원텍++++++++++++++++++++2130/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:03,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:04,292 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:45:04,547 > ++++++++++++++브이티지엠피++++++++++++++++++++2131/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:04,549 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:04,901 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:45:05,144 > ++++++++++++++비비씨++++++++++++++++++++2132/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:05,145 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:05,508 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:45:05,667 > ++++++++++++++비씨월드제약++++++++++++++++++++2133/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:05,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:06,115 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:45:06,364 > ++++++++++++++비아트론++++++++++++++++++++2134/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:06,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:06,721 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:45:06,968 > ++++++++++++++비츠로시스++++++++++++++++++++2135/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:06,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:07,328 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:45:07,587 > ++++++++++++++빛샘전자++++++++++++++++++++2136/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:07,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:07,936 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:45:08,174 > ++++++++++++++삼기++++++++++++++++++++2137/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:08,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:08,544 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:45:08,793 > ++++++++++++++상상인이안제2호스팩++++++++++++++++++++2138/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:08,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:09,151 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:45:09,356 > ++++++++++++++상상인인더스트리++++++++++++++++++++2139/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:09,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:09,758 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:45:10,013 > ++++++++++++++서남++++++++++++++++++++2140/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:10,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:10,366 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:45:10,555 > ++++++++++++++서울리거++++++++++++++++++++2141/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:10,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:10,973 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:45:11,261 > ++++++++++++++서울제약++++++++++++++++++++2142/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:11,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:11,582 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:45:11,844 > ++++++++++++++서전기전++++++++++++++++++++2143/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:11,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:12,189 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:45:12,449 > ++++++++++++++서희건설++++++++++++++++++++2144/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:12,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:12,797 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:45:13,066 > ++++++++++++++세중++++++++++++++++++++2145/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:13,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:13,405 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:45:13,657 > ++++++++++++++셀트리온헬스케어++++++++++++++++++++2146/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:13,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:14,012 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:45:14,246 > ++++++++++++++솔브레인홀딩스++++++++++++++++++++2147/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:14,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:14,619 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:45:14,869 > ++++++++++++++솔트룩스++++++++++++++++++++2148/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:14,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:15,226 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:45:15,405 > ++++++++++++++쇼박스++++++++++++++++++++2149/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:15,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:15,834 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:45:16,095 > ++++++++++++++슈프리마아이디++++++++++++++++++++2150/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:16,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:16,442 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:45:16,672 > ++++++++++++++신신제약++++++++++++++++++++2151/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:16,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:17,050 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:45:17,301 > ++++++++++++++신영스팩6호++++++++++++++++++++2152/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:17,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:17,658 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:45:17,855 > ++++++++++++++신일제약++++++++++++++++++++2153/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:17,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:18,265 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:45:18,525 > ++++++++++++++싸이맥스++++++++++++++++++++2154/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:18,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:18,872 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:45:19,126 > ++++++++++++++썸에이지++++++++++++++++++++2155/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:19,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:19,480 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:45:19,719 > ++++++++++++++쏠리드++++++++++++++++++++2156/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:19,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:20,086 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:45:20,374 > ++++++++++++++씨아이에스++++++++++++++++++++2157/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:20,374 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:20,691 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:45:20,936 > ++++++++++++++씨에스베어링++++++++++++++++++++2158/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:20,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:21,298 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:45:21,494 > ++++++++++++++아난티++++++++++++++++++++2159/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:21,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:21,905 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:45:22,175 > ++++++++++++++아바코++++++++++++++++++++2160/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:22,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:22,512 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:45:22,753 > ++++++++++++++아세아텍++++++++++++++++++++2161/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:22,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:23,119 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:45:23,388 > ++++++++++++++아스트++++++++++++++++++++2162/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:23,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:23,726 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:45:23,956 > ++++++++++++++아이스크림에듀++++++++++++++++++++2163/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:23,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:24,333 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:45:24,537 > ++++++++++++++아이엠이연이++++++++++++++++++++2164/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:24,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:24,939 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:45:25,191 > ++++++++++++++아이텍++++++++++++++++++++2165/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:25,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:25,545 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:45:25,790 > ++++++++++++++아이티엠반도체++++++++++++++++++++2166/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:25,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:26,151 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:45:26,361 > ++++++++++++++알로이스++++++++++++++++++++2167/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:26,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:26,757 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:45:27,054 > ++++++++++++++양지사++++++++++++++++++++2168/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:27,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:27,364 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:45:27,624 > ++++++++++++++얼라인드++++++++++++++++++++2169/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:27,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:27,971 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:45:28,223 > ++++++++++++++에스씨디++++++++++++++++++++2170/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:28,223 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:28,578 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:45:28,835 > ++++++++++++++에스에프에이++++++++++++++++++++2171/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:28,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:29,186 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:45:29,479 > ++++++++++++++에스텍++++++++++++++++++++2172/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:29,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:29,794 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:45:30,050 > ++++++++++++++에스폴리텍++++++++++++++++++++2173/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:30,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:30,401 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:45:30,666 > ++++++++++++++에스피시스템스++++++++++++++++++++2174/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:30,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:31,007 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:45:31,226 > ++++++++++++++에이디테크놀로지++++++++++++++++++++2175/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:31,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:31,614 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:45:31,859 > ++++++++++++++에이에프더블류++++++++++++++++++++2176/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:31,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:32,221 > 88
[INFO|collector_api.py:445] 2021-02-09 16:45:32,330 > 312610 에이에프더블류의 액면분할/증자 등의 이유로 수정주가가 달라져서 처음부터 다시 콜렉팅
[INFO|collector_api.py:447] 2021-02-09 16:45:32,331 > daily_craw와 min_craw 삭제 중..
[INFO|collector_api.py:455] 2021-02-09 16:45:32,388 > 삭제 완료
[DEBUG|open_api.py:656] 2021-02-09 16:45:32,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:32,828 > 89
[DEBUG|open_api.py:696] 2021-02-09 16:45:32,906 > 에이에프더블류 테이블이 daily_craw db 에 없다. 새로 생성! 
[INFO|collector_api.py:557] 2021-02-09 16:45:33,187 > daily_craw.에이에프더블류 업데이트 완료 312610
[INFO|collector_api.py:558] 2021-02-09 16:45:33,187 > daily_buy_list 업데이트 중..
[INFO|collector_api.py:565] 2021-02-09 16:45:33,199 > 312610 에이에프더블류 - daily_buy_list.`20190102` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,243 > 312610 에이에프더블류 - daily_buy_list.`20190103` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,275 > 312610 에이에프더블류 - daily_buy_list.`20190104` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,309 > 312610 에이에프더블류 - daily_buy_list.`20190107` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,344 > 312610 에이에프더블류 - daily_buy_list.`20190108` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,376 > 312610 에이에프더블류 - daily_buy_list.`20190109` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,406 > 312610 에이에프더블류 - daily_buy_list.`20190110` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,436 > 312610 에이에프더블류 - daily_buy_list.`20190111` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,466 > 312610 에이에프더블류 - daily_buy_list.`20190114` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,496 > 312610 에이에프더블류 - daily_buy_list.`20190115` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,531 > 312610 에이에프더블류 - daily_buy_list.`20190116` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,561 > 312610 에이에프더블류 - daily_buy_list.`20190117` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,593 > 312610 에이에프더블류 - daily_buy_list.`20190118` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,623 > 312610 에이에프더블류 - daily_buy_list.`20190121` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,654 > 312610 에이에프더블류 - daily_buy_list.`20190122` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,688 > 312610 에이에프더블류 - daily_buy_list.`20190123` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,725 > 312610 에이에프더블류 - daily_buy_list.`20190124` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,758 > 312610 에이에프더블류 - daily_buy_list.`20190125` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,790 > 312610 에이에프더블류 - daily_buy_list.`20190128` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,822 > 312610 에이에프더블류 - daily_buy_list.`20190129` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,855 > 312610 에이에프더블류 - daily_buy_list.`20190130` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,887 > 312610 에이에프더블류 - daily_buy_list.`20190131` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,919 > 312610 에이에프더블류 - daily_buy_list.`20190201` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:33,950 > 312610 에이에프더블류 - daily_buy_list.`20190207` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,023 > 312610 에이에프더블류 - daily_buy_list.`20190208` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,079 > 312610 에이에프더블류 - daily_buy_list.`20190211` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,111 > 312610 에이에프더블류 - daily_buy_list.`20190212` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,145 > 312610 에이에프더블류 - daily_buy_list.`20190213` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,179 > 312610 에이에프더블류 - daily_buy_list.`20190214` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,210 > 312610 에이에프더블류 - daily_buy_list.`20190215` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,245 > 312610 에이에프더블류 - daily_buy_list.`20190218` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,276 > 312610 에이에프더블류 - daily_buy_list.`20190219` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,306 > 312610 에이에프더블류 - daily_buy_list.`20190220` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,335 > 312610 에이에프더블류 - daily_buy_list.`20190221` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,368 > 312610 에이에프더블류 - daily_buy_list.`20190222` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,399 > 312610 에이에프더블류 - daily_buy_list.`20190225` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,428 > 312610 에이에프더블류 - daily_buy_list.`20190226` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,461 > 312610 에이에프더블류 - daily_buy_list.`20190227` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,493 > 312610 에이에프더블류 - daily_buy_list.`20190228` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,523 > 312610 에이에프더블류 - daily_buy_list.`20190304` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,559 > 312610 에이에프더블류 - daily_buy_list.`20190305` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,598 > 312610 에이에프더블류 - daily_buy_list.`20190306` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,631 > 312610 에이에프더블류 - daily_buy_list.`20190307` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,661 > 312610 에이에프더블류 - daily_buy_list.`20190308` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,693 > 312610 에이에프더블류 - daily_buy_list.`20190311` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,725 > 312610 에이에프더블류 - daily_buy_list.`20190312` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,754 > 312610 에이에프더블류 - daily_buy_list.`20190313` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,787 > 312610 에이에프더블류 - daily_buy_list.`20190314` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,818 > 312610 에이에프더블류 - daily_buy_list.`20190315` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,849 > 312610 에이에프더블류 - daily_buy_list.`20190318` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,879 > 312610 에이에프더블류 - daily_buy_list.`20190319` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,910 > 312610 에이에프더블류 - daily_buy_list.`20190320` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,943 > 312610 에이에프더블류 - daily_buy_list.`20190321` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,970 > 312610 에이에프더블류 - daily_buy_list.`20190322` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:34,994 > 312610 에이에프더블류 - daily_buy_list.`20190325` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,019 > 312610 에이에프더블류 - daily_buy_list.`20190326` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,042 > 312610 에이에프더블류 - daily_buy_list.`20190327` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,071 > 312610 에이에프더블류 - daily_buy_list.`20190328` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,101 > 312610 에이에프더블류 - daily_buy_list.`20190329` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,134 > 312610 에이에프더블류 - daily_buy_list.`20190401` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,166 > 312610 에이에프더블류 - daily_buy_list.`20190402` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,200 > 312610 에이에프더블류 - daily_buy_list.`20190403` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,231 > 312610 에이에프더블류 - daily_buy_list.`20190404` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,263 > 312610 에이에프더블류 - daily_buy_list.`20190405` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,294 > 312610 에이에프더블류 - daily_buy_list.`20190408` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,324 > 312610 에이에프더블류 - daily_buy_list.`20190409` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,357 > 312610 에이에프더블류 - daily_buy_list.`20190410` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,390 > 312610 에이에프더블류 - daily_buy_list.`20190411` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,425 > 312610 에이에프더블류 - daily_buy_list.`20190412` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,456 > 312610 에이에프더블류 - daily_buy_list.`20190415` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,486 > 312610 에이에프더블류 - daily_buy_list.`20190416` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,517 > 312610 에이에프더블류 - daily_buy_list.`20190417` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,550 > 312610 에이에프더블류 - daily_buy_list.`20190418` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,578 > 312610 에이에프더블류 - daily_buy_list.`20190419` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,609 > 312610 에이에프더블류 - daily_buy_list.`20190422` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,639 > 312610 에이에프더블류 - daily_buy_list.`20190423` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,671 > 312610 에이에프더블류 - daily_buy_list.`20190424` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,702 > 312610 에이에프더블류 - daily_buy_list.`20190425` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,733 > 312610 에이에프더블류 - daily_buy_list.`20190426` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,766 > 312610 에이에프더블류 - daily_buy_list.`20190429` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,795 > 312610 에이에프더블류 - daily_buy_list.`20190430` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,823 > 312610 에이에프더블류 - daily_buy_list.`20190502` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,857 > 312610 에이에프더블류 - daily_buy_list.`20190503` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,889 > 312610 에이에프더블류 - daily_buy_list.`20190507` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,920 > 312610 에이에프더블류 - daily_buy_list.`20190508` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,951 > 312610 에이에프더블류 - daily_buy_list.`20190509` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:35,985 > 312610 에이에프더블류 - daily_buy_list.`20190510` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,016 > 312610 에이에프더블류 - daily_buy_list.`20190513` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,047 > 312610 에이에프더블류 - daily_buy_list.`20190514` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,077 > 312610 에이에프더블류 - daily_buy_list.`20190515` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,106 > 312610 에이에프더블류 - daily_buy_list.`20190516` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,139 > 312610 에이에프더블류 - daily_buy_list.`20190517` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,170 > 312610 에이에프더블류 - daily_buy_list.`20190520` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,201 > 312610 에이에프더블류 - daily_buy_list.`20190521` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,232 > 312610 에이에프더블류 - daily_buy_list.`20190522` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,262 > 312610 에이에프더블류 - daily_buy_list.`20190523` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,294 > 312610 에이에프더블류 - daily_buy_list.`20190524` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,323 > 312610 에이에프더블류 - daily_buy_list.`20190527` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,354 > 312610 에이에프더블류 - daily_buy_list.`20190528` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,386 > 312610 에이에프더블류 - daily_buy_list.`20190529` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,417 > 312610 에이에프더블류 - daily_buy_list.`20190530` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,449 > 312610 에이에프더블류 - daily_buy_list.`20190531` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,480 > 312610 에이에프더블류 - daily_buy_list.`20190603` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,511 > 312610 에이에프더블류 - daily_buy_list.`20190604` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,542 > 312610 에이에프더블류 - daily_buy_list.`20190605` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,572 > 312610 에이에프더블류 - daily_buy_list.`20190607` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,605 > 312610 에이에프더블류 - daily_buy_list.`20190610` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,635 > 312610 에이에프더블류 - daily_buy_list.`20190611` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,665 > 312610 에이에프더블류 - daily_buy_list.`20190612` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,696 > 312610 에이에프더블류 - daily_buy_list.`20190613` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,727 > 312610 에이에프더블류 - daily_buy_list.`20190614` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,750 > 312610 에이에프더블류 - daily_buy_list.`20190617` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,776 > 312610 에이에프더블류 - daily_buy_list.`20190618` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,799 > 312610 에이에프더블류 - daily_buy_list.`20190619` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,825 > 312610 에이에프더블류 - daily_buy_list.`20190620` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,860 > 312610 에이에프더블류 - daily_buy_list.`20190621` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,893 > 312610 에이에프더블류 - daily_buy_list.`20190624` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,925 > 312610 에이에프더블류 - daily_buy_list.`20190625` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,959 > 312610 에이에프더블류 - daily_buy_list.`20190626` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:36,989 > 312610 에이에프더블류 - daily_buy_list.`20190627` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,019 > 312610 에이에프더블류 - daily_buy_list.`20190628` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,048 > 312610 에이에프더블류 - daily_buy_list.`20190701` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,086 > 312610 에이에프더블류 - daily_buy_list.`20190702` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,125 > 312610 에이에프더블류 - daily_buy_list.`20190703` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,164 > 312610 에이에프더블류 - daily_buy_list.`20190704` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,216 > 312610 에이에프더블류 - daily_buy_list.`20190705` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,253 > 312610 에이에프더블류 - daily_buy_list.`20190708` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,292 > 312610 에이에프더블류 - daily_buy_list.`20190709` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,332 > 312610 에이에프더블류 - daily_buy_list.`20190710` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,376 > 312610 에이에프더블류 - daily_buy_list.`20190711` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,416 > 312610 에이에프더블류 - daily_buy_list.`20190712` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,455 > 312610 에이에프더블류 - daily_buy_list.`20190715` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,500 > 312610 에이에프더블류 - daily_buy_list.`20190716` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,540 > 312610 에이에프더블류 - daily_buy_list.`20190717` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,582 > 312610 에이에프더블류 - daily_buy_list.`20190718` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,623 > 312610 에이에프더블류 - daily_buy_list.`20190719` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,664 > 312610 에이에프더블류 - daily_buy_list.`20190722` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,705 > 312610 에이에프더블류 - daily_buy_list.`20190723` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,744 > 312610 에이에프더블류 - daily_buy_list.`20190724` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,786 > 312610 에이에프더블류 - daily_buy_list.`20190725` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,824 > 312610 에이에프더블류 - daily_buy_list.`20190726` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,862 > 312610 에이에프더블류 - daily_buy_list.`20190729` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,902 > 312610 에이에프더블류 - daily_buy_list.`20190730` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,940 > 312610 에이에프더블류 - daily_buy_list.`20190731` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:37,992 > 312610 에이에프더블류 - daily_buy_list.`20190801` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,059 > 312610 에이에프더블류 - daily_buy_list.`20190802` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,114 > 312610 에이에프더블류 - daily_buy_list.`20190805` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,165 > 312610 에이에프더블류 - daily_buy_list.`20190806` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,221 > 312610 에이에프더블류 - daily_buy_list.`20190807` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,273 > 312610 에이에프더블류 - daily_buy_list.`20190808` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,333 > 312610 에이에프더블류 - daily_buy_list.`20190809` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,377 > 312610 에이에프더블류 - daily_buy_list.`20190812` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,421 > 312610 에이에프더블류 - daily_buy_list.`20190813` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,460 > 312610 에이에프더블류 - daily_buy_list.`20190814` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,502 > 312610 에이에프더블류 - daily_buy_list.`20190816` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,540 > 312610 에이에프더블류 - daily_buy_list.`20190819` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,579 > 312610 에이에프더블류 - daily_buy_list.`20190820` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,619 > 312610 에이에프더블류 - daily_buy_list.`20190821` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,658 > 312610 에이에프더블류 - daily_buy_list.`20190822` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,696 > 312610 에이에프더블류 - daily_buy_list.`20190823` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,737 > 312610 에이에프더블류 - daily_buy_list.`20190826` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,779 > 312610 에이에프더블류 - daily_buy_list.`20190827` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,819 > 312610 에이에프더블류 - daily_buy_list.`20190828` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,859 > 312610 에이에프더블류 - daily_buy_list.`20190829` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,901 > 312610 에이에프더블류 - daily_buy_list.`20190830` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,937 > 312610 에이에프더블류 - daily_buy_list.`20190902` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:38,982 > 312610 에이에프더블류 - daily_buy_list.`20190903` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,044 > 312610 에이에프더블류 - daily_buy_list.`20190904` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,110 > 312610 에이에프더블류 - daily_buy_list.`20190905` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,154 > 312610 에이에프더블류 - daily_buy_list.`20190906` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,199 > 312610 에이에프더블류 - daily_buy_list.`20190909` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,234 > 312610 에이에프더블류 - daily_buy_list.`20190910` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,268 > 312610 에이에프더블류 - daily_buy_list.`20190911` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,309 > 312610 에이에프더블류 - daily_buy_list.`20190916` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,348 > 312610 에이에프더블류 - daily_buy_list.`20190917` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,388 > 312610 에이에프더블류 - daily_buy_list.`20190918` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,427 > 312610 에이에프더블류 - daily_buy_list.`20190919` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,470 > 312610 에이에프더블류 - daily_buy_list.`20190920` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,510 > 312610 에이에프더블류 - daily_buy_list.`20190923` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,556 > 312610 에이에프더블류 - daily_buy_list.`20190924` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,591 > 312610 에이에프더블류 - daily_buy_list.`20190925` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,629 > 312610 에이에프더블류 - daily_buy_list.`20190926` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,667 > 312610 에이에프더블류 - daily_buy_list.`20190927` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,705 > 312610 에이에프더블류 - daily_buy_list.`20190930` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,746 > 312610 에이에프더블류 - daily_buy_list.`20191001` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,787 > 312610 에이에프더블류 - daily_buy_list.`20191002` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,825 > 312610 에이에프더블류 - daily_buy_list.`20191004` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,864 > 312610 에이에프더블류 - daily_buy_list.`20191007` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,904 > 312610 에이에프더블류 - daily_buy_list.`20191008` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:39,944 > 312610 에이에프더블류 - daily_buy_list.`20191010` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,003 > 312610 에이에프더블류 - daily_buy_list.`20191011` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,059 > 312610 에이에프더블류 - daily_buy_list.`20191014` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,110 > 312610 에이에프더블류 - daily_buy_list.`20191015` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,153 > 312610 에이에프더블류 - daily_buy_list.`20191016` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,205 > 312610 에이에프더블류 - daily_buy_list.`20191017` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,266 > 312610 에이에프더블류 - daily_buy_list.`20191018` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,311 > 312610 에이에프더블류 - daily_buy_list.`20191021` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,356 > 312610 에이에프더블류 - daily_buy_list.`20191022` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,403 > 312610 에이에프더블류 - daily_buy_list.`20191023` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,458 > 312610 에이에프더블류 - daily_buy_list.`20191024` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,506 > 312610 에이에프더블류 - daily_buy_list.`20191025` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,543 > 312610 에이에프더블류 - daily_buy_list.`20191028` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,583 > 312610 에이에프더블류 - daily_buy_list.`20191029` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,622 > 312610 에이에프더블류 - daily_buy_list.`20191030` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,663 > 312610 에이에프더블류 - daily_buy_list.`20191031` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,702 > 312610 에이에프더블류 - daily_buy_list.`20191101` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,745 > 312610 에이에프더블류 - daily_buy_list.`20191104` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,790 > 312610 에이에프더블류 - daily_buy_list.`20191105` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,829 > 312610 에이에프더블류 - daily_buy_list.`20191106` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,868 > 312610 에이에프더블류 - daily_buy_list.`20191107` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,910 > 312610 에이에프더블류 - daily_buy_list.`20191108` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:40,950 > 312610 에이에프더블류 - daily_buy_list.`20191111` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,001 > 312610 에이에프더블류 - daily_buy_list.`20191112` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,064 > 312610 에이에프더블류 - daily_buy_list.`20191113` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,116 > 312610 에이에프더블류 - daily_buy_list.`20191114` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,169 > 312610 에이에프더블류 - daily_buy_list.`20191115` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,251 > 312610 에이에프더블류 - daily_buy_list.`20191118` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,313 > 312610 에이에프더블류 - daily_buy_list.`20191119` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,354 > 312610 에이에프더블류 - daily_buy_list.`20191120` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,403 > 312610 에이에프더블류 - daily_buy_list.`20191121` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,442 > 312610 에이에프더블류 - daily_buy_list.`20191122` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,482 > 312610 에이에프더블류 - daily_buy_list.`20191125` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,520 > 312610 에이에프더블류 - daily_buy_list.`20191126` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,559 > 312610 에이에프더블류 - daily_buy_list.`20191127` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,597 > 312610 에이에프더블류 - daily_buy_list.`20191128` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,637 > 312610 에이에프더블류 - daily_buy_list.`20191129` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,674 > 312610 에이에프더블류 - daily_buy_list.`20191202` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,709 > 312610 에이에프더블류 - daily_buy_list.`20191203` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,744 > 312610 에이에프더블류 - daily_buy_list.`20191204` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,777 > 312610 에이에프더블류 - daily_buy_list.`20191205` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,810 > 312610 에이에프더블류 - daily_buy_list.`20191206` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,850 > 312610 에이에프더블류 - daily_buy_list.`20191209` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,890 > 312610 에이에프더블류 - daily_buy_list.`20191210` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,932 > 312610 에이에프더블류 - daily_buy_list.`20191211` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:41,969 > 312610 에이에프더블류 - daily_buy_list.`20191212` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,056 > 312610 에이에프더블류 - daily_buy_list.`20191213` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,135 > 312610 에이에프더블류 - daily_buy_list.`20191216` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,191 > 312610 에이에프더블류 - daily_buy_list.`20191217` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,232 > 312610 에이에프더블류 - daily_buy_list.`20191218` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,269 > 312610 에이에프더블류 - daily_buy_list.`20191219` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,313 > 312610 에이에프더블류 - daily_buy_list.`20191220` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,354 > 312610 에이에프더블류 - daily_buy_list.`20191223` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,393 > 312610 에이에프더블류 - daily_buy_list.`20191224` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,433 > 312610 에이에프더블류 - daily_buy_list.`20191226` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,470 > 312610 에이에프더블류 - daily_buy_list.`20191227` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,511 > 312610 에이에프더블류 - daily_buy_list.`20191230` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,547 > 312610 에이에프더블류 - daily_buy_list.`20200102` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,589 > 312610 에이에프더블류 - daily_buy_list.`20200103` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,627 > 312610 에이에프더블류 - daily_buy_list.`20200106` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,666 > 312610 에이에프더블류 - daily_buy_list.`20200107` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,704 > 312610 에이에프더블류 - daily_buy_list.`20200108` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,740 > 312610 에이에프더블류 - daily_buy_list.`20200109` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,781 > 312610 에이에프더블류 - daily_buy_list.`20200110` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,822 > 312610 에이에프더블류 - daily_buy_list.`20200113` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,861 > 312610 에이에프더블류 - daily_buy_list.`20200114` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,899 > 312610 에이에프더블류 - daily_buy_list.`20200115` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,934 > 312610 에이에프더블류 - daily_buy_list.`20200116` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:42,972 > 312610 에이에프더블류 - daily_buy_list.`20200117` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,029 > 312610 에이에프더블류 - daily_buy_list.`20200120` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,092 > 312610 에이에프더블류 - daily_buy_list.`20200121` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,166 > 312610 에이에프더블류 - daily_buy_list.`20200122` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,220 > 312610 에이에프더블류 - daily_buy_list.`20200123` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,272 > 312610 에이에프더블류 - daily_buy_list.`20200128` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,313 > 312610 에이에프더블류 - daily_buy_list.`20200129` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,353 > 312610 에이에프더블류 - daily_buy_list.`20200130` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,391 > 312610 에이에프더블류 - daily_buy_list.`20200131` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,429 > 312610 에이에프더블류 - daily_buy_list.`20200203` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,466 > 312610 에이에프더블류 - daily_buy_list.`20200204` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,509 > 312610 에이에프더블류 - daily_buy_list.`20200205` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,556 > 312610 에이에프더블류 - daily_buy_list.`20200206` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,603 > 312610 에이에프더블류 - daily_buy_list.`20200207` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,641 > 312610 에이에프더블류 - daily_buy_list.`20200210` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,681 > 312610 에이에프더블류 - daily_buy_list.`20200211` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,722 > 312610 에이에프더블류 - daily_buy_list.`20200212` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,762 > 312610 에이에프더블류 - daily_buy_list.`20200213` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,798 > 312610 에이에프더블류 - daily_buy_list.`20200214` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,834 > 312610 에이에프더블류 - daily_buy_list.`20200217` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,878 > 312610 에이에프더블류 - daily_buy_list.`20200218` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,917 > 312610 에이에프더블류 - daily_buy_list.`20200219` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:43,960 > 312610 에이에프더블류 - daily_buy_list.`20200220` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,010 > 312610 에이에프더블류 - daily_buy_list.`20200221` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,073 > 312610 에이에프더블류 - daily_buy_list.`20200224` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,132 > 312610 에이에프더블류 - daily_buy_list.`20200225` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,194 > 312610 에이에프더블류 - daily_buy_list.`20200226` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,251 > 312610 에이에프더블류 - daily_buy_list.`20200227` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,300 > 312610 에이에프더블류 - daily_buy_list.`20200228` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,332 > 312610 에이에프더블류 - daily_buy_list.`20200302` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,364 > 312610 에이에프더블류 - daily_buy_list.`20200303` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,399 > 312610 에이에프더블류 - daily_buy_list.`20200304` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,442 > 312610 에이에프더블류 - daily_buy_list.`20200305` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,483 > 312610 에이에프더블류 - daily_buy_list.`20200306` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,524 > 312610 에이에프더블류 - daily_buy_list.`20200309` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,562 > 312610 에이에프더블류 - daily_buy_list.`20200310` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,603 > 312610 에이에프더블류 - daily_buy_list.`20200311` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,641 > 312610 에이에프더블류 - daily_buy_list.`20200312` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,680 > 312610 에이에프더블류 - daily_buy_list.`20200313` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,752 > 312610 에이에프더블류 - daily_buy_list.`20200316` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,790 > 312610 에이에프더블류 - daily_buy_list.`20200317` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,832 > 312610 에이에프더블류 - daily_buy_list.`20200318` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,872 > 312610 에이에프더블류 - daily_buy_list.`20200319` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,911 > 312610 에이에프더블류 - daily_buy_list.`20200320` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:44,948 > 312610 에이에프더블류 - daily_buy_list.`20200323` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,017 > 312610 에이에프더블류 - daily_buy_list.`20200324` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,078 > 312610 에이에프더블류 - daily_buy_list.`20200325` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,134 > 312610 에이에프더블류 - daily_buy_list.`20200326` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,187 > 312610 에이에프더블류 - daily_buy_list.`20200327` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,229 > 312610 에이에프더블류 - daily_buy_list.`20200330` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,275 > 312610 에이에프더블류 - daily_buy_list.`20200331` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,318 > 312610 에이에프더블류 - daily_buy_list.`20200401` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,361 > 312610 에이에프더블류 - daily_buy_list.`20200402` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,400 > 312610 에이에프더블류 - daily_buy_list.`20200403` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,436 > 312610 에이에프더블류 - daily_buy_list.`20200406` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,475 > 312610 에이에프더블류 - daily_buy_list.`20200407` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,513 > 312610 에이에프더블류 - daily_buy_list.`20200408` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,552 > 312610 에이에프더블류 - daily_buy_list.`20200409` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,590 > 312610 에이에프더블류 - daily_buy_list.`20200410` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,634 > 312610 에이에프더블류 - daily_buy_list.`20200413` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,674 > 312610 에이에프더블류 - daily_buy_list.`20200414` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,710 > 312610 에이에프더블류 - daily_buy_list.`20200416` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,751 > 312610 에이에프더블류 - daily_buy_list.`20200417` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,789 > 312610 에이에프더블류 - daily_buy_list.`20200420` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,828 > 312610 에이에프더블류 - daily_buy_list.`20200421` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,868 > 312610 에이에프더블류 - daily_buy_list.`20200422` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,906 > 312610 에이에프더블류 - daily_buy_list.`20200423` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,944 > 312610 에이에프더블류 - daily_buy_list.`20200424` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:45,993 > 312610 에이에프더블류 - daily_buy_list.`20200427` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,047 > 312610 에이에프더블류 - daily_buy_list.`20200428` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,093 > 312610 에이에프더블류 - daily_buy_list.`20200429` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,150 > 312610 에이에프더블류 - daily_buy_list.`20200504` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,209 > 312610 에이에프더블류 - daily_buy_list.`20200506` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,276 > 312610 에이에프더블류 - daily_buy_list.`20200507` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,327 > 312610 에이에프더블류 - daily_buy_list.`20200508` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,371 > 312610 에이에프더블류 - daily_buy_list.`20200511` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,416 > 312610 에이에프더블류 - daily_buy_list.`20200512` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,453 > 312610 에이에프더블류 - daily_buy_list.`20200513` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,492 > 312610 에이에프더블류 - daily_buy_list.`20200514` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,528 > 312610 에이에프더블류 - daily_buy_list.`20200515` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,572 > 312610 에이에프더블류 - daily_buy_list.`20200518` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,613 > 312610 에이에프더블류 - daily_buy_list.`20200519` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,656 > 312610 에이에프더블류 - daily_buy_list.`20200520` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,706 > 312610 에이에프더블류 - daily_buy_list.`20200521` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,759 > 312610 에이에프더블류 - daily_buy_list.`20200522` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,802 > 312610 에이에프더블류 - daily_buy_list.`20200525` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,835 > 312610 에이에프더블류 - daily_buy_list.`20200526` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,870 > 312610 에이에프더블류 - daily_buy_list.`20200527` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,904 > 312610 에이에프더블류 - daily_buy_list.`20200528` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,937 > 312610 에이에프더블류 - daily_buy_list.`20200529` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:46,983 > 312610 에이에프더블류 - daily_buy_list.`20200601` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,050 > 312610 에이에프더블류 - daily_buy_list.`20200602` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,142 > 312610 에이에프더블류 - daily_buy_list.`20200603` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,204 > 312610 에이에프더블류 - daily_buy_list.`20200604` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,248 > 312610 에이에프더블류 - daily_buy_list.`20200605` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,285 > 312610 에이에프더블류 - daily_buy_list.`20200608` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,328 > 312610 에이에프더블류 - daily_buy_list.`20200609` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,370 > 312610 에이에프더블류 - daily_buy_list.`20200610` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,409 > 312610 에이에프더블류 - daily_buy_list.`20200611` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,450 > 312610 에이에프더블류 - daily_buy_list.`20200612` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,492 > 312610 에이에프더블류 - daily_buy_list.`20200615` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,534 > 312610 에이에프더블류 - daily_buy_list.`20200616` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,576 > 312610 에이에프더블류 - daily_buy_list.`20200617` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,615 > 312610 에이에프더블류 - daily_buy_list.`20200618` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,651 > 312610 에이에프더블류 - daily_buy_list.`20200619` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,692 > 312610 에이에프더블류 - daily_buy_list.`20200622` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,729 > 312610 에이에프더블류 - daily_buy_list.`20200623` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,768 > 312610 에이에프더블류 - daily_buy_list.`20200624` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,806 > 312610 에이에프더블류 - daily_buy_list.`20200625` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,848 > 312610 에이에프더블류 - daily_buy_list.`20200626` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,885 > 312610 에이에프더블류 - daily_buy_list.`20200629` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,922 > 312610 에이에프더블류 - daily_buy_list.`20200630` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:47,958 > 312610 에이에프더블류 - daily_buy_list.`20200701` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,016 > 312610 에이에프더블류 - daily_buy_list.`20200702` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,073 > 312610 에이에프더블류 - daily_buy_list.`20200703` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,133 > 312610 에이에프더블류 - daily_buy_list.`20200706` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,189 > 312610 에이에프더블류 - daily_buy_list.`20200707` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,251 > 312610 에이에프더블류 - daily_buy_list.`20200708` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,305 > 312610 에이에프더블류 - daily_buy_list.`20200709` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,346 > 312610 에이에프더블류 - daily_buy_list.`20200710` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,393 > 312610 에이에프더블류 - daily_buy_list.`20200713` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,432 > 312610 에이에프더블류 - daily_buy_list.`20200714` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,477 > 312610 에이에프더블류 - daily_buy_list.`20200715` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,533 > 312610 에이에프더블류 - daily_buy_list.`20200716` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,571 > 312610 에이에프더블류 - daily_buy_list.`20200717` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,609 > 312610 에이에프더블류 - daily_buy_list.`20200720` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,647 > 312610 에이에프더블류 - daily_buy_list.`20200721` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,689 > 312610 에이에프더블류 - daily_buy_list.`20200722` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,730 > 312610 에이에프더블류 - daily_buy_list.`20200723` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,770 > 312610 에이에프더블류 - daily_buy_list.`20200724` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,809 > 312610 에이에프더블류 - daily_buy_list.`20200727` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,845 > 312610 에이에프더블류 - daily_buy_list.`20200728` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,885 > 312610 에이에프더블류 - daily_buy_list.`20200729` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,933 > 312610 에이에프더블류 - daily_buy_list.`20200730` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:48,977 > 312610 에이에프더블류 - daily_buy_list.`20200731` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,033 > 312610 에이에프더블류 - daily_buy_list.`20200803` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,074 > 312610 에이에프더블류 - daily_buy_list.`20200804` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,117 > 312610 에이에프더블류 - daily_buy_list.`20200805` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,165 > 312610 에이에프더블류 - daily_buy_list.`20200806` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,196 > 312610 에이에프더블류 - daily_buy_list.`20200807` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,241 > 312610 에이에프더블류 - daily_buy_list.`20200810` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,279 > 312610 에이에프더블류 - daily_buy_list.`20200811` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,322 > 312610 에이에프더블류 - daily_buy_list.`20200812` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,363 > 312610 에이에프더블류 - daily_buy_list.`20200813` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,403 > 312610 에이에프더블류 - daily_buy_list.`20200814` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,443 > 312610 에이에프더블류 - daily_buy_list.`20200818` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,484 > 312610 에이에프더블류 - daily_buy_list.`20200819` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,524 > 312610 에이에프더블류 - daily_buy_list.`20200820` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,562 > 312610 에이에프더블류 - daily_buy_list.`20200821` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,600 > 312610 에이에프더블류 - daily_buy_list.`20200824` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,639 > 312610 에이에프더블류 - daily_buy_list.`20200825` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,677 > 312610 에이에프더블류 - daily_buy_list.`20200826` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,718 > 312610 에이에프더블류 - daily_buy_list.`20200827` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,757 > 312610 에이에프더블류 - daily_buy_list.`20200828` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,808 > 312610 에이에프더블류 - daily_buy_list.`20200831` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,868 > 312610 에이에프더블류 - daily_buy_list.`20200901` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,912 > 312610 에이에프더블류 - daily_buy_list.`20200902` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:49,955 > 312610 에이에프더블류 - daily_buy_list.`20200903` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,022 > 312610 에이에프더블류 - daily_buy_list.`20200904` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,079 > 312610 에이에프더블류 - daily_buy_list.`20200907` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,128 > 312610 에이에프더블류 - daily_buy_list.`20200908` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,207 > 312610 에이에프더블류 - daily_buy_list.`20200909` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,278 > 312610 에이에프더블류 - daily_buy_list.`20200910` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,324 > 312610 에이에프더블류 - daily_buy_list.`20200911` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,370 > 312610 에이에프더블류 - daily_buy_list.`20200914` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,415 > 312610 에이에프더블류 - daily_buy_list.`20200915` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,454 > 312610 에이에프더블류 - daily_buy_list.`20200916` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,495 > 312610 에이에프더블류 - daily_buy_list.`20200917` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,535 > 312610 에이에프더블류 - daily_buy_list.`20200918` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,576 > 312610 에이에프더블류 - daily_buy_list.`20200921` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,615 > 312610 에이에프더블류 - daily_buy_list.`20200922` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,659 > 312610 에이에프더블류 - daily_buy_list.`20200923` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,696 > 312610 에이에프더블류 - daily_buy_list.`20200924` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,734 > 312610 에이에프더블류 - daily_buy_list.`20200925` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,777 > 312610 에이에프더블류 - daily_buy_list.`20200928` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,818 > 312610 에이에프더블류 - daily_buy_list.`20200929` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,857 > 312610 에이에프더블류 - daily_buy_list.`20201005` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,895 > 312610 에이에프더블류 - daily_buy_list.`20201006` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,935 > 312610 에이에프더블류 - daily_buy_list.`20201007` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:50,974 > 312610 에이에프더블류 - daily_buy_list.`20201008` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,030 > 312610 에이에프더블류 - daily_buy_list.`20201012` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,100 > 312610 에이에프더블류 - daily_buy_list.`20201013` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,155 > 312610 에이에프더블류 - daily_buy_list.`20201014` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,216 > 312610 에이에프더블류 - daily_buy_list.`20201015` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,281 > 312610 에이에프더블류 - daily_buy_list.`20201016` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,326 > 312610 에이에프더블류 - daily_buy_list.`20201019` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,371 > 312610 에이에프더블류 - daily_buy_list.`20201020` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,412 > 312610 에이에프더블류 - daily_buy_list.`20201021` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,449 > 312610 에이에프더블류 - daily_buy_list.`20201022` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,489 > 312610 에이에프더블류 - daily_buy_list.`20201023` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,533 > 312610 에이에프더블류 - daily_buy_list.`20201026` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,571 > 312610 에이에프더블류 - daily_buy_list.`20201027` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,613 > 312610 에이에프더블류 - daily_buy_list.`20201028` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,653 > 312610 에이에프더블류 - daily_buy_list.`20201029` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,684 > 312610 에이에프더블류 - daily_buy_list.`20201030` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,716 > 312610 에이에프더블류 - daily_buy_list.`20201102` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,749 > 312610 에이에프더블류 - daily_buy_list.`20201103` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,783 > 312610 에이에프더블류 - daily_buy_list.`20201104` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,822 > 312610 에이에프더블류 - daily_buy_list.`20201105` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,862 > 312610 에이에프더블류 - daily_buy_list.`20201106` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,901 > 312610 에이에프더블류 - daily_buy_list.`20201109` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,938 > 312610 에이에프더블류 - daily_buy_list.`20201110` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:51,994 > 312610 에이에프더블류 - daily_buy_list.`20201111` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,071 > 312610 에이에프더블류 - daily_buy_list.`20201112` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,138 > 312610 에이에프더블류 - daily_buy_list.`20201113` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,202 > 312610 에이에프더블류 - daily_buy_list.`20201116` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,246 > 312610 에이에프더블류 - daily_buy_list.`20201117` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,291 > 312610 에이에프더블류 - daily_buy_list.`20201118` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,330 > 312610 에이에프더블류 - daily_buy_list.`20201119` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,366 > 312610 에이에프더블류 - daily_buy_list.`20201120` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,408 > 312610 에이에프더블류 - daily_buy_list.`20201123` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,448 > 312610 에이에프더블류 - daily_buy_list.`20201124` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,488 > 312610 에이에프더블류 - daily_buy_list.`20201125` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,527 > 312610 에이에프더블류 - daily_buy_list.`20201126` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,565 > 312610 에이에프더블류 - daily_buy_list.`20201127` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,604 > 312610 에이에프더블류 - daily_buy_list.`20201130` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,647 > 312610 에이에프더블류 - daily_buy_list.`20201201` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,690 > 312610 에이에프더블류 - daily_buy_list.`20201202` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,732 > 312610 에이에프더블류 - daily_buy_list.`20201203` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,771 > 312610 에이에프더블류 - daily_buy_list.`20201204` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,809 > 312610 에이에프더블류 - daily_buy_list.`20201207` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,845 > 312610 에이에프더블류 - daily_buy_list.`20201208` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,887 > 312610 에이에프더블류 - daily_buy_list.`20201209` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,928 > 312610 에이에프더블류 - daily_buy_list.`20201210` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:52,971 > 312610 에이에프더블류 - daily_buy_list.`20201211` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,041 > 312610 에이에프더블류 - daily_buy_list.`20201214` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,100 > 312610 에이에프더블류 - daily_buy_list.`20201215` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,167 > 312610 에이에프더블류 - daily_buy_list.`20201216` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,227 > 312610 에이에프더블류 - daily_buy_list.`20201217` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,297 > 312610 에이에프더블류 - daily_buy_list.`20201218` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,350 > 312610 에이에프더블류 - daily_buy_list.`20201221` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,395 > 312610 에이에프더블류 - daily_buy_list.`20201222` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,438 > 312610 에이에프더블류 - daily_buy_list.`20201223` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,478 > 312610 에이에프더블류 - daily_buy_list.`20201224` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,515 > 312610 에이에프더블류 - daily_buy_list.`20201228` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,559 > 312610 에이에프더블류 - daily_buy_list.`20201229` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,599 > 312610 에이에프더블류 - daily_buy_list.`20201230` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,637 > 312610 에이에프더블류 - daily_buy_list.`20210104` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,678 > 312610 에이에프더블류 - daily_buy_list.`20210105` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,718 > 312610 에이에프더블류 - daily_buy_list.`20210106` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,761 > 312610 에이에프더블류 - daily_buy_list.`20210107` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,799 > 312610 에이에프더블류 - daily_buy_list.`20210108` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,842 > 312610 에이에프더블류 - daily_buy_list.`20210111` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,889 > 312610 에이에프더블류 - daily_buy_list.`20210112` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,933 > 312610 에이에프더블류 - daily_buy_list.`20210113` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:53,977 > 312610 에이에프더블류 - daily_buy_list.`20210114` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,048 > 312610 에이에프더블류 - daily_buy_list.`20210115` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,112 > 312610 에이에프더블류 - daily_buy_list.`20210118` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,168 > 312610 에이에프더블류 - daily_buy_list.`20210119` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,219 > 312610 에이에프더블류 - daily_buy_list.`20210120` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,260 > 312610 에이에프더블류 - daily_buy_list.`20210121` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,296 > 312610 에이에프더블류 - daily_buy_list.`20210122` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,342 > 312610 에이에프더블류 - daily_buy_list.`20210125` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,383 > 312610 에이에프더블류 - daily_buy_list.`20210126` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,423 > 312610 에이에프더블류 - daily_buy_list.`20210127` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,465 > 312610 에이에프더블류 - daily_buy_list.`20210128` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,511 > 312610 에이에프더블류 - daily_buy_list.`20210129` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,556 > 312610 에이에프더블류 - daily_buy_list.`20210201` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,596 > 312610 에이에프더블류 - daily_buy_list.`20210202` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,640 > 312610 에이에프더블류 - daily_buy_list.`20210203` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,681 > 312610 에이에프더블류 - daily_buy_list.`20210204` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,723 > 312610 에이에프더블류 - daily_buy_list.`20210205` 업데이트
[INFO|collector_api.py:565] 2021-02-09 16:45:54,766 > 312610 에이에프더블류 - daily_buy_list.`20210208` 업데이트
[INFO|collector_api.py:575] 2021-02-09 16:45:54,807 > daily_buy_list 업데이트 완료
[DEBUG|collector_api.py:200] 2021-02-09 16:45:54,820 > ++++++++++++++에이치디++++++++++++++++++++2177/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:54,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:54,821 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:45:55,118 > ++++++++++++++에이치엘비생명과학++++++++++++++++++++2178/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:55,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:55,430 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:45:55,705 > ++++++++++++++에이치엘비파워++++++++++++++++++++2179/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:55,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:56,037 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:45:56,326 > ++++++++++++++에이치엠씨제5호스팩++++++++++++++++++++2180/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:56,326 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:56,642 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:45:56,803 > ++++++++++++++에이트원++++++++++++++++++++2181/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:56,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:57,249 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:45:57,526 > ++++++++++++++에치에프알++++++++++++++++++++2182/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:57,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:57,856 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:45:58,118 > ++++++++++++++엔에이치스팩14호++++++++++++++++++++2183/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:58,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:58,464 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:45:58,689 > ++++++++++++++엔에이치스팩16호++++++++++++++++++++2184/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:58,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:59,071 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:45:59,267 > ++++++++++++++엔젠바이오++++++++++++++++++++2185/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:59,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:45:59,678 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:45:59,836 > ++++++++++++++엔투텍++++++++++++++++++++2186/2894
[DEBUG|open_api.py:656] 2021-02-09 16:45:59,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:46:00,283 > 99
[DEBUG|open_api.py:303] 2021-02-09 16:50:00,177 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:50:00,183 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:50:00,183 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:50:00,184 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:50:00,184 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:50:00,184 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:50:00,185 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:50:00,202 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:50:00,236 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:50:00,237 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:50:00,237 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:50:00,253 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:50:00,291 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:50:03,046 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:50:03,047 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:50:03,089 > ++++++++++++++엔투텍++++++++++++++++++++2186/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:03,089 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:03,091 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:50:04,193 > ++++++++++++++엘앤에프++++++++++++++++++++2187/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:04,193 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:04,194 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:50:04,443 > ++++++++++++++엘티씨++++++++++++++++++++2188/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:04,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:04,803 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:50:05,038 > ++++++++++++++엠투엔++++++++++++++++++++2189/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:05,038 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:05,411 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:50:05,660 > ++++++++++++++영우디에스피++++++++++++++++++++2190/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:05,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:06,018 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:50:06,255 > ++++++++++++++영풍정밀++++++++++++++++++++2191/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:06,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:06,626 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:50:06,879 > ++++++++++++++예선테크++++++++++++++++++++2192/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:06,879 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:07,234 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:50:07,463 > ++++++++++++++오로라++++++++++++++++++++2193/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:07,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:07,842 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:50:08,094 > ++++++++++++++오리엔트정공++++++++++++++++++++2194/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:08,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:08,449 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:50:08,684 > ++++++++++++++오스코텍++++++++++++++++++++2195/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:08,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:09,057 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:50:09,292 > ++++++++++++++오파스넷++++++++++++++++++++2196/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:09,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:09,666 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:50:09,925 > ++++++++++++++올릭스++++++++++++++++++++2197/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:09,926 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:10,274 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:50:10,515 > ++++++++++++++옴니시스템++++++++++++++++++++2198/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:10,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:10,880 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:50:11,121 > ++++++++++++++와토스코리아++++++++++++++++++++2199/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:11,122 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:11,488 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:50:11,727 > ++++++++++++++우리산업++++++++++++++++++++2200/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:11,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:12,098 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:50:12,334 > ++++++++++++++우리이앤엘++++++++++++++++++++2201/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:12,334 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:12,705 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:50:12,935 > ++++++++++++++우원개발++++++++++++++++++++2202/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:12,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:13,313 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:50:13,551 > ++++++++++++++위즈코프++++++++++++++++++++2203/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:13,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:13,921 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:50:14,186 > ++++++++++++++윈팩++++++++++++++++++++2204/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:14,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:14,527 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:50:14,781 > ++++++++++++++유비케어++++++++++++++++++++2205/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:14,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:15,136 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:50:15,396 > ++++++++++++++유안타제3호스팩++++++++++++++++++++2206/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:15,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:15,743 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:50:15,972 > ++++++++++++++유앤아이++++++++++++++++++++2207/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:15,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:16,351 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:50:16,597 > ++++++++++++++유진스팩4호++++++++++++++++++++2208/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:16,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:16,958 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:50:17,172 > ++++++++++++++이노메트리++++++++++++++++++++2209/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:17,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:17,566 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:50:17,794 > ++++++++++++++이노테라피++++++++++++++++++++2210/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:17,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:18,175 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:50:18,418 > ++++++++++++++이디티++++++++++++++++++++2211/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:18,418 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:18,783 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:50:19,010 > ++++++++++++++이루다++++++++++++++++++++2212/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:19,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:19,390 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:50:19,557 > ++++++++++++++이매진아시아++++++++++++++++++++2213/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:19,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:19,997 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:50:20,299 > ++++++++++++++이베스트이안스팩1호++++++++++++++++++++2214/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:20,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:20,603 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:50:20,802 > ++++++++++++++이씨에스++++++++++++++++++++2215/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:20,802 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:21,211 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:50:21,452 > ++++++++++++++이엔드디++++++++++++++++++++2216/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:21,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:21,818 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:50:22,052 > ++++++++++++++이오테크닉스++++++++++++++++++++2217/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:22,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:22,427 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:50:22,685 > ++++++++++++++인바이오++++++++++++++++++++2218/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:22,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:23,035 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:50:23,202 > ++++++++++++++인터로조++++++++++++++++++++2219/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:23,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:23,641 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:50:23,882 > ++++++++++++++인화정공++++++++++++++++++++2220/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:23,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:24,250 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:50:24,489 > ++++++++++++++자연과환경++++++++++++++++++++2221/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:24,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:24,857 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:50:25,103 > ++++++++++++++정산애강++++++++++++++++++++2222/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:25,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:25,464 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:50:25,730 > ++++++++++++++제이브이엠++++++++++++++++++++2223/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:25,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:26,071 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:50:26,316 > ++++++++++++++제이엔케이히터++++++++++++++++++++2224/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:26,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:26,678 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:50:26,910 > ++++++++++++++제일테크노스++++++++++++++++++++2225/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:26,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:27,287 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:50:27,552 > ++++++++++++++제테마++++++++++++++++++++2226/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:27,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:27,894 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:50:28,083 > ++++++++++++++지노믹트리++++++++++++++++++++2227/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:28,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:28,501 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:50:28,745 > ++++++++++++++지어소프트++++++++++++++++++++2228/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:28,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:29,108 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:50:29,348 > ++++++++++++++지에스이++++++++++++++++++++2229/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:29,348 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:29,716 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:50:29,959 > ++++++++++++++지엔원에너지++++++++++++++++++++2230/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:29,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:30,323 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:50:30,581 > ++++++++++++++지와이커머스++++++++++++++++++++2231/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:30,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:30,931 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:50:31,187 > ++++++++++++++진양제약++++++++++++++++++++2232/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:31,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:31,539 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:50:31,781 > ++++++++++++++차바이오텍++++++++++++++++++++2233/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:31,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:32,147 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:50:32,399 > ++++++++++++++천랩++++++++++++++++++++2234/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:32,399 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:32,754 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:50:32,938 > ++++++++++++++케이맥++++++++++++++++++++2235/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:32,938 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:33,361 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:50:33,592 > ++++++++++++++케이엘넷++++++++++++++++++++2236/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:33,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:33,969 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:50:34,212 > ++++++++++++++케이프이에스제4호++++++++++++++++++++2237/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:34,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:34,575 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:50:34,751 > ++++++++++++++코너스톤네트웍스++++++++++++++++++++2238/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:34,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:35,183 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:50:35,438 > ++++++++++++++코렌텍++++++++++++++++++++2239/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:35,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:35,790 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:50:36,042 > ++++++++++++++코리아나++++++++++++++++++++2240/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:36,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:36,398 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:50:36,656 > ++++++++++++++코스맥스엔비티++++++++++++++++++++2241/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:36,656 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:37,005 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:50:37,279 > ++++++++++++++코오롱티슈진++++++++++++++++++++2242/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:37,279 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:37,612 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:50:37,833 > ++++++++++++++코윈테크++++++++++++++++++++2243/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:37,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:38,220 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:50:38,411 > ++++++++++++++코콤++++++++++++++++++++2244/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:38,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:38,827 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:50:39,060 > ++++++++++++++퀀타매트릭스++++++++++++++++++++2245/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:39,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:39,435 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:50:39,598 > ++++++++++++++큐에스아이++++++++++++++++++++2246/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:39,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:40,042 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:50:40,287 > ++++++++++++++크루셜텍++++++++++++++++++++2247/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:40,287 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:40,651 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:50:40,884 > ++++++++++++++크리스에프앤씨++++++++++++++++++++2248/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:40,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:41,259 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:50:41,487 > ++++++++++++++클라우드에어++++++++++++++++++++2249/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:41,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:41,866 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:50:42,106 > ++++++++++++++테스++++++++++++++++++++2250/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:42,106 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:42,474 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:50:42,720 > ++++++++++++++텔레칩스++++++++++++++++++++2251/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:42,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:43,082 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:50:43,327 > ++++++++++++++텔레필드++++++++++++++++++++2252/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:43,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:43,688 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:50:43,924 > ++++++++++++++톱텍++++++++++++++++++++2253/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:43,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:44,296 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:50:44,550 > ++++++++++++++티비씨++++++++++++++++++++2254/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:44,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:44,903 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:50:45,138 > ++++++++++++++티플랙스++++++++++++++++++++2255/2894
[DEBUG|open_api.py:656] 2021-02-09 16:50:45,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:50:45,511 > 70
[DEBUG|open_api.py:303] 2021-02-09 16:55:12,103 > connected
[DEBUG|open_api.py:244] 2021-02-09 16:55:12,103 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 16:55:12,103 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 16:55:12,109 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 16:55:12,109 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 16:55:12,110 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 16:55:12,110 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 16:55:12,125 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 16:55:12,159 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 16:55:12,159 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 16:55:12,159 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 16:55:12,175 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 16:55:12,209 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 16:55:14,683 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 16:55:14,684 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 16:55:14,731 > ++++++++++++++티플랙스++++++++++++++++++++2255/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:14,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:14,733 > 1
[DEBUG|collector_api.py:200] 2021-02-09 16:55:15,770 > ++++++++++++++파나진++++++++++++++++++++2256/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:15,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:15,772 > 2
[DEBUG|collector_api.py:200] 2021-02-09 16:55:16,001 > ++++++++++++++파워로직스++++++++++++++++++++2257/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:16,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:16,380 > 3
[DEBUG|collector_api.py:200] 2021-02-09 16:55:16,642 > ++++++++++++++파이오링크++++++++++++++++++++2258/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:16,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:16,987 > 4
[DEBUG|collector_api.py:200] 2021-02-09 16:55:17,225 > ++++++++++++++포비스티앤씨++++++++++++++++++++2259/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:17,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:17,594 > 5
[DEBUG|collector_api.py:200] 2021-02-09 16:55:17,849 > ++++++++++++++포시에스++++++++++++++++++++2260/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:17,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:18,202 > 6
[DEBUG|collector_api.py:200] 2021-02-09 16:55:18,436 > ++++++++++++++푸른기술++++++++++++++++++++2261/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:18,437 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:18,810 > 7
[DEBUG|collector_api.py:200] 2021-02-09 16:55:19,047 > ++++++++++++++퓨전++++++++++++++++++++2262/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:19,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:19,418 > 8
[DEBUG|collector_api.py:200] 2021-02-09 16:55:19,654 > ++++++++++++++프럼파스트++++++++++++++++++++2263/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:19,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:20,025 > 9
[DEBUG|collector_api.py:200] 2021-02-09 16:55:20,260 > ++++++++++++++플리토++++++++++++++++++++2264/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:20,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:20,633 > 10
[DEBUG|collector_api.py:200] 2021-02-09 16:55:20,828 > ++++++++++++++피엔케이피부임상연구센타++++++++++++++++++++2265/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:20,829 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:21,241 > 11
[DEBUG|collector_api.py:200] 2021-02-09 16:55:21,415 > ++++++++++++++피제이전자++++++++++++++++++++2266/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:21,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:21,849 > 12
[DEBUG|collector_api.py:200] 2021-02-09 16:55:22,085 > ++++++++++++++하림++++++++++++++++++++2267/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:22,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:22,456 > 13
[DEBUG|collector_api.py:200] 2021-02-09 16:55:22,695 > ++++++++++++++하이록코리아++++++++++++++++++++2268/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:22,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:23,062 > 14
[DEBUG|collector_api.py:200] 2021-02-09 16:55:23,320 > ++++++++++++++하이비젼시스템++++++++++++++++++++2269/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:23,320 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:23,670 > 15
[DEBUG|collector_api.py:200] 2021-02-09 16:55:23,916 > ++++++++++++++하츠++++++++++++++++++++2270/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:23,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:24,277 > 16
[DEBUG|collector_api.py:200] 2021-02-09 16:55:24,527 > ++++++++++++++한국9호스팩++++++++++++++++++++2271/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:24,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:24,885 > 17
[DEBUG|collector_api.py:200] 2021-02-09 16:55:25,016 > ++++++++++++++한국정보공학++++++++++++++++++++2272/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:25,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:25,492 > 18
[DEBUG|collector_api.py:200] 2021-02-09 16:55:25,737 > ++++++++++++++한네트++++++++++++++++++++2273/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:25,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:26,101 > 19
[DEBUG|collector_api.py:200] 2021-02-09 16:55:26,355 > ++++++++++++++한라IMS++++++++++++++++++++2274/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:26,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:26,708 > 20
[DEBUG|collector_api.py:200] 2021-02-09 16:55:26,948 > ++++++++++++++한양이엔지++++++++++++++++++++2275/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:26,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:27,316 > 21
[DEBUG|collector_api.py:200] 2021-02-09 16:55:27,573 > ++++++++++++++한프++++++++++++++++++++2276/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:27,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:27,923 > 22
[DEBUG|collector_api.py:200] 2021-02-09 16:55:28,161 > ++++++++++++++해성옵틱스++++++++++++++++++++2277/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:28,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:28,530 > 23
[DEBUG|collector_api.py:200] 2021-02-09 16:55:28,771 > ++++++++++++++행남사++++++++++++++++++++2278/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:28,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:29,137 > 24
[DEBUG|collector_api.py:200] 2021-02-09 16:55:29,377 > ++++++++++++++홈센타홀딩스++++++++++++++++++++2279/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:29,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:29,744 > 25
[DEBUG|collector_api.py:200] 2021-02-09 16:55:30,009 > ++++++++++++++힘스++++++++++++++++++++2280/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:30,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:30,352 > 26
[DEBUG|collector_api.py:200] 2021-02-09 16:55:30,597 > ++++++++++++++노브메타파마++++++++++++++++++++2281/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:30,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:30,959 > 27
[DEBUG|collector_api.py:200] 2021-02-09 16:55:31,190 > ++++++++++++++대동고려삼++++++++++++++++++++2282/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:31,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:31,566 > 28
[DEBUG|collector_api.py:200] 2021-02-09 16:55:31,798 > ++++++++++++++라이프사이언스테크놀로지++++++++++++++++++++2283/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:31,799 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:32,174 > 29
[DEBUG|collector_api.py:200] 2021-02-09 16:55:32,443 > ++++++++++++++로보쓰리++++++++++++++++++++2284/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:32,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:32,781 > 30
[DEBUG|collector_api.py:200] 2021-02-09 16:55:33,012 > ++++++++++++++루트락++++++++++++++++++++2285/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:33,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:33,389 > 31
[DEBUG|collector_api.py:200] 2021-02-09 16:55:33,532 > ++++++++++++++메디안디노스틱++++++++++++++++++++2286/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:33,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:33,996 > 32
[DEBUG|collector_api.py:200] 2021-02-09 16:55:34,225 > ++++++++++++++바이오프로테크++++++++++++++++++++2287/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:34,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:34,602 > 33
[DEBUG|collector_api.py:200] 2021-02-09 16:55:34,837 > ++++++++++++++선바이오++++++++++++++++++++2288/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:34,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:35,210 > 34
[DEBUG|collector_api.py:200] 2021-02-09 16:55:35,435 > ++++++++++++++시큐센++++++++++++++++++++2289/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:35,435 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:35,817 > 35
[DEBUG|collector_api.py:200] 2021-02-09 16:55:36,046 > ++++++++++++++씨알푸드++++++++++++++++++++2290/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:36,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:36,425 > 36
[DEBUG|collector_api.py:200] 2021-02-09 16:55:36,665 > ++++++++++++++애드바이오텍++++++++++++++++++++2291/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:36,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:37,032 > 37
[DEBUG|collector_api.py:200] 2021-02-09 16:55:37,211 > ++++++++++++++에스알바이오텍++++++++++++++++++++2292/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:37,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:37,638 > 38
[DEBUG|collector_api.py:200] 2021-02-09 16:55:37,874 > ++++++++++++++에이펙스인텍++++++++++++++++++++2293/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:37,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:38,246 > 39
[DEBUG|collector_api.py:200] 2021-02-09 16:55:38,468 > ++++++++++++++엔솔바이오사이언스++++++++++++++++++++2294/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:38,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:38,855 > 40
[DEBUG|collector_api.py:200] 2021-02-09 16:55:39,103 > ++++++++++++++엔에스엠++++++++++++++++++++2295/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:39,103 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:39,461 > 41
[DEBUG|collector_api.py:200] 2021-02-09 16:55:39,655 > ++++++++++++++엘에이티++++++++++++++++++++2296/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:39,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:40,068 > 42
[DEBUG|collector_api.py:200] 2021-02-09 16:55:40,289 > ++++++++++++++엠로++++++++++++++++++++2297/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:40,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:40,676 > 43
[DEBUG|collector_api.py:200] 2021-02-09 16:55:40,910 > ++++++++++++++인터코스++++++++++++++++++++2298/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:40,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:41,285 > 44
[DEBUG|collector_api.py:200] 2021-02-09 16:55:41,531 > ++++++++++++++전우정밀++++++++++++++++++++2299/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:41,531 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:41,891 > 45
[DEBUG|collector_api.py:200] 2021-02-09 16:55:42,111 > ++++++++++++++질경이++++++++++++++++++++2300/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:42,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:42,499 > 46
[DEBUG|collector_api.py:200] 2021-02-09 16:55:42,731 > ++++++++++++++테크트랜스++++++++++++++++++++2301/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:42,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:43,107 > 47
[DEBUG|collector_api.py:200] 2021-02-09 16:55:43,338 > ++++++++++++++휴벡셀++++++++++++++++++++2302/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:43,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:43,716 > 48
[DEBUG|collector_api.py:200] 2021-02-09 16:55:43,955 > ++++++++++++++구스앤홈++++++++++++++++++++2303/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:43,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:44,324 > 49
[DEBUG|collector_api.py:200] 2021-02-09 16:55:44,524 > ++++++++++++++굿센++++++++++++++++++++2304/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:44,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:44,930 > 50
[DEBUG|collector_api.py:200] 2021-02-09 16:55:45,180 > ++++++++++++++나눔테크++++++++++++++++++++2305/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:45,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:45,537 > 51
[DEBUG|collector_api.py:200] 2021-02-09 16:55:45,767 > ++++++++++++++바이오시네틱스++++++++++++++++++++2306/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:45,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:46,145 > 52
[DEBUG|collector_api.py:200] 2021-02-09 16:55:46,368 > ++++++++++++++아이피몬스터++++++++++++++++++++2307/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:46,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:46,752 > 53
[DEBUG|collector_api.py:200] 2021-02-09 16:55:46,976 > ++++++++++++++앙츠++++++++++++++++++++2308/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:46,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:47,361 > 54
[DEBUG|collector_api.py:200] 2021-02-09 16:55:47,616 > ++++++++++++++에스에이티이엔지++++++++++++++++++++2309/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:47,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:47,968 > 55
[DEBUG|collector_api.py:200] 2021-02-09 16:55:48,217 > ++++++++++++++에스엘에스바이오++++++++++++++++++++2310/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:48,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:48,575 > 56
[DEBUG|collector_api.py:200] 2021-02-09 16:55:48,808 > ++++++++++++++유니포인트++++++++++++++++++++2311/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:48,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:49,183 > 57
[DEBUG|collector_api.py:200] 2021-02-09 16:55:49,397 > ++++++++++++++유투바이오++++++++++++++++++++2312/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:49,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:49,789 > 58
[DEBUG|collector_api.py:200] 2021-02-09 16:55:50,025 > ++++++++++++++이노벡스++++++++++++++++++++2313/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:50,025 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:50,397 > 59
[DEBUG|collector_api.py:200] 2021-02-09 16:55:50,619 > ++++++++++++++청광건설++++++++++++++++++++2314/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:50,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:51,003 > 60
[DEBUG|collector_api.py:200] 2021-02-09 16:55:51,267 > ++++++++++++++케어룸의료산업++++++++++++++++++++2315/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:51,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:51,612 > 61
[DEBUG|collector_api.py:200] 2021-02-09 16:55:51,820 > ++++++++++++++탑선++++++++++++++++++++2316/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:51,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:52,219 > 62
[DEBUG|collector_api.py:200] 2021-02-09 16:55:52,483 > ++++++++++++++틸론++++++++++++++++++++2317/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:52,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:52,827 > 63
[DEBUG|collector_api.py:200] 2021-02-09 16:55:53,051 > ++++++++++++++판도라티비++++++++++++++++++++2318/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:53,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:53,435 > 64
[DEBUG|collector_api.py:200] 2021-02-09 16:55:53,686 > ++++++++++++++플럼라인생명과학++++++++++++++++++++2319/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:53,687 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:54,042 > 65
[DEBUG|collector_api.py:200] 2021-02-09 16:55:54,288 > ++++++++++++++한국미라클피플사++++++++++++++++++++2320/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:54,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:54,649 > 66
[DEBUG|collector_api.py:200] 2021-02-09 16:55:54,842 > ++++++++++++++다이오진++++++++++++++++++++2321/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:54,842 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:55,257 > 67
[DEBUG|collector_api.py:200] 2021-02-09 16:55:55,519 > ++++++++++++++더콘텐츠온++++++++++++++++++++2322/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:55,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:55,864 > 68
[DEBUG|collector_api.py:200] 2021-02-09 16:55:56,111 > ++++++++++++++데이드림엔터++++++++++++++++++++2323/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:56,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:56,472 > 69
[DEBUG|collector_api.py:200] 2021-02-09 16:55:56,639 > ++++++++++++++메디젠휴먼케어++++++++++++++++++++2324/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:56,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:57,078 > 70
[DEBUG|collector_api.py:200] 2021-02-09 16:55:57,306 > ++++++++++++++무진메디++++++++++++++++++++2325/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:57,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:57,686 > 71
[DEBUG|collector_api.py:200] 2021-02-09 16:55:57,854 > ++++++++++++++바이옵트로++++++++++++++++++++2326/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:57,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:58,293 > 72
[DEBUG|collector_api.py:200] 2021-02-09 16:55:58,522 > ++++++++++++++비엔디생활건강++++++++++++++++++++2327/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:58,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:58,901 > 73
[DEBUG|collector_api.py:200] 2021-02-09 16:55:59,124 > ++++++++++++++비플라이소프트++++++++++++++++++++2328/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:59,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:55:59,509 > 74
[DEBUG|collector_api.py:200] 2021-02-09 16:55:59,745 > ++++++++++++++수프로++++++++++++++++++++2329/2894
[DEBUG|open_api.py:656] 2021-02-09 16:55:59,746 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:00,116 > 75
[DEBUG|collector_api.py:200] 2021-02-09 16:56:00,344 > ++++++++++++++씨앤에스링크++++++++++++++++++++2330/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:00,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:00,723 > 76
[DEBUG|collector_api.py:200] 2021-02-09 16:56:00,958 > ++++++++++++++씨엔티드림++++++++++++++++++++2331/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:00,958 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:01,330 > 77
[DEBUG|collector_api.py:200] 2021-02-09 16:56:01,479 > ++++++++++++++엄지하우스++++++++++++++++++++2332/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:01,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:01,938 > 78
[DEBUG|collector_api.py:200] 2021-02-09 16:56:02,156 > ++++++++++++++에브리봇++++++++++++++++++++2333/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:02,156 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:02,545 > 79
[DEBUG|collector_api.py:200] 2021-02-09 16:56:02,778 > ++++++++++++++에이스캠퍼++++++++++++++++++++2334/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:02,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:03,151 > 80
[DEBUG|collector_api.py:200] 2021-02-09 16:56:03,321 > ++++++++++++++엔지브이아이++++++++++++++++++++2335/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:03,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:03,759 > 81
[DEBUG|collector_api.py:200] 2021-02-09 16:56:03,987 > ++++++++++++++엘리비젼++++++++++++++++++++2336/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:03,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:04,368 > 82
[DEBUG|collector_api.py:200] 2021-02-09 16:56:04,608 > ++++++++++++++원텍++++++++++++++++++++2337/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:04,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:04,976 > 83
[DEBUG|collector_api.py:200] 2021-02-09 16:56:05,222 > ++++++++++++++이비테크++++++++++++++++++++2338/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:05,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:05,586 > 84
[DEBUG|collector_api.py:200] 2021-02-09 16:56:05,822 > ++++++++++++++진코스텍++++++++++++++++++++2339/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:05,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:06,193 > 85
[DEBUG|collector_api.py:200] 2021-02-09 16:56:06,385 > ++++++++++++++코셋++++++++++++++++++++2340/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:06,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:06,800 > 86
[DEBUG|collector_api.py:200] 2021-02-09 16:56:07,036 > ++++++++++++++한중엔시에스++++++++++++++++++++2341/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:07,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:07,407 > 87
[DEBUG|collector_api.py:200] 2021-02-09 16:56:07,661 > ++++++++++++++휴럼++++++++++++++++++++2342/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:07,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:08,015 > 88
[DEBUG|collector_api.py:200] 2021-02-09 16:56:08,265 > ++++++++++++++네추럴FNP++++++++++++++++++++2343/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:08,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:08,624 > 89
[DEBUG|collector_api.py:200] 2021-02-09 16:56:08,862 > ++++++++++++++다원넥스뷰++++++++++++++++++++2344/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:08,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:09,230 > 90
[DEBUG|collector_api.py:200] 2021-02-09 16:56:09,445 > ++++++++++++++다이노나++++++++++++++++++++2345/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:09,446 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:09,839 > 91
[DEBUG|collector_api.py:200] 2021-02-09 16:56:10,073 > ++++++++++++++데이터스트림즈++++++++++++++++++++2346/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:10,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:10,446 > 92
[DEBUG|collector_api.py:200] 2021-02-09 16:56:10,700 > ++++++++++++++래몽래인++++++++++++++++++++2347/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:10,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:11,054 > 93
[DEBUG|collector_api.py:200] 2021-02-09 16:56:11,309 > ++++++++++++++럭스피아++++++++++++++++++++2348/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:11,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:11,663 > 94
[DEBUG|collector_api.py:200] 2021-02-09 16:56:11,909 > ++++++++++++++바이오코아++++++++++++++++++++2349/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:11,909 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:12,270 > 95
[DEBUG|collector_api.py:200] 2021-02-09 16:56:12,511 > ++++++++++++++볼빅++++++++++++++++++++2350/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:12,512 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:12,877 > 96
[DEBUG|collector_api.py:200] 2021-02-09 16:56:13,118 > ++++++++++++++빅텐츠++++++++++++++++++++2351/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:13,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:13,485 > 97
[DEBUG|collector_api.py:200] 2021-02-09 16:56:13,739 > ++++++++++++++스템랩++++++++++++++++++++2352/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:13,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:14,093 > 98
[DEBUG|collector_api.py:200] 2021-02-09 16:56:14,330 > ++++++++++++++아퓨어스++++++++++++++++++++2353/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:14,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:14,702 > 99
[DEBUG|collector_api.py:200] 2021-02-09 16:56:14,909 > ++++++++++++++엔에스컴퍼니++++++++++++++++++++2354/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:14,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:15,308 > 100
[DEBUG|collector_api.py:200] 2021-02-09 16:56:15,555 > ++++++++++++++위월드++++++++++++++++++++2355/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:15,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:15,915 > 101
[DEBUG|collector_api.py:200] 2021-02-09 16:56:16,156 > ++++++++++++++이십일스토어++++++++++++++++++++2356/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:16,156 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:16,524 > 102
[DEBUG|collector_api.py:200] 2021-02-09 16:56:16,757 > ++++++++++++++테크엔++++++++++++++++++++2357/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:16,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:17,131 > 103
[DEBUG|collector_api.py:200] 2021-02-09 16:56:17,352 > ++++++++++++++툴젠++++++++++++++++++++2358/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:17,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:17,740 > 104
[DEBUG|collector_api.py:200] 2021-02-09 16:56:17,968 > ++++++++++++++티티씨디펜스++++++++++++++++++++2359/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:17,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:18,348 > 105
[DEBUG|collector_api.py:200] 2021-02-09 16:56:18,561 > ++++++++++++++피엔아이컴퍼니++++++++++++++++++++2360/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:18,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:18,957 > 106
[DEBUG|collector_api.py:200] 2021-02-09 16:56:19,186 > ++++++++++++++관악산업++++++++++++++++++++2361/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:19,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:19,566 > 107
[DEBUG|collector_api.py:200] 2021-02-09 16:56:19,845 > ++++++++++++++나라소프트++++++++++++++++++++2362/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:19,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:20,172 > 108
[DEBUG|collector_api.py:200] 2021-02-09 16:56:20,408 > ++++++++++++++단디바이오++++++++++++++++++++2363/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:20,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:20,780 > 109
[DEBUG|collector_api.py:200] 2021-02-09 16:56:20,963 > ++++++++++++++도부마스크++++++++++++++++++++2364/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:20,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:21,387 > 110
[DEBUG|collector_api.py:200] 2021-02-09 16:56:21,619 > ++++++++++++++디피코++++++++++++++++++++2365/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:21,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:21,993 > 111
[DEBUG|collector_api.py:200] 2021-02-09 16:56:22,239 > ++++++++++++++루켄테크놀러지스++++++++++++++++++++2366/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:22,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:22,601 > 112
[DEBUG|collector_api.py:200] 2021-02-09 16:56:22,825 > ++++++++++++++미애부++++++++++++++++++++2367/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:22,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:23,208 > 113
[DEBUG|collector_api.py:200] 2021-02-09 16:56:23,431 > ++++++++++++++셀젠텍++++++++++++++++++++2368/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:23,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:23,816 > 114
[DEBUG|collector_api.py:200] 2021-02-09 16:56:24,046 > ++++++++++++++썬테크++++++++++++++++++++2369/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:24,046 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:24,424 > 115
[DEBUG|collector_api.py:200] 2021-02-09 16:56:24,665 > ++++++++++++++씨이랩++++++++++++++++++++2370/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:24,666 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:25,031 > 116
[DEBUG|collector_api.py:200] 2021-02-09 16:56:25,283 > ++++++++++++++아이케이세미콘++++++++++++++++++++2371/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:25,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:25,639 > 117
[DEBUG|collector_api.py:200] 2021-02-09 16:56:25,860 > ++++++++++++++이노진++++++++++++++++++++2372/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:25,860 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:26,246 > 118
[DEBUG|collector_api.py:200] 2021-02-09 16:56:26,415 > ++++++++++++++인카금융서비스++++++++++++++++++++2373/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:26,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:26,852 > 119
[DEBUG|collector_api.py:200] 2021-02-09 16:56:27,092 > ++++++++++++++지앤이헬스케어++++++++++++++++++++2374/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:27,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:27,460 > 120
[DEBUG|collector_api.py:200] 2021-02-09 16:56:27,686 > ++++++++++++++지오씨++++++++++++++++++++2375/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:27,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:28,068 > 121
[DEBUG|collector_api.py:200] 2021-02-09 16:56:28,302 > ++++++++++++++파인이엠텍++++++++++++++++++++2376/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:28,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:28,677 > 122
[DEBUG|collector_api.py:200] 2021-02-09 16:56:28,904 > ++++++++++++++펨토바이오메드++++++++++++++++++++2377/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:28,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:29,284 > 123
[DEBUG|collector_api.py:200] 2021-02-09 16:56:29,483 > ++++++++++++++KC산업++++++++++++++++++++2378/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:29,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:29,892 > 124
[DEBUG|collector_api.py:200] 2021-02-09 16:56:30,128 > ++++++++++++++SGA클라우드서비스++++++++++++++++++++2379/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:30,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:30,499 > 125
[DEBUG|collector_api.py:200] 2021-02-09 16:56:30,741 > ++++++++++++++노드메이슨++++++++++++++++++++2380/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:30,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:31,106 > 126
[DEBUG|collector_api.py:200] 2021-02-09 16:56:31,322 > ++++++++++++++명진홀딩스++++++++++++++++++++2381/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:31,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:31,715 > 127
[DEBUG|collector_api.py:200] 2021-02-09 16:56:31,946 > ++++++++++++++바이오인프라생명과학++++++++++++++++++++2382/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:31,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:32,322 > 128
[DEBUG|collector_api.py:200] 2021-02-09 16:56:32,488 > ++++++++++++++뿌리깊은나무들++++++++++++++++++++2383/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:32,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:32,929 > 129
[DEBUG|collector_api.py:200] 2021-02-09 16:56:33,170 > ++++++++++++++시그넷이브이++++++++++++++++++++2384/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:33,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:33,536 > 130
[DEBUG|collector_api.py:200] 2021-02-09 16:56:33,783 > ++++++++++++++씨앗++++++++++++++++++++2385/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:33,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:34,144 > 131
[DEBUG|collector_api.py:200] 2021-02-09 16:56:34,374 > ++++++++++++++에스제이켐++++++++++++++++++++2386/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:34,374 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:34,752 > 132
[DEBUG|collector_api.py:200] 2021-02-09 16:56:34,981 > ++++++++++++++에이비온++++++++++++++++++++2387/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:34,982 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:35,360 > 133
[DEBUG|collector_api.py:200] 2021-02-09 16:56:35,642 > ++++++++++++++에이원알폼++++++++++++++++++++2388/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:35,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:35,969 > 134
[DEBUG|collector_api.py:200] 2021-02-09 16:56:36,189 > ++++++++++++++오션스톤++++++++++++++++++++2389/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:36,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:36,576 > 135
[DEBUG|collector_api.py:200] 2021-02-09 16:56:36,759 > ++++++++++++++이도바이오++++++++++++++++++++2390/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:36,759 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:37,183 > 136
[DEBUG|collector_api.py:200] 2021-02-09 16:56:37,370 > ++++++++++++++제노텍++++++++++++++++++++2391/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:37,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:37,790 > 137
[DEBUG|collector_api.py:200] 2021-02-09 16:56:38,035 > ++++++++++++++파마리서치바이오++++++++++++++++++++2392/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:38,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:38,397 > 138
[DEBUG|collector_api.py:200] 2021-02-09 16:56:38,632 > ++++++++++++++폭스소프트++++++++++++++++++++2393/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:38,632 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:39,006 > 139
[DEBUG|collector_api.py:200] 2021-02-09 16:56:39,176 > ++++++++++++++피노텍++++++++++++++++++++2394/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:39,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:39,613 > 140
[DEBUG|collector_api.py:200] 2021-02-09 16:56:39,871 > ++++++++++++++피엔에이치테크++++++++++++++++++++2395/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:39,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:40,221 > 141
[DEBUG|collector_api.py:200] 2021-02-09 16:56:40,450 > ++++++++++++++나우코스++++++++++++++++++++2396/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:40,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:40,828 > 142
[DEBUG|collector_api.py:200] 2021-02-09 16:56:40,991 > ++++++++++++++대주이엔티++++++++++++++++++++2397/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:40,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:41,435 > 143
[DEBUG|collector_api.py:200] 2021-02-09 16:56:41,663 > ++++++++++++++듀켐바이오++++++++++++++++++++2398/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:41,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:42,043 > 144
[DEBUG|collector_api.py:200] 2021-02-09 16:56:42,291 > ++++++++++++++라온테크++++++++++++++++++++2399/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:42,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:42,650 > 145
[DEBUG|collector_api.py:200] 2021-02-09 16:56:42,888 > ++++++++++++++메디쎄이++++++++++++++++++++2400/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:42,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:43,258 > 146
[DEBUG|collector_api.py:200] 2021-02-09 16:56:43,499 > ++++++++++++++미래엔에듀파트너++++++++++++++++++++2401/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:43,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:43,864 > 147
[DEBUG|collector_api.py:200] 2021-02-09 16:56:44,087 > ++++++++++++++안지오랩++++++++++++++++++++2402/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:44,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:44,472 > 148
[DEBUG|collector_api.py:200] 2021-02-09 16:56:44,720 > ++++++++++++++에스앤디++++++++++++++++++++2403/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:44,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:45,079 > 149
[DEBUG|collector_api.py:200] 2021-02-09 16:56:45,330 > ++++++++++++++에스케이씨에스++++++++++++++++++++2404/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:45,331 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:45,688 > 150
[DEBUG|collector_api.py:200] 2021-02-09 16:56:45,922 > ++++++++++++++엠앤씨생명과학++++++++++++++++++++2405/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:45,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:46,296 > 151
[DEBUG|collector_api.py:200] 2021-02-09 16:56:46,525 > ++++++++++++++원포유++++++++++++++++++++2406/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:46,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:46,903 > 152
[DEBUG|collector_api.py:200] 2021-02-09 16:56:47,059 > ++++++++++++++유비온++++++++++++++++++++2407/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:47,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:47,511 > 153
[DEBUG|collector_api.py:200] 2021-02-09 16:56:47,752 > ++++++++++++++유엑스엔++++++++++++++++++++2408/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:47,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:48,118 > 154
[DEBUG|collector_api.py:200] 2021-02-09 16:56:48,334 > ++++++++++++++이엠티++++++++++++++++++++2409/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:48,334 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:48,727 > 155
[DEBUG|collector_api.py:200] 2021-02-09 16:56:48,963 > ++++++++++++++큐엠씨++++++++++++++++++++2410/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:48,964 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:49,336 > 156
[DEBUG|collector_api.py:200] 2021-02-09 16:56:49,576 > ++++++++++++++크로넥스++++++++++++++++++++2411/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:49,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:49,944 > 157
[DEBUG|collector_api.py:200] 2021-02-09 16:56:50,174 > ++++++++++++++티케이씨++++++++++++++++++++2412/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:50,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:50,552 > 158
[DEBUG|collector_api.py:200] 2021-02-09 16:56:50,792 > ++++++++++++++골프존데카++++++++++++++++++++2413/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:50,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:51,159 > 159
[DEBUG|collector_api.py:200] 2021-02-09 16:56:51,388 > ++++++++++++++에스엔피제네틱스++++++++++++++++++++2414/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:51,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:51,767 > 160
[DEBUG|collector_api.py:200] 2021-02-09 16:56:52,037 > ++++++++++++++에스엠비나++++++++++++++++++++2415/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:52,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:52,374 > 161
[DEBUG|collector_api.py:200] 2021-02-09 16:56:52,606 > ++++++++++++++에이치엔에스하이텍++++++++++++++++++++2416/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:52,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:52,982 > 162
[DEBUG|collector_api.py:200] 2021-02-09 16:56:53,208 > ++++++++++++++옐로페이++++++++++++++++++++2417/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:53,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:53,589 > 163
[DEBUG|collector_api.py:200] 2021-02-09 16:56:53,817 > ++++++++++++++이앤에치++++++++++++++++++++2418/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:53,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:54,196 > 164
[DEBUG|collector_api.py:200] 2021-02-09 16:56:54,383 > ++++++++++++++태양기계++++++++++++++++++++2419/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:54,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:54,803 > 165
[DEBUG|collector_api.py:200] 2021-02-09 16:56:55,035 > ++++++++++++++파워풀엑스++++++++++++++++++++2420/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:55,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:55,410 > 166
[DEBUG|collector_api.py:200] 2021-02-09 16:56:55,656 > ++++++++++++++프로테옴텍++++++++++++++++++++2421/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:55,656 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:56,018 > 167
[DEBUG|collector_api.py:200] 2021-02-09 16:56:56,228 > ++++++++++++++KODEX 200++++++++++++++++++++2422/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:56,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:56,625 > 168
[DEBUG|collector_api.py:200] 2021-02-09 16:56:56,882 > ++++++++++++++KOSEF 200++++++++++++++++++++2423/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:56,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:57,234 > 169
[DEBUG|collector_api.py:200] 2021-02-09 16:56:57,505 > ++++++++++++++KODEX 반도체++++++++++++++++++++2424/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:57,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:57,842 > 170
[DEBUG|collector_api.py:200] 2021-02-09 16:56:58,087 > ++++++++++++++KODEX 은행++++++++++++++++++++2425/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:58,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:58,450 > 171
[DEBUG|collector_api.py:200] 2021-02-09 16:56:58,689 > ++++++++++++++KODEX 자동차++++++++++++++++++++2426/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:58,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:59,058 > 172
[DEBUG|collector_api.py:200] 2021-02-09 16:56:59,282 > ++++++++++++++TIGER 은행++++++++++++++++++++2427/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:59,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:56:59,666 > 173
[DEBUG|collector_api.py:200] 2021-02-09 16:56:59,922 > ++++++++++++++TIGER 반도체++++++++++++++++++++2428/2894
[DEBUG|open_api.py:656] 2021-02-09 16:56:59,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:00,273 > 174
[DEBUG|collector_api.py:200] 2021-02-09 16:57:00,499 > ++++++++++++++TIGER 방송통신++++++++++++++++++++2429/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:00,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:00,880 > 175
[DEBUG|collector_api.py:200] 2021-02-09 16:57:01,119 > ++++++++++++++KODEX China H++++++++++++++++++++2430/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:01,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:01,488 > 176
[DEBUG|collector_api.py:200] 2021-02-09 16:57:01,729 > ++++++++++++++KOSEF KRX100++++++++++++++++++++2431/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:01,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:02,094 > 177
[DEBUG|collector_api.py:200] 2021-02-09 16:57:02,339 > ++++++++++++++KODEX 일본TOPIX100++++++++++++++++++++2432/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:02,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:02,703 > 178
[DEBUG|collector_api.py:200] 2021-02-09 16:57:02,938 > ++++++++++++++TIGER 200++++++++++++++++++++2433/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:02,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:03,311 > 179
[DEBUG|collector_api.py:200] 2021-02-09 16:57:03,558 > ++++++++++++++KODEX 삼성그룹++++++++++++++++++++2434/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:03,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:03,919 > 180
[DEBUG|collector_api.py:200] 2021-02-09 16:57:04,173 > ++++++++++++++KODEX 기계장비++++++++++++++++++++2435/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:04,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:04,527 > 181
[DEBUG|collector_api.py:200] 2021-02-09 16:57:04,770 > ++++++++++++++KODEX 증권++++++++++++++++++++2436/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:04,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:05,134 > 182
[DEBUG|collector_api.py:200] 2021-02-09 16:57:05,377 > ++++++++++++++KOSEF 블루칩++++++++++++++++++++2437/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:05,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:05,740 > 183
[DEBUG|collector_api.py:200] 2021-02-09 16:57:05,998 > ++++++++++++++KOSEF 고배당++++++++++++++++++++2438/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:05,999 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:06,349 > 184
[DEBUG|collector_api.py:200] 2021-02-09 16:57:06,591 > ++++++++++++++TIGER 라틴35++++++++++++++++++++2439/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:06,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:06,957 > 185
[DEBUG|collector_api.py:200] 2021-02-09 16:57:07,208 > ++++++++++++++KINDEX 200++++++++++++++++++++2440/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:07,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:07,565 > 186
[DEBUG|collector_api.py:200] 2021-02-09 16:57:07,851 > ++++++++++++++KBSTAR 5대그룹주++++++++++++++++++++2441/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:07,851 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:08,173 > 187
[DEBUG|collector_api.py:200] 2021-02-09 16:57:08,415 > ++++++++++++++KINDEX 삼성그룹섹터가중++++++++++++++++++++2442/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:08,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:08,780 > 188
[DEBUG|collector_api.py:200] 2021-02-09 16:57:09,014 > ++++++++++++++TREX 200++++++++++++++++++++2443/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:09,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:09,390 > 189
[DEBUG|collector_api.py:200] 2021-02-09 16:57:09,638 > ++++++++++++++KBSTAR 국고채3년++++++++++++++++++++2444/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:09,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:09,998 > 190
[DEBUG|collector_api.py:200] 2021-02-09 16:57:10,237 > ++++++++++++++KODEX 국고채3년++++++++++++++++++++2445/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:10,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:10,606 > 191
[DEBUG|collector_api.py:200] 2021-02-09 16:57:10,857 > ++++++++++++++KINDEX 국고채3년++++++++++++++++++++2446/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:10,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:11,214 > 192
[DEBUG|collector_api.py:200] 2021-02-09 16:57:11,454 > ++++++++++++++KOSEF 국고채3년++++++++++++++++++++2447/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:11,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:11,821 > 193
[DEBUG|collector_api.py:200] 2021-02-09 16:57:12,053 > ++++++++++++++KODEX 인버스++++++++++++++++++++2448/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:12,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:12,428 > 194
[DEBUG|collector_api.py:200] 2021-02-09 16:57:12,673 > ++++++++++++++TIGER 국채3년++++++++++++++++++++2449/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:12,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:13,034 > 195
[DEBUG|collector_api.py:200] 2021-02-09 16:57:13,271 > ++++++++++++++KODEX 에너지화학++++++++++++++++++++2450/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:13,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:13,641 > 196
[DEBUG|collector_api.py:200] 2021-02-09 16:57:13,901 > ++++++++++++++KODEX 철강++++++++++++++++++++2451/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:13,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:14,249 > 197
[DEBUG|collector_api.py:200] 2021-02-09 16:57:14,504 > ++++++++++++++TIGER 차이나항셍25++++++++++++++++++++2452/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:14,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:14,857 > 198
[DEBUG|collector_api.py:200] 2021-02-09 16:57:15,085 > ++++++++++++++KODEX 건설++++++++++++++++++++2453/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:15,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:15,465 > 199
[DEBUG|collector_api.py:200] 2021-02-09 16:57:15,705 > ++++++++++++++ARIRANG 코스피50++++++++++++++++++++2454/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:15,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:16,072 > 200
[DEBUG|collector_api.py:200] 2021-02-09 16:57:16,322 > ++++++++++++++KOSEF 통안채1년++++++++++++++++++++2455/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:16,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:16,680 > 201
[DEBUG|collector_api.py:200] 2021-02-09 16:57:16,911 > ++++++++++++++KODEX 레버리지++++++++++++++++++++2456/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:16,912 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:17,287 > 202
[DEBUG|collector_api.py:200] 2021-02-09 16:57:17,532 > ++++++++++++++TIGER 인버스++++++++++++++++++++2457/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:17,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:17,894 > 203
[DEBUG|collector_api.py:200] 2021-02-09 16:57:18,136 > ++++++++++++++TIGER 레버리지++++++++++++++++++++2458/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:18,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:18,501 > 204
[DEBUG|collector_api.py:200] 2021-02-09 16:57:18,742 > ++++++++++++++TIGER 원유선물Enhanced(H)++++++++++++++++++++2459/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:18,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:19,109 > 205
[DEBUG|collector_api.py:200] 2021-02-09 16:57:19,344 > ++++++++++++++KOSEF 단기자금++++++++++++++++++++2460/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:19,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:19,717 > 206
[DEBUG|collector_api.py:200] 2021-02-09 16:57:19,965 > ++++++++++++++KINDEX 삼성그룹동일가중++++++++++++++++++++2461/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:19,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:20,324 > 207
[DEBUG|collector_api.py:200] 2021-02-09 16:57:20,571 > ++++++++++++++KODEX 골드선물(H)++++++++++++++++++++2462/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:20,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:20,932 > 208
[DEBUG|collector_api.py:200] 2021-02-09 16:57:21,183 > ++++++++++++++TIGER 미국나스닥100++++++++++++++++++++2463/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:21,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:21,541 > 209
[DEBUG|collector_api.py:200] 2021-02-09 16:57:21,795 > ++++++++++++++KBSTAR 중기우량회사채++++++++++++++++++++2464/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:21,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:22,148 > 210
[DEBUG|collector_api.py:200] 2021-02-09 16:57:22,381 > ++++++++++++++TIGER 농산물선물Enhanced(H)++++++++++++++++++++2465/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:22,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:22,757 > 211
[DEBUG|collector_api.py:200] 2021-02-09 16:57:22,989 > ++++++++++++++마이다스 200커버드콜5%OTM++++++++++++++++++++2466/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:22,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:23,364 > 212
[DEBUG|collector_api.py:200] 2021-02-09 16:57:23,629 > ++++++++++++++KOSEF 미국달러선물++++++++++++++++++++2467/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:23,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:23,972 > 213
[DEBUG|collector_api.py:200] 2021-02-09 16:57:24,243 > ++++++++++++++TIGER 삼성그룹펀더멘털++++++++++++++++++++2468/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:24,243 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:24,580 > 214
[DEBUG|collector_api.py:200] 2021-02-09 16:57:24,825 > ++++++++++++++TIGER LG그룹+펀더멘털++++++++++++++++++++2469/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:24,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:25,186 > 215
[DEBUG|collector_api.py:200] 2021-02-09 16:57:25,410 > ++++++++++++++TIGER 현대차그룹+펀더멘털++++++++++++++++++++2470/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:25,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:25,794 > 216
[DEBUG|collector_api.py:200] 2021-02-09 16:57:26,030 > ++++++++++++++KODEX 구리선물(H)++++++++++++++++++++2471/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:26,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:26,402 > 217
[DEBUG|collector_api.py:200] 2021-02-09 16:57:26,651 > ++++++++++++++KODEX 콩선물(H)++++++++++++++++++++2472/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:26,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:27,009 > 218
[DEBUG|collector_api.py:200] 2021-02-09 16:57:27,241 > ++++++++++++++TIGER 200 건설++++++++++++++++++++2473/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:27,241 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:27,617 > 219
[DEBUG|collector_api.py:200] 2021-02-09 16:57:27,852 > ++++++++++++++TIGER 200 중공업++++++++++++++++++++2474/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:27,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:28,225 > 220
[DEBUG|collector_api.py:200] 2021-02-09 16:57:28,468 > ++++++++++++++TIGER 200 철강소재++++++++++++++++++++2475/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:28,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:28,833 > 221
[DEBUG|collector_api.py:200] 2021-02-09 16:57:29,075 > ++++++++++++++TIGER 200 에너지화학++++++++++++++++++++2476/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:29,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:29,441 > 222
[DEBUG|collector_api.py:200] 2021-02-09 16:57:29,685 > ++++++++++++++TIGER 200 IT++++++++++++++++++++2477/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:29,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:30,047 > 223
[DEBUG|collector_api.py:200] 2021-02-09 16:57:30,281 > ++++++++++++++TIGER 200 금융++++++++++++++++++++2478/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:30,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:30,655 > 224
[DEBUG|collector_api.py:200] 2021-02-09 16:57:30,888 > ++++++++++++++TIGER 경기방어++++++++++++++++++++2479/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:30,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:31,262 > 225
[DEBUG|collector_api.py:200] 2021-02-09 16:57:31,501 > ++++++++++++++TIGER 200 경기소비재++++++++++++++++++++2480/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:31,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:31,870 > 226
[DEBUG|collector_api.py:200] 2021-02-09 16:57:32,116 > ++++++++++++++TIGER 금속선물(H)++++++++++++++++++++2481/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:32,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:32,477 > 227
[DEBUG|collector_api.py:200] 2021-02-09 16:57:32,727 > ++++++++++++++TIGER 금은선물(H)++++++++++++++++++++2482/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:32,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:33,085 > 228
[DEBUG|collector_api.py:200] 2021-02-09 16:57:33,321 > ++++++++++++++KOSEF 미국달러선물인버스++++++++++++++++++++2483/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:33,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:33,692 > 229
[DEBUG|collector_api.py:200] 2021-02-09 16:57:33,916 > ++++++++++++++KBSTAR 수출주++++++++++++++++++++2484/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:33,916 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:34,299 > 230
[DEBUG|collector_api.py:200] 2021-02-09 16:57:34,531 > ++++++++++++++KBSTAR 우량업종++++++++++++++++++++2485/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:34,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:34,907 > 231
[DEBUG|collector_api.py:200] 2021-02-09 16:57:35,137 > ++++++++++++++KODEX 보험++++++++++++++++++++2486/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:35,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:35,514 > 232
[DEBUG|collector_api.py:200] 2021-02-09 16:57:35,744 > ++++++++++++++KODEX 운송++++++++++++++++++++2487/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:35,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:36,121 > 233
[DEBUG|collector_api.py:200] 2021-02-09 16:57:36,346 > ++++++++++++++파워 코스피100++++++++++++++++++++2488/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:36,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:36,729 > 234
[DEBUG|collector_api.py:200] 2021-02-09 16:57:36,960 > ++++++++++++++KINDEX 밸류대형++++++++++++++++++++2489/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:36,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:37,336 > 235
[DEBUG|collector_api.py:200] 2021-02-09 16:57:37,583 > ++++++++++++++TIGER 미국S&P500선물(H)++++++++++++++++++++2490/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:37,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:37,942 > 236
[DEBUG|collector_api.py:200] 2021-02-09 16:57:38,187 > ++++++++++++++TIGER 헬스케어++++++++++++++++++++2491/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:38,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:38,549 > 237
[DEBUG|collector_api.py:200] 2021-02-09 16:57:38,791 > ++++++++++++++KODEX 은선물(H)++++++++++++++++++++2492/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:38,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:39,156 > 238
[DEBUG|collector_api.py:200] 2021-02-09 16:57:39,392 > ++++++++++++++KINDEX 인버스++++++++++++++++++++2493/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:39,392 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:39,765 > 239
[DEBUG|collector_api.py:200] 2021-02-09 16:57:40,030 > ++++++++++++++TREX 펀더멘탈 200++++++++++++++++++++2494/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:40,030 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:40,373 > 240
[DEBUG|collector_api.py:200] 2021-02-09 16:57:40,630 > ++++++++++++++TIGER 모멘텀++++++++++++++++++++2495/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:40,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:40,983 > 241
[DEBUG|collector_api.py:200] 2021-02-09 16:57:41,217 > ++++++++++++++KBSTAR 200++++++++++++++++++++2496/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:41,218 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:41,590 > 242
[DEBUG|collector_api.py:200] 2021-02-09 16:57:41,845 > ++++++++++++++KOSEF 국고채10년++++++++++++++++++++2497/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:41,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:42,197 > 243
[DEBUG|collector_api.py:200] 2021-02-09 16:57:42,432 > ++++++++++++++TIGER 중국소비테마++++++++++++++++++++2498/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:42,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:42,804 > 244
[DEBUG|collector_api.py:200] 2021-02-09 16:57:43,048 > ++++++++++++++ARIRANG 200++++++++++++++++++++2499/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:43,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:43,411 > 245
[DEBUG|collector_api.py:200] 2021-02-09 16:57:43,667 > ++++++++++++++KOSEF 200 선물++++++++++++++++++++2500/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:43,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:44,019 > 246
[DEBUG|collector_api.py:200] 2021-02-09 16:57:44,262 > ++++++++++++++KODEX 국채선물10년++++++++++++++++++++2501/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:44,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:44,625 > 247
[DEBUG|collector_api.py:200] 2021-02-09 16:57:44,870 > ++++++++++++++KINDEX 레버리지++++++++++++++++++++2502/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:44,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:45,233 > 248
[DEBUG|collector_api.py:200] 2021-02-09 16:57:45,491 > ++++++++++++++파워 200++++++++++++++++++++2503/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:45,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:45,844 > 249
[DEBUG|collector_api.py:200] 2021-02-09 16:57:46,082 > ++++++++++++++KODEX 단기채권++++++++++++++++++++2504/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:46,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:46,451 > 250
[DEBUG|collector_api.py:200] 2021-02-09 16:57:46,692 > ++++++++++++++KOSEF 코스피100++++++++++++++++++++2505/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:46,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:47,058 > 251
[DEBUG|collector_api.py:200] 2021-02-09 16:57:47,301 > ++++++++++++++KODEX MSCI Korea++++++++++++++++++++2506/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:47,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:47,664 > 252
[DEBUG|collector_api.py:200] 2021-02-09 16:57:47,904 > ++++++++++++++TIGER 단기통안채++++++++++++++++++++2507/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:47,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:48,272 > 253
[DEBUG|collector_api.py:200] 2021-02-09 16:57:48,503 > ++++++++++++++TIGER 소프트웨어++++++++++++++++++++2508/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:48,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:48,879 > 254
[DEBUG|collector_api.py:200] 2021-02-09 16:57:49,109 > ++++++++++++++TIGER 증권++++++++++++++++++++2509/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:49,110 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:49,488 > 255
[DEBUG|collector_api.py:200] 2021-02-09 16:57:49,757 > ++++++++++++++마이티 코스피100++++++++++++++++++++2510/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:49,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:50,096 > 256
[DEBUG|collector_api.py:200] 2021-02-09 16:57:50,333 > ++++++++++++++TIGER 구리실물++++++++++++++++++++2511/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:50,334 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:50,704 > 257
[DEBUG|collector_api.py:200] 2021-02-09 16:57:50,935 > ++++++++++++++ARIRANG 고배당주++++++++++++++++++++2512/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:50,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:51,312 > 258
[DEBUG|collector_api.py:200] 2021-02-09 16:57:51,543 > ++++++++++++++TIGER 200커버드콜5%OTM++++++++++++++++++++2513/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:51,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:51,920 > 259
[DEBUG|collector_api.py:200] 2021-02-09 16:57:52,149 > ++++++++++++++KOSEF 국고채10년레버리지++++++++++++++++++++2514/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:52,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:52,528 > 260
[DEBUG|collector_api.py:200] 2021-02-09 16:57:52,764 > ++++++++++++++KTOP 코스피50++++++++++++++++++++2515/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:52,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:53,136 > 261
[DEBUG|collector_api.py:200] 2021-02-09 16:57:53,365 > ++++++++++++++KINDEX 중국본토CSI300++++++++++++++++++++2516/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:53,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:53,744 > 262
[DEBUG|collector_api.py:200] 2021-02-09 16:57:53,974 > ++++++++++++++KODEX 중국본토 A50++++++++++++++++++++2517/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:53,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:54,352 > 263
[DEBUG|collector_api.py:200] 2021-02-09 16:57:54,598 > ++++++++++++++TIGER 베타플러스++++++++++++++++++++2518/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:54,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:54,958 > 264
[DEBUG|collector_api.py:200] 2021-02-09 16:57:55,184 > ++++++++++++++TIGER 로우볼++++++++++++++++++++2519/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:55,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:55,568 > 265
[DEBUG|collector_api.py:200] 2021-02-09 16:57:55,815 > ++++++++++++++KBSTAR 중국본토대형주CSI100++++++++++++++++++++2520/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:55,815 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:56,174 > 266
[DEBUG|collector_api.py:200] 2021-02-09 16:57:56,442 > ++++++++++++++파워 중기국고채++++++++++++++++++++2521/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:56,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:56,782 > 267
[DEBUG|collector_api.py:200] 2021-02-09 16:57:57,017 > ++++++++++++++KODEX 국채선물10년인버스++++++++++++++++++++2522/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:57,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:57,389 > 268
[DEBUG|collector_api.py:200] 2021-02-09 16:57:57,627 > ++++++++++++++KINDEX 미국다우존스리츠(합성 H)++++++++++++++++++++2523/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:57,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:57,996 > 269
[DEBUG|collector_api.py:200] 2021-02-09 16:57:58,247 > ++++++++++++++TIGER 미국MSCI리츠(합성 H)++++++++++++++++++++2524/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:58,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:58,604 > 270
[DEBUG|collector_api.py:200] 2021-02-09 16:57:58,855 > ++++++++++++++TIGER 단기선진하이일드(합성 H)++++++++++++++++++++2525/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:58,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:59,212 > 271
[DEBUG|collector_api.py:200] 2021-02-09 16:57:59,453 > ++++++++++++++KBSTAR 채권혼합++++++++++++++++++++2526/2894
[DEBUG|open_api.py:656] 2021-02-09 16:57:59,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:57:59,820 > 272
[DEBUG|collector_api.py:200] 2021-02-09 16:58:00,060 > ++++++++++++++KBSTAR 주식혼합++++++++++++++++++++2527/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:00,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:00,426 > 273
[DEBUG|collector_api.py:200] 2021-02-09 16:58:00,670 > ++++++++++++++KODEX 미국S&P바이오(합성)++++++++++++++++++++2528/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:00,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:01,033 > 274
[DEBUG|collector_api.py:200] 2021-02-09 16:58:01,274 > ++++++++++++++ARIRANG 글로벌MSCI(합성 H)++++++++++++++++++++2529/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:01,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:01,642 > 275
[DEBUG|collector_api.py:200] 2021-02-09 16:58:01,883 > ++++++++++++++KINDEX 단기통안채++++++++++++++++++++2530/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:01,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:02,248 > 276
[DEBUG|collector_api.py:200] 2021-02-09 16:58:02,488 > ++++++++++++++TIGER 차이나CSI300++++++++++++++++++++2531/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:02,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:02,854 > 277
[DEBUG|collector_api.py:200] 2021-02-09 16:58:03,086 > ++++++++++++++파워 고배당저변동성++++++++++++++++++++2532/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:03,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:03,461 > 278
[DEBUG|collector_api.py:200] 2021-02-09 16:58:03,702 > ++++++++++++++TIGER 일본TOPIX(합성 H)++++++++++++++++++++2533/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:03,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:04,068 > 279
[DEBUG|collector_api.py:200] 2021-02-09 16:58:04,297 > ++++++++++++++TIGER 유로스탁스50(합성 H)++++++++++++++++++++2534/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:04,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:04,676 > 280
[DEBUG|collector_api.py:200] 2021-02-09 16:58:04,930 > ++++++++++++++ARIRANG 선진국MSCI(합성 H)++++++++++++++++++++2535/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:04,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:05,284 > 281
[DEBUG|collector_api.py:200] 2021-02-09 16:58:05,518 > ++++++++++++++ARIRANG 신흥국MSCI(합성 H)++++++++++++++++++++2536/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:05,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:05,891 > 282
[DEBUG|collector_api.py:200] 2021-02-09 16:58:06,126 > ++++++++++++++KINDEX 일본TOPIX레버리지(H)++++++++++++++++++++2537/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:06,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:06,500 > 283
[DEBUG|collector_api.py:200] 2021-02-09 16:58:06,756 > ++++++++++++++KBSTAR 단기통안채++++++++++++++++++++2538/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:06,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:07,108 > 284
[DEBUG|collector_api.py:200] 2021-02-09 16:58:07,344 > ++++++++++++++KODEX 미국S&P산업재(합성)++++++++++++++++++++2539/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:07,345 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:07,717 > 285
[DEBUG|collector_api.py:200] 2021-02-09 16:58:07,947 > ++++++++++++++KOSEF 인도Nifty50(합성)++++++++++++++++++++2540/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:07,947 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:08,324 > 286
[DEBUG|collector_api.py:200] 2021-02-09 16:58:08,579 > ++++++++++++++TIGER 미국나스닥바이오++++++++++++++++++++2541/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:08,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:08,932 > 287
[DEBUG|collector_api.py:200] 2021-02-09 16:58:09,185 > ++++++++++++++KODEX China H 레버리지(H)++++++++++++++++++++2542/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:09,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:09,540 > 288
[DEBUG|collector_api.py:200] 2021-02-09 16:58:09,759 > ++++++++++++++TIGER 차이나CSI300레버리지(합성)++++++++++++++++++++2543/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:09,759 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:10,148 > 289
[DEBUG|collector_api.py:200] 2021-02-09 16:58:10,377 > ++++++++++++++KINDEX 일본TOPIX인버스(합성 H)++++++++++++++++++++2544/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:10,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:10,756 > 290
[DEBUG|collector_api.py:200] 2021-02-09 16:58:10,973 > ++++++++++++++SMART 선진국MSCI World(합성 H)++++++++++++++++++++2545/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:10,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:11,365 > 291
[DEBUG|collector_api.py:200] 2021-02-09 16:58:11,594 > ++++++++++++++TIGER 코스피고배당++++++++++++++++++++2546/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:11,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:11,973 > 292
[DEBUG|collector_api.py:200] 2021-02-09 16:58:12,245 > ++++++++++++++KINDEX 배당성장++++++++++++++++++++2547/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:12,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:12,582 > 293
[DEBUG|collector_api.py:200] 2021-02-09 16:58:12,807 > ++++++++++++++TIGER 배당성장++++++++++++++++++++2548/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:12,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:13,190 > 294
[DEBUG|collector_api.py:200] 2021-02-09 16:58:13,423 > ++++++++++++++KODEX 배당성장++++++++++++++++++++2549/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:13,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:13,798 > 295
[DEBUG|collector_api.py:200] 2021-02-09 16:58:14,044 > ++++++++++++++KODEX 삼성그룹밸류++++++++++++++++++++2550/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:14,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:14,405 > 296
[DEBUG|collector_api.py:200] 2021-02-09 16:58:14,648 > ++++++++++++++ARIRANG 미국다우존스고배당주(합성 H)++++++++++++++++++++2551/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:14,648 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:15,012 > 297
[DEBUG|collector_api.py:200] 2021-02-09 16:58:15,264 > ++++++++++++++KODEX 단기채권PLUS++++++++++++++++++++2552/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:15,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:15,620 > 298
[DEBUG|collector_api.py:200] 2021-02-09 16:58:15,876 > ++++++++++++++흥국 S&P코리아로우볼++++++++++++++++++++2553/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:15,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:16,228 > 299
[DEBUG|collector_api.py:200] 2021-02-09 16:58:16,461 > ++++++++++++++TIGER 원유선물인버스(H)++++++++++++++++++++2554/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:16,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:16,836 > 300
[DEBUG|collector_api.py:200] 2021-02-09 16:58:17,068 > ++++++++++++++TIGER 차이나CSI300인버스(합성)++++++++++++++++++++2555/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:17,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:17,443 > 301
[DEBUG|collector_api.py:200] 2021-02-09 16:58:17,695 > ++++++++++++++TIGER 가격조정++++++++++++++++++++2556/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:17,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:18,051 > 302
[DEBUG|collector_api.py:200] 2021-02-09 16:58:18,304 > ++++++++++++++KODEX 미국S&P에너지(합성)++++++++++++++++++++2557/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:18,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:18,659 > 303
[DEBUG|collector_api.py:200] 2021-02-09 16:58:18,898 > ++++++++++++++KBSTAR 미국S&P원유생산기업(합성 H)++++++++++++++++++++2558/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:18,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:19,268 > 304
[DEBUG|collector_api.py:200] 2021-02-09 16:58:19,511 > ++++++++++++++KODEX 미국S&P500선물(H)++++++++++++++++++++2559/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:19,512 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:19,875 > 305
[DEBUG|collector_api.py:200] 2021-02-09 16:58:20,119 > ++++++++++++++KINDEX 중국본토CSI300레버리지(합성)++++++++++++++++++++2560/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:20,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:20,482 > 306
[DEBUG|collector_api.py:200] 2021-02-09 16:58:20,724 > ++++++++++++++SMART 중국본토 중소형 CSI500(합성 H)++++++++++++++++++++2561/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:20,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:21,089 > 307
[DEBUG|collector_api.py:200] 2021-02-09 16:58:21,323 > ++++++++++++++KODEX 200가치저변동++++++++++++++++++++2562/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:21,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:21,697 > 308
[DEBUG|collector_api.py:200] 2021-02-09 16:58:21,938 > ++++++++++++++TIGER 미국S&P500선물인버스(H)++++++++++++++++++++2563/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:21,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:22,304 > 309
[DEBUG|collector_api.py:200] 2021-02-09 16:58:22,551 > ++++++++++++++TIGER 미국S&P500레버리지(합성 H)++++++++++++++++++++2564/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:22,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:22,911 > 310
[DEBUG|collector_api.py:200] 2021-02-09 16:58:23,141 > ++++++++++++++TIGER 유로스탁스레버리지(합성 H)++++++++++++++++++++2565/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:23,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:23,519 > 311
[DEBUG|collector_api.py:200] 2021-02-09 16:58:23,760 > ++++++++++++++TIGER 이머징마켓MSCI레버리지(합성 H)++++++++++++++++++++2566/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:23,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:24,126 > 312
[DEBUG|collector_api.py:200] 2021-02-09 16:58:24,367 > ++++++++++++++KINDEX 골드선물 레버리지(합성 H)++++++++++++++++++++2567/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:24,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:24,733 > 313
[DEBUG|collector_api.py:200] 2021-02-09 16:58:24,961 > ++++++++++++++KOSEF 미국달러선물레버리지++++++++++++++++++++2568/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:24,961 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:25,341 > 314
[DEBUG|collector_api.py:200] 2021-02-09 16:58:25,578 > ++++++++++++++KINDEX Fn성장소비주도주++++++++++++++++++++2569/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:25,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:25,948 > 315
[DEBUG|collector_api.py:200] 2021-02-09 16:58:26,181 > ++++++++++++++KODEX 코스피++++++++++++++++++++2570/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:26,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:26,556 > 316
[DEBUG|collector_api.py:200] 2021-02-09 16:58:26,805 > ++++++++++++++KODEX 200 중소형++++++++++++++++++++2571/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:26,806 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:27,164 > 317
[DEBUG|collector_api.py:200] 2021-02-09 16:58:27,386 > ++++++++++++++TIGER 200 헬스케어++++++++++++++++++++2572/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:27,386 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:27,771 > 318
[DEBUG|collector_api.py:200] 2021-02-09 16:58:28,001 > ++++++++++++++TIGER 200 산업재++++++++++++++++++++2573/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:28,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:28,379 > 319
[DEBUG|collector_api.py:200] 2021-02-09 16:58:28,652 > ++++++++++++++TIGER 200 생활소비재++++++++++++++++++++2574/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:28,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:28,988 > 320
[DEBUG|collector_api.py:200] 2021-02-09 16:58:29,211 > ++++++++++++++TIGER 우량가치++++++++++++++++++++2575/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:29,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:29,595 > 321
[DEBUG|collector_api.py:200] 2021-02-09 16:58:29,835 > ++++++++++++++ARIRANG 코스피++++++++++++++++++++2576/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:29,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:30,204 > 322
[DEBUG|collector_api.py:200] 2021-02-09 16:58:30,435 > ++++++++++++++TIGER 화장품++++++++++++++++++++2577/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:30,436 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:30,812 > 323
[DEBUG|collector_api.py:200] 2021-02-09 16:58:31,050 > ++++++++++++++TIGER 여행레저++++++++++++++++++++2578/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:31,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:31,420 > 324
[DEBUG|collector_api.py:200] 2021-02-09 16:58:31,657 > ++++++++++++++TIGER 미디어컨텐츠++++++++++++++++++++2579/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:31,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:32,028 > 325
[DEBUG|collector_api.py:200] 2021-02-09 16:58:32,270 > ++++++++++++++TIGER KTOP30++++++++++++++++++++2580/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:32,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:32,634 > 326
[DEBUG|collector_api.py:200] 2021-02-09 16:58:32,897 > ++++++++++++++KODEX 코스닥 150++++++++++++++++++++2581/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:32,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:33,243 > 327
[DEBUG|collector_api.py:200] 2021-02-09 16:58:33,481 > ++++++++++++++KODEX KTOP30++++++++++++++++++++2582/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:33,481 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:33,851 > 328
[DEBUG|collector_api.py:200] 2021-02-09 16:58:34,092 > ++++++++++++++KOSEF 미국달러선물인버스2X++++++++++++++++++++2583/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:34,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:34,459 > 329
[DEBUG|collector_api.py:200] 2021-02-09 16:58:34,700 > ++++++++++++++TIGER 코스닥150++++++++++++++++++++2584/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:34,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:35,066 > 330
[DEBUG|collector_api.py:200] 2021-02-09 16:58:35,295 > ++++++++++++++TIGER 코스닥150 레버리지++++++++++++++++++++2585/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:35,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:35,673 > 331
[DEBUG|collector_api.py:200] 2021-02-09 16:58:35,906 > ++++++++++++++KODEX 코스닥150 레버리지++++++++++++++++++++2586/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:35,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:36,281 > 332
[DEBUG|collector_api.py:200] 2021-02-09 16:58:36,515 > ++++++++++++++KBSTAR V&S셀렉트밸류++++++++++++++++++++2587/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:36,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:36,888 > 333
[DEBUG|collector_api.py:200] 2021-02-09 16:58:37,124 > ++++++++++++++TIGER 인도니프티50레버리지(합성)++++++++++++++++++++2588/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:37,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:37,495 > 334
[DEBUG|collector_api.py:200] 2021-02-09 16:58:37,741 > ++++++++++++++KODEX 코스피100++++++++++++++++++++2589/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:37,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:38,103 > 335
[DEBUG|collector_api.py:200] 2021-02-09 16:58:38,334 > ++++++++++++++KODEX 배당성장채권혼합++++++++++++++++++++2590/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:38,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:38,710 > 336
[DEBUG|collector_api.py:200] 2021-02-09 16:58:38,952 > ++++++++++++++TIGER 경기방어채권혼합++++++++++++++++++++2591/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:38,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:39,318 > 337
[DEBUG|collector_api.py:200] 2021-02-09 16:58:39,548 > ++++++++++++++ARIRANG 스마트베타Quality채권혼합++++++++++++++++++++2592/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:39,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:39,925 > 338
[DEBUG|collector_api.py:200] 2021-02-09 16:58:40,158 > ++++++++++++++KINDEX 일본Nikkei225(H)++++++++++++++++++++2593/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:40,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:40,532 > 339
[DEBUG|collector_api.py:200] 2021-02-09 16:58:40,781 > ++++++++++++++ARIRANG 우량회사채50 1년++++++++++++++++++++2594/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:40,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:41,139 > 340
[DEBUG|collector_api.py:200] 2021-02-09 16:58:41,366 > ++++++++++++++TIGER 일본니케이225++++++++++++++++++++2595/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:41,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:41,747 > 341
[DEBUG|collector_api.py:200] 2021-02-09 16:58:42,000 > ++++++++++++++KBSTAR V&S셀렉트밸류채권혼합++++++++++++++++++++2596/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:42,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:42,355 > 342
[DEBUG|collector_api.py:200] 2021-02-09 16:58:42,586 > ++++++++++++++TIGER 200IT레버리지++++++++++++++++++++2597/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:42,586 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:42,963 > 343
[DEBUG|collector_api.py:200] 2021-02-09 16:58:43,207 > ++++++++++++++TIGER 200에너지화학레버리지++++++++++++++++++++2598/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:43,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:43,570 > 344
[DEBUG|collector_api.py:200] 2021-02-09 16:58:43,808 > ++++++++++++++KODEX 바이오++++++++++++++++++++2599/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:43,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:44,179 > 345
[DEBUG|collector_api.py:200] 2021-02-09 16:58:44,418 > ++++++++++++++KODEX 모멘텀Plus++++++++++++++++++++2600/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:44,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:44,786 > 346
[DEBUG|collector_api.py:200] 2021-02-09 16:58:45,068 > ++++++++++++++KODEX 퀄리티Plus++++++++++++++++++++2601/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:45,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:45,394 > 347
[DEBUG|collector_api.py:200] 2021-02-09 16:58:45,621 > ++++++++++++++KODEX 밸류Plus++++++++++++++++++++2602/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:45,621 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:46,003 > 348
[DEBUG|collector_api.py:200] 2021-02-09 16:58:46,235 > ++++++++++++++TIGER 미국다우존스30++++++++++++++++++++2603/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:46,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:46,612 > 349
[DEBUG|collector_api.py:200] 2021-02-09 16:58:46,855 > ++++++++++++++TIGER 유로스탁스배당30++++++++++++++++++++2604/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:46,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:47,220 > 350
[DEBUG|collector_api.py:200] 2021-02-09 16:58:47,460 > ++++++++++++++TIGER 차이나HSCEI++++++++++++++++++++2605/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:47,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:47,827 > 351
[DEBUG|collector_api.py:200] 2021-02-09 16:58:48,061 > ++++++++++++++KINDEX 베트남VN30(합성)++++++++++++++++++++2606/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:48,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:48,436 > 352
[DEBUG|collector_api.py:200] 2021-02-09 16:58:48,685 > ++++++++++++++TIGER 일본TOPIX헬스케어(합성)++++++++++++++++++++2607/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:48,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:49,043 > 353
[DEBUG|collector_api.py:200] 2021-02-09 16:58:49,269 > ++++++++++++++TIGER S&P글로벌헬스케어(합성)++++++++++++++++++++2608/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:49,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:49,651 > 354
[DEBUG|collector_api.py:200] 2021-02-09 16:58:49,883 > ++++++++++++++KBSTAR 차이나HSCEI(H)++++++++++++++++++++2609/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:49,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:50,258 > 355
[DEBUG|collector_api.py:200] 2021-02-09 16:58:50,501 > ++++++++++++++TIGER 코스닥150선물인버스++++++++++++++++++++2610/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:50,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:50,865 > 356
[DEBUG|collector_api.py:200] 2021-02-09 16:58:51,094 > ++++++++++++++KODEX 코스닥150선물인버스++++++++++++++++++++2611/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:51,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:51,473 > 357
[DEBUG|collector_api.py:200] 2021-02-09 16:58:51,708 > ++++++++++++++KODEX 선진국MSCI World++++++++++++++++++++2612/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:51,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:52,080 > 358
[DEBUG|collector_api.py:200] 2021-02-09 16:58:52,310 > ++++++++++++++ARIRANG 고배당저변동50++++++++++++++++++++2613/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:52,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:52,688 > 359
[DEBUG|collector_api.py:200] 2021-02-09 16:58:52,922 > ++++++++++++++ARIRANG 고배당주채권혼합++++++++++++++++++++2614/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:52,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:53,295 > 360
[DEBUG|collector_api.py:200] 2021-02-09 16:58:53,536 > ++++++++++++++KINDEX 코스닥(합성)++++++++++++++++++++2615/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:53,536 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:53,903 > 361
[DEBUG|collector_api.py:200] 2021-02-09 16:58:54,139 > ++++++++++++++TIGER 200동일가중++++++++++++++++++++2616/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:54,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:54,511 > 362
[DEBUG|collector_api.py:200] 2021-02-09 16:58:54,744 > ++++++++++++++KBSTAR 200선물레버리지++++++++++++++++++++2617/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:54,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:55,118 > 363
[DEBUG|collector_api.py:200] 2021-02-09 16:58:55,350 > ++++++++++++++KBSTAR 200선물인버스++++++++++++++++++++2618/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:55,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:55,726 > 364
[DEBUG|collector_api.py:200] 2021-02-09 16:58:55,943 > ++++++++++++++KBSTAR 200선물인버스2X++++++++++++++++++++2619/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:55,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:56,334 > 365
[DEBUG|collector_api.py:200] 2021-02-09 16:58:56,570 > ++++++++++++++KODEX 200동일가중++++++++++++++++++++2620/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:56,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:56,941 > 366
[DEBUG|collector_api.py:200] 2021-02-09 16:58:57,171 > ++++++++++++++KODEX 200선물인버스2X++++++++++++++++++++2621/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:57,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:57,548 > 367
[DEBUG|collector_api.py:200] 2021-02-09 16:58:57,786 > ++++++++++++++TIGER 200선물인버스2X++++++++++++++++++++2622/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:57,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:58,155 > 368
[DEBUG|collector_api.py:200] 2021-02-09 16:58:58,395 > ++++++++++++++KBSTAR 모멘텀밸류++++++++++++++++++++2623/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:58,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:58,763 > 369
[DEBUG|collector_api.py:200] 2021-02-09 16:58:59,017 > ++++++++++++++KBSTAR 모멘텀로우볼++++++++++++++++++++2624/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:59,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:59,370 > 370
[DEBUG|collector_api.py:200] 2021-02-09 16:58:59,602 > ++++++++++++++ARIRANG 200선물레버리지++++++++++++++++++++2625/2894
[DEBUG|open_api.py:656] 2021-02-09 16:58:59,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:58:59,976 > 371
[DEBUG|collector_api.py:200] 2021-02-09 16:59:00,203 > ++++++++++++++ARIRANG 200선물인버스2X++++++++++++++++++++2626/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:00,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:00,584 > 372
[DEBUG|collector_api.py:200] 2021-02-09 16:59:00,810 > ++++++++++++++KOSEF 200선물인버스2X++++++++++++++++++++2627/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:00,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:01,191 > 373
[DEBUG|collector_api.py:200] 2021-02-09 16:59:01,423 > ++++++++++++++KOSEF 200선물인버스++++++++++++++++++++2628/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:01,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:01,798 > 374
[DEBUG|collector_api.py:200] 2021-02-09 16:59:02,065 > ++++++++++++++KOSEF 200선물레버리지++++++++++++++++++++2629/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:02,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:02,405 > 375
[DEBUG|collector_api.py:200] 2021-02-09 16:59:02,634 > ++++++++++++++KBSTAR 헬스케어++++++++++++++++++++2630/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:02,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:03,012 > 376
[DEBUG|collector_api.py:200] 2021-02-09 16:59:03,237 > ++++++++++++++KBSTAR 헬스케어채권혼합++++++++++++++++++++2631/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:03,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:03,620 > 377
[DEBUG|collector_api.py:200] 2021-02-09 16:59:03,856 > ++++++++++++++KINDEX 인도네시아MSCI(합성)++++++++++++++++++++2632/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:03,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:04,229 > 378
[DEBUG|collector_api.py:200] 2021-02-09 16:59:04,465 > ++++++++++++++ARIRANG 심천차이넥스트(합성)++++++++++++++++++++2633/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:04,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:04,837 > 379
[DEBUG|collector_api.py:200] 2021-02-09 16:59:05,059 > ++++++++++++++KODEX 심천ChiNext(합성)++++++++++++++++++++2634/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:05,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:05,445 > 380
[DEBUG|collector_api.py:200] 2021-02-09 16:59:05,664 > ++++++++++++++KOSEF 배당바이백Plus++++++++++++++++++++2635/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:05,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:06,052 > 381
[DEBUG|collector_api.py:200] 2021-02-09 16:59:06,275 > ++++++++++++++KOSEF 저PBR가중++++++++++++++++++++2636/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:06,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:06,660 > 382
[DEBUG|collector_api.py:200] 2021-02-09 16:59:06,885 > ++++++++++++++TIGER 코스닥150IT++++++++++++++++++++2637/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:06,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:07,269 > 383
[DEBUG|collector_api.py:200] 2021-02-09 16:59:07,505 > ++++++++++++++TIGER 코스닥150바이오테크++++++++++++++++++++2638/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:07,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:07,877 > 384
[DEBUG|collector_api.py:200] 2021-02-09 16:59:08,124 > ++++++++++++++TIGER 미국달러선물레버리지++++++++++++++++++++2639/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:08,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:08,485 > 385
[DEBUG|collector_api.py:200] 2021-02-09 16:59:08,727 > ++++++++++++++TIGER 미국달러선물인버스2X++++++++++++++++++++2640/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:08,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:09,092 > 386
[DEBUG|collector_api.py:200] 2021-02-09 16:59:09,316 > ++++++++++++++TIGER 우선주++++++++++++++++++++2641/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:09,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:09,700 > 387
[DEBUG|collector_api.py:200] 2021-02-09 16:59:09,945 > ++++++++++++++KODEX WTI원유선물(H)++++++++++++++++++++2642/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:09,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:10,306 > 388
[DEBUG|collector_api.py:200] 2021-02-09 16:59:10,545 > ++++++++++++++KODEX 미국달러선물++++++++++++++++++++2643/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:10,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:10,916 > 389
[DEBUG|collector_api.py:200] 2021-02-09 16:59:11,138 > ++++++++++++++KODEX 미국달러선물레버리지++++++++++++++++++++2644/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:11,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:11,524 > 390
[DEBUG|collector_api.py:200] 2021-02-09 16:59:11,759 > ++++++++++++++KODEX 미국달러선물인버스2X++++++++++++++++++++2645/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:11,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:12,132 > 391
[DEBUG|collector_api.py:200] 2021-02-09 16:59:12,363 > ++++++++++++++KODEX 미국달러선물인버스++++++++++++++++++++2646/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:12,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:12,740 > 392
[DEBUG|collector_api.py:200] 2021-02-09 16:59:12,985 > ++++++++++++++KINDEX 필리핀MSCI(합성)++++++++++++++++++++2647/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:12,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:13,348 > 393
[DEBUG|collector_api.py:200] 2021-02-09 16:59:13,589 > ++++++++++++++KINDEX 러시아MSCI(합성)++++++++++++++++++++2648/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:13,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:13,956 > 394
[DEBUG|collector_api.py:200] 2021-02-09 16:59:14,189 > ++++++++++++++KBSTAR 고배당++++++++++++++++++++2649/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:14,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:14,564 > 395
[DEBUG|collector_api.py:200] 2021-02-09 16:59:14,817 > ++++++++++++++KODEX 미디어&엔터테인먼트++++++++++++++++++++2650/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:14,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:15,172 > 396
[DEBUG|collector_api.py:200] 2021-02-09 16:59:15,402 > ++++++++++++++KODEX IT++++++++++++++++++++2651/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:15,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:15,780 > 397
[DEBUG|collector_api.py:200] 2021-02-09 16:59:16,023 > ++++++++++++++KODEX 경기소비재++++++++++++++++++++2652/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:16,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:16,387 > 398
[DEBUG|collector_api.py:200] 2021-02-09 16:59:16,637 > ++++++++++++++KODEX 필수소비재++++++++++++++++++++2653/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:16,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:16,997 > 399
[DEBUG|collector_api.py:200] 2021-02-09 16:59:17,221 > ++++++++++++++KODEX 헬스케어++++++++++++++++++++2654/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:17,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:17,605 > 400
[DEBUG|collector_api.py:200] 2021-02-09 16:59:17,839 > ++++++++++++++ARIRANG 중형주저변동50++++++++++++++++++++2655/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:17,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:18,213 > 401
[DEBUG|collector_api.py:200] 2021-02-09 16:59:18,442 > ++++++++++++++KBSTAR 미국장기국채선물(H)++++++++++++++++++++2656/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:18,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:18,820 > 402
[DEBUG|collector_api.py:200] 2021-02-09 16:59:19,066 > ++++++++++++++KBSTAR 미국장기국채선물인버스(H)++++++++++++++++++++2657/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:19,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:19,428 > 403
[DEBUG|collector_api.py:200] 2021-02-09 16:59:19,644 > ++++++++++++++KBSTAR 미국장기국채선물레버리지(합성 H)++++++++++++++++++++2658/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:19,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:20,036 > 404
[DEBUG|collector_api.py:200] 2021-02-09 16:59:20,323 > ++++++++++++++KBSTAR 미국장기국채선물인버스2X(합성 H)++++++++++++++++++++2659/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:20,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:20,642 > 405
[DEBUG|collector_api.py:200] 2021-02-09 16:59:20,858 > ++++++++++++++TIGER 200선물레버리지++++++++++++++++++++2660/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:20,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:21,250 > 406
[DEBUG|collector_api.py:200] 2021-02-09 16:59:21,473 > ++++++++++++++TIGER S&P글로벌인프라(합성)++++++++++++++++++++2661/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:21,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:21,858 > 407
[DEBUG|collector_api.py:200] 2021-02-09 16:59:22,086 > ++++++++++++++KODEX S&P글로벌인프라(합성)++++++++++++++++++++2662/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:22,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:22,467 > 408
[DEBUG|collector_api.py:200] 2021-02-09 16:59:22,697 > ++++++++++++++ARIRANG S&P글로벌인프라++++++++++++++++++++2663/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:22,698 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:23,074 > 409
[DEBUG|collector_api.py:200] 2021-02-09 16:59:23,310 > ++++++++++++++ARIRANG 미국S&P500(H)++++++++++++++++++++2664/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:23,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:23,681 > 410
[DEBUG|collector_api.py:200] 2021-02-09 16:59:23,909 > ++++++++++++++KBSTAR KQ고배당++++++++++++++++++++2665/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:23,909 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:24,290 > 411
[DEBUG|collector_api.py:200] 2021-02-09 16:59:24,523 > ++++++++++++++KBSTAR 코스닥150++++++++++++++++++++2666/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:24,523 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:24,896 > 412
[DEBUG|collector_api.py:200] 2021-02-09 16:59:25,141 > ++++++++++++++KODEX WTI원유선물인버스(H)++++++++++++++++++++2667/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:25,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:25,503 > 413
[DEBUG|collector_api.py:200] 2021-02-09 16:59:25,726 > ++++++++++++++KODEX 3대농산물선물(H)++++++++++++++++++++2668/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:25,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:26,109 > 414
[DEBUG|collector_api.py:200] 2021-02-09 16:59:26,337 > ++++++++++++++KINDEX 스마트모멘텀++++++++++++++++++++2669/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:26,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:26,718 > 415
[DEBUG|collector_api.py:200] 2021-02-09 16:59:26,950 > ++++++++++++++KINDEX 스마트밸류++++++++++++++++++++2670/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:26,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:27,326 > 416
[DEBUG|collector_api.py:200] 2021-02-09 16:59:27,551 > ++++++++++++++KBSTAR 단기국공채액티브++++++++++++++++++++2671/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:27,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:27,933 > 417
[DEBUG|collector_api.py:200] 2021-02-09 16:59:28,158 > ++++++++++++++KBSTAR 중장기국공채액티브++++++++++++++++++++2672/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:28,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:28,540 > 418
[DEBUG|collector_api.py:200] 2021-02-09 16:59:28,770 > ++++++++++++++TIGER 단기채권액티브++++++++++++++++++++2673/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:28,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:29,147 > 419
[DEBUG|collector_api.py:200] 2021-02-09 16:59:29,368 > ++++++++++++++KINDEX 중장기국공채액티브++++++++++++++++++++2674/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:29,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:29,756 > 420
[DEBUG|collector_api.py:200] 2021-02-09 16:59:29,995 > ++++++++++++++KODEX 종합채권(AA-이상)액티브++++++++++++++++++++2675/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:29,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:30,363 > 421
[DEBUG|collector_api.py:200] 2021-02-09 16:59:30,592 > ++++++++++++++KODEX 단기변동금리부채권액티브++++++++++++++++++++2676/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:30,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:30,971 > 422
[DEBUG|collector_api.py:200] 2021-02-09 16:59:31,211 > ++++++++++++++KODEX MSCI모멘텀++++++++++++++++++++2677/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:31,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:31,582 > 423
[DEBUG|collector_api.py:200] 2021-02-09 16:59:31,809 > ++++++++++++++KODEX MSCI밸류++++++++++++++++++++2678/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:31,809 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:32,189 > 424
[DEBUG|collector_api.py:200] 2021-02-09 16:59:32,440 > ++++++++++++++KODEX MSCI퀄리티++++++++++++++++++++2679/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:32,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:32,798 > 425
[DEBUG|collector_api.py:200] 2021-02-09 16:59:33,025 > ++++++++++++++KBSTAR 코스닥150선물인버스++++++++++++++++++++2680/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:33,025 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:33,405 > 426
[DEBUG|collector_api.py:200] 2021-02-09 16:59:33,628 > ++++++++++++++TIGER 글로벌4차산업혁신기술(합성 H)++++++++++++++++++++2681/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:33,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:34,012 > 427
[DEBUG|collector_api.py:200] 2021-02-09 16:59:34,257 > ++++++++++++++TIGER 글로벌자원생산기업(합성 H)++++++++++++++++++++2682/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:34,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:34,620 > 428
[DEBUG|collector_api.py:200] 2021-02-09 16:59:34,838 > ++++++++++++++KBSTAR 글로벌4차산업IT(합성 H)++++++++++++++++++++2683/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:34,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:35,227 > 429
[DEBUG|collector_api.py:200] 2021-02-09 16:59:35,458 > ++++++++++++++KODEX 미국S&P고배당커버드콜(합성 H)++++++++++++++++++++2684/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:35,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:35,835 > 430
[DEBUG|collector_api.py:200] 2021-02-09 16:59:36,051 > ++++++++++++++KODEX 글로벌4차산업로보틱스(합성)++++++++++++++++++++2685/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:36,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:36,442 > 431
[DEBUG|collector_api.py:200] 2021-02-09 16:59:36,671 > ++++++++++++++KINDEX S&P아시아TOP50++++++++++++++++++++2686/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:36,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:37,049 > 432
[DEBUG|collector_api.py:200] 2021-02-09 16:59:37,280 > ++++++++++++++TIGER 코스피++++++++++++++++++++2687/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:37,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:37,658 > 433
[DEBUG|collector_api.py:200] 2021-02-09 16:59:37,900 > ++++++++++++++TIGER 코스피대형주++++++++++++++++++++2688/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:37,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:38,265 > 434
[DEBUG|collector_api.py:200] 2021-02-09 16:59:38,531 > ++++++++++++++TIGER 코스피중형주++++++++++++++++++++2689/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:38,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:38,872 > 435
[DEBUG|collector_api.py:200] 2021-02-09 16:59:39,111 > ++++++++++++++KBSTAR 코스닥150선물레버리지++++++++++++++++++++2690/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:39,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:39,480 > 436
[DEBUG|collector_api.py:200] 2021-02-09 16:59:39,706 > ++++++++++++++ARIRANG ESG우수기업++++++++++++++++++++2691/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:39,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:40,087 > 437
[DEBUG|collector_api.py:200] 2021-02-09 16:59:40,324 > ++++++++++++++KODEX 200TR++++++++++++++++++++2692/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:40,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:40,704 > 438
[DEBUG|collector_api.py:200] 2021-02-09 16:59:40,928 > ++++++++++++++KODEX MSCI Korea TR++++++++++++++++++++2693/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:40,928 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:41,312 > 439
[DEBUG|collector_api.py:200] 2021-02-09 16:59:41,537 > ++++++++++++++ARIRANG 단기채권액티브++++++++++++++++++++2694/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:41,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:41,920 > 440
[DEBUG|collector_api.py:200] 2021-02-09 16:59:42,149 > ++++++++++++++KODEX 고배당++++++++++++++++++++2695/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:42,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:42,527 > 441
[DEBUG|collector_api.py:200] 2021-02-09 16:59:42,767 > ++++++++++++++KODEX 최소변동성++++++++++++++++++++2696/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:42,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:43,135 > 442
[DEBUG|collector_api.py:200] 2021-02-09 16:59:43,348 > ++++++++++++++KINDEX 미국IT인터넷S&P(합성 H)++++++++++++++++++++2697/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:43,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:43,743 > 443
[DEBUG|collector_api.py:200] 2021-02-09 16:59:43,975 > ++++++++++++++ARIRANG 주도업종++++++++++++++++++++2698/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:43,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:44,351 > 444
[DEBUG|collector_api.py:200] 2021-02-09 16:59:44,571 > ++++++++++++++KODEX 미국러셀2000(H)++++++++++++++++++++2699/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:44,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:44,959 > 445
[DEBUG|collector_api.py:200] 2021-02-09 16:59:45,193 > ++++++++++++++KODEX 골드선물인버스(H)++++++++++++++++++++2700/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:45,194 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:45,567 > 446
[DEBUG|collector_api.py:200] 2021-02-09 16:59:45,790 > ++++++++++++++KBSTAR 중소형고배당++++++++++++++++++++2701/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:45,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:46,173 > 447
[DEBUG|collector_api.py:200] 2021-02-09 16:59:46,403 > ++++++++++++++KBSTAR 국고채3년선물인버스++++++++++++++++++++2702/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:46,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:46,781 > 448
[DEBUG|collector_api.py:200] 2021-02-09 16:59:47,013 > ++++++++++++++KODEX 중국본토CSI300++++++++++++++++++++2703/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:47,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:47,389 > 449
[DEBUG|collector_api.py:200] 2021-02-09 16:59:47,622 > ++++++++++++++KODEX 200미국채혼합++++++++++++++++++++2704/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:47,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:47,997 > 450
[DEBUG|collector_api.py:200] 2021-02-09 16:59:48,226 > ++++++++++++++KBSTAR 200금융++++++++++++++++++++2705/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:48,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:48,605 > 451
[DEBUG|collector_api.py:200] 2021-02-09 16:59:48,830 > ++++++++++++++KBSTAR 200에너지화학++++++++++++++++++++2706/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:48,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:49,212 > 452
[DEBUG|collector_api.py:200] 2021-02-09 16:59:49,447 > ++++++++++++++KBSTAR 200IT++++++++++++++++++++2707/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:49,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:49,819 > 453
[DEBUG|collector_api.py:200] 2021-02-09 16:59:50,046 > ++++++++++++++KBSTAR 200중공업++++++++++++++++++++2708/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:50,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:50,426 > 454
[DEBUG|collector_api.py:200] 2021-02-09 16:59:50,659 > ++++++++++++++KBSTAR 200철강소재++++++++++++++++++++2709/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:50,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:51,034 > 455
[DEBUG|collector_api.py:200] 2021-02-09 16:59:51,268 > ++++++++++++++FOCUS ESG리더스++++++++++++++++++++2710/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:51,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:51,641 > 456
[DEBUG|collector_api.py:200] 2021-02-09 16:59:51,890 > ++++++++++++++ARIRANG 미국나스닥기술주++++++++++++++++++++2711/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:51,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:52,248 > 457
[DEBUG|collector_api.py:200] 2021-02-09 16:59:52,489 > ++++++++++++++KBSTAR 200건설++++++++++++++++++++2712/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:52,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:52,856 > 458
[DEBUG|collector_api.py:200] 2021-02-09 16:59:53,086 > ++++++++++++++KBSTAR 200경기소비재++++++++++++++++++++2713/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:53,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:53,463 > 459
[DEBUG|collector_api.py:200] 2021-02-09 16:59:53,695 > ++++++++++++++KBSTAR 200산업재++++++++++++++++++++2714/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:53,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:54,071 > 460
[DEBUG|collector_api.py:200] 2021-02-09 16:59:54,297 > ++++++++++++++KBSTAR 200생활소비재++++++++++++++++++++2715/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:54,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:54,678 > 461
[DEBUG|collector_api.py:200] 2021-02-09 16:59:54,908 > ++++++++++++++KODEX MSCI KOREA ESG유니버설++++++++++++++++++++2716/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:54,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:55,285 > 462
[DEBUG|collector_api.py:200] 2021-02-09 16:59:55,536 > ++++++++++++++TIGER MSCI KOREA ESG유니버설++++++++++++++++++++2717/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:55,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:55,893 > 463
[DEBUG|collector_api.py:200] 2021-02-09 16:59:56,149 > ++++++++++++++TIGER MSCI KOREA ESG리더스++++++++++++++++++++2718/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:56,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:56,501 > 464
[DEBUG|collector_api.py:200] 2021-02-09 16:59:56,718 > ++++++++++++++TIGER 200커버드콜ATM++++++++++++++++++++2719/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:56,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:57,109 > 465
[DEBUG|collector_api.py:200] 2021-02-09 16:59:57,328 > ++++++++++++++ARIRANG 국채선물10년++++++++++++++++++++2720/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:57,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:57,717 > 466
[DEBUG|collector_api.py:200] 2021-02-09 16:59:57,942 > ++++++++++++++KBSTAR 200고배당커버드콜ATM++++++++++++++++++++2721/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:57,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:58,324 > 467
[DEBUG|collector_api.py:200] 2021-02-09 16:59:58,562 > ++++++++++++++KBSTAR ESG사회책임투자++++++++++++++++++++2722/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:58,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:58,931 > 468
[DEBUG|collector_api.py:200] 2021-02-09 16:59:59,157 > ++++++++++++++KINDEX 멕시코MSCI(합성)++++++++++++++++++++2723/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:59,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 16:59:59,539 > 469
[DEBUG|collector_api.py:200] 2021-02-09 16:59:59,770 > ++++++++++++++KOSEF 코스닥150선물++++++++++++++++++++2724/2894
[DEBUG|open_api.py:656] 2021-02-09 16:59:59,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:00,145 > 470
[DEBUG|collector_api.py:200] 2021-02-09 17:00:00,365 > ++++++++++++++KOSEF 코스닥150선물인버스++++++++++++++++++++2725/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:00,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:00,753 > 471
[DEBUG|collector_api.py:200] 2021-02-09 17:00:01,007 > ++++++++++++++KOSEF 코스닥150선물레버리지++++++++++++++++++++2726/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:01,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:01,360 > 472
[DEBUG|collector_api.py:200] 2021-02-09 17:00:01,593 > ++++++++++++++KODEX China H선물인버스(H)++++++++++++++++++++2727/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:01,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:01,968 > 473
[DEBUG|collector_api.py:200] 2021-02-09 17:00:02,196 > ++++++++++++++KBSTAR 차이나H선물인버스(H)++++++++++++++++++++2728/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:02,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:02,574 > 474
[DEBUG|collector_api.py:200] 2021-02-09 17:00:02,812 > ++++++++++++++KODEX MSCI EM선물(H)++++++++++++++++++++2729/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:02,813 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:03,183 > 475
[DEBUG|collector_api.py:200] 2021-02-09 17:00:03,408 > ++++++++++++++KBSTAR KRX300++++++++++++++++++++2730/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:03,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:03,791 > 476
[DEBUG|collector_api.py:200] 2021-02-09 17:00:04,027 > ++++++++++++++TIGER 대형성장++++++++++++++++++++2731/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:04,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:04,400 > 477
[DEBUG|collector_api.py:200] 2021-02-09 17:00:04,637 > ++++++++++++++TIGER 대형가치++++++++++++++++++++2732/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:04,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:05,007 > 478
[DEBUG|collector_api.py:200] 2021-02-09 17:00:05,230 > ++++++++++++++TIGER 중소형성장++++++++++++++++++++2733/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:05,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:05,614 > 479
[DEBUG|collector_api.py:200] 2021-02-09 17:00:05,845 > ++++++++++++++TIGER 중소형가치++++++++++++++++++++2734/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:05,846 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:06,222 > 480
[DEBUG|collector_api.py:200] 2021-02-09 17:00:06,445 > ++++++++++++++TIGER TOP10++++++++++++++++++++2735/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:06,446 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:06,830 > 481
[DEBUG|collector_api.py:200] 2021-02-09 17:00:07,064 > ++++++++++++++TIGER KRX300++++++++++++++++++++2736/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:07,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:07,438 > 482
[DEBUG|collector_api.py:200] 2021-02-09 17:00:07,672 > ++++++++++++++KODEX KRX300++++++++++++++++++++2737/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:07,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:08,045 > 483
[DEBUG|collector_api.py:200] 2021-02-09 17:00:08,297 > ++++++++++++++마이티 200커버드콜ATM레버리지++++++++++++++++++++2738/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:08,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:08,652 > 484
[DEBUG|collector_api.py:200] 2021-02-09 17:00:08,874 > ++++++++++++++SMART KRX300++++++++++++++++++++2739/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:08,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:09,261 > 485
[DEBUG|collector_api.py:200] 2021-02-09 17:00:09,500 > ++++++++++++++TIGER 일본엔선물++++++++++++++++++++2740/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:09,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:09,867 > 486
[DEBUG|collector_api.py:200] 2021-02-09 17:00:10,102 > ++++++++++++++TIGER 일본엔선물레버리지++++++++++++++++++++2741/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:10,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:10,475 > 487
[DEBUG|collector_api.py:200] 2021-02-09 17:00:10,754 > ++++++++++++++TIGER 일본엔선물인버스++++++++++++++++++++2742/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:10,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:11,082 > 488
[DEBUG|collector_api.py:200] 2021-02-09 17:00:11,319 > ++++++++++++++TIGER 일본엔선물인버스2X++++++++++++++++++++2743/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:11,319 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:11,688 > 489
[DEBUG|collector_api.py:200] 2021-02-09 17:00:11,910 > ++++++++++++++FOCUS KRX300++++++++++++++++++++2744/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:11,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:12,296 > 490
[DEBUG|collector_api.py:200] 2021-02-09 17:00:12,526 > ++++++++++++++ARIRANG KRX300++++++++++++++++++++2745/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:12,526 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:12,904 > 491
[DEBUG|collector_api.py:200] 2021-02-09 17:00:13,125 > ++++++++++++++KODEX 국채선물3년인버스++++++++++++++++++++2746/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:13,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:13,510 > 492
[DEBUG|collector_api.py:200] 2021-02-09 17:00:13,725 > ++++++++++++++HANARO 200++++++++++++++++++++2747/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:13,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:14,118 > 493
[DEBUG|collector_api.py:200] 2021-02-09 17:00:14,343 > ++++++++++++++KOSEF 200TR++++++++++++++++++++2748/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:14,343 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:14,725 > 494
[DEBUG|collector_api.py:200] 2021-02-09 17:00:14,957 > ++++++++++++++KBSTAR 국채선물10년++++++++++++++++++++2749/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:14,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:15,332 > 495
[DEBUG|collector_api.py:200] 2021-02-09 17:00:15,567 > ++++++++++++++KBSTAR 국채선물10년인버스++++++++++++++++++++2750/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:15,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:15,940 > 496
[DEBUG|collector_api.py:200] 2021-02-09 17:00:16,171 > ++++++++++++++SMART 200TR++++++++++++++++++++2751/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:16,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:16,547 > 497
[DEBUG|collector_api.py:200] 2021-02-09 17:00:16,791 > ++++++++++++++ARIRANG 200동일가중++++++++++++++++++++2752/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:16,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:17,155 > 498
[DEBUG|collector_api.py:200] 2021-02-09 17:00:17,410 > ++++++++++++++KODEX FnKorea50++++++++++++++++++++2753/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:17,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:17,763 > 499
[DEBUG|collector_api.py:200] 2021-02-09 17:00:17,981 > ++++++++++++++ARIRANG 국채선물3년++++++++++++++++++++2754/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:17,982 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:18,371 > 500
[DEBUG|collector_api.py:200] 2021-02-09 17:00:18,596 > ++++++++++++++KODEX 한국대만IT프리미어++++++++++++++++++++2755/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:18,597 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:18,978 > 501
[DEBUG|collector_api.py:200] 2021-02-09 17:00:19,221 > ++++++++++++++KINDEX 국채선물10년인버스++++++++++++++++++++2756/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:19,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:19,586 > 502
[DEBUG|collector_api.py:200] 2021-02-09 17:00:19,818 > ++++++++++++++KINDEX 국채선물3년인버스++++++++++++++++++++2757/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:19,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:20,194 > 503
[DEBUG|collector_api.py:200] 2021-02-09 17:00:20,426 > ++++++++++++++KBSTAR 중소형모멘텀로우볼++++++++++++++++++++2758/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:20,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:20,802 > 504
[DEBUG|collector_api.py:200] 2021-02-09 17:00:21,028 > ++++++++++++++KBSTAR 중소형모멘텀밸류++++++++++++++++++++2759/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:21,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:21,410 > 505
[DEBUG|collector_api.py:200] 2021-02-09 17:00:21,641 > ++++++++++++++TIGER K게임++++++++++++++++++++2760/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:21,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:22,018 > 506
[DEBUG|collector_api.py:200] 2021-02-09 17:00:22,259 > ++++++++++++++KBSTAR 게임테마++++++++++++++++++++2761/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:22,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:22,626 > 507
[DEBUG|collector_api.py:200] 2021-02-09 17:00:22,849 > ++++++++++++++KODEX 게임산업++++++++++++++++++++2762/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:22,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:23,234 > 508
[DEBUG|collector_api.py:200] 2021-02-09 17:00:23,460 > ++++++++++++++ARIRANG 코스닥150++++++++++++++++++++2763/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:23,461 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:23,841 > 509
[DEBUG|open_api.py:303] 2021-02-09 17:00:33,017 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:00:33,017 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:00:33,017 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:00:33,017 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:00:33,018 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:00:33,018 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:00:33,018 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:00:33,030 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:00:33,056 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:00:33,056 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:00:33,056 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:00:33,075 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:00:33,106 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:00:35,629 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-09 17:00:35,631 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-09 17:00:35,667 > ++++++++++++++ARIRANG 코스닥150++++++++++++++++++++2763/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:35,667 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:35,668 > 1
[DEBUG|collector_api.py:200] 2021-02-09 17:00:36,726 > ++++++++++++++ARIRANG 코스닥150선물인버스++++++++++++++++++++2764/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:36,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:36,728 > 2
[DEBUG|collector_api.py:200] 2021-02-09 17:00:36,955 > ++++++++++++++ARIRANG 코스피중형주++++++++++++++++++++2765/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:36,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:37,336 > 3
[DEBUG|collector_api.py:200] 2021-02-09 17:00:37,571 > ++++++++++++++TIGER 국채선물3년인버스++++++++++++++++++++2766/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:37,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:37,943 > 4
[DEBUG|collector_api.py:200] 2021-02-09 17:00:38,207 > ++++++++++++++TIGER 국채선물10년인버스++++++++++++++++++++2767/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:38,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:38,550 > 5
[DEBUG|collector_api.py:200] 2021-02-09 17:00:38,790 > ++++++++++++++TIGER 중장기국채++++++++++++++++++++2768/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:38,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:39,157 > 6
[DEBUG|collector_api.py:200] 2021-02-09 17:00:39,400 > ++++++++++++++KBSTAR 코스피++++++++++++++++++++2769/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:39,401 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:39,765 > 7
[DEBUG|collector_api.py:200] 2021-02-09 17:00:39,988 > ++++++++++++++KODEX 미국채울트라30년선물(H)++++++++++++++++++++2770/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:39,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:40,372 > 8
[DEBUG|collector_api.py:200] 2021-02-09 17:00:40,587 > ++++++++++++++KODEX 미국채울트라30년선물인버스(H)++++++++++++++++++++2771/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:40,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:40,980 > 9
[DEBUG|collector_api.py:200] 2021-02-09 17:00:41,190 > ++++++++++++++HANARO KRX300++++++++++++++++++++2772/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:41,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:41,588 > 10
[DEBUG|collector_api.py:200] 2021-02-09 17:00:41,817 > ++++++++++++++HANARO 코스닥150++++++++++++++++++++2773/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:41,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:42,196 > 11
[DEBUG|collector_api.py:200] 2021-02-09 17:00:42,432 > ++++++++++++++HANARO 200선물레버리지++++++++++++++++++++2774/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:42,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:42,804 > 12
[DEBUG|collector_api.py:200] 2021-02-09 17:00:43,034 > ++++++++++++++KODEX 미국나스닥100선물(H)++++++++++++++++++++2775/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:43,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:43,410 > 13
[DEBUG|collector_api.py:200] 2021-02-09 17:00:43,630 > ++++++++++++++KINDEX 코스피++++++++++++++++++++2776/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:43,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:44,018 > 14
[DEBUG|collector_api.py:200] 2021-02-09 17:00:44,236 > ++++++++++++++TIGER 미국채10년선물++++++++++++++++++++2777/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:44,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:44,626 > 15
[DEBUG|collector_api.py:200] 2021-02-09 17:00:44,858 > ++++++++++++++TIGER 2차전지테마++++++++++++++++++++2778/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:44,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:45,232 > 16
[DEBUG|collector_api.py:200] 2021-02-09 17:00:45,458 > ++++++++++++++KODEX 2차전지산업++++++++++++++++++++2779/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:45,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:45,839 > 17
[DEBUG|collector_api.py:200] 2021-02-09 17:00:46,073 > ++++++++++++++HANARO 200선물인버스++++++++++++++++++++2780/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:46,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:46,447 > 18
[DEBUG|collector_api.py:200] 2021-02-09 17:00:46,677 > ++++++++++++++HANARO 코스닥150선물레버리지++++++++++++++++++++2781/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:46,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:47,055 > 19
[DEBUG|collector_api.py:200] 2021-02-09 17:00:47,304 > ++++++++++++++HANARO 단기통안채++++++++++++++++++++2782/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:47,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:47,662 > 20
[DEBUG|collector_api.py:200] 2021-02-09 17:00:47,886 > ++++++++++++++KODEX KRX300레버리지++++++++++++++++++++2783/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:47,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:48,269 > 21
[DEBUG|collector_api.py:200] 2021-02-09 17:00:48,499 > ++++++++++++++KBSTAR KRX300레버리지++++++++++++++++++++2784/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:48,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:48,878 > 22
[DEBUG|collector_api.py:200] 2021-02-09 17:00:49,093 > ++++++++++++++TIGER 의료기기++++++++++++++++++++2785/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:49,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:49,486 > 23
[DEBUG|collector_api.py:200] 2021-02-09 17:00:49,722 > ++++++++++++++TIGER 지주회사++++++++++++++++++++2786/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:49,723 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:50,094 > 24
[DEBUG|collector_api.py:200] 2021-02-09 17:00:50,320 > ++++++++++++++KODEX 미국채10년선물++++++++++++++++++++2787/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:50,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:50,702 > 25
[DEBUG|collector_api.py:200] 2021-02-09 17:00:50,943 > ++++++++++++++ARIRANG KRX300IT++++++++++++++++++++2788/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:50,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:51,308 > 26
[DEBUG|collector_api.py:200] 2021-02-09 17:00:51,533 > ++++++++++++++ARIRANG KRX300헬스케어++++++++++++++++++++2789/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:51,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:51,916 > 27
[DEBUG|collector_api.py:200] 2021-02-09 17:00:52,146 > ++++++++++++++KINDEX 미국WideMoat가치주++++++++++++++++++++2790/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:52,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:52,524 > 28
[DEBUG|collector_api.py:200] 2021-02-09 17:00:52,745 > ++++++++++++++KBSTAR 중국MSCI China선물(H)++++++++++++++++++++2791/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:52,746 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:53,131 > 29
[DEBUG|collector_api.py:200] 2021-02-09 17:00:53,412 > ++++++++++++++TIGER 200TR++++++++++++++++++++2792/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:53,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:53,738 > 30
[DEBUG|collector_api.py:200] 2021-02-09 17:00:53,958 > ++++++++++++++TIGER MSCI Korea TR++++++++++++++++++++2793/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:53,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:54,345 > 31
[DEBUG|collector_api.py:200] 2021-02-09 17:00:54,572 > ++++++++++++++KODEX 미국FANG플러스(H)++++++++++++++++++++2794/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:54,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:54,953 > 32
[DEBUG|collector_api.py:200] 2021-02-09 17:00:55,172 > ++++++++++++++HANARO 농업융복합산업++++++++++++++++++++2795/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:55,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:55,560 > 33
[DEBUG|collector_api.py:200] 2021-02-09 17:00:55,772 > ++++++++++++++TIGER 200커뮤니케이션서비스++++++++++++++++++++2796/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:55,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:56,168 > 34
[DEBUG|collector_api.py:200] 2021-02-09 17:00:56,373 > ++++++++++++++KBSTAR 200커뮤니케이션서비스++++++++++++++++++++2797/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:56,374 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:56,776 > 35
[DEBUG|collector_api.py:200] 2021-02-09 17:00:56,984 > ++++++++++++++KODEX Top5PlusTR++++++++++++++++++++2798/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:56,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:57,384 > 36
[DEBUG|collector_api.py:200] 2021-02-09 17:00:57,598 > ++++++++++++++KBSTAR 대형고배당10TR++++++++++++++++++++2799/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:57,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:57,992 > 37
[DEBUG|collector_api.py:200] 2021-02-09 17:00:58,203 > ++++++++++++++KINDEX 싱가포르리츠++++++++++++++++++++2800/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:58,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:58,600 > 38
[DEBUG|collector_api.py:200] 2021-02-09 17:00:58,821 > ++++++++++++++KOSEF 코스닥150++++++++++++++++++++2801/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:58,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:59,207 > 39
[DEBUG|collector_api.py:200] 2021-02-09 17:00:59,419 > ++++++++++++++TIGER 골드선물(H)++++++++++++++++++++2802/2894
[DEBUG|open_api.py:656] 2021-02-09 17:00:59,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:00:59,815 > 40
[DEBUG|collector_api.py:200] 2021-02-09 17:01:00,034 > ++++++++++++++KBSTAR KRX300미국달러선물혼합++++++++++++++++++++2803/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:00,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:00,422 > 41
[DEBUG|collector_api.py:200] 2021-02-09 17:01:00,642 > ++++++++++++++KODEX 멀티에셋하이인컴(H)++++++++++++++++++++2804/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:00,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:01,029 > 42
[DEBUG|collector_api.py:200] 2021-02-09 17:01:01,238 > ++++++++++++++KINDEX 스마트퀄리티++++++++++++++++++++2805/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:01,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:01,637 > 43
[DEBUG|collector_api.py:200] 2021-02-09 17:01:01,838 > ++++++++++++++KINDEX 스마트로우볼++++++++++++++++++++2806/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:01,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:02,245 > 44
[DEBUG|collector_api.py:200] 2021-02-09 17:01:02,449 > ++++++++++++++KINDEX 스마트하이베타++++++++++++++++++++2807/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:02,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:02,851 > 45
[DEBUG|collector_api.py:200] 2021-02-09 17:01:03,054 > ++++++++++++++HANARO e커머스++++++++++++++++++++2808/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:03,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:03,458 > 46
[DEBUG|collector_api.py:200] 2021-02-09 17:01:03,659 > ++++++++++++++HANARO 고배당++++++++++++++++++++2809/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:03,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:04,065 > 47
[DEBUG|collector_api.py:200] 2021-02-09 17:01:04,268 > ++++++++++++++KODEX Fn성장++++++++++++++++++++2810/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:04,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:04,673 > 48
[DEBUG|collector_api.py:200] 2021-02-09 17:01:04,874 > ++++++++++++++KODEX 배당가치++++++++++++++++++++2811/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:04,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:05,281 > 49
[DEBUG|collector_api.py:200] 2021-02-09 17:01:05,480 > ++++++++++++++KBSTAR 내수주플러스++++++++++++++++++++2812/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:05,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:05,887 > 50
[DEBUG|collector_api.py:200] 2021-02-09 17:01:06,086 > ++++++++++++++KBSTAR IT플러스++++++++++++++++++++2813/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:06,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:06,493 > 51
[DEBUG|collector_api.py:200] 2021-02-09 17:01:06,692 > ++++++++++++++ARIRANG 코스피TR++++++++++++++++++++2814/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:06,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:07,100 > 52
[DEBUG|collector_api.py:200] 2021-02-09 17:01:07,305 > ++++++++++++++TIGER 부동산인프라고배당++++++++++++++++++++2815/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:07,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:07,708 > 53
[DEBUG|collector_api.py:200] 2021-02-09 17:01:07,901 > ++++++++++++++KODEX TRF3070++++++++++++++++++++2816/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:07,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:08,316 > 54
[DEBUG|collector_api.py:200] 2021-02-09 17:01:08,532 > ++++++++++++++KODEX TRF5050++++++++++++++++++++2817/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:08,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:08,924 > 55
[DEBUG|collector_api.py:200] 2021-02-09 17:01:09,120 > ++++++++++++++KODEX TRF7030++++++++++++++++++++2818/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:09,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:09,532 > 56
[DEBUG|collector_api.py:200] 2021-02-09 17:01:09,743 > ++++++++++++++TIGER 미국달러단기채권액티브++++++++++++++++++++2819/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:09,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:10,139 > 57
[DEBUG|collector_api.py:200] 2021-02-09 17:01:10,343 > ++++++++++++++KOSEF Fn중소형++++++++++++++++++++2820/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:10,343 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:10,745 > 58
[DEBUG|collector_api.py:200] 2021-02-09 17:01:10,935 > ++++++++++++++KINDEX 200TR++++++++++++++++++++2821/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:10,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:11,352 > 59
[DEBUG|collector_api.py:200] 2021-02-09 17:01:11,586 > ++++++++++++++ARIRANG 미국단기우량회사채++++++++++++++++++++2822/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:11,586 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:11,960 > 60
[DEBUG|collector_api.py:200] 2021-02-09 17:01:12,158 > ++++++++++++++ARIRANG 미국장기우량회사채++++++++++++++++++++2823/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:12,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:12,568 > 61
[DEBUG|collector_api.py:200] 2021-02-09 17:01:12,761 > ++++++++++++++HANARO 200TR++++++++++++++++++++2824/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:12,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:13,176 > 62
[DEBUG|collector_api.py:200] 2021-02-09 17:01:13,368 > ++++++++++++++HANARO MSCI Korea TR++++++++++++++++++++2825/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:13,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:13,783 > 63
[DEBUG|collector_api.py:200] 2021-02-09 17:01:13,974 > ++++++++++++++ARIRANG KS로우볼가중TR++++++++++++++++++++2826/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:13,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:14,391 > 64
[DEBUG|collector_api.py:200] 2021-02-09 17:01:14,566 > ++++++++++++++ARIRANG KS로우사이즈가중TR++++++++++++++++++++2827/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:14,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:14,998 > 65
[DEBUG|collector_api.py:200] 2021-02-09 17:01:15,178 > ++++++++++++++ARIRANG KS모멘텀가중TR++++++++++++++++++++2828/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:15,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:15,606 > 66
[DEBUG|collector_api.py:200] 2021-02-09 17:01:15,786 > ++++++++++++++ARIRANG KS밸류가중TR++++++++++++++++++++2829/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:15,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:16,216 > 67
[DEBUG|collector_api.py:200] 2021-02-09 17:01:16,399 > ++++++++++++++ARIRANG KS퀄리티가중TR++++++++++++++++++++2830/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:16,400 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:16,825 > 68
[DEBUG|collector_api.py:200] 2021-02-09 17:01:17,034 > ++++++++++++++KBSTAR 팔라듐선물(H)++++++++++++++++++++2831/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:17,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:17,432 > 69
[DEBUG|collector_api.py:200] 2021-02-09 17:01:17,621 > ++++++++++++++KBSTAR 팔라듐선물인버스(H)++++++++++++++++++++2832/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:17,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:18,039 > 70
[DEBUG|collector_api.py:200] 2021-02-09 17:01:18,228 > ++++++++++++++KBSTAR 금융채액티브++++++++++++++++++++2833/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:18,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:18,646 > 71
[DEBUG|collector_api.py:200] 2021-02-09 17:01:18,830 > ++++++++++++++KODEX Fn멀티팩터++++++++++++++++++++2834/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:18,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:19,254 > 72
[DEBUG|collector_api.py:200] 2021-02-09 17:01:19,441 > ++++++++++++++KODEX 코스피대형주++++++++++++++++++++2835/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:19,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:19,860 > 73
[DEBUG|collector_api.py:200] 2021-02-09 17:01:20,046 > ++++++++++++++KODEX 200exTOP++++++++++++++++++++2836/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:20,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:20,468 > 74
[DEBUG|collector_api.py:200] 2021-02-09 17:01:20,659 > ++++++++++++++KODEX 200ESG++++++++++++++++++++2837/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:20,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:21,076 > 75
[DEBUG|collector_api.py:200] 2021-02-09 17:01:21,268 > ++++++++++++++TIGER KIS부동산인프라채권TR++++++++++++++++++++2838/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:21,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:21,683 > 76
[DEBUG|collector_api.py:200] 2021-02-09 17:01:21,852 > ++++++++++++++KINDEX 모닝스타싱가포르리츠채권혼합++++++++++++++++++++2839/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:21,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:22,291 > 77
[DEBUG|collector_api.py:200] 2021-02-09 17:01:22,471 > ++++++++++++++KBSTAR KRX국채선물3년10년스티프너++++++++++++++++++++2840/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:22,472 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:22,898 > 78
[DEBUG|collector_api.py:200] 2021-02-09 17:01:23,080 > ++++++++++++++KBSTAR KRX국채선물3년10년스티프너2X++++++++++++++++++++2841/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:23,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:23,505 > 79
[DEBUG|collector_api.py:200] 2021-02-09 17:01:23,694 > ++++++++++++++KBSTAR KRX국채선물3년10년플래트너++++++++++++++++++++2842/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:23,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:24,112 > 80
[DEBUG|collector_api.py:200] 2021-02-09 17:01:24,299 > ++++++++++++++KBSTAR KRX국채선물3년10년플래트너2X++++++++++++++++++++2843/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:24,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:24,718 > 81
[DEBUG|collector_api.py:200] 2021-02-09 17:01:24,891 > ++++++++++++++HANARO KAP초장기국고채++++++++++++++++++++2844/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:24,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:25,325 > 82
[DEBUG|collector_api.py:200] 2021-02-09 17:01:25,505 > ++++++++++++++KODEX TSE일본리츠(H)++++++++++++++++++++2845/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:25,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:25,933 > 83
[DEBUG|collector_api.py:200] 2021-02-09 17:01:26,111 > ++++++++++++++KODEX 다우존스미국리츠(H)++++++++++++++++++++2846/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:26,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:26,541 > 84
[DEBUG|collector_api.py:200] 2021-02-09 17:01:26,704 > ++++++++++++++KBSTAR 미국고정배당우선증권ICE TR++++++++++++++++++++2847/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:26,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:27,148 > 85
[DEBUG|collector_api.py:200] 2021-02-09 17:01:27,313 > ++++++++++++++HANARO 글로벌럭셔리S&P(합성)++++++++++++++++++++2848/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:27,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:27,756 > 86
[DEBUG|collector_api.py:200] 2021-02-09 17:01:27,921 > ++++++++++++++KINDEX 코스닥150++++++++++++++++++++2849/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:27,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:28,364 > 87
[DEBUG|collector_api.py:200] 2021-02-09 17:01:28,534 > ++++++++++++++KINDEX KIS종합채권(AA-이상)액티브++++++++++++++++++++2850/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:28,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:28,972 > 88
[DEBUG|collector_api.py:200] 2021-02-09 17:01:29,139 > ++++++++++++++TIGER CD금리투자KIS(합성)++++++++++++++++++++2851/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:29,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:29,578 > 89
[DEBUG|collector_api.py:200] 2021-02-09 17:01:29,777 > ++++++++++++++KODEX 코스피TR++++++++++++++++++++2852/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:29,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:30,185 > 90
[DEBUG|collector_api.py:200] 2021-02-09 17:01:30,364 > ++++++++++++++KODEX 200롱코스닥150숏선물++++++++++++++++++++2853/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:30,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:30,793 > 91
[DEBUG|collector_api.py:200] 2021-02-09 17:01:30,961 > ++++++++++++++KODEX 코스닥150롱코스피200숏선물++++++++++++++++++++2854/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:30,961 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:31,401 > 92
[DEBUG|collector_api.py:200] 2021-02-09 17:01:31,561 > ++++++++++++++KINDEX 미국S&P500++++++++++++++++++++2855/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:31,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:32,010 > 93
[DEBUG|collector_api.py:200] 2021-02-09 17:01:32,160 > ++++++++++++++TIGER 미국S&P500++++++++++++++++++++2856/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:32,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:32,618 > 94
[DEBUG|collector_api.py:200] 2021-02-09 17:01:32,786 > ++++++++++++++KBSTAR 200TR++++++++++++++++++++2857/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:32,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:33,226 > 95
[DEBUG|collector_api.py:200] 2021-02-09 17:01:33,384 > ++++++++++++++KBSTAR 코스피ex200++++++++++++++++++++2858/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:33,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:33,834 > 96
[DEBUG|collector_api.py:200] 2021-02-09 17:01:33,991 > ++++++++++++++SMART KIS단기통안채++++++++++++++++++++2859/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:33,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:34,442 > 97
[DEBUG|collector_api.py:200] 2021-02-09 17:01:34,613 > ++++++++++++++KODEX 장기종합채권(AA-이상)액티브KAP++++++++++++++++++++2860/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:34,614 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:35,050 > 98
[DEBUG|collector_api.py:200] 2021-02-09 17:01:35,214 > ++++++++++++++KODEX 200IT TR++++++++++++++++++++2861/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:35,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:35,657 > 99
[DEBUG|collector_api.py:200] 2021-02-09 17:01:35,814 > ++++++++++++++KODEX 혁신기술테마액티브++++++++++++++++++++2862/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:35,815 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:36,266 > 100
[DEBUG|collector_api.py:200] 2021-02-09 17:01:36,421 > ++++++++++++++TIGER KRX BBIG K-뉴딜++++++++++++++++++++2863/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:36,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:36,873 > 101
[DEBUG|collector_api.py:200] 2021-02-09 17:01:37,047 > ++++++++++++++TIGER KRX바이오K-뉴딜++++++++++++++++++++2864/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:37,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:37,481 > 102
[DEBUG|collector_api.py:200] 2021-02-09 17:01:37,632 > ++++++++++++++TIGER KRX2차전지K-뉴딜++++++++++++++++++++2865/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:37,632 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:38,088 > 103
[DEBUG|collector_api.py:200] 2021-02-09 17:01:38,241 > ++++++++++++++TIGER KRX게임K-뉴딜++++++++++++++++++++2866/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:38,241 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:38,695 > 104
[DEBUG|collector_api.py:200] 2021-02-09 17:01:38,860 > ++++++++++++++TIGER KRX인터넷K-뉴딜++++++++++++++++++++2867/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:38,860 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:39,303 > 105
[DEBUG|collector_api.py:200] 2021-02-09 17:01:39,460 > ++++++++++++++TIGER AI코리아그로스액티브++++++++++++++++++++2868/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:39,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:39,910 > 106
[DEBUG|collector_api.py:200] 2021-02-09 17:01:40,064 > ++++++++++++++KINDEX 국고채10년++++++++++++++++++++2869/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:40,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:40,518 > 107
[DEBUG|collector_api.py:200] 2021-02-09 17:01:40,682 > ++++++++++++++KINDEX 미국나스닥100++++++++++++++++++++2870/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:40,682 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:41,124 > 108
[DEBUG|collector_api.py:200] 2021-02-09 17:01:41,276 > ++++++++++++++HANARO Fn5G산업++++++++++++++++++++2871/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:41,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:41,732 > 109
[DEBUG|collector_api.py:200] 2021-02-09 17:01:41,882 > ++++++++++++++KBSTAR Fn5G테크++++++++++++++++++++2872/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:41,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:42,341 > 110
[DEBUG|collector_api.py:200] 2021-02-09 17:01:42,496 > ++++++++++++++KBSTAR Fn수소경제테마++++++++++++++++++++2873/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:42,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:42,949 > 111
[DEBUG|collector_api.py:200] 2021-02-09 17:01:43,111 > ++++++++++++++HANARO Fn K-뉴딜디지털플러스++++++++++++++++++++2874/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:43,111 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:43,556 > 112
[DEBUG|collector_api.py:200] 2021-02-09 17:01:43,714 > ++++++++++++++KBSTAR Fn K-뉴딜디지털플러스++++++++++++++++++++2875/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:43,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:44,162 > 113
[DEBUG|collector_api.py:200] 2021-02-09 17:01:44,308 > ++++++++++++++KINDEX Fn K-뉴딜디지털플러스++++++++++++++++++++2876/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:44,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:44,770 > 114
[DEBUG|collector_api.py:200] 2021-02-09 17:01:44,924 > ++++++++++++++KBSTAR 미국나스닥100++++++++++++++++++++2877/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:44,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:45,379 > 115
[DEBUG|collector_api.py:200] 2021-02-09 17:01:45,539 > ++++++++++++++KODEX Fn K-뉴딜디지털플러스++++++++++++++++++++2878/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:45,540 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:45,986 > 116
[DEBUG|collector_api.py:200] 2021-02-09 17:01:46,133 > ++++++++++++++KINDEX 블룸버그베트남VN30선물레버리지(H)++++++++++++++++++++2879/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:46,133 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:46,593 > 117
[DEBUG|collector_api.py:200] 2021-02-09 17:01:46,748 > ++++++++++++++KBSTAR 차이나항셍테크++++++++++++++++++++2880/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:46,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:47,200 > 118
[DEBUG|collector_api.py:200] 2021-02-09 17:01:47,353 > ++++++++++++++TIGER 차이나항셍테크++++++++++++++++++++2881/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:47,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:47,807 > 119
[DEBUG|collector_api.py:200] 2021-02-09 17:01:47,989 > ++++++++++++++TIGER 글로벌클라우드컴퓨팅INDXX++++++++++++++++++++2882/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:47,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:48,415 > 120
[DEBUG|collector_api.py:200] 2021-02-09 17:01:48,582 > ++++++++++++++TIGER 차이나전기차SOLACTIVE++++++++++++++++++++2883/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:48,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:49,022 > 121
[DEBUG|collector_api.py:200] 2021-02-09 17:01:49,182 > ++++++++++++++TIGER 차이나바이오테크SOLACTIVE++++++++++++++++++++2884/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:49,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:49,630 > 122
[DEBUG|collector_api.py:200] 2021-02-09 17:01:49,775 > ++++++++++++++KINDEX 차이나항셍테크++++++++++++++++++++2885/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:49,776 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:50,238 > 123
[DEBUG|collector_api.py:200] 2021-02-09 17:01:50,381 > ++++++++++++++KODEX 차이나항셍테크++++++++++++++++++++2886/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:50,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:50,845 > 124
[DEBUG|collector_api.py:200] 2021-02-09 17:01:50,986 > ++++++++++++++KODEX K-이노베이션액티브++++++++++++++++++++2887/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:50,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:51,452 > 125
[DEBUG|collector_api.py:200] 2021-02-09 17:01:51,593 > ++++++++++++++ARIRANG 신흥국MSCI인버스(합성 H)++++++++++++++++++++2888/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:51,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:52,059 > 126
[DEBUG|collector_api.py:200] 2021-02-09 17:01:52,224 > ++++++++++++++KOSEF 미국방어배당성장나스닥++++++++++++++++++++2889/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:52,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:52,666 > 127
[DEBUG|collector_api.py:200] 2021-02-09 17:01:52,818 > ++++++++++++++KBSTAR 글로벌데이터센터리츠나스닥(합성)++++++++++++++++++++2890/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:52,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:53,274 > 128
[DEBUG|collector_api.py:200] 2021-02-09 17:01:53,418 > ++++++++++++++HANARO 탄소효율그린뉴딜++++++++++++++++++++2891/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:53,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:53,883 > 129
[DEBUG|collector_api.py:200] 2021-02-09 17:01:54,020 > ++++++++++++++KODEX 탄소효율그린뉴딜++++++++++++++++++++2892/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:54,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:54,490 > 130
[DEBUG|collector_api.py:200] 2021-02-09 17:01:54,641 > ++++++++++++++ARIRANG 탄소효율그린뉴딜++++++++++++++++++++2893/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:54,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:55,096 > 131
[DEBUG|collector_api.py:200] 2021-02-09 17:01:55,238 > ++++++++++++++TIGER 탄소효율그린뉴딜++++++++++++++++++++2894/2894
[DEBUG|open_api.py:656] 2021-02-09 17:01:55,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-09 17:01:55,703 > 132
[DEBUG|collector_api.py:215] 2021-02-09 17:01:55,839 > daily_crawler success !!!
[DEBUG|collector_api.py:151] 2021-02-09 17:02:45,716 > daily_buy_list success !!!
[DEBUG|open_api.py:303] 2021-02-09 17:03:00,118 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:03:00,119 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:03:00,119 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:03:00,119 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:03:00,119 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:03:00,120 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:03:00,120 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:03:00,143 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:03:00,167 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:03:00,168 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:03:00,168 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:03:00,185 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:03:00,212 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:03:02,554 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:03:20,725 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:03:20,725 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:03:20,725 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:03:20,725 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:03:20,725 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:03:20,726 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:03:20,726 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:03:20,736 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:03:20,768 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:03:20,769 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:03:20,769 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:03:20,783 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:03:20,805 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:03:23,382 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:03:40,403 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:03:40,403 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:03:40,404 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:03:40,404 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:03:40,404 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:03:40,404 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:03:40,404 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:03:40,414 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:03:40,439 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:03:40,439 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:03:40,440 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:03:40,452 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:03:40,476 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:03:43,043 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:04:00,512 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:04:00,512 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:04:00,514 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:04:00,514 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:04:00,514 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:04:00,514 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:04:00,515 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:04:00,527 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:04:00,552 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:04:00,553 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:04:00,553 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:04:00,573 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:04:00,595 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:04:02,925 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:04:19,950 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:04:19,950 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:04:19,950 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:04:19,951 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:04:19,951 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:04:19,951 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:04:19,951 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:04:19,962 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:04:19,992 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:04:19,993 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:04:19,993 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:04:20,008 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:04:20,036 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:04:22,865 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:04:39,893 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:04:39,894 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:04:39,894 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:04:39,894 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:04:39,894 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:04:39,894 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:04:39,895 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:04:39,906 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:04:39,937 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:04:39,937 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:04:39,938 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:04:39,951 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:04:39,973 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:04:42,501 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:10:11,912 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:10:11,912 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:10:11,912 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:10:11,913 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:10:11,913 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:10:11,914 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:10:11,914 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:10:11,931 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:10:11,955 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:10:11,955 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:10:11,955 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:10:11,968 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:10:11,991 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:10:14,536 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:10:31,477 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:10:31,478 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:10:31,478 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:10:31,478 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:10:31,478 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:10:31,478 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:10:31,479 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:10:31,490 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:10:31,513 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:10:31,514 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:10:31,514 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:10:31,526 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:10:31,547 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:10:33,920 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:10:51,014 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:10:51,015 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:10:51,015 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:10:51,015 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:10:51,016 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:10:51,016 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:10:51,016 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:10:51,027 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:10:51,051 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:10:51,052 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:10:51,052 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:10:51,065 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:10:51,096 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:10:53,499 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:11:10,716 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:11:10,716 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:11:10,717 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:11:10,717 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:11:10,717 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:11:10,717 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:11:10,717 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:11:10,728 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:11:10,752 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:11:10,753 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:11:10,753 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:11:10,768 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:11:10,791 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:11:13,330 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:11:30,877 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:11:30,877 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:11:30,877 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:11:30,878 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:11:30,878 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:11:30,878 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:11:30,878 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:11:30,890 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:11:30,913 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:11:30,914 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:11:30,914 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:11:30,926 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:11:30,948 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:11:33,425 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:11:50,590 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:11:50,590 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:11:50,590 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:11:50,591 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:11:50,591 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:11:50,591 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:11:50,591 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:11:50,602 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:11:50,625 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:11:50,626 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:11:50,626 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:11:50,639 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:11:50,661 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:11:53,043 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:12:10,396 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:12:10,396 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:12:10,396 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:12:10,397 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:12:10,397 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:12:10,397 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:12:10,397 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:12:10,408 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:12:10,434 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:12:10,434 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:12:10,435 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:12:10,447 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:12:10,475 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:12:13,122 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:12:30,073 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:12:30,074 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:12:30,074 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:12:30,074 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:12:30,074 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:12:30,074 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:12:30,074 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:12:30,086 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:12:30,110 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:12:30,110 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:12:30,110 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:12:30,123 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:12:30,145 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:12:32,560 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:12:49,620 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:12:49,621 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:12:49,621 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:12:49,621 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:12:49,621 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:12:49,622 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:12:49,622 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:12:49,633 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:12:49,657 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:12:49,657 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:12:49,658 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:12:49,670 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:12:49,693 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:12:52,090 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:13:09,254 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:13:09,254 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:13:09,254 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:13:09,255 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:13:09,255 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:13:09,255 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:13:09,255 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:13:09,266 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:13:09,294 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:13:09,295 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:13:09,295 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:13:09,307 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:13:09,329 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:13:11,686 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:13:28,831 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:13:28,831 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:13:28,832 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:13:28,832 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:13:28,832 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:13:28,832 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:13:28,832 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:13:28,843 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:13:28,867 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:13:28,868 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:13:28,868 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:13:28,881 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:13:28,902 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:13:31,428 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:14:03,637 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:14:03,638 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:14:03,638 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:14:03,638 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:14:03,638 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:14:03,638 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:14:03,638 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:14:03,649 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:14:03,674 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:14:03,674 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:14:03,674 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:14:03,686 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:14:03,708 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:14:06,117 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:14:23,153 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:14:23,153 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:14:23,154 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:14:23,154 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:14:23,154 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:14:23,154 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:14:23,154 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:14:23,166 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:14:23,191 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:14:23,192 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:14:23,192 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:14:23,204 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:14:23,229 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:14:25,581 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:14:42,684 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:14:42,685 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:14:42,685 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:14:42,685 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:14:42,685 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:14:42,685 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:14:42,685 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:14:42,697 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:14:42,721 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:14:42,721 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:14:42,721 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:14:42,734 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:14:42,756 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:14:45,066 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:15:02,195 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:15:02,196 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:15:02,196 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:15:02,196 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:15:02,196 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:15:02,196 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:15:02,197 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:15:02,209 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:15:02,233 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:15:02,234 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:15:02,234 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:15:02,247 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:15:02,268 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:15:04,605 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:15:21,812 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:15:21,813 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:15:21,813 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:15:21,813 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:15:21,814 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:15:21,814 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:15:21,814 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:15:21,825 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:15:21,849 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:15:21,850 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:15:21,850 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:15:21,863 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:15:21,885 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:15:24,298 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:15:41,542 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:15:41,542 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:15:41,542 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:15:41,543 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:15:41,543 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:15:41,543 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:15:41,543 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:15:41,554 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:15:41,578 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:15:41,579 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:15:41,579 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:15:41,592 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:15:41,620 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:15:44,141 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:16:01,291 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:16:01,291 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:16:01,291 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:16:01,291 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:16:01,291 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:16:01,291 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:16:01,291 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:16:01,304 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:16:01,328 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:16:01,328 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:16:01,329 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:16:01,341 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:16:01,364 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:16:03,726 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:16:20,707 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:16:20,707 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:16:20,707 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:16:20,707 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:16:20,707 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:16:20,708 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:16:20,708 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:16:20,720 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:16:20,745 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:16:20,746 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:16:20,746 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:16:20,759 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:16:20,783 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:16:23,177 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:16:40,215 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:16:40,216 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:16:40,216 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:16:40,216 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:16:40,216 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:16:40,217 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:16:40,217 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:16:40,227 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:16:40,254 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:16:40,254 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:16:40,255 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:16:40,268 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:16:40,296 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:16:42,958 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:17:00,128 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:17:00,128 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:17:00,128 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:17:00,129 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:17:00,129 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:17:00,129 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:17:00,129 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:17:00,141 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:17:00,166 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:17:00,167 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:17:00,167 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:17:00,181 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:17:00,204 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:17:02,760 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:17:20,326 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:17:20,326 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:17:20,327 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:17:20,327 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:17:20,327 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:17:20,327 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:17:20,327 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:17:20,338 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:17:20,362 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:17:20,362 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:17:20,363 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:17:20,376 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:17:20,398 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:17:22,771 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:17:39,754 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:17:39,754 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:17:39,754 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:17:39,754 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:17:39,755 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:17:39,755 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:17:39,755 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:17:39,765 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:17:39,790 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:17:39,790 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:17:39,790 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:17:39,803 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:17:39,825 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:17:42,275 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:17:59,161 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:17:59,161 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:17:59,162 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:17:59,162 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:17:59,162 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:17:59,162 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:17:59,162 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:17:59,174 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:17:59,199 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:17:59,199 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:17:59,199 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:17:59,211 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:17:59,238 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:18:01,721 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:18:25,982 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:18:25,982 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:18:25,983 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:18:25,983 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:18:25,983 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:18:25,983 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:18:25,983 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:18:25,994 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:18:26,019 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:18:26,019 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:18:26,019 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:18:26,030 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:18:26,053 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:18:28,590 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:18:45,519 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:18:45,519 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:18:45,520 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:18:45,520 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:18:45,520 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:18:45,520 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:18:45,520 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:18:45,530 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:18:45,556 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:18:45,556 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:18:45,556 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:18:45,568 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:18:45,589 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:18:48,048 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:19:06,331 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:19:06,332 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:19:06,332 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:19:06,332 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:19:06,332 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:19:06,333 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:19:06,333 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:19:06,344 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:19:06,368 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:19:06,368 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:19:06,368 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:19:06,382 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:19:06,403 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:19:08,761 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:19:25,888 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:19:25,888 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:19:25,888 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:19:25,888 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:19:25,888 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:19:25,889 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:19:25,889 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:19:25,899 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:19:25,924 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:19:25,924 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:19:25,924 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:19:25,936 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:19:25,965 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:19:28,880 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:19:46,118 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:19:46,119 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:19:46,119 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:19:46,119 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:19:46,119 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:19:46,119 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:19:46,119 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:19:46,130 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:19:46,153 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:19:46,154 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:19:46,154 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:19:46,165 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:19:46,186 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:19:48,570 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:20:05,594 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:20:05,594 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:20:05,595 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:20:05,595 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:20:05,595 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:20:05,595 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:20:05,595 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:20:05,607 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:20:05,630 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:20:05,631 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:20:05,631 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:20:05,644 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:20:05,668 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:20:08,215 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:20:25,084 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:20:25,084 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:20:25,084 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:20:25,085 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:20:25,085 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:20:25,085 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:20:25,085 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:20:25,096 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:20:25,119 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:20:25,120 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:20:25,120 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:20:25,133 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:20:25,154 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:20:27,534 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:20:44,431 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:20:44,431 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:20:44,432 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:20:44,432 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:20:44,432 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:20:44,432 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:20:44,432 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:20:44,443 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:20:44,473 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:20:44,473 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:20:44,473 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:20:44,485 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:20:44,508 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:20:46,957 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:21:03,731 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:21:03,731 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:21:03,731 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:21:03,731 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:21:03,732 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:21:03,732 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:21:03,732 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:21:03,743 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:21:03,766 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:21:03,767 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:21:03,767 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:21:03,780 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:21:03,800 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:21:06,189 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:21:23,605 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:21:23,605 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:21:23,606 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:21:23,606 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:21:23,606 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:21:23,606 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:21:23,606 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:21:23,617 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:21:23,641 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:21:23,642 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:21:23,642 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:21:23,655 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:21:23,676 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:21:27,180 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:21:44,039 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:21:44,039 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:21:44,040 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:21:44,040 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:21:44,040 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:21:44,040 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:21:44,040 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:21:44,051 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:21:44,074 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:21:44,075 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:21:44,075 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:21:44,089 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:21:44,110 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:21:46,470 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:22:03,314 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:22:03,314 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:22:03,315 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:22:03,315 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:22:03,315 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:22:03,315 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:22:03,315 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:22:03,326 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:22:03,349 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:22:03,349 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:22:03,350 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:22:03,362 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:22:03,383 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:22:05,923 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:22:23,395 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:22:23,396 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:22:23,396 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:22:23,396 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:22:23,396 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:22:23,397 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:22:23,397 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:22:23,408 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:22:23,431 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:22:23,432 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:22:23,432 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:22:23,444 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:22:23,464 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:22:25,908 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:22:42,682 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:22:42,683 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:22:42,683 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:22:42,683 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:22:42,683 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:22:42,684 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:22:42,684 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:22:42,694 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:22:42,718 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:22:42,718 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:22:42,718 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:22:42,732 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:22:42,754 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:22:45,080 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:23:05,478 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:23:05,479 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:23:05,479 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:23:05,480 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:23:05,480 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:23:05,480 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:23:05,480 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:23:05,492 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:23:05,515 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:23:05,515 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:23:05,516 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:23:05,527 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:23:05,554 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:23:07,904 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:23:30,442 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:23:30,442 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:23:30,443 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:23:30,443 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:23:30,443 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:23:30,443 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:23:30,443 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:23:30,453 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:23:30,477 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:23:30,478 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:23:30,478 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:23:30,491 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:23:30,512 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:23:32,880 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:23:49,864 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:23:49,865 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:23:49,865 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:23:49,865 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:23:49,865 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:23:49,865 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:23:49,865 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:23:49,876 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:23:49,901 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:23:49,902 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:23:49,902 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:23:49,916 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:23:49,936 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:23:52,250 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:24:09,368 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:24:09,368 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:24:09,369 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:24:09,369 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:24:09,369 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:24:09,369 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:24:09,369 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:24:09,380 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:24:09,409 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:24:09,410 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:24:09,410 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:24:09,423 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:24:09,449 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:24:11,957 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:24:29,146 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:24:29,146 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:24:29,147 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:24:29,147 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:24:29,147 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:24:29,147 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:24:29,147 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:24:29,159 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:24:29,183 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:24:29,184 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:24:29,184 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:24:29,196 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:24:29,225 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:24:31,606 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:24:48,721 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:24:48,721 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:24:48,721 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:24:48,721 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:24:48,722 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:24:48,722 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:24:48,722 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:24:48,733 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:24:48,757 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:24:48,757 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:24:48,757 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:24:48,769 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:24:48,796 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:24:51,107 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:25:08,169 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:25:08,170 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:25:08,170 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:25:08,170 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:25:08,170 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:25:08,170 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:25:08,170 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:25:08,182 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:25:08,208 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:25:08,208 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:25:08,208 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:25:08,221 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:25:08,247 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:25:10,544 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:25:27,445 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:25:27,445 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:25:27,446 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:25:27,446 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:25:27,446 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:25:27,446 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:25:27,446 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:25:27,457 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:25:27,483 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:25:27,484 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:25:27,484 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:25:27,496 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:25:27,519 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:25:29,817 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:25:46,628 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:25:46,628 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:25:46,628 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:25:46,628 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:25:46,629 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:25:46,629 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:25:46,629 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:25:46,640 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:25:46,664 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:25:46,665 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:25:46,665 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:25:46,677 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:25:46,700 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:25:49,002 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:26:06,562 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:26:06,562 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:26:06,562 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:26:06,562 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:26:06,563 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:26:06,563 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:26:06,563 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:26:06,574 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:26:06,598 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:26:06,599 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:26:06,599 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:26:06,610 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:26:06,640 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:26:08,991 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:26:26,168 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:26:26,168 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:26:26,168 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:26:26,169 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:26:26,169 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:26:26,169 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:26:26,169 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:26:26,181 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:26:26,205 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:26:26,206 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:26:26,206 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:26:26,218 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:26:26,239 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:26:28,580 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:26:45,517 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:26:45,517 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:26:45,518 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:26:45,518 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:26:45,518 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:26:45,518 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:26:45,518 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:26:45,530 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:26:45,554 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:26:45,555 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:26:45,555 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:26:45,568 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:26:45,588 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:26:48,040 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:27:36,469 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:27:36,469 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:27:36,469 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:27:36,469 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:27:36,470 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:27:36,470 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:27:36,470 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:27:36,481 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:27:36,505 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:27:36,505 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:27:36,505 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:27:36,517 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:27:36,539 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:27:39,170 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:27:56,434 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:27:56,434 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:27:56,434 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:27:56,434 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:27:56,435 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:27:56,435 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:27:56,435 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:27:56,446 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:27:56,472 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:27:56,473 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:27:56,473 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:27:56,485 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:27:56,505 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:27:59,409 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:28:16,141 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:28:16,142 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:28:16,142 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:28:16,142 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:28:16,142 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:28:16,142 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:28:16,143 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:28:16,154 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:28:16,180 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:28:16,180 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:28:16,181 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:28:16,195 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:28:16,218 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:28:18,685 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:28:35,711 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:28:35,712 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:28:35,712 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:28:35,712 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:28:35,712 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:28:35,713 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:28:35,713 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:28:35,724 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:28:35,748 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:28:35,748 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:28:35,748 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:28:35,761 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:28:35,782 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:28:38,326 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:28:55,671 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:28:55,671 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:28:55,671 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:28:55,671 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:28:55,671 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:28:55,672 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:28:55,672 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:28:55,682 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:28:55,707 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:28:55,707 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:28:55,708 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:28:55,720 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:28:55,740 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:28:58,117 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:29:16,196 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:29:16,197 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:29:16,197 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:29:16,197 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:29:16,197 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:29:16,197 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:29:16,198 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:29:16,209 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:29:16,234 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:29:16,234 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:29:16,234 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:29:16,248 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:29:16,268 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:29:18,700 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:29:35,931 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:29:35,931 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:29:35,932 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:29:35,932 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:29:35,932 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:29:35,932 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:29:35,932 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:29:35,944 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:29:35,968 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:29:35,968 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:29:35,969 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:29:35,982 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:29:36,008 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:29:38,452 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:30:02,911 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:30:02,912 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:30:02,912 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:30:02,912 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:30:02,912 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:30:02,913 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:30:02,913 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:30:02,923 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:30:02,947 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:30:02,947 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:30:02,947 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:30:02,960 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:30:02,982 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:30:05,409 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:30:22,402 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:30:22,402 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:30:22,402 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:30:22,402 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:30:22,402 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:30:22,403 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:30:22,403 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:30:22,414 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:30:22,437 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:30:22,438 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:30:22,438 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:30:22,451 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:30:22,472 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:30:24,865 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:30:42,028 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:30:42,029 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:30:42,029 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:30:42,029 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:30:42,029 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:30:42,030 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:30:42,030 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:30:42,041 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:30:42,066 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:30:42,066 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:30:42,066 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:30:42,078 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:30:42,102 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:30:44,655 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:31:02,044 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:31:02,044 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:31:02,044 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:31:02,044 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:31:02,044 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:31:02,045 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:31:02,045 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:31:02,055 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:31:02,079 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:31:02,080 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:31:02,080 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:31:02,105 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:31:02,124 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:31:04,598 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:31:21,739 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:31:21,740 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:31:21,740 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:31:21,740 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:31:21,740 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:31:21,740 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:31:21,740 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:31:21,751 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:31:21,776 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:31:21,777 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:31:21,777 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:31:21,789 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:31:21,811 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:31:24,189 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:31:41,770 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:31:41,770 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:31:41,771 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:31:41,771 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:31:41,771 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:31:41,771 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:31:41,771 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:31:41,782 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:31:41,810 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:31:41,811 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:31:41,811 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:31:41,822 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:31:41,843 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:31:44,268 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:32:01,327 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:32:01,327 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:32:01,327 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:32:01,328 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:32:01,328 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:32:01,328 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:32:01,328 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:32:01,339 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:32:01,364 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:32:01,365 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:32:01,365 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:32:01,377 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:32:01,398 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:32:03,950 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:32:22,591 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:32:22,591 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:32:22,592 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:32:22,592 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:32:22,592 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:32:22,592 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:32:22,592 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:32:22,604 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:32:22,629 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:32:22,630 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:32:22,630 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:32:22,643 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:32:22,669 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:32:25,040 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:32:42,602 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:32:42,603 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:32:42,603 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:32:42,603 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:32:42,603 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:32:42,603 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:32:42,603 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:32:42,616 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:32:42,641 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:32:42,641 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:32:42,642 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:32:42,657 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:32:42,681 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:32:45,159 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:33:02,403 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:33:02,404 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:33:02,404 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:33:02,404 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:33:02,404 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:33:02,405 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:33:02,405 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:33:02,416 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:33:02,442 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:33:02,443 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:33:02,443 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:33:02,458 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:33:02,480 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:33:04,948 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:38:38,441 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:38:38,442 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:38:38,442 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:38:38,442 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:38:38,442 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:38:38,442 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:38:38,442 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:38:38,454 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:38:38,479 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:38:38,479 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:38:38,480 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:38:38,491 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:38:38,514 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:38:41,165 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:38:58,497 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:38:58,497 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:38:58,498 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:38:58,498 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:38:58,498 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:38:58,498 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:38:58,499 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:38:58,510 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:38:58,535 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:38:58,535 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:38:58,535 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:38:58,554 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:38:58,575 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:39:00,947 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:39:18,078 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:39:18,078 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:39:18,079 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:39:18,079 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:39:18,079 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:39:18,079 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:39:18,079 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:39:18,091 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:39:18,116 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:39:18,117 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:39:18,117 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:39:18,129 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:39:18,158 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:39:20,641 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:39:37,838 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:39:37,838 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:39:37,838 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:39:37,839 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:39:37,839 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:39:37,839 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:39:37,839 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:39:37,851 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:39:37,877 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:39:37,877 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:39:37,877 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:39:37,891 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:39:37,914 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:39:40,448 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:40:01,071 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:40:01,072 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:40:01,072 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:40:01,072 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:40:01,072 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:40:01,072 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:40:01,072 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:40:01,083 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:40:01,108 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:40:01,108 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:40:01,109 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:40:01,123 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:40:01,145 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:40:03,880 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:40:21,441 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:40:21,441 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:40:21,441 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:40:21,442 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:40:21,442 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:40:21,442 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:40:21,442 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:40:21,454 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:40:21,479 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:40:21,480 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:40:21,480 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:40:21,494 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:40:21,520 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:40:23,811 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:40:40,980 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:40:40,981 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:40:40,981 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:40:40,981 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:40:40,981 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:40:40,981 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:40:40,982 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:40:40,994 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:40:41,017 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:40:41,018 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:40:41,018 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:40:41,031 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:40:41,055 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:40:43,567 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:41:00,607 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:41:00,607 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:41:00,607 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:41:00,607 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:41:00,608 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:41:00,608 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:41:00,608 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:41:00,619 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:41:00,644 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:41:00,644 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:41:00,644 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:41:00,659 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:41:00,681 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:41:03,165 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:41:20,483 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:41:20,483 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:41:20,484 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:41:20,484 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:41:20,484 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:41:20,484 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:41:20,484 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:41:20,496 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:41:20,520 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:41:20,521 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:41:20,521 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:41:20,541 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:41:20,564 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:41:23,072 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:41:40,674 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:41:40,674 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:41:40,674 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:41:40,674 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:41:40,675 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:41:40,675 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:41:40,675 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:41:40,685 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:41:40,712 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:41:40,712 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:41:40,712 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:41:40,725 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:41:40,746 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:41:43,115 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:42:00,454 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:42:00,454 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:42:00,454 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:42:00,454 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:42:00,454 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:42:00,454 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:42:00,454 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:42:00,464 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:42:00,489 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:42:00,490 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:42:00,490 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:42:00,504 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:42:00,531 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:42:03,085 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:42:20,337 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:42:20,338 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:42:20,338 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:42:20,338 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:42:20,339 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:42:20,339 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:42:20,339 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:42:20,350 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:42:20,376 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:42:20,377 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:42:20,377 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:42:20,390 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:42:20,412 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:42:22,754 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:42:39,830 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:42:39,830 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:42:39,831 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:42:39,831 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:42:39,831 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:42:39,831 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:42:39,831 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:42:39,842 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:42:39,867 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:42:39,868 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:42:39,868 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:42:39,881 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:42:39,909 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:42:42,293 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:42:59,458 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:42:59,459 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:42:59,459 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:42:59,459 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:42:59,459 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:42:59,459 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:42:59,459 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:42:59,469 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:42:59,494 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:42:59,495 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:42:59,495 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:42:59,508 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:42:59,530 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:43:01,906 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:43:19,026 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:43:19,026 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:43:19,026 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:43:19,027 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:43:19,027 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:43:19,027 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:43:19,027 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:43:19,038 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:43:19,064 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:43:19,065 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:43:19,065 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:43:19,083 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:43:19,107 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:43:21,450 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:43:38,798 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:43:38,798 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:43:38,799 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:43:38,799 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:43:38,799 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:43:38,799 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:43:38,799 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:43:38,810 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:43:38,836 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:43:38,837 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:43:38,837 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:43:38,851 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:43:38,881 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:43:41,315 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:43:58,308 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:43:58,309 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:43:58,309 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:43:58,309 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:43:58,309 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:43:58,310 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:43:58,310 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:43:58,322 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:43:58,346 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:43:58,347 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:43:58,347 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:43:58,360 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:43:58,381 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:44:00,812 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:44:18,009 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:44:18,009 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:44:18,009 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:44:18,010 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:44:18,010 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:44:18,010 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:44:18,010 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:44:18,022 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:44:18,057 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:44:18,058 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:44:18,058 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:44:18,071 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:44:18,094 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:44:20,600 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:44:37,748 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:44:37,748 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:44:37,749 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:44:37,749 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:44:37,749 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:44:37,749 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:44:37,749 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:44:37,761 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:44:37,786 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:44:37,787 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:44:37,787 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:44:37,801 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:44:37,823 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:44:40,173 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:44:59,477 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:44:59,477 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:44:59,477 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:44:59,478 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:44:59,478 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:44:59,478 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:44:59,478 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:44:59,491 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:44:59,515 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:44:59,516 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:44:59,516 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:44:59,529 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:44:59,557 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:45:02,008 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:45:19,269 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:45:19,270 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:45:19,270 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:45:19,270 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:45:19,270 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:45:19,270 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:45:19,271 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:45:19,282 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:45:19,308 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:45:19,308 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:45:19,309 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:45:19,321 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:45:19,345 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:45:21,816 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:305] 2021-02-09 17:46:00,453 > disconnected
[DEBUG|open_api.py:244] 2021-02-09 17:46:00,454 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:46:00,454 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:46:00,454 > 계좌번호 : 
[DEBUG|open_api.py:160] 2021-02-09 17:46:00,455 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:167] 2021-02-09 17:46:00,455 > 실전!@@@@@@@@@@@
[DEBUG|open_api.py:207] 2021-02-09 17:46:00,455 > db name !!! : JackBot1
[DEBUG|open_api.py:198] 2021-02-09 17:46:00,467 > JackBot1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:46:00,491 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:46:00,492 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:46:00,492 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:46:00,505 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-09 17:46:00,557 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-09 17:46:00,557 > 1
[DEBUG|open_api.py:303] 2021-02-09 17:50:53,221 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:50:53,221 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:50:53,222 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:50:53,222 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:50:53,222 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:50:53,222 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:50:53,222 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:50:53,233 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:50:53,258 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:50:53,259 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:50:53,259 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:50:53,271 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:50:53,296 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:50:55,615 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:56:25,731 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:56:25,731 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:56:25,731 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:56:25,732 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:56:25,732 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:56:25,732 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:56:25,732 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:56:25,744 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:56:25,768 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:56:25,769 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:56:25,769 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:56:25,782 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:56:25,805 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:56:28,409 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:56:45,627 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:56:45,628 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:56:45,628 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:56:45,628 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:56:45,628 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:56:45,628 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:56:45,629 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:56:45,640 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:56:45,665 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:56:45,666 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:56:45,666 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:56:45,679 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:56:45,701 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:56:48,091 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:57:06,166 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:57:06,166 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:57:06,166 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:57:06,166 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:57:06,166 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:57:06,167 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:57:06,167 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:57:06,179 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:57:06,203 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:57:06,204 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:57:06,204 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:57:06,216 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:57:06,238 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:57:08,623 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:57:25,747 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:57:25,747 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:57:25,748 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:57:25,748 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:57:25,748 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:57:25,748 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:57:25,748 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:57:25,760 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:57:25,785 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:57:25,785 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:57:25,786 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:57:25,799 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:57:25,825 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:57:28,273 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:57:45,430 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:57:45,431 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:57:45,431 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:57:45,431 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:57:45,431 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:57:45,432 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:57:45,432 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:57:45,442 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:57:45,467 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:57:45,468 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:57:45,468 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:57:45,482 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:57:45,503 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:57:47,835 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:58:05,147 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:58:05,147 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:58:05,147 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:58:05,148 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:58:05,148 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:58:05,148 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:58:05,148 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:58:05,160 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:58:05,185 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:58:05,186 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:58:05,186 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:58:05,199 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:58:05,222 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:58:07,610 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:58:24,745 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:58:24,746 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:58:24,746 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:58:24,746 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:58:24,746 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:58:24,746 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:58:24,747 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:58:24,757 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:58:24,782 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:58:24,783 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:58:24,783 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:58:24,795 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:58:24,819 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:58:27,383 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:58:44,438 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:58:44,439 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:58:44,439 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:58:44,439 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:58:44,439 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:58:44,440 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:58:44,440 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:58:44,452 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:58:44,477 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:58:44,477 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:58:44,477 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:58:44,490 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:58:44,514 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:58:46,848 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:59:04,210 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:59:04,211 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:59:04,211 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:59:04,211 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:59:04,212 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:59:04,212 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:59:04,212 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:59:04,224 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:59:04,247 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:59:04,248 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:59:04,248 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:59:04,261 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:59:04,283 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:59:06,693 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:59:23,673 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:59:23,673 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:59:23,674 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:59:23,674 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:59:23,674 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:59:23,674 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:59:23,674 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:59:23,685 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:59:23,716 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:59:23,717 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:59:23,717 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:59:23,732 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:59:23,753 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:59:26,246 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 17:59:43,420 > connected
[DEBUG|open_api.py:244] 2021-02-09 17:59:43,421 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 17:59:43,421 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 17:59:43,421 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 17:59:43,421 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 17:59:43,421 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 17:59:43,422 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 17:59:43,434 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 17:59:43,460 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 17:59:43,460 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 17:59:43,460 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 17:59:43,473 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 17:59:43,495 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 17:59:47,022 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:00:04,158 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:00:04,158 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:00:04,158 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:00:04,159 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:00:04,159 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:00:04,159 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:00:04,159 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:00:04,172 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:00:04,198 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:00:04,198 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:00:04,198 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:00:04,213 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:00:04,236 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:00:06,806 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:00:23,750 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:00:23,750 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:00:23,750 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:00:23,751 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:00:23,751 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:00:23,751 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:00:23,751 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:00:23,762 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:00:23,785 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:00:23,786 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:00:23,786 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:00:23,800 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:00:23,827 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:00:26,457 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:00:43,931 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:00:43,932 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:00:43,932 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:00:43,932 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:00:43,932 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:00:43,933 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:00:43,933 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:00:43,944 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:00:43,968 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:00:43,969 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:00:43,969 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:00:43,982 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:00:44,009 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:00:46,389 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:01:03,627 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:01:03,628 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:01:03,628 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:01:03,628 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:01:03,628 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:01:03,629 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:01:03,629 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:01:03,641 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:01:03,666 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:01:03,666 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:01:03,666 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:01:03,681 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:01:03,704 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:01:06,056 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:01:23,049 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:01:23,050 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:01:23,050 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:01:23,050 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:01:23,051 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:01:23,051 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:01:23,051 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:01:23,062 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:01:23,089 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:01:23,089 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:01:23,090 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:01:23,104 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:01:23,126 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:01:25,756 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:01:45,102 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:01:45,102 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:01:45,103 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:01:45,103 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:01:45,103 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:01:45,103 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:01:45,103 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:01:45,113 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:01:45,138 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:01:45,139 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:01:45,139 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:01:45,151 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:01:45,173 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:01:47,643 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:02:05,693 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:02:05,693 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:02:05,693 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:02:05,693 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:02:05,693 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:02:05,694 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:02:05,694 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:02:05,705 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:02:05,729 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:02:05,729 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:02:05,729 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:02:05,742 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:02:05,769 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:02:08,262 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:02:25,651 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:02:25,652 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:02:25,652 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:02:25,652 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:02:25,652 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:02:25,652 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:02:25,653 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:02:25,664 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:02:25,689 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:02:25,689 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:02:25,690 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:02:25,703 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:02:25,726 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:02:28,122 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:02:47,171 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:02:47,171 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:02:47,171 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:02:47,171 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:02:47,172 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:02:47,172 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:02:47,172 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:02:47,182 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:02:47,208 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:02:47,209 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:02:47,209 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:02:47,221 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:02:47,246 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:02:49,631 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:03:06,678 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:03:06,678 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:03:06,678 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:03:06,678 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:03:06,678 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:03:06,679 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:03:06,679 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:03:06,690 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:03:06,717 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:03:06,718 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:03:06,718 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:03:06,737 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:03:06,759 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:03:09,142 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:08:39,125 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:08:39,125 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:08:39,125 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:08:39,125 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:08:39,125 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:08:39,126 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:08:39,126 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:08:39,138 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:08:39,163 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:08:39,164 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:08:39,164 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:08:39,177 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:08:39,199 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:08:41,643 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:08:59,073 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:08:59,073 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:08:59,074 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:08:59,074 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:08:59,074 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:08:59,074 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:08:59,074 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:08:59,085 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:08:59,110 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:08:59,111 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:08:59,111 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:08:59,123 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:08:59,147 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:09:01,622 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:09:18,963 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:09:18,963 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:09:18,963 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:09:18,964 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:09:18,964 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:09:18,964 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:09:18,964 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:09:18,975 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:09:19,001 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:09:19,001 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:09:19,002 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:09:19,017 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:09:19,038 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:09:21,501 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:09:38,824 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:09:38,824 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:09:38,824 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:09:38,825 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:09:38,825 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:09:38,825 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:09:38,825 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:09:38,837 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:09:38,862 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:09:38,863 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:09:38,863 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:09:38,875 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:09:38,903 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:09:41,338 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:09:59,055 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:09:59,055 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:09:59,056 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:09:59,056 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:09:59,056 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:09:59,056 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:09:59,056 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:09:59,067 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:09:59,091 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:09:59,092 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:09:59,092 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:09:59,106 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:09:59,132 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:10:01,471 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:10:18,872 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:10:18,872 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:10:18,872 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:10:18,872 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:10:18,872 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:10:18,873 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:10:18,873 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:10:18,886 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:10:18,910 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:10:18,910 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:10:18,911 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:10:18,923 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:10:18,948 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:10:21,315 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:10:38,478 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:10:38,479 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:10:38,479 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:10:38,479 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:10:38,479 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:10:38,479 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:10:38,480 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:10:38,491 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:10:38,517 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:10:38,517 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:10:38,517 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:10:38,532 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:10:38,559 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:10:40,924 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:10:57,989 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:10:57,989 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:10:57,989 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:10:57,990 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:10:57,990 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:10:57,990 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:10:57,990 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:10:58,000 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:10:58,026 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:10:58,027 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:10:58,027 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:10:58,040 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:10:58,069 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:11:00,569 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:11:17,873 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:11:17,874 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:11:17,874 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:11:17,874 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:11:17,874 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:11:17,874 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:11:17,875 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:11:17,886 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:11:17,910 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:11:17,911 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:11:17,911 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:11:17,924 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:11:17,968 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:11:20,325 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:11:37,724 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:11:37,724 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:11:37,725 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:11:37,725 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:11:37,725 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:11:37,725 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:11:37,725 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:11:37,737 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:11:37,771 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:11:37,772 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:11:37,772 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:11:37,785 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:11:37,807 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:11:40,323 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:11:57,577 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:11:57,577 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:11:57,577 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:11:57,578 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:11:57,578 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:11:57,578 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:11:57,578 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:11:57,589 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:11:57,614 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:11:57,614 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:11:57,615 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:11:57,628 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:11:57,652 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:12:00,117 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:12:17,484 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:12:17,485 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:12:17,485 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:12:17,485 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:12:17,486 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:12:17,486 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:12:17,486 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:12:17,497 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:12:17,522 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:12:17,522 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:12:17,522 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:12:17,536 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:12:17,557 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:12:20,033 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:12:37,283 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:12:37,283 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:12:37,283 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:12:37,284 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:12:37,284 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:12:37,284 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:12:37,284 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:12:37,295 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:12:37,326 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:12:37,327 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:12:37,327 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:12:37,358 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:12:37,380 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:12:39,758 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:12:57,132 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:12:57,133 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:12:57,133 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:12:57,133 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:12:57,133 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:12:57,133 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:12:57,133 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:12:57,144 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:12:57,169 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:12:57,169 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:12:57,169 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:12:57,183 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:12:57,206 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:12:59,680 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:13:17,284 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:13:17,285 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:13:17,285 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:13:17,285 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:13:17,285 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:13:17,285 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:13:17,286 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:13:17,296 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:13:17,321 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:13:17,321 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:13:17,321 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:13:17,335 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:13:17,355 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:13:19,831 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:13:36,749 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:13:36,750 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:13:36,750 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:13:36,750 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:13:36,750 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:13:36,751 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:13:36,751 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:13:36,761 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:13:36,790 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:13:36,791 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:13:36,791 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:13:36,803 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:13:36,824 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:13:39,164 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:13:56,499 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:13:56,500 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:13:56,500 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:13:56,500 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:13:56,501 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:13:56,501 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:13:56,501 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:13:56,511 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:13:56,538 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:13:56,538 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:13:56,538 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:13:56,550 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:13:56,578 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:13:58,965 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:14:16,214 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:14:16,215 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:14:16,215 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:14:16,215 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:14:16,215 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:14:16,215 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:14:16,215 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:14:16,226 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:14:16,251 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:14:16,252 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:14:16,252 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:14:16,264 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:14:16,286 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:14:18,594 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:14:35,714 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:14:35,714 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:14:35,715 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:14:35,715 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:14:35,715 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:14:35,715 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:14:35,715 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:14:35,725 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:14:35,752 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:14:35,752 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:14:35,752 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:14:35,765 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:14:35,788 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:14:38,171 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:14:55,785 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:14:55,786 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:14:55,786 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:14:55,786 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:14:55,786 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:14:55,786 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:14:55,787 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:14:55,798 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:14:55,828 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:14:55,829 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:14:55,829 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:14:55,841 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:14:55,864 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:14:58,264 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:15:15,289 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:15:15,290 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:15:15,290 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:15:15,290 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:15:15,290 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:15:15,291 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:15:15,291 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:15:15,303 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:15:15,328 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:15:15,329 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:15:15,329 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:15:15,342 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:15:15,365 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:15:17,707 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:15:44,516 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:15:44,516 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:15:44,516 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:15:44,516 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:15:44,516 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:15:44,516 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:15:44,517 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:15:44,527 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:15:44,553 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:15:44,554 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:15:44,554 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:15:44,566 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:15:44,593 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:15:46,973 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:16:04,044 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:16:04,044 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:16:04,045 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:16:04,045 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:16:04,045 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:16:04,045 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:16:04,045 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:16:04,058 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:16:04,082 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:16:04,082 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:16:04,083 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:16:04,098 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:16:04,121 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:16:06,454 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:16:23,636 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:16:23,637 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:16:23,637 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:16:23,637 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:16:23,637 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:16:23,637 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:16:23,638 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:16:23,649 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:16:23,674 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:16:23,674 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:16:23,675 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:16:23,688 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:16:23,715 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:16:26,229 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:16:43,862 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:16:43,862 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:16:43,862 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:16:43,862 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:16:43,863 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:16:43,863 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:16:43,863 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:16:43,876 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:16:43,912 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:16:43,913 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:16:43,913 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:16:43,926 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:16:43,954 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:16:46,224 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:17:03,361 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:17:03,361 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:17:03,362 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:17:03,362 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:17:03,362 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:17:03,362 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:17:03,363 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:17:03,375 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:17:03,401 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:17:03,402 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:17:03,402 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:17:03,432 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:17:03,457 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:17:06,001 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:17:23,408 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:17:23,408 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:17:23,408 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:17:23,408 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:17:23,408 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:17:23,409 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:17:23,409 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:17:23,420 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:17:23,444 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:17:23,445 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:17:23,445 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:17:23,458 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:17:23,482 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:17:25,976 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:17:43,266 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:17:43,266 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:17:43,266 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:17:43,267 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:17:43,267 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:17:43,267 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:17:43,267 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:17:43,279 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:17:43,303 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:17:43,304 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:17:43,304 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:17:43,317 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:17:43,345 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:17:45,758 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:18:03,219 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:18:03,220 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:18:03,220 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:18:03,220 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:18:03,220 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:18:03,220 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:18:03,220 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:18:03,232 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:18:03,259 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:18:03,259 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:18:03,259 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:18:03,272 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:18:03,294 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:18:05,865 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:18:23,586 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:18:23,587 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:18:23,587 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:18:23,587 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:18:23,587 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:18:23,588 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:18:23,588 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:18:23,599 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:18:23,622 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:18:23,623 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:18:23,623 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:18:23,636 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:18:23,661 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:18:25,988 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:18:43,159 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:18:43,160 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:18:43,160 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:18:43,160 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:18:43,160 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:18:43,160 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:18:43,161 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:18:43,172 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:18:43,197 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:18:43,198 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:18:43,198 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:18:43,209 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:18:43,231 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:18:45,575 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:19:05,821 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:19:05,821 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:19:05,821 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:19:05,821 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:19:05,821 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:19:05,822 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:19:05,822 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:19:05,835 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:19:05,861 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:19:05,862 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:19:05,862 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:19:05,877 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:19:05,900 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:19:08,369 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:19:25,591 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:19:25,591 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:19:25,591 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:19:25,592 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:19:25,592 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:19:25,592 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:19:25,592 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:19:25,604 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:19:25,631 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:19:25,631 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:19:25,632 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:19:25,643 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:19:25,672 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:19:28,216 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:19:45,365 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:19:45,366 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:19:45,366 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:19:45,367 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:19:45,367 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:19:45,367 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:19:45,367 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:19:45,379 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:19:45,402 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:19:45,403 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:19:45,403 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:19:45,416 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:19:45,439 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:19:47,898 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:20:05,037 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:20:05,037 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:20:05,038 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:20:05,038 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:20:05,038 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:20:05,038 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:20:05,038 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:20:05,050 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:20:05,075 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:20:05,075 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:20:05,075 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:20:05,090 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:20:05,111 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:20:07,693 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:20:24,930 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:20:24,930 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:20:24,931 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:20:24,931 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:20:24,931 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:20:24,931 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:20:24,931 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:20:24,942 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:20:24,966 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:20:24,967 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:20:24,967 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:20:24,979 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:20:25,001 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:20:27,423 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:20:44,924 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:20:44,924 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:20:44,924 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:20:44,925 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:20:44,925 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:20:44,925 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:20:44,925 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:20:44,937 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:20:44,961 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:20:44,962 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:20:44,962 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:20:44,974 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:20:44,997 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:20:47,337 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:21:10,947 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:21:10,947 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:21:10,948 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:21:10,948 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:21:10,948 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:21:10,948 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:21:10,948 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:21:10,960 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:21:10,987 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:21:10,988 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:21:10,988 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:21:11,000 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:21:11,022 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:21:13,736 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:21:30,826 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:21:30,827 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:21:30,827 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:21:30,827 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:21:30,827 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:21:30,827 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:21:30,828 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:21:30,840 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:21:30,867 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:21:30,868 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:21:30,868 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:21:30,882 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:21:30,903 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:21:33,381 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:21:50,806 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:21:50,806 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:21:50,806 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:21:50,807 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:21:50,807 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:21:50,807 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:21:50,807 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:21:50,818 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:21:50,845 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:21:50,846 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:21:50,846 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:21:50,858 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:21:50,888 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:21:53,491 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:22:10,810 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:22:10,810 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:22:10,810 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:22:10,811 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:22:10,811 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:22:10,811 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:22:10,811 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:22:10,821 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:22:10,847 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:22:10,847 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:22:10,848 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:22:10,861 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:22:10,885 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:22:13,337 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:22:30,738 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:22:30,738 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:22:30,738 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:22:30,739 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:22:30,739 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:22:30,739 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:22:30,739 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:22:30,750 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:22:30,775 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:22:30,776 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:22:30,776 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:22:30,788 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:22:30,816 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:22:33,141 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:22:50,339 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:22:50,339 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:22:50,339 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:22:50,340 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:22:50,340 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:22:50,340 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:22:50,340 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:22:50,352 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:22:50,376 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:22:50,376 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:22:50,377 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:22:50,390 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:22:50,416 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:22:52,895 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:23:09,938 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:23:09,938 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:23:09,939 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:23:09,939 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:23:09,939 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:23:09,939 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:23:09,939 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:23:09,951 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:23:09,981 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:23:09,982 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:23:09,982 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:23:09,994 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:23:10,016 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:23:12,483 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:23:29,780 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:23:29,780 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:23:29,780 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:23:29,780 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:23:29,780 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:23:29,781 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:23:29,781 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:23:29,791 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:23:29,818 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:23:29,818 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:23:29,818 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:23:29,831 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:23:29,860 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:23:32,303 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:23:49,539 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:23:49,539 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:23:49,539 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:23:49,540 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:23:49,540 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:23:49,540 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:23:49,540 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:23:49,552 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:23:49,580 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:23:49,581 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:23:49,581 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:23:49,594 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:23:49,622 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:23:52,002 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:24:09,583 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:24:09,583 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:24:09,583 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:24:09,583 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:24:09,584 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:24:09,584 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:24:09,584 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:24:09,594 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:24:09,624 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:24:09,624 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:24:09,624 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:24:09,636 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:24:09,659 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:24:11,978 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:24:30,049 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:24:30,049 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:24:30,049 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:24:30,049 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:24:30,049 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:24:30,050 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:24:30,050 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:24:30,062 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:24:30,089 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:24:30,089 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:24:30,090 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:24:30,103 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:24:30,124 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:24:32,673 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:24:49,882 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:24:49,887 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:24:49,888 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:24:49,888 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:24:49,888 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:24:49,888 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:24:49,888 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:24:49,900 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:24:49,923 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:24:49,924 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:24:49,924 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:24:49,937 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:24:49,960 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:24:52,404 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:25:10,463 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:25:10,463 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:25:10,463 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:25:10,464 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:25:10,464 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:25:10,464 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:25:10,464 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:25:10,475 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:25:10,509 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:25:10,510 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:25:10,510 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:25:10,523 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:25:10,550 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:25:12,906 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:25:31,976 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:25:31,976 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:25:31,976 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:25:31,977 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:25:31,978 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:25:31,978 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:25:31,978 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:25:31,991 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:25:32,022 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:25:32,023 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:25:32,023 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:25:32,036 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:25:32,062 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:25:34,416 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:25:51,563 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:25:51,563 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:25:51,564 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:25:51,564 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:25:51,564 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:25:51,564 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:25:51,564 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:25:51,575 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:25:51,599 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:25:51,600 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:25:51,600 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:25:51,614 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:25:51,635 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:25:53,974 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:26:11,368 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:26:11,369 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:26:11,369 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:26:11,369 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:26:11,369 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:26:11,369 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:26:11,370 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:26:11,382 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:26:11,408 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:26:11,408 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:26:11,409 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:26:11,421 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:26:11,443 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:26:13,777 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:26:31,134 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:26:31,134 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:26:31,134 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:26:31,135 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:26:31,135 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:26:31,135 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:26:31,135 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:26:31,147 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:26:31,172 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:26:31,173 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:26:31,173 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:26:31,184 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:26:31,212 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:26:33,519 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:26:50,890 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:26:50,891 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:26:50,891 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:26:50,891 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:26:50,891 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:26:50,891 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:26:50,892 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:26:50,904 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:26:50,928 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:26:50,929 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:26:50,929 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:26:50,942 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:26:50,965 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:26:53,624 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:27:10,934 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:27:10,934 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:27:10,934 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:27:10,935 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:27:10,935 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:27:10,935 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:27:10,935 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:27:10,948 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:27:10,975 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:27:10,976 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:27:10,976 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:27:11,000 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:27:11,022 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:27:13,498 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:27:30,915 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:27:30,915 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:27:30,915 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:27:30,916 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:27:30,916 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:27:30,916 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:27:30,916 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:27:30,928 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:27:30,952 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:27:30,953 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:27:30,953 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:27:30,966 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:27:30,991 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:27:33,350 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:27:51,033 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:27:51,034 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:27:51,034 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:27:51,034 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:27:51,034 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:27:51,034 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:27:51,035 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:27:51,047 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:27:51,072 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:27:51,073 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:27:51,073 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:27:51,087 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:27:51,109 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:27:53,475 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:28:11,195 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:28:11,195 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:28:11,195 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:28:11,196 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:28:11,196 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:28:11,196 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:28:11,196 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:28:11,207 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:28:11,232 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:28:11,232 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:28:11,233 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:28:11,245 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:28:11,266 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:28:13,602 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:28:31,175 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:28:31,175 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:28:31,175 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:28:31,176 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:28:31,176 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:28:31,176 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:28:31,176 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:28:31,188 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:28:31,212 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:28:31,213 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:28:31,213 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:28:31,228 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:28:31,249 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:28:33,664 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:28:50,793 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:28:50,793 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:28:50,793 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:28:50,794 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:28:50,794 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:28:50,794 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:28:50,794 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:28:50,807 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:28:50,832 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:28:50,833 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:28:50,833 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:28:50,846 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:28:50,880 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:28:53,435 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:29:10,732 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:29:10,732 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:29:10,732 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:29:10,733 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:29:10,733 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:29:10,733 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:29:10,733 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:29:10,744 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:29:10,769 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:29:10,770 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:29:10,770 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:29:10,782 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:29:10,805 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:29:13,127 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:29:30,191 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:29:30,191 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:29:30,191 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:29:30,192 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:29:30,192 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:29:30,192 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:29:30,192 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:29:30,206 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:29:30,243 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:29:30,244 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:29:30,244 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:29:30,257 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:29:30,284 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:29:32,730 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:29:50,078 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:29:50,078 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:29:50,078 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:29:50,079 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:29:50,079 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:29:50,079 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:29:50,079 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:29:50,090 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:29:50,116 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:29:50,116 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:29:50,116 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:29:50,131 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:29:50,152 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:29:52,533 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:30:09,764 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:30:09,764 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:30:09,765 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:30:09,765 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:30:09,765 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:30:09,765 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:30:09,765 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:30:09,777 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:30:09,802 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:30:09,803 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:30:09,803 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:30:09,816 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:30:09,840 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:30:12,361 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:30:29,716 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:30:29,717 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:30:29,717 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:30:29,717 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:30:29,717 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:30:29,717 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:30:29,718 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:30:29,728 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:30:29,753 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:30:29,754 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:30:29,754 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:30:29,768 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:30:29,791 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:30:32,486 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:30:50,170 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:30:50,171 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:30:50,171 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:30:50,171 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:30:50,171 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:30:50,171 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:30:50,172 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:30:50,184 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:30:50,211 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:30:50,212 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:30:50,212 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:30:50,226 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:30:50,250 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:30:52,758 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:31:09,975 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:31:09,975 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:31:09,976 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:31:09,976 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:31:09,976 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:31:09,976 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:31:09,976 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:31:09,988 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:31:10,014 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:31:10,015 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:31:10,015 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:31:10,029 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:31:10,049 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:31:12,360 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:31:29,598 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:31:29,599 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:31:29,599 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:31:29,599 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:31:29,599 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:31:29,600 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:31:29,600 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:31:29,611 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:31:29,635 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:31:29,635 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:31:29,636 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:31:29,649 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:31:29,675 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:31:32,057 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:31:49,281 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:31:49,282 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:31:49,282 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:31:49,282 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:31:49,282 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:31:49,282 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:31:49,283 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:31:49,293 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:31:49,319 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:31:49,320 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:31:49,320 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:31:49,334 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:31:49,359 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:31:51,857 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:32:09,529 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:32:09,529 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:32:09,529 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:32:09,529 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:32:09,529 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:32:09,530 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:32:09,530 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:32:09,542 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:32:09,567 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:32:09,568 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:32:09,568 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:32:09,581 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:32:09,604 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:32:12,076 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:32:29,143 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:32:29,143 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:32:29,143 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:32:29,143 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:32:29,144 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:32:29,144 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:32:29,144 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:32:29,155 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:32:29,180 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:32:29,180 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:32:29,180 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:32:29,193 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:32:29,216 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:32:31,891 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:32:49,045 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:32:49,046 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:32:49,046 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:32:49,046 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:32:49,046 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:32:49,047 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:32:49,047 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:32:49,058 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:32:49,087 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:32:49,088 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:32:49,088 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:32:49,101 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:32:49,130 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:32:51,548 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:33:08,671 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:33:08,672 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:33:08,672 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:33:08,672 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:33:08,672 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:33:08,673 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:33:08,673 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:33:08,683 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:33:08,710 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:33:08,711 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:33:08,711 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:33:08,724 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:33:08,748 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:33:11,216 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:33:28,723 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:33:28,724 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:33:28,724 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:33:28,724 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:33:28,724 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:33:28,725 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:33:28,725 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:33:28,736 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:33:28,761 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:33:28,761 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:33:28,761 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:33:28,776 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:33:28,798 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:33:31,222 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:33:49,018 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:33:49,018 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:33:49,019 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:33:49,019 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:33:49,019 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:33:49,019 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:33:49,019 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:33:49,029 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:33:49,059 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:33:49,060 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:33:49,060 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:33:49,074 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:33:49,098 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:33:51,443 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:34:09,037 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:34:09,037 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:34:09,037 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:34:09,038 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:34:09,038 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:34:09,038 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:34:09,038 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:34:09,049 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:34:09,075 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:34:09,075 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:34:09,075 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:34:09,089 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:34:09,120 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:34:12,578 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:34:29,708 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:34:29,708 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:34:29,708 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:34:29,709 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:34:29,709 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:34:29,709 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:34:29,709 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:34:29,720 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:34:29,750 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:34:29,750 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:34:29,750 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:34:29,762 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:34:29,783 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:34:32,385 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:34:49,511 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:34:49,511 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:34:49,512 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:34:49,512 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:34:49,512 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:34:49,512 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:34:49,512 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:34:49,524 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:34:49,549 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:34:49,550 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:34:49,550 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:34:49,564 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:34:49,587 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:34:52,180 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:35:09,500 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:35:09,501 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:35:09,501 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:35:09,501 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:35:09,501 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:35:09,501 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:35:09,502 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:35:09,513 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:35:09,537 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:35:09,538 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:35:09,538 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:35:09,566 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:35:09,589 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:35:11,991 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:35:29,006 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:35:29,006 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:35:29,006 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:35:29,006 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:35:29,007 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:35:29,007 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:35:29,007 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:35:29,018 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:35:29,042 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:35:29,042 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:35:29,042 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:35:29,056 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:35:29,082 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:35:31,570 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:35:49,194 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:35:49,196 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:35:49,196 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:35:49,196 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:35:49,196 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:35:49,197 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:35:49,197 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:35:49,208 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:35:49,234 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:35:49,234 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:35:49,235 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:35:49,248 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:35:49,272 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:35:51,720 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:36:08,764 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:36:08,764 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:36:08,765 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:36:08,765 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:36:08,765 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:36:08,765 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:36:08,765 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:36:08,777 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:36:08,803 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:36:08,804 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:36:08,804 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:36:08,818 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:36:08,839 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:36:11,192 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:36:28,301 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:36:28,301 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:36:28,301 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:36:28,302 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:36:28,302 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:36:28,302 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:36:28,302 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:36:28,314 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:36:28,337 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:36:28,338 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:36:28,338 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:36:28,352 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:36:28,374 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:36:30,830 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:36:47,880 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:36:47,880 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:36:47,880 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:36:47,881 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:36:47,881 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:36:47,881 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:36:47,881 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:36:47,893 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:36:47,920 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:36:47,920 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:36:47,921 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:36:47,935 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:36:47,974 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:36:50,299 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:37:07,510 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:37:07,510 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:37:07,510 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:37:07,510 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:37:07,511 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:37:07,511 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:37:07,511 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:37:07,523 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:37:07,547 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:37:07,548 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:37:07,548 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:37:07,561 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:37:07,585 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:37:10,072 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:37:27,179 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:37:27,180 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:37:27,180 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:37:27,180 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:37:27,180 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:37:27,181 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:37:27,181 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:37:27,192 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:37:27,216 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:37:27,217 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:37:27,217 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:37:27,230 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:37:27,253 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:37:29,589 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:37:46,941 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:37:46,941 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:37:46,941 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:37:46,942 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:37:46,942 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:37:46,942 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:37:46,942 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:37:46,954 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:37:46,981 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:37:46,981 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:37:46,981 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:37:46,993 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:37:47,021 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:37:50,354 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:38:07,666 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:38:07,666 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:38:07,667 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:38:07,667 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:38:07,667 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:38:07,667 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:38:07,667 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:38:07,678 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:38:07,704 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:38:07,704 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:38:07,704 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:38:07,719 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:38:07,742 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:38:10,278 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:38:27,271 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:38:27,271 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:38:27,272 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:38:27,272 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:38:27,272 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:38:27,272 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:38:27,272 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:38:27,284 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:38:27,309 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:38:27,309 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:38:27,309 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:38:27,323 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:38:27,345 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:38:29,835 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:38:46,870 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:38:46,870 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:38:46,870 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:38:46,870 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:38:46,871 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:38:46,871 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:38:46,871 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:38:46,883 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:38:46,908 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:38:46,908 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:38:46,908 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:38:46,923 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:38:46,948 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:38:49,270 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:39:06,271 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:39:06,272 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:39:06,272 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:39:06,272 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:39:06,272 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:39:06,272 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:39:06,273 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:39:06,284 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:39:06,309 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:39:06,310 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:39:06,310 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:39:06,323 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:39:06,344 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:39:08,982 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:39:25,994 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:39:25,995 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:39:25,995 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:39:25,995 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:39:25,995 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:39:25,996 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:39:25,996 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:39:26,008 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:39:26,034 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:39:26,034 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:39:26,034 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:39:26,047 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:39:26,075 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:39:28,500 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:39:46,051 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:39:46,051 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:39:46,051 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:39:46,052 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:39:46,052 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:39:46,052 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:39:46,052 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:39:46,064 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:39:46,089 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:39:46,090 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:39:46,090 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:39:46,105 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:39:46,128 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:39:48,608 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:40:05,829 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:40:05,829 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:40:05,830 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:40:05,830 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:40:05,830 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:40:05,830 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:40:05,830 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:40:05,840 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:40:05,866 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:40:05,866 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:40:05,867 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:40:05,881 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:40:05,903 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:40:08,408 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:40:42,730 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:40:42,730 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:40:42,730 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:40:42,731 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:40:42,731 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:40:42,731 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:40:42,731 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:40:42,741 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:40:42,768 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:40:42,769 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:40:42,769 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:40:42,782 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:40:42,803 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:40:45,244 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:41:02,317 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:41:02,317 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:41:02,317 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:41:02,317 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:41:02,318 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:41:02,318 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:41:02,318 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:41:02,330 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:41:02,354 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:41:02,355 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:41:02,355 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:41:02,368 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:41:02,396 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:41:04,756 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:41:22,320 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:41:22,320 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:41:22,320 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:41:22,320 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:41:22,320 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:41:22,321 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:41:22,321 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:41:22,333 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:41:22,358 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:41:22,358 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:41:22,359 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:41:22,374 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:41:22,402 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:41:24,958 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:41:42,259 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:41:42,260 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:41:42,260 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:41:42,260 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:41:42,260 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:41:42,260 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:41:42,260 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:41:42,270 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:41:42,296 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:41:42,296 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:41:42,296 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:41:42,310 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:41:42,334 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:41:44,855 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:42:02,413 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:42:02,413 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:42:02,413 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:42:02,414 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:42:02,414 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:42:02,414 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:42:02,414 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:42:02,428 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:42:02,452 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:42:02,453 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:42:02,453 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:42:02,468 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:42:02,490 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:42:04,936 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:42:21,958 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:42:21,958 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:42:21,958 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:42:21,959 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:42:21,959 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:42:21,959 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:42:21,959 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:42:21,971 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:42:21,995 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:42:21,995 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:42:21,996 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:42:22,015 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:42:22,038 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:42:24,644 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:42:41,883 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:42:41,884 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:42:41,884 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:42:41,884 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:42:41,884 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:42:41,884 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:42:41,885 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:42:41,895 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:42:41,924 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:42:41,924 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:42:41,924 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:42:41,936 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:42:41,958 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:42:44,508 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:43:01,683 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:43:01,684 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:43:01,684 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:43:01,684 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:43:01,684 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:43:01,684 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:43:01,684 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:43:01,696 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:43:01,721 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:43:01,721 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:43:01,721 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:43:01,735 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:43:01,758 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:43:04,124 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:43:22,618 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:43:22,618 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:43:22,618 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:43:22,619 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:43:22,619 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:43:22,619 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:43:22,619 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:43:22,630 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:43:22,654 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:43:22,655 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:43:22,655 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:43:22,668 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:43:22,689 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:43:25,267 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:43:42,613 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:43:42,614 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:43:42,614 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:43:42,614 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:43:42,614 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:43:42,615 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:43:42,615 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:43:42,627 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:43:42,653 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:43:42,654 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:43:42,654 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:43:42,667 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:43:42,690 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:43:45,052 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:44:02,879 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:44:02,879 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:44:02,879 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:44:02,880 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:44:02,880 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:44:02,880 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:44:02,880 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:44:02,892 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:44:02,916 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:44:02,917 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:44:02,917 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:44:02,931 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:44:02,952 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:44:05,398 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:44:23,821 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:44:23,821 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:44:23,822 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:44:23,822 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:44:23,822 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:44:23,822 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:44:23,822 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:44:23,833 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:44:23,860 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:44:23,860 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:44:23,860 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:44:23,875 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:44:23,903 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:44:27,450 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:44:44,886 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:44:44,887 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:44:44,887 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:44:44,887 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:44:44,887 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:44:44,887 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:44:44,888 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:44:44,899 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:44:44,924 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:44:44,925 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:44:44,925 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:44:44,940 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:44:44,966 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:44:47,303 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:45:04,843 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:45:04,844 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:45:04,844 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:45:04,844 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:45:04,844 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:45:04,845 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:45:04,845 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:45:04,856 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:45:04,881 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:45:04,881 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:45:04,881 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:45:04,894 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:45:04,924 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:45:07,304 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:45:24,419 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:45:24,419 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:45:24,419 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:45:24,420 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:45:24,420 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:45:24,420 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:45:24,420 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:45:24,432 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:45:24,458 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:45:24,459 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:45:24,459 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:45:24,473 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:45:24,496 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:45:26,865 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:45:44,055 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:45:44,055 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:45:44,056 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:45:44,056 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:45:44,056 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:45:44,056 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:45:44,056 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:45:44,068 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:45:44,093 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:45:44,093 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:45:44,094 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:45:44,106 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:45:44,127 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:45:46,573 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:46:03,919 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:46:03,919 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:46:03,919 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:46:03,919 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:46:03,920 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:46:03,920 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:46:03,920 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:46:03,930 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:46:03,956 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:46:03,956 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:46:03,957 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:46:03,970 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:46:03,994 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:46:06,319 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:46:23,518 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:46:23,519 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:46:23,519 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:46:23,519 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:46:23,519 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:46:23,519 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:46:23,520 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:46:23,532 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:46:23,558 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:46:23,558 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:46:23,559 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:46:23,571 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:46:23,593 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:46:25,936 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:46:43,433 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:46:43,433 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:46:43,433 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:46:43,434 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:46:43,434 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:46:43,434 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:46:43,434 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:46:43,446 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:46:43,470 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:46:43,470 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:46:43,471 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:46:43,488 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:46:43,512 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:46:45,935 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:47:03,370 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:47:03,370 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:47:03,370 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:47:03,370 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:47:03,371 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:47:03,371 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:47:03,371 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:47:03,383 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:47:03,407 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:47:03,408 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:47:03,408 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:47:03,420 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:47:03,445 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:47:05,931 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:47:23,330 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:47:23,331 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:47:23,331 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:47:23,331 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:47:23,331 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:47:23,331 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:47:23,331 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:47:23,342 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:47:23,372 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:47:23,373 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:47:23,373 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:47:23,385 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:47:23,411 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:47:25,960 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:47:43,620 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:47:43,620 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:47:43,621 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:47:43,622 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:47:43,622 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:47:43,622 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:47:43,622 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:47:43,634 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:47:43,658 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:47:43,658 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:47:43,659 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:47:43,672 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:47:43,693 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:47:46,174 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:48:03,600 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:48:03,600 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:48:03,600 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:48:03,601 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:48:03,601 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:48:03,601 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:48:03,601 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:48:03,612 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:48:03,636 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:48:03,636 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:48:03,636 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:48:03,649 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:48:03,673 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:48:06,154 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:48:23,527 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:48:23,528 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:48:23,528 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:48:23,528 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:48:23,528 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:48:23,529 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:48:23,529 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:48:23,539 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:48:23,565 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:48:23,565 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:48:23,565 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:48:23,577 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:48:23,599 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:48:26,094 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:48:43,296 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:48:43,296 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:48:43,297 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:48:43,297 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:48:43,297 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:48:43,297 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:48:43,298 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:48:43,309 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:48:43,336 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:48:43,337 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:48:43,337 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:48:43,350 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:48:43,372 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:48:45,885 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:49:03,299 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:49:03,300 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:49:03,300 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:49:03,300 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:49:03,300 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:49:03,300 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:49:03,301 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:49:03,311 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:49:03,335 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:49:03,336 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:49:03,336 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:49:03,349 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:49:03,374 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:49:05,762 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:49:23,051 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:49:23,052 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:49:23,052 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:49:23,052 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:49:23,052 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:49:23,052 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:49:23,052 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:49:23,064 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:49:23,089 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:49:23,089 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:49:23,089 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:49:23,104 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:49:23,131 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:49:25,664 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:49:43,327 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:49:43,328 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:49:43,328 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:49:43,328 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:49:43,328 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:49:43,328 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:49:43,329 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:49:43,341 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:49:43,367 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:49:43,368 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:49:43,368 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:49:43,380 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:49:43,408 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:49:45,920 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:50:03,185 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:50:03,185 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:50:03,185 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:50:03,185 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:50:03,186 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:50:03,186 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:50:03,186 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:50:03,198 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:50:03,228 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:50:03,228 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:50:03,228 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:50:03,241 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:50:03,266 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:50:05,754 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:50:22,991 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:50:22,991 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:50:22,991 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:50:22,992 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:50:22,992 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:50:22,992 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:50:22,992 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:50:23,003 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:50:23,029 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:50:23,030 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:50:23,030 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:50:23,043 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:50:23,068 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:50:25,627 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:50:42,837 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:50:42,837 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:50:42,837 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:50:42,838 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:50:42,838 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:50:42,838 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:50:42,838 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:50:42,849 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:50:42,874 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:50:42,875 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:50:42,875 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:50:42,889 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:50:42,910 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:50:45,348 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:51:02,492 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:51:02,493 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:51:02,493 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:51:02,493 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:51:02,493 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:51:02,493 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:51:02,493 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:51:02,506 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:51:02,530 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:51:02,530 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:51:02,530 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:51:02,543 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:51:02,564 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:51:04,916 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:51:22,382 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:51:22,382 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:51:22,382 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:51:22,382 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:51:22,383 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:51:22,383 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:51:22,383 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:51:22,394 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:51:22,420 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:51:22,420 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:51:22,420 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:51:22,433 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:51:22,454 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:51:24,845 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:51:42,200 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:51:42,200 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:51:42,201 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:51:42,201 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:51:42,201 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:51:42,201 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:51:42,201 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:51:42,211 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:51:42,237 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:51:42,237 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:51:42,238 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:51:42,252 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:51:42,273 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:51:44,854 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:52:02,817 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:52:02,818 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:52:02,818 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:52:02,818 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:52:02,818 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:52:02,818 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:52:02,819 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:52:02,830 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:52:02,857 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:52:02,857 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:52:02,857 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:52:02,871 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:52:02,892 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:52:05,254 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:52:22,905 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:52:22,905 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:52:22,906 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:52:22,906 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:52:22,906 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:52:22,906 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:52:22,906 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:52:22,916 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:52:22,941 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:52:22,942 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:52:22,942 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:52:22,955 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:52:22,977 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:52:25,488 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:52:42,904 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:52:42,904 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:52:42,905 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:52:42,905 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:52:42,905 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:52:42,905 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:52:42,905 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:52:42,916 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:52:42,941 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:52:42,942 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:52:42,942 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:52:42,955 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:52:42,979 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:52:45,647 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:53:02,729 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:53:02,730 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:53:02,730 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:53:02,730 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:53:02,730 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:53:02,730 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:53:02,730 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:53:02,741 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:53:02,765 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:53:02,766 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:53:02,766 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:53:02,779 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:53:02,805 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:53:05,172 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:53:22,342 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:53:22,343 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:53:22,343 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:53:22,343 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:53:22,344 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:53:22,344 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:53:22,344 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:53:22,356 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:53:22,382 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:53:22,383 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:53:22,383 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:53:22,397 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:53:22,418 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:53:25,167 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:53:42,293 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:53:42,294 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:53:42,294 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:53:42,294 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:53:42,294 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:53:42,295 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:53:42,295 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:53:42,306 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:53:42,330 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:53:42,331 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:53:42,331 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:53:42,344 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:53:42,366 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:53:44,710 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:54:01,829 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:54:01,829 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:54:01,829 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:54:01,829 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:54:01,830 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:54:01,830 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:54:01,830 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:54:01,842 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:54:01,867 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:54:01,868 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:54:01,868 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:54:01,883 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:54:01,910 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:54:04,298 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:54:21,473 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:54:21,473 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:54:21,473 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:54:21,473 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:54:21,474 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:54:21,474 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:54:21,474 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:54:21,486 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:54:21,511 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:54:21,512 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:54:21,512 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:54:21,524 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:54:21,550 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:54:23,879 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:54:41,094 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:54:41,095 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:54:41,095 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:54:41,096 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:54:41,096 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:54:41,096 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:54:41,096 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:54:41,107 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:54:41,132 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:54:41,132 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:54:41,133 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:54:41,147 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:54:41,169 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:54:43,663 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:55:00,990 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:55:00,991 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:55:00,991 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:55:00,991 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:55:00,991 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:55:00,991 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:55:00,992 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:55:01,004 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:55:01,027 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:55:01,028 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:55:01,028 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:55:01,042 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:55:01,063 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:55:03,496 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:55:20,498 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:55:20,499 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:55:20,499 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:55:20,499 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:55:20,499 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:55:20,499 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:55:20,499 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:55:20,512 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:55:20,536 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:55:20,537 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:55:20,537 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:55:20,550 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:55:20,572 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:55:23,072 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:55:40,262 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:55:40,263 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:55:40,263 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:55:40,263 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:55:40,263 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:55:40,264 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:55:40,264 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:55:40,274 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:55:40,303 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:55:40,303 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:55:40,303 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:55:40,318 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:55:40,341 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:55:42,890 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:55:59,861 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:55:59,861 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:55:59,861 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:55:59,861 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:55:59,862 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:55:59,862 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:55:59,862 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:55:59,874 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:55:59,902 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:55:59,902 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:55:59,902 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:55:59,916 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:55:59,938 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:56:02,378 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:56:19,535 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:56:19,535 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:56:19,535 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:56:19,536 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:56:19,536 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:56:19,536 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:56:19,536 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:56:19,548 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:56:19,572 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:56:19,572 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:56:19,572 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:56:19,585 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:56:19,607 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:56:22,007 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:56:39,389 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:56:39,389 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:56:39,389 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:56:39,389 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:56:39,389 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:56:39,390 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:56:39,390 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:56:39,401 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:56:39,425 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:56:39,426 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:56:39,426 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:56:39,439 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:56:39,464 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:56:41,791 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:56:59,115 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:56:59,115 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:56:59,116 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:56:59,116 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:56:59,116 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:56:59,116 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:56:59,116 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:56:59,127 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:56:59,153 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:56:59,153 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:56:59,153 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:56:59,165 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:56:59,189 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:57:01,593 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:57:18,910 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:57:18,910 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:57:18,910 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:57:18,911 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:57:18,911 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:57:18,911 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:57:18,911 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:57:18,923 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:57:18,948 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:57:18,949 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:57:18,949 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:57:18,961 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:57:18,983 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:57:21,435 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:57:38,513 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:57:38,513 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:57:38,514 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:57:38,514 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:57:38,514 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:57:38,514 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:57:38,514 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:57:38,526 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:57:38,554 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:57:38,554 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:57:38,555 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:57:38,567 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:57:38,588 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:57:40,966 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:58:01,775 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:58:01,775 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:58:01,775 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:58:01,775 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:58:01,775 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:58:01,776 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:58:01,776 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:58:01,787 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:58:01,810 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:58:01,811 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:58:01,811 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:58:01,824 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:58:01,853 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:58:04,315 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:58:21,711 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:58:21,711 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:58:21,711 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:58:21,712 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:58:21,712 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:58:21,712 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:58:21,712 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:58:21,726 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:58:21,753 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:58:21,753 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:58:21,753 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:58:21,768 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:58:21,791 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:58:24,102 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:58:41,420 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:58:41,421 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:58:41,421 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:58:41,421 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:58:41,421 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:58:41,421 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:58:41,422 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:58:41,433 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:58:41,457 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:58:41,458 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:58:41,458 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:58:41,472 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:58:41,494 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:58:43,837 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:59:01,060 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:59:01,060 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:59:01,060 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:59:01,060 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:59:01,061 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:59:01,061 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:59:01,061 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:59:01,072 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:59:01,097 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:59:01,098 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:59:01,098 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:59:01,110 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:59:01,141 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:59:03,475 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:59:20,552 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:59:20,552 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:59:20,552 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:59:20,553 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:59:20,553 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:59:20,553 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:59:20,553 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:59:20,565 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:59:20,590 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:59:20,590 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:59:20,591 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:59:20,604 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:59:20,631 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:59:22,992 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:59:40,028 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:59:40,029 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:59:40,029 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:59:40,029 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:59:40,029 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:59:40,030 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:59:40,030 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:59:40,041 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:59:40,067 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:59:40,067 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:59:40,067 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:59:40,082 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:59:40,103 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 18:59:42,675 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 18:59:59,643 > connected
[DEBUG|open_api.py:244] 2021-02-09 18:59:59,643 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 18:59:59,643 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 18:59:59,644 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 18:59:59,644 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 18:59:59,644 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 18:59:59,644 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 18:59:59,656 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 18:59:59,680 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 18:59:59,681 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 18:59:59,681 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 18:59:59,694 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 18:59:59,716 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:00:02,083 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:00:19,351 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:00:19,351 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:00:19,351 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:00:19,351 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:00:19,352 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:00:19,352 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:00:19,352 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:00:19,364 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:00:19,390 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:00:19,390 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:00:19,391 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:00:19,405 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:00:19,428 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:00:22,147 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:06:07,216 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:06:07,216 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:06:07,217 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:06:07,223 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:06:07,223 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:06:07,223 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:06:07,223 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:06:07,236 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:06:07,266 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:06:07,267 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:06:07,267 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:06:07,281 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:06:07,303 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:06:09,790 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:06:27,069 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:06:27,069 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:06:27,069 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:06:27,070 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:06:27,070 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:06:27,070 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:06:27,070 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:06:27,081 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:06:27,108 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:06:27,108 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:06:27,108 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:06:27,123 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:06:27,146 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:06:29,499 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:06:46,780 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:06:46,780 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:06:46,781 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:06:46,781 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:06:46,781 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:06:46,781 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:06:46,781 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:06:46,793 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:06:46,817 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:06:46,817 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:06:46,817 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:06:46,828 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:06:46,855 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:06:49,211 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:07:07,137 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:07:07,137 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:07:07,137 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:07:07,138 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:07:07,138 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:07:07,138 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:07:07,138 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:07:07,150 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:07:07,174 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:07:07,175 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:07:07,175 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:07:07,188 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:07:07,211 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:07:09,539 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:07:26,833 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:07:26,833 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:07:26,833 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:07:26,834 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:07:26,834 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:07:26,834 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:07:26,834 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:07:26,844 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:07:26,871 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:07:26,871 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:07:26,872 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:07:26,885 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:07:26,908 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:07:29,296 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:07:46,412 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:07:46,412 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:07:46,412 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:07:46,413 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:07:46,413 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:07:46,413 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:07:46,413 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:07:46,424 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:07:46,451 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:07:46,451 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:07:46,451 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:07:46,463 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:07:46,486 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:07:48,828 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:08:06,287 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:08:06,287 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:08:06,287 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:08:06,287 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:08:06,288 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:08:06,288 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:08:06,288 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:08:06,299 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:08:06,324 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:08:06,324 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:08:06,324 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:08:06,337 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:08:06,364 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:08:08,836 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:08:26,230 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:08:26,230 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:08:26,231 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:08:26,231 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:08:26,231 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:08:26,231 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:08:26,232 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:08:26,243 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:08:26,268 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:08:26,269 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:08:26,269 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:08:26,283 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:08:26,312 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:08:29,394 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:08:48,159 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:08:48,159 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:08:48,160 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:08:48,160 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:08:48,160 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:08:48,160 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:08:48,160 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:08:48,172 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:08:48,197 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:08:48,198 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:08:48,198 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:08:48,210 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:08:48,232 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:08:50,793 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:09:08,205 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:09:08,206 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:09:08,206 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:09:08,206 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:09:08,206 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:09:08,206 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:09:08,206 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:09:08,218 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:09:08,242 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:09:08,242 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:09:08,242 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:09:08,256 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:09:08,280 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:09:10,805 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:09:28,455 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:09:28,455 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:09:28,455 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:09:28,456 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:09:28,456 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:09:28,456 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:09:28,456 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:09:28,467 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:09:28,494 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:09:28,495 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:09:28,495 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:09:28,516 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:09:28,539 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:09:31,854 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:09:49,507 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:09:49,507 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:09:49,508 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:09:49,508 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:09:49,508 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:09:49,508 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:09:49,508 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:09:49,518 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:09:49,545 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:09:49,545 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:09:49,545 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:09:49,560 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:09:49,587 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:09:52,085 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:10:09,426 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:10:09,427 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:10:09,427 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:10:09,427 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:10:09,427 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:10:09,427 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:10:09,428 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:10:09,439 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:10:09,463 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:10:09,464 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:10:09,464 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:10:09,478 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:10:09,499 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:10:11,900 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:10:29,834 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:10:29,835 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:10:29,835 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:10:29,835 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:10:29,835 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:10:29,835 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:10:29,835 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:10:29,847 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:10:29,873 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:10:29,873 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:10:29,873 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:10:29,888 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:10:29,911 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:10:32,273 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:10:55,965 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:10:55,965 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:10:55,965 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:10:55,966 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:10:55,966 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:10:55,966 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:10:55,966 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:10:55,978 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:10:56,003 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:10:56,004 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:10:56,004 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:10:56,020 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:10:56,049 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:10:58,573 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:11:15,802 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:11:15,803 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:11:15,803 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:11:15,803 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:11:15,803 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:11:15,803 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:11:15,803 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:11:15,814 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:11:15,838 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:11:15,839 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:11:15,839 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:11:15,851 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:11:15,874 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:11:18,394 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:11:37,385 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:11:37,385 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:11:37,386 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:11:37,386 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:11:37,386 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:11:37,386 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:11:37,386 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:11:37,397 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:11:37,421 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:11:37,421 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:11:37,422 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:11:37,433 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:11:37,455 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:11:39,760 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:11:57,368 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:11:57,368 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:11:57,368 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:11:57,369 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:11:57,369 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:11:57,369 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:11:57,369 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:11:57,380 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:11:57,405 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:11:57,405 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:11:57,405 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:11:57,418 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:11:57,440 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:11:59,922 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:12:17,551 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:12:17,551 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:12:17,551 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:12:17,551 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:12:17,552 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:12:17,552 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:12:17,552 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:12:17,563 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:12:17,587 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:12:17,588 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:12:17,588 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:12:17,602 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:12:17,623 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:12:20,108 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:12:37,839 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:12:37,840 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:12:37,840 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:12:37,840 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:12:37,840 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:12:37,841 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:12:37,841 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:12:37,853 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:12:37,878 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:12:37,878 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:12:37,878 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:12:37,892 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:12:37,913 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:12:40,363 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:12:57,700 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:12:57,700 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:12:57,700 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:12:57,701 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:12:57,701 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:12:57,701 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:12:57,701 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:12:57,713 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:12:57,736 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:12:57,737 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:12:57,737 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:12:57,751 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:12:57,772 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:13:00,143 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:13:17,634 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:13:17,634 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:13:17,634 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:13:17,635 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:13:17,635 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:13:17,635 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:13:17,635 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:13:17,647 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:13:17,673 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:13:17,673 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:13:17,673 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:13:17,688 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:13:17,710 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:13:20,033 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:13:37,356 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:13:37,357 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:13:37,357 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:13:37,357 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:13:37,357 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:13:37,357 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:13:37,358 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:13:37,369 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:13:37,393 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:13:37,394 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:13:37,394 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:13:37,407 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:13:37,428 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:13:39,921 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:13:57,371 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:13:57,371 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:13:57,372 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:13:57,372 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:13:57,372 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:13:57,372 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:13:57,372 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:13:57,383 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:13:57,408 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:13:57,408 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:13:57,408 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:13:57,420 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:13:57,447 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:13:59,846 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:14:19,013 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:14:19,014 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:14:19,014 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:14:19,014 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:14:19,015 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:14:19,015 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:14:19,015 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:14:19,026 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:14:19,052 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:14:19,052 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:14:19,052 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:14:19,064 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:14:19,090 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:14:21,578 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:14:39,028 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:14:39,028 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:14:39,028 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:14:39,029 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:14:39,029 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:14:39,029 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:14:39,029 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:14:39,040 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:14:39,065 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:14:39,066 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:14:39,066 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:14:39,080 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:14:39,102 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:14:41,606 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:14:58,787 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:14:58,787 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:14:58,787 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:14:58,788 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:14:58,788 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:14:58,788 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:14:58,788 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:14:58,800 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:14:58,824 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:14:58,825 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:14:58,825 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:14:58,837 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:14:58,870 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:15:01,226 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:15:18,540 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:15:18,541 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:15:18,541 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:15:18,541 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:15:18,541 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:15:18,542 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:15:18,542 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:15:18,554 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:15:18,578 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:15:18,578 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:15:18,579 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:15:18,591 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:15:18,619 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:15:21,179 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:15:38,586 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:15:38,586 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:15:38,587 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:15:38,587 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:15:38,587 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:15:38,587 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:15:38,587 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:15:38,599 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:15:38,624 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:15:38,624 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:15:38,624 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:15:38,637 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:15:38,663 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:15:41,145 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:15:58,637 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:15:58,637 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:15:58,637 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:15:58,638 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:15:58,638 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:15:58,638 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:15:58,638 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:15:58,648 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:15:58,673 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:15:58,674 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:15:58,674 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:15:58,686 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:15:58,710 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:16:01,256 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:16:18,923 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:16:18,923 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:16:18,923 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:16:18,923 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:16:18,924 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:16:18,924 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:16:18,924 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:16:18,935 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:16:18,959 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:16:18,960 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:16:18,960 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:16:18,972 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:16:18,994 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:16:21,539 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:16:39,135 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:16:39,136 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:16:39,136 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:16:39,136 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:16:39,136 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:16:39,136 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:16:39,137 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:16:39,148 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:16:39,173 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:16:39,174 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:16:39,174 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:16:39,187 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:16:39,215 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:16:41,821 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:16:59,004 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:16:59,005 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:16:59,005 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:16:59,005 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:16:59,005 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:16:59,005 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:16:59,005 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:16:59,017 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:16:59,041 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:16:59,041 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:16:59,042 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:16:59,055 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:16:59,076 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:17:02,344 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:17:19,875 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:17:19,876 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:17:19,877 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:17:19,878 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:17:19,878 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:17:19,878 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:17:19,878 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:17:19,890 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:17:19,926 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:17:19,927 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:17:19,927 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:17:19,942 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:17:19,971 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:17:22,322 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:17:39,519 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:17:39,519 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:17:39,519 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:17:39,520 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:17:39,520 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:17:39,520 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:17:39,520 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:17:39,531 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:17:39,555 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:17:39,556 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:17:39,556 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:17:39,568 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:17:39,590 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:17:41,915 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:17:59,089 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:17:59,090 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:17:59,090 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:17:59,090 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:17:59,090 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:17:59,090 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:17:59,091 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:17:59,102 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:17:59,128 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:17:59,129 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:17:59,129 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:17:59,142 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:17:59,164 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:18:01,537 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:18:18,915 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:18:18,916 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:18:18,916 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:18:18,916 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:18:18,917 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:18:18,917 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:18:18,917 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:18:18,929 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:18:18,954 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:18:18,955 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:18:18,955 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:18:18,968 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:18:18,992 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:18:21,469 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:18:38,916 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:18:38,916 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:18:38,916 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:18:38,917 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:18:38,917 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:18:38,917 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:18:38,917 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:18:38,928 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:18:38,954 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:18:38,955 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:18:38,955 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:18:38,968 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:18:38,990 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:18:41,549 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:18:58,546 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:18:58,547 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:18:58,547 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:18:58,547 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:18:58,547 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:18:58,547 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:18:58,547 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:18:58,560 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:18:58,584 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:18:58,585 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:18:58,585 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:18:58,597 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:18:58,625 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:19:01,246 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:19:18,841 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:19:18,842 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:19:18,842 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:19:18,842 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:19:18,842 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:19:18,842 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:19:18,843 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:19:18,853 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:19:18,880 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:19:18,880 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:19:18,880 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:19:18,893 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:19:18,917 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:19:21,279 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:19:38,701 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:19:38,701 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:19:38,701 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:19:38,701 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:19:38,701 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:19:38,701 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:19:38,701 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:19:38,712 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:19:38,736 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:19:38,737 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:19:38,737 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:19:38,749 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:19:38,780 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:19:41,365 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:19:58,669 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:19:58,669 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:19:58,670 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:19:58,670 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:19:58,670 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:19:58,670 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:19:58,670 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:19:58,682 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:19:58,706 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:19:58,706 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:19:58,707 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:19:58,719 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:19:58,740 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:20:01,324 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:20:18,815 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:20:18,815 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:20:18,815 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:20:18,815 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:20:18,816 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:20:18,816 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:20:18,816 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:20:18,829 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:20:18,855 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:20:18,855 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:20:18,855 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:20:18,869 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:20:18,895 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:20:21,389 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:20:38,712 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:20:38,712 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:20:38,713 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:20:38,713 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:20:38,713 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:20:38,713 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:20:38,713 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:20:38,725 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:20:38,751 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:20:38,752 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:20:38,752 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:20:38,766 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:20:38,793 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:20:41,392 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:20:58,505 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:20:58,506 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:20:58,506 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:20:58,506 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:20:58,506 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:20:58,506 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:20:58,507 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:20:58,518 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:20:58,543 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:20:58,544 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:20:58,544 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:20:58,558 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:20:58,586 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:21:01,033 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:21:18,455 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:21:18,455 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:21:18,455 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:21:18,456 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:21:18,456 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:21:18,456 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:21:18,456 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:21:18,466 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:21:18,491 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:21:18,492 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:21:18,492 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:21:18,506 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:21:18,529 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:21:21,099 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:21:40,885 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:21:40,886 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:21:40,886 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:21:40,886 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:21:40,886 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:21:40,887 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:21:40,887 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:21:40,898 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:21:40,923 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:21:40,924 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:21:40,924 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:21:40,937 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:21:40,961 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:21:43,368 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:22:02,394 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:22:02,394 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:22:02,394 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:22:02,395 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:22:02,395 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:22:02,395 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:22:02,395 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:22:02,407 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:22:02,431 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:22:02,432 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:22:02,432 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:22:02,445 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:22:02,465 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:22:04,917 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:22:22,152 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:22:22,152 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:22:22,152 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:22:22,153 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:22:22,153 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:22:22,153 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:22:22,153 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:22:22,164 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:22:22,189 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:22:22,190 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:22:22,190 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:22:22,204 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:22:22,227 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:22:24,684 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:22:41,829 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:22:41,829 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:22:41,829 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:22:41,829 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:22:41,829 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:22:41,830 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:22:41,830 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:22:41,840 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:22:41,864 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:22:41,865 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:22:41,865 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:22:41,879 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:22:41,903 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:22:44,459 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:23:01,940 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:23:01,940 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:23:01,940 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:23:01,941 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:23:01,941 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:23:01,941 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:23:01,941 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:23:01,952 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:23:01,975 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:23:01,975 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:23:01,976 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:23:01,988 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:23:02,010 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:23:04,342 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:23:22,927 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:23:22,927 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:23:22,928 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:23:22,928 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:23:22,928 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:23:22,928 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:23:22,929 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:23:22,941 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:23:22,965 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:23:22,965 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:23:22,965 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:23:22,978 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:23:23,004 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:23:25,415 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:23:42,655 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:23:42,656 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:23:42,656 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:23:42,656 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:23:42,656 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:23:42,656 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:23:42,656 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:23:42,667 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:23:42,693 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:23:42,693 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:23:42,693 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:23:42,708 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:23:42,732 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:23:45,099 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:24:02,319 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:24:02,319 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:24:02,319 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:24:02,319 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:24:02,320 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:24:02,320 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:24:02,320 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:24:02,331 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:24:02,354 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:24:02,355 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:24:02,355 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:24:02,369 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:24:02,390 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:24:04,847 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:24:22,309 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:24:22,309 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:24:22,309 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:24:22,310 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:24:22,310 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:24:22,310 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:24:22,310 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:24:22,322 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:24:22,346 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:24:22,347 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:24:22,347 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:24:22,358 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:24:22,388 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:24:24,957 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:24:42,456 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:24:42,456 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:24:42,456 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:24:42,456 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:24:42,457 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:24:42,457 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:24:42,457 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:24:42,469 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:24:42,497 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:24:42,498 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:24:42,498 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:24:42,512 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:24:42,537 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:24:45,087 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:25:02,337 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:25:02,337 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:25:02,338 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:25:02,338 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:25:02,338 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:25:02,338 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:25:02,338 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:25:02,349 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:25:02,374 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:25:02,374 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:25:02,375 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:25:02,387 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:25:02,409 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:25:05,085 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:25:22,343 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:25:22,343 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:25:22,344 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:25:22,344 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:25:22,344 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:25:22,344 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:25:22,345 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:25:22,356 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:25:22,379 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:25:22,380 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:25:22,380 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:25:22,393 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:25:22,420 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:25:24,798 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:25:42,098 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:25:42,098 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:25:42,098 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:25:42,099 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:25:42,099 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:25:42,099 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:25:42,099 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:25:42,110 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:25:42,133 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:25:42,134 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:25:42,134 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:25:42,148 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:25:42,172 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:25:44,592 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:26:01,987 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:26:01,987 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:26:01,987 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:26:01,988 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:26:01,988 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:26:01,988 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:26:01,988 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:26:01,999 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:26:02,023 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:26:02,024 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:26:02,024 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:26:02,039 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:26:02,071 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:26:04,566 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:26:21,665 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:26:21,665 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:26:21,665 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:26:21,666 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:26:21,666 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:26:21,666 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:26:21,666 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:26:21,678 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:26:21,703 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:26:21,704 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:26:21,704 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:26:21,716 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:26:21,749 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:26:24,119 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:26:41,365 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:26:41,366 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:26:41,366 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:26:41,366 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:26:41,366 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:26:41,367 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:26:41,367 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:26:41,378 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:26:41,403 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:26:41,404 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:26:41,404 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:26:41,423 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:26:41,446 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:26:43,873 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:27:01,014 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:27:01,014 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:27:01,014 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:27:01,015 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:27:01,015 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:27:01,015 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:27:01,015 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:27:01,026 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:27:01,050 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:27:01,051 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:27:01,051 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:27:01,064 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:27:01,087 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:27:03,617 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:27:21,110 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:27:21,110 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:27:21,110 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:27:21,110 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:27:21,111 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:27:21,111 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:27:21,111 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:27:21,122 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:27:21,147 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:27:21,148 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:27:21,148 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:27:21,161 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:27:21,182 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:27:23,757 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:27:41,136 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:27:41,137 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:27:41,137 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:27:41,137 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:27:41,137 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:27:41,137 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:27:41,138 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:27:41,149 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:27:41,180 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:27:41,180 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:27:41,180 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:27:41,193 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:27:41,216 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:27:43,619 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:28:01,026 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:28:01,026 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:28:01,026 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:28:01,026 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:28:01,027 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:28:01,027 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:28:01,027 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:28:01,038 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:28:01,062 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:28:01,063 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:28:01,063 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:28:01,076 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:28:01,102 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:28:03,469 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:28:20,768 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:28:20,768 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:28:20,769 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:28:20,769 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:28:20,769 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:28:20,769 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:28:20,769 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:28:20,781 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:28:20,806 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:28:20,807 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:28:20,807 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:28:20,820 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:28:20,846 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:28:23,231 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:28:40,359 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:28:40,359 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:28:40,359 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:28:40,359 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:28:40,360 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:28:40,360 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:28:40,360 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:28:40,373 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:28:40,397 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:28:40,398 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:28:40,398 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:28:40,413 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:28:40,434 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:28:42,815 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:28:59,753 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:28:59,753 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:28:59,754 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:28:59,754 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:28:59,754 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:28:59,754 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:28:59,754 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:28:59,766 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:28:59,792 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:28:59,792 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:28:59,792 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:28:59,807 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:28:59,833 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:29:02,210 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:29:19,358 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:29:19,358 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:29:19,359 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:29:19,359 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:29:19,359 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:29:19,359 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:29:19,359 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:29:19,370 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:29:19,403 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:29:19,403 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:29:19,404 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:29:19,416 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:29:19,439 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:29:21,758 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:29:39,225 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:29:39,225 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:29:39,226 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:29:39,226 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:29:39,226 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:29:39,226 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:29:39,226 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:29:39,239 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:29:39,264 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:29:39,264 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:29:39,265 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:29:39,277 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:29:39,300 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:29:41,623 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:29:59,116 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:29:59,116 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:29:59,116 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:29:59,117 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:29:59,117 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:29:59,117 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:29:59,117 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:29:59,129 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:29:59,155 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:29:59,156 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:29:59,156 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:29:59,168 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:29:59,196 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:30:01,715 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:30:18,977 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:30:18,977 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:30:18,978 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:30:18,978 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:30:18,978 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:30:18,978 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:30:18,978 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:30:18,990 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:30:19,016 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:30:19,016 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:30:19,017 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:30:19,029 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:30:19,064 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:30:21,435 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:30:38,423 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:30:38,423 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:30:38,423 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:30:38,423 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:30:38,423 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:30:38,424 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:30:38,424 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:30:38,435 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:30:38,459 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:30:38,459 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:30:38,459 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:30:38,473 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:30:38,496 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:30:40,908 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:30:58,172 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:30:58,173 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:30:58,173 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:30:58,173 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:30:58,173 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:30:58,173 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:30:58,173 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:30:58,185 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:30:58,212 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:30:58,213 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:30:58,213 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:30:58,225 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:30:58,251 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:31:00,764 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:31:17,823 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:31:17,824 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:31:17,824 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:31:17,824 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:31:17,824 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:31:17,824 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:31:17,824 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:31:17,836 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:31:17,863 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:31:17,864 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:31:17,864 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:31:17,879 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:31:17,906 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:31:20,296 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:31:37,124 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:31:37,124 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:31:37,125 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:31:37,125 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:31:37,125 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:31:37,125 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:31:37,125 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:31:37,137 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:31:37,162 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:31:37,162 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:31:37,162 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:31:37,176 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:31:37,196 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:31:39,569 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:31:57,040 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:31:57,040 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:31:57,041 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:31:57,041 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:31:57,041 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:31:57,041 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:31:57,041 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:31:57,053 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:31:57,076 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:31:57,077 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:31:57,077 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:31:57,089 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:31:57,113 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:31:59,539 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:32:16,970 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:32:16,970 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:32:16,970 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:32:16,970 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:32:16,971 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:32:16,971 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:32:16,971 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:32:16,982 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:32:17,006 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:32:17,007 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:32:17,007 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:32:17,020 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:32:17,048 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:32:19,429 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:32:36,613 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:32:36,613 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:32:36,613 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:32:36,613 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:32:36,614 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:32:36,614 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:32:36,614 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:32:36,625 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:32:36,651 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:32:36,651 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:32:36,651 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:32:36,665 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:32:36,690 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:32:39,963 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:32:56,969 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:32:56,969 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:32:56,969 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:32:56,970 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:32:56,970 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:32:56,970 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:32:56,970 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:32:56,981 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:32:57,007 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:32:57,007 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:32:57,007 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:32:57,019 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:32:57,042 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:32:59,545 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:33:16,543 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:33:16,544 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:33:16,544 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:33:16,544 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:33:16,544 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:33:16,545 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:33:16,545 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:33:16,557 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:33:16,580 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:33:16,581 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:33:16,581 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:33:16,593 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:33:16,616 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:33:18,961 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:33:50,429 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:33:50,430 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:33:50,430 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:33:50,430 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:33:50,430 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:33:50,430 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:33:50,431 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:33:50,442 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:33:50,466 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:33:50,466 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:33:50,467 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:33:50,480 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:33:50,503 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:33:52,827 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:34:10,201 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:34:10,202 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:34:10,202 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:34:10,202 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:34:10,202 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:34:10,202 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:34:10,202 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:34:10,214 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:34:10,241 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:34:10,241 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:34:10,241 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:34:10,255 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:34:10,278 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:34:12,765 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:34:32,487 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:34:32,488 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:34:32,488 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:34:32,488 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:34:32,488 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:34:32,488 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:34:32,489 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:34:32,500 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:34:32,527 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:34:32,527 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:34:32,527 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:34:32,539 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:34:32,562 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:34:34,904 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:34:52,225 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:34:52,226 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:34:52,226 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:34:52,226 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:34:52,226 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:34:52,226 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:34:52,227 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:34:52,238 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:34:52,265 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:34:52,265 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:34:52,266 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:34:52,280 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:34:52,304 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:34:54,794 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:35:11,767 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:35:11,768 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:35:11,768 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:35:11,768 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:35:11,768 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:35:11,768 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:35:11,768 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:35:11,781 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:35:11,805 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:35:11,806 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:35:11,806 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:35:11,817 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:35:11,844 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:35:14,191 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:35:31,440 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:35:31,440 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:35:31,440 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:35:31,441 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:35:31,441 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:35:31,441 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:35:31,441 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:35:31,452 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:35:31,476 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:35:31,476 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:35:31,476 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:35:31,490 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:35:31,512 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:35:34,036 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:35:51,031 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:35:51,031 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:35:51,031 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:35:51,032 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:35:51,032 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:35:51,032 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:35:51,032 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:35:51,044 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:35:51,079 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:35:51,080 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:35:51,080 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:35:51,093 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:35:51,115 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:35:54,023 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:36:11,136 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:36:11,136 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:36:11,136 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:36:11,136 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:36:11,136 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:36:11,137 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:36:11,137 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:36:11,148 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:36:11,173 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:36:11,173 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:36:11,173 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:36:11,187 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:36:11,207 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:36:13,633 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:36:30,588 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:36:30,589 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:36:30,589 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:36:30,589 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:36:30,589 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:36:30,589 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:36:30,589 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:36:30,601 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:36:30,626 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:36:30,626 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:36:30,626 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:36:30,640 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:36:30,667 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:36:33,077 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:36:50,166 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:36:50,166 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:36:50,167 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:36:50,167 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:36:50,167 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:36:50,167 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:36:50,167 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:36:50,179 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:36:50,204 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:36:50,204 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:36:50,204 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:36:50,218 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:36:50,240 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:36:52,595 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:37:10,792 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:37:10,792 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:37:10,792 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:37:10,793 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:37:10,793 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:37:10,793 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:37:10,793 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:37:10,805 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:37:10,830 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:37:10,831 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:37:10,831 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:37:10,844 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:37:10,875 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:37:13,380 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:37:30,713 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:37:30,714 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:37:30,714 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:37:30,714 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:37:30,715 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:37:30,715 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:37:30,715 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:37:30,726 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:37:30,751 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:37:30,751 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:37:30,751 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:37:30,764 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:37:30,786 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:37:33,152 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:37:50,369 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:37:50,370 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:37:50,370 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:37:50,370 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:37:50,370 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:37:50,370 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:37:50,371 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:37:50,382 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:37:50,406 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:37:50,407 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:37:50,407 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:37:50,420 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:37:50,442 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:37:52,883 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:38:10,758 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:38:10,758 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:38:10,758 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:38:10,758 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:38:10,759 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:38:10,759 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:38:10,759 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:38:10,771 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:38:10,796 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:38:10,797 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:38:10,797 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:38:10,810 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:38:10,837 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:38:13,277 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:38:30,334 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:38:30,335 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:38:30,335 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:38:30,335 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:38:30,335 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:38:30,335 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:38:30,336 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:38:30,348 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:38:30,375 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:38:30,375 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:38:30,375 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:38:30,389 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:38:30,410 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:38:32,958 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:38:50,002 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:38:50,002 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:38:50,002 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:38:50,002 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:38:50,003 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:38:50,003 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:38:50,003 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:38:50,014 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:38:50,040 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:38:50,041 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:38:50,041 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:38:50,052 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:38:50,075 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:38:52,532 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:39:09,610 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:39:09,610 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:39:09,610 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:39:09,611 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:39:09,611 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:39:09,611 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:39:09,611 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:39:09,622 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:39:09,648 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:39:09,648 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:39:09,649 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:39:09,662 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:39:09,688 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:39:12,022 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:39:29,200 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:39:29,200 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:39:29,200 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:39:29,200 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:39:29,201 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:39:29,201 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:39:29,201 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:39:29,211 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:39:29,235 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:39:29,236 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:39:29,236 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:39:29,247 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:39:29,272 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:39:31,762 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:39:48,774 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:39:48,774 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:39:48,775 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:39:48,775 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:39:48,775 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:39:48,775 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:39:48,776 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:39:48,788 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:39:48,814 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:39:48,814 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:39:48,815 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:39:48,828 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:39:48,854 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:39:51,348 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:40:08,434 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:40:08,434 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:40:08,434 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:40:08,435 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:40:08,435 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:40:08,435 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:40:08,435 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:40:08,447 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:40:08,472 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:40:08,473 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:40:08,473 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:40:08,486 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:40:08,514 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:40:10,840 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:40:28,360 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:40:28,360 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:40:28,361 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:40:28,361 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:40:28,361 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:40:28,361 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:40:28,361 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:40:28,372 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:40:28,397 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:40:28,398 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:40:28,398 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:40:28,411 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:40:28,432 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:40:30,957 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:40:48,033 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:40:48,034 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:40:48,034 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:40:48,034 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:40:48,034 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:40:48,035 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:40:48,035 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:40:48,046 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:40:48,070 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:40:48,070 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:40:48,070 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:40:48,084 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:40:48,110 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:40:50,535 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:41:07,572 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:41:07,572 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:41:07,573 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:41:07,573 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:41:07,573 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:41:07,573 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:41:07,573 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:41:07,583 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:41:07,608 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:41:07,609 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:41:07,609 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:41:07,621 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:41:07,648 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:41:10,185 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:41:27,181 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:41:27,181 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:41:27,181 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:41:27,181 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:41:27,182 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:41:27,182 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:41:27,182 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:41:27,194 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:41:27,219 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:41:27,219 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:41:27,219 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:41:27,231 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:41:27,255 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:41:29,615 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:41:46,856 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:41:46,857 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:41:46,857 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:41:46,857 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:41:46,857 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:41:46,857 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:41:46,858 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:41:46,868 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:41:46,898 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:41:46,898 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:41:46,898 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:41:46,911 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:41:46,933 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:41:49,401 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:42:06,591 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:42:06,592 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:42:06,592 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:42:06,592 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:42:06,592 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:42:06,592 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:42:06,592 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:42:06,604 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:42:06,628 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:42:06,629 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:42:06,629 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:42:06,642 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:42:06,666 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:42:09,187 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:42:28,616 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:42:28,617 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:42:28,617 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:42:28,617 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:42:28,617 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:42:28,617 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:42:28,618 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:42:28,629 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:42:28,655 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:42:28,655 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:42:28,656 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:42:28,679 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:42:28,707 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:42:31,269 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:42:48,414 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:42:48,414 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:42:48,415 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:42:48,415 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:42:48,415 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:42:48,415 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:42:48,415 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:42:48,428 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:42:48,455 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:42:48,456 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:42:48,456 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:42:48,470 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:42:48,492 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:42:51,047 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:43:08,202 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:43:08,202 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:43:08,202 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:43:08,203 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:43:08,203 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:43:08,203 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:43:08,203 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:43:08,214 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:43:08,239 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:43:08,239 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:43:08,239 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:43:08,254 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:43:08,277 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:43:10,782 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:43:27,988 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:43:27,988 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:43:27,988 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:43:27,989 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:43:27,989 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:43:27,989 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:43:27,989 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:43:28,000 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:43:28,024 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:43:28,024 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:43:28,024 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:43:28,039 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:43:28,061 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:43:31,411 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:43:48,807 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:43:48,808 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:43:48,808 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:43:48,808 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:43:48,809 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:43:48,809 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:43:48,809 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:43:48,821 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:43:48,845 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:43:48,845 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:43:48,845 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:43:48,859 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:43:48,891 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:43:51,293 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:44:18,480 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:44:18,481 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:44:18,481 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:44:18,481 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:44:18,481 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:44:18,481 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:44:18,482 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:44:18,495 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:44:18,520 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:44:18,521 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:44:18,521 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:44:18,540 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:44:18,561 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:44:20,956 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:44:38,167 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:44:38,167 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:44:38,167 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:44:38,168 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:44:38,168 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:44:38,168 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:44:38,168 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:44:38,180 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:44:38,204 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:44:38,205 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:44:38,205 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:44:38,218 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:44:38,238 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:46:40,698 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:46:57,931 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:46:57,932 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:46:57,932 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:46:57,932 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:46:57,932 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:46:57,932 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:46:57,933 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:46:57,944 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:46:57,969 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:46:57,969 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:46:57,969 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:46:57,983 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:46:58,006 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:47:00,445 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:47:17,784 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:47:17,784 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:47:17,785 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:47:17,785 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:47:17,785 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:47:17,785 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:47:17,785 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:47:17,797 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:47:17,822 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:47:17,822 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:47:17,822 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:47:17,835 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:47:17,857 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:47:20,302 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:47:37,766 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:47:37,766 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:47:37,766 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:47:37,767 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:47:37,767 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:47:37,767 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:47:37,767 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:47:37,778 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:47:37,804 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:47:37,805 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:47:37,805 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:47:37,819 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:47:37,841 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:47:40,363 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:47:57,938 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:47:57,939 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:47:57,939 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:47:57,939 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:47:57,939 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:47:57,939 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:47:57,940 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:47:57,949 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:47:57,975 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:47:57,975 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:47:57,976 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:47:57,988 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:47:58,010 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:48:00,375 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:48:17,655 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:48:17,656 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:48:17,656 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:48:17,661 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:48:17,662 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:48:17,662 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:48:17,662 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:48:17,673 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:48:17,701 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:48:17,701 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:48:17,701 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:48:17,720 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:48:17,751 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:48:20,343 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:48:37,716 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:48:37,716 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:48:37,716 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:48:37,716 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:48:37,717 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:48:37,717 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:48:37,717 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:48:37,728 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:48:37,757 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:48:37,758 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:48:37,758 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:48:37,770 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:48:37,799 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:48:40,200 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:48:57,569 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:48:57,569 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:48:57,569 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:48:57,570 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:48:57,570 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:48:57,570 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:48:57,570 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:48:57,580 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:48:57,605 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:48:57,605 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:48:57,605 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:48:57,617 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:48:57,639 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:48:59,996 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:49:16,984 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:49:16,985 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:49:16,985 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:49:16,985 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:49:16,985 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:49:16,985 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:49:16,986 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:49:16,997 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:49:17,020 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:49:17,021 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:49:17,021 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:49:17,035 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:49:17,059 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:49:19,529 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:49:36,637 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:49:36,637 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:49:36,637 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:49:36,638 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:49:36,638 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:49:36,638 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:49:36,638 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:49:36,649 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:49:36,677 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:49:36,677 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:49:36,678 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:49:36,691 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:49:36,715 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:49:39,318 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:49:57,831 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:49:57,831 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:49:57,831 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:49:57,831 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:49:57,831 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:49:57,832 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:49:57,832 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:49:57,843 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:49:57,867 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:49:57,867 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:49:57,868 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:49:57,884 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:49:57,910 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:50:00,377 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:50:17,840 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:50:17,840 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:50:17,840 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:50:17,841 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:50:17,841 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:50:17,841 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:50:17,841 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:50:17,853 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:50:17,877 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:50:17,878 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:50:17,878 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:50:17,892 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:50:17,915 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:50:20,294 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:50:37,762 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:50:37,762 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:50:37,763 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:50:37,763 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:50:37,763 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:50:37,763 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:50:37,763 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:50:37,773 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:50:37,801 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:50:37,802 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:50:37,802 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:50:37,813 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:50:37,836 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:50:40,330 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:50:57,591 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:50:57,592 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:50:57,592 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:50:57,592 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:50:57,592 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:50:57,592 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:50:57,593 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:50:57,604 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:50:57,629 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:50:57,630 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:50:57,630 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:50:57,642 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:50:57,675 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:51:00,046 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:51:17,200 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:51:17,201 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:51:17,201 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:51:17,201 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:51:17,201 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:51:17,201 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:51:17,202 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:51:17,212 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:51:17,235 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:51:17,236 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:51:17,236 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:51:17,249 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:51:17,274 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:51:19,655 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:51:36,489 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:51:36,490 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:51:36,490 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:51:36,490 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:51:36,490 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:51:36,491 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:51:36,491 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:51:36,502 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:51:36,526 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:51:36,526 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:51:36,527 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:51:36,540 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:51:36,567 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:51:38,973 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:51:55,943 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:51:55,944 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:51:55,944 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:51:55,944 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:51:55,944 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:51:55,944 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:51:55,945 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:51:55,955 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:51:55,979 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:51:55,980 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:51:55,980 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:51:55,993 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:51:56,021 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:51:58,373 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:52:15,392 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:52:15,393 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:52:15,393 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:52:15,393 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:52:15,393 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:52:15,393 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:52:15,394 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:52:15,404 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:52:15,430 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:52:15,431 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:52:15,431 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:52:15,444 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:52:15,473 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:52:17,876 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:52:34,975 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:52:34,975 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:52:34,975 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:52:34,976 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:52:34,976 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:52:34,976 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:52:34,976 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:52:34,988 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:52:35,012 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:52:35,013 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:52:35,013 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:52:35,026 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:52:35,047 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:52:37,401 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:52:54,735 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:52:54,736 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:52:54,736 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:52:54,736 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:52:54,736 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:52:54,736 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:52:54,737 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:52:54,748 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:52:54,773 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:52:54,773 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:52:54,773 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:52:54,794 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:52:54,817 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:52:57,216 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:53:14,428 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:53:14,429 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:53:14,429 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:53:14,429 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:53:14,429 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:53:14,429 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:53:14,429 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:53:14,441 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:53:14,467 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:53:14,468 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:53:14,468 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:53:14,482 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:53:14,504 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:53:16,873 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:53:33,851 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:53:33,852 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:53:33,852 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:53:33,852 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:53:33,852 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:53:33,852 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:53:33,852 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:53:33,863 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:53:33,888 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:53:33,889 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:53:33,889 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:53:33,902 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:53:33,925 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:53:36,351 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:53:53,293 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:53:53,293 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:53:53,294 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:53:53,294 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:53:53,294 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:53:53,294 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:53:53,294 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:53:53,306 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:53:53,333 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:53:53,334 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:53:53,334 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:53:53,346 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:53:53,369 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:53:55,953 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:54:13,301 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:54:13,301 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:54:13,302 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:54:13,302 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:54:13,302 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:54:13,302 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:54:13,302 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:54:13,314 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:54:13,341 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:54:13,342 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:54:13,342 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:54:13,355 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:54:13,376 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:54:15,801 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:54:32,973 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:54:32,973 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:54:32,974 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:54:32,974 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:54:32,974 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:54:32,974 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:54:32,974 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:54:32,986 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:54:33,010 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:54:33,010 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:54:33,011 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:54:33,024 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:54:33,048 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:54:35,591 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:54:52,475 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:54:52,475 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:54:52,476 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:54:52,476 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:54:52,476 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:54:52,476 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:54:52,476 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:54:52,489 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:54:52,513 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:54:52,513 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:54:52,514 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:54:52,527 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:54:52,553 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:54:55,049 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:55:12,459 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:55:12,460 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:55:12,460 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:55:12,460 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:55:12,460 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:55:12,461 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:55:12,461 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:55:12,471 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:55:12,502 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:55:12,503 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:55:12,503 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:55:12,515 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:55:12,536 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:55:15,064 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:55:32,186 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:55:32,186 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:55:32,187 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:55:32,187 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:55:32,187 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:55:32,187 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:55:32,187 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:55:32,199 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:55:32,225 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:55:32,225 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:55:32,225 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:55:32,237 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:55:32,274 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:55:34,820 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:55:52,521 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:55:52,522 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:55:52,522 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:55:52,522 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:55:52,522 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:55:52,522 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:55:52,523 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:55:52,534 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:55:52,558 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:55:52,559 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:55:52,559 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:55:52,572 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:55:52,593 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:55:55,062 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:56:13,609 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:56:13,610 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:56:13,610 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:56:13,610 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:56:13,610 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:56:13,610 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:56:13,610 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:56:13,622 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:56:13,646 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:56:13,646 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:56:13,646 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:56:13,660 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:56:13,690 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:56:16,100 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:56:32,979 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:56:32,980 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:56:32,980 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:56:32,980 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:56:32,980 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:56:32,980 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:56:32,981 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:56:32,991 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:56:33,016 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:56:33,016 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:56:33,017 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:56:33,030 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:56:33,062 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:56:35,482 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:56:52,474 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:56:52,474 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:56:52,474 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:56:52,474 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:56:52,474 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:56:52,475 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:56:52,475 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:56:52,487 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:56:52,511 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:56:52,512 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:56:52,512 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:56:52,532 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:56:52,561 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:56:55,012 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:57:12,121 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:57:12,121 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:57:12,121 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:57:12,122 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:57:12,122 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:57:12,122 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:57:12,122 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:57:12,134 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:57:12,159 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:57:12,160 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:57:12,160 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:57:12,173 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:57:12,205 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:57:14,709 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:57:31,530 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:57:31,530 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:57:31,530 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:57:31,531 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:57:31,531 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:57:31,531 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:57:31,531 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:57:31,544 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:57:31,569 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:57:31,569 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:57:31,569 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:57:31,581 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:57:31,602 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:57:34,038 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:57:50,887 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:57:50,888 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:57:50,888 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:57:50,888 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:57:50,888 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:57:50,888 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:57:50,889 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:57:50,901 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:57:50,926 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:57:50,926 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:57:50,926 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:57:50,940 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:57:50,962 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:57:53,591 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:58:10,542 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:58:10,542 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:58:10,542 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:58:10,543 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:58:10,543 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:58:10,543 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:58:10,543 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:58:10,555 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:58:10,582 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:58:10,583 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:58:10,583 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:58:10,596 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:58:10,617 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:58:12,964 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:58:29,988 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:58:29,989 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:58:29,989 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:58:29,989 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:58:29,989 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:58:29,989 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:58:29,989 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:58:30,000 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:58:30,029 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:58:30,030 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:58:30,030 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:58:30,045 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:58:30,072 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:58:32,527 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:58:49,673 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:58:49,674 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:58:49,674 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:58:49,674 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:58:49,674 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:58:49,674 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:58:49,675 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:58:49,687 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:58:49,713 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:58:49,713 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:58:49,713 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:58:49,726 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:58:49,748 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:58:52,138 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:59:09,541 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:59:09,541 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:59:09,542 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:59:09,542 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:59:09,542 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:59:09,542 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:59:09,543 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:59:09,553 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:59:09,578 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:59:09,578 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:59:09,578 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:59:09,589 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:59:09,611 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:59:12,125 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:59:29,177 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:59:29,178 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:59:29,178 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:59:29,178 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:59:29,179 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:59:29,179 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:59:29,179 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:59:29,191 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:59:29,215 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:59:29,215 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:59:29,216 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:59:29,228 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:59:29,250 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:59:31,718 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 19:59:48,719 > connected
[DEBUG|open_api.py:244] 2021-02-09 19:59:48,720 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 19:59:48,720 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 19:59:48,720 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 19:59:48,721 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 19:59:48,721 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 19:59:48,721 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 19:59:48,732 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 19:59:48,755 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 19:59:48,756 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 19:59:48,756 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 19:59:48,769 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 19:59:48,791 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 19:59:51,356 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:00:08,326 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:00:08,327 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:00:08,327 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:00:08,327 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:00:08,327 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:00:08,328 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:00:08,328 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:00:08,339 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:00:08,363 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:00:08,364 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:00:08,364 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:00:08,376 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:00:08,397 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:00:10,802 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:00:27,787 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:00:27,788 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:00:27,788 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:00:27,788 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:00:27,788 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:00:27,789 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:00:27,789 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:00:27,802 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:00:27,829 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:00:27,829 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:00:27,829 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:00:27,842 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:00:27,863 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:00:30,427 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:00:48,122 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:00:48,122 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:00:48,122 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:00:48,123 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:00:48,123 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:00:48,123 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:00:48,123 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:00:48,134 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:00:48,158 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:00:48,158 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:00:48,158 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:00:48,173 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:00:48,198 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:00:50,692 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:01:07,782 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:01:07,782 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:01:07,782 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:01:07,782 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:01:07,782 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:01:07,783 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:01:07,783 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:01:07,793 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:01:07,819 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:01:07,820 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:01:07,820 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:01:07,833 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:01:07,858 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:01:10,236 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:01:27,244 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:01:27,244 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:01:27,245 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:01:27,245 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:01:27,245 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:01:27,245 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:01:27,245 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:01:27,257 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:01:27,282 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:01:27,282 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:01:27,282 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:01:27,298 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:01:27,321 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:01:29,708 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:01:46,946 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:01:46,946 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:01:46,947 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:01:46,947 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:01:46,947 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:01:46,947 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:01:46,947 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:01:46,959 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:01:46,987 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:01:46,988 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:01:46,988 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:01:47,002 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:01:47,025 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:01:49,365 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:02:06,608 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:02:06,609 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:02:06,609 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:02:06,609 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:02:06,609 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:02:06,609 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:02:06,610 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:02:06,622 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:02:06,650 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:02:06,650 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:02:06,650 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:02:06,663 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:02:06,690 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:02:09,194 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:02:26,333 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:02:26,334 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:02:26,334 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:02:26,334 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:02:26,334 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:02:26,334 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:02:26,335 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:02:26,346 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:02:26,370 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:02:26,371 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:02:26,371 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:02:26,384 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:02:26,407 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:02:28,858 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:02:47,248 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:02:47,248 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:02:47,248 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:02:47,248 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:02:47,248 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:02:47,248 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:02:47,248 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:02:47,259 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:02:47,285 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:02:47,285 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:02:47,285 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:02:47,298 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:02:47,322 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:02:49,654 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:03:06,735 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:03:06,735 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:03:06,735 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:03:06,735 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:03:06,735 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:03:06,735 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:03:06,735 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:03:06,748 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:03:06,774 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:03:06,774 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:03:06,774 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:03:06,786 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:03:06,810 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:03:09,206 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:03:26,264 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:03:26,264 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:03:26,265 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:03:26,265 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:03:26,265 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:03:26,265 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:03:26,265 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:03:26,277 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:03:26,304 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:03:26,304 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:03:26,304 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:03:26,319 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:03:26,341 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:03:28,764 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:03:47,468 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:03:47,469 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:03:47,469 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:03:47,470 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:03:47,471 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:03:47,471 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:03:47,471 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:03:47,483 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:03:47,514 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:03:47,515 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:03:47,515 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:03:47,534 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:03:47,564 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:03:50,085 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:04:08,015 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:04:08,016 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:04:08,016 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:04:08,016 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:04:08,016 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:04:08,017 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:04:08,017 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:04:08,028 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:04:08,054 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:04:08,055 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:04:08,055 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:04:08,083 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:04:08,122 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:04:10,535 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:04:39,026 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:04:39,027 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:04:39,027 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:04:39,027 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:04:39,027 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:04:39,028 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:04:39,028 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:04:39,039 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:04:39,070 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:04:39,070 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:04:39,070 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:04:39,089 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:04:39,111 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:04:41,545 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:04:59,876 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:04:59,877 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:04:59,877 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:04:59,878 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:04:59,879 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:04:59,879 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:04:59,879 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:04:59,890 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:04:59,923 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:04:59,924 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:04:59,924 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:04:59,937 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:04:59,967 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:05:02,415 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:05:19,796 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:05:19,796 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:05:19,796 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:05:19,797 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:05:19,797 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:05:19,797 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:05:19,797 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:05:19,808 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:05:19,833 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:05:19,834 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:05:19,834 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:05:19,848 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:05:19,874 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:05:22,402 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-09 20:05:39,918 > connected
[DEBUG|open_api.py:244] 2021-02-09 20:05:39,918 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-09 20:05:39,918 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-09 20:05:39,919 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-09 20:05:39,919 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-09 20:05:39,919 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-09 20:05:39,919 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-09 20:05:39,930 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-09 20:05:39,957 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-09 20:05:39,957 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-09 20:05:39,957 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-09 20:05:39,969 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-09 20:05:39,991 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-09 20:05:42,574 > code_update_check 함수에 들어왔습니다.
