[DEBUG|trader.py:7] 2021-02-03 08:50:03,572 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 08:50:07,566 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 08:50:22,735 > connected
[DEBUG|open_api.py:244] 2021-02-03 08:50:22,735 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 08:50:22,735 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 08:50:22,735 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 08:50:22,736 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 08:50:22,736 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 08:50:22,736 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 08:50:22,756 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 08:50:22,800 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 08:50:22,801 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 08:50:22,801 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 08:50:22,821 > setting_data db 존재한다!!!
[DEBUG|open_api.py:1458] 2021-02-03 08:50:22,846 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 08:50:22,847 > 1
[DEBUG|open_api.py:290] 2021-02-03 08:50:23,706 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 08:50:23,706 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 08:50:23,707 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 08:50:23,708 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 08:50:23,708 > 000000496428307
[DEBUG|open_api.py:531] 2021-02-03 08:50:23,709 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 08:50:23,709 > 2
[DEBUG|open_api.py:290] 2021-02-03 08:50:23,752 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 08:50:23,752 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 08:50:23,754 > _opw00018!!!
[DEBUG|trader.py:114] 2021-02-03 08:50:24,061 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:24,067 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:24,368 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:24,368 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:24,670 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:24,670 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:24,971 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:24,971 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:25,274 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:25,274 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:25,577 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:25,577 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:25,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:25,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:26,181 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:26,181 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:26,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:26,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:26,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:26,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:27,087 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:27,087 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:27,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:27,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:27,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:27,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:27,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:27,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:28,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:28,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:28,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:28,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:28,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:28,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:29,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:29,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:29,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:29,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:29,807 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:29,807 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:30,110 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:30,110 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:30,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:30,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:30,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:30,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:31,017 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:31,017 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:31,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:31,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:31,621 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:31,621 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:31,923 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:31,923 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:32,224 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:32,224 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:32,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:32,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:32,829 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:32,829 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:33,131 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:33,131 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:33,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:33,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:33,735 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:33,735 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:34,038 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:34,038 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:34,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:34,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:34,644 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:34,644 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:34,945 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:34,945 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:35,247 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:35,247 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:35,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:35,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:35,853 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:35,853 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:36,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:36,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:36,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:36,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:36,761 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:36,761 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:37,062 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:37,062 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:37,363 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:37,363 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:37,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:37,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:37,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:37,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:38,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:38,270 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:38,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:38,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:38,875 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:38,875 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:39,177 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:39,177 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:39,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:39,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:39,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:39,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:40,082 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:40,082 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:40,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:40,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:40,687 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:40,687 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:40,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:40,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:41,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:41,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:41,594 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:41,594 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:41,896 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:41,896 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:42,198 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:42,198 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:42,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:42,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:42,801 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:42,801 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:43,103 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:43,103 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:43,405 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:43,405 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:43,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:43,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:44,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:44,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:44,313 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:44,313 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:44,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:44,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:44,917 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:44,917 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:45,219 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:45,219 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:45,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:45,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:45,823 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:45,823 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:46,126 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:46,126 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:46,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:46,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:46,729 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:46,729 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:47,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:47,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:47,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:47,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:47,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:47,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:47,937 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:47,937 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:48,240 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:48,240 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:48,541 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:48,541 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:48,843 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:48,843 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:49,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:49,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:49,447 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:49,447 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:49,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:49,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:50,051 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:50,051 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:50,353 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:50,353 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:50,656 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:50,657 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:50,959 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:50,959 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:51,262 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:51,262 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:51,563 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:51,563 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:51,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:51,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:52,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:52,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:52,470 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:52,470 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:52,773 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:52,773 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:53,075 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:53,075 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:53,377 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:53,377 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:53,679 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:53,679 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:53,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:53,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:54,282 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:54,282 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:54,583 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:54,583 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:54,886 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:54,886 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:55,187 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:55,187 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:55,490 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:55,490 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:55,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:55,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:56,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:56,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:56,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:56,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:56,699 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:56,699 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:57,002 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:57,002 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:57,304 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:57,304 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:57,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:57,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:57,909 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:57,909 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:58,211 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:58,211 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:58,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:58,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:58,814 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:58,814 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:59,117 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:59,117 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:59,418 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:59,418 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:50:59,721 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:50:59,721 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:00,024 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:00,024 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:00,326 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:00,326 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:00,630 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:00,630 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:00,931 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:00,931 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:01,233 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:01,233 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:01,535 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:01,535 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:01,838 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:01,838 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:02,141 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:02,141 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:02,443 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:02,443 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:02,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:02,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:03,048 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:03,048 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:03,350 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:03,350 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:03,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:03,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:03,954 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:03,954 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:04,257 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:04,257 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:04,559 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:04,559 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:04,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:04,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:05,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:05,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:05,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:05,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:05,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:05,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:06,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:06,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:06,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:06,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:06,675 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:06,675 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:06,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:06,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:07,280 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:07,280 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:07,582 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:07,582 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:07,884 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:07,884 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:08,187 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:08,187 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:08,489 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:08,490 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:08,792 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:08,792 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:09,094 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:09,094 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:09,396 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:09,396 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:09,698 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:09,698 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:09,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:09,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:10,302 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:10,302 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:10,605 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:10,605 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:10,908 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:10,908 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:11,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:11,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:11,513 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:11,513 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:11,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:11,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:12,118 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:12,118 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:12,420 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:12,420 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:12,722 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:12,722 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:13,025 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:13,025 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:13,327 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:13,327 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:13,630 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:13,630 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:13,931 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:13,931 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:14,233 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:14,233 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:14,536 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:14,536 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:14,838 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:14,838 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:15,140 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:15,140 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:15,441 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:15,441 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:15,744 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:15,744 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:16,046 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:16,046 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:16,348 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:16,348 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:16,650 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:16,650 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:16,953 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:16,953 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:17,255 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:17,255 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:17,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:17,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:17,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:17,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:18,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:18,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:18,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:18,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:18,767 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:18,767 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:19,070 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:19,070 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:19,372 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:19,372 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:19,675 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:19,675 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:19,978 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:19,978 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:20,279 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:20,279 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:20,582 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:20,582 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:20,883 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:20,883 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:21,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:21,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:21,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:21,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:21,790 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:21,790 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:22,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:22,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:22,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:22,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:22,695 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:22,695 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:22,998 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:22,998 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:23,300 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:23,300 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:23,604 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:23,604 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:23,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:23,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:24,208 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:24,208 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:24,510 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:24,510 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:24,812 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:24,812 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:25,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:25,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:25,416 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:25,416 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:25,719 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:25,719 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:26,021 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:26,021 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:26,323 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:26,323 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:26,626 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:26,626 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:26,928 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:26,928 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:27,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:27,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:27,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:27,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:27,835 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:27,835 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:28,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:28,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:28,438 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:28,438 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:28,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:28,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:29,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:29,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:29,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:29,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:29,648 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:29,648 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:29,951 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:29,951 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:30,253 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:30,253 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:30,556 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:30,556 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:30,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:30,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:31,161 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:31,161 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:31,463 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:31,463 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:31,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:31,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:32,067 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:32,067 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:32,370 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:32,370 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:32,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:32,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:32,975 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:32,975 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:33,277 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:33,277 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:33,579 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:33,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:33,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:33,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:34,182 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:34,182 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:34,484 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:34,484 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:34,787 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:34,787 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:35,089 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:35,089 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:35,391 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:35,391 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:35,694 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:35,694 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:35,996 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:35,996 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:36,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:36,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:36,601 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:36,601 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:36,903 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:36,903 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:37,205 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:37,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:37,507 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:37,507 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:37,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:37,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:38,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:38,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:38,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:38,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:38,716 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:38,716 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:39,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:39,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:39,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:39,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:39,622 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:39,622 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:39,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:39,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:40,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:40,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:40,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:40,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:40,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:40,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:41,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:41,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:41,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:41,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:41,738 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:41,738 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:42,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:42,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:42,342 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:42,342 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:42,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:42,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:42,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:42,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:43,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:43,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:43,552 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:43,552 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:43,854 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:43,854 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:44,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:44,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:44,458 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:44,458 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:44,761 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:44,761 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:45,063 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:45,063 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:45,366 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:45,366 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:45,667 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:45,667 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:45,969 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:45,969 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:46,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:46,270 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:46,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:46,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:46,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:46,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:47,177 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:47,177 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:47,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:47,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:47,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:47,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:48,084 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:48,084 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:48,386 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:48,386 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:48,688 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:48,688 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:48,991 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:48,991 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:49,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:49,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:49,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:49,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:49,898 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:49,898 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:50,201 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:50,201 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:50,503 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:50,503 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:50,805 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:50,805 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:51,107 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:51,107 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:51,412 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:51,412 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:51,714 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:51,714 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:52,019 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:52,019 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:52,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:52,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:52,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:52,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:52,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:52,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:53,227 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:53,227 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:53,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:53,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:53,832 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:53,832 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:54,134 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:54,134 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:54,436 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:54,436 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:54,738 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:54,738 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:55,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:55,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:55,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:55,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:55,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:55,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:55,948 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:55,948 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:56,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:56,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:56,553 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:56,553 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:56,856 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:56,856 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:57,157 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:57,157 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:57,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:57,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:57,761 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:57,761 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:58,064 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:58,064 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:58,366 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:58,366 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:58,669 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:58,669 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:58,971 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:58,971 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:59,272 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:59,272 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:59,575 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:59,575 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:51:59,877 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:51:59,877 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:00,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:00,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:00,482 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:00,482 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:00,785 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:00,785 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:01,087 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:01,087 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:01,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:01,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:01,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:01,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:01,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:01,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:02,295 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:02,295 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:02,597 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:02,597 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:02,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:02,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:03,201 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:03,201 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:03,502 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:03,502 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:03,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:03,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:04,106 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:04,106 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:04,409 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:04,409 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:04,711 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:04,711 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:05,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:05,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:05,316 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:05,316 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:05,619 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:05,619 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:05,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:05,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:06,222 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:06,222 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:06,525 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:06,525 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:06,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:06,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:07,130 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:07,130 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:07,431 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:07,431 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:07,732 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:07,732 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:08,034 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:08,034 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:08,335 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:08,335 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:08,637 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:08,637 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:08,938 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:08,938 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:09,241 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:09,241 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:09,543 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:09,543 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:09,846 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:09,846 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:10,148 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:10,148 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:10,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:10,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:10,752 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:10,752 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:11,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:11,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:11,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:11,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:11,660 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:11,660 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:11,963 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:11,963 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:12,265 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:12,265 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:12,568 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:12,568 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:12,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:12,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:13,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:13,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:13,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:13,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:13,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:13,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:14,077 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:14,077 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:14,380 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:14,380 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:14,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:14,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:14,984 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:14,984 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:15,285 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:15,285 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:15,587 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:15,587 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:15,889 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:15,889 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:16,193 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:16,193 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:16,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:16,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:16,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:16,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:17,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:17,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:17,401 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:17,401 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:17,703 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:17,703 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:18,005 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:18,005 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:18,307 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:18,307 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:18,610 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:18,610 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:18,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:18,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:19,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:19,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:19,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:19,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:19,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:19,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:20,120 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:20,120 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:20,422 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:20,422 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:20,725 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:20,725 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:21,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:21,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:21,329 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:21,329 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:21,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:21,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:21,934 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:21,934 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:22,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:22,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:22,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:22,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:22,840 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:22,840 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:23,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:23,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:23,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:23,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:23,747 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:23,747 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:24,049 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:24,049 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-03 08:52:25,284 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 08:52:29,218 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 08:52:33,126 > connected
[DEBUG|open_api.py:244] 2021-02-03 08:52:33,127 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 08:52:33,127 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 08:52:33,127 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 08:52:33,127 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 08:52:33,128 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 08:52:33,128 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 08:52:33,140 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 08:52:33,165 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 08:52:33,165 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 08:52:33,165 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 08:52:33,186 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 08:52:33,215 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-03 08:52:33,517 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:33,517 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:33,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:33,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:34,120 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:34,120 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:34,421 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:34,421 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:34,724 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:34,724 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:35,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:35,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:35,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:35,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:35,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:35,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:35,935 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:35,935 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:36,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:36,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:36,538 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:36,538 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:36,841 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:36,841 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:37,143 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:37,143 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:37,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:37,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:37,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:37,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:38,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:38,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:38,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:38,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:38,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:38,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:38,958 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:38,958 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:39,261 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:39,261 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:39,564 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:39,564 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:39,866 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:39,866 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:40,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:40,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:40,470 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:40,470 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:40,771 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:40,771 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:41,074 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:41,074 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:41,375 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:41,375 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:41,678 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:41,678 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:41,980 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:41,980 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:42,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:42,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:42,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:42,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:42,888 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:42,888 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:43,190 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:43,190 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:43,493 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:43,493 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:43,795 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:43,795 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:44,098 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:44,098 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:44,400 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:44,400 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:44,703 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:44,703 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:45,004 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:45,004 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:45,306 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:45,306 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:45,609 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:45,609 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:45,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:45,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:46,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:46,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:46,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:46,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:46,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:46,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:47,119 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:47,119 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:47,422 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:47,422 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:47,724 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:47,724 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:48,027 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:48,027 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:48,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:48,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:48,631 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:48,631 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:48,934 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:48,934 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:49,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:49,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:49,538 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:49,538 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:49,840 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:49,840 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:50,143 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:50,143 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:50,446 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:50,446 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:50,748 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:50,748 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:51,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:51,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:51,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:51,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:51,655 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:51,655 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:51,957 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:51,957 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:52,260 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:52,260 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:52,562 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:52,562 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:52,865 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:52,865 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:53,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:53,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:53,469 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:53,469 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:53,771 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:53,771 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:54,073 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:54,073 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:54,376 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:54,376 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:54,679 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:54,679 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:54,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:54,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:55,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:55,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:55,586 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:55,586 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:55,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:55,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:56,188 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:56,188 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:56,491 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:56,491 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:56,793 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:56,793 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:57,096 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:57,096 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:57,398 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:57,398 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:57,700 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:57,700 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:58,002 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:58,002 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:58,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:58,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:58,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:58,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:58,910 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:58,910 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:59,212 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:59,212 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:59,515 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:59,515 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:52:59,817 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:52:59,817 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:00,118 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:00,118 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:00,420 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:00,420 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:00,723 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:00,723 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:01,026 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:01,026 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:01,327 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:01,327 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:01,631 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:01,631 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:01,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:01,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:02,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:02,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:02,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:02,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:02,839 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:02,839 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:03,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:03,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:03,444 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:03,444 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:03,747 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:03,747 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:04,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:04,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:04,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:04,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:04,654 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:04,654 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:04,956 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:04,956 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:05,257 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:05,257 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:05,559 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:05,559 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:05,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:05,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:06,165 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:06,165 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:06,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:06,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:06,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:06,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:07,069 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:07,069 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:07,370 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:07,370 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:07,672 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:07,672 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:07,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:07,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:08,275 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:08,275 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:08,577 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:08,577 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:08,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:08,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:09,182 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:09,182 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:09,485 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:09,485 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:09,787 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:09,787 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:10,090 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:10,090 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:10,393 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:10,393 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:10,695 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:10,695 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:10,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:10,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:11,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:11,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:11,602 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:11,602 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:11,903 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:11,903 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:12,206 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:12,206 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:12,509 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:12,509 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:12,810 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:12,810 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:13,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:13,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:13,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:13,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:13,718 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:13,718 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:14,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:14,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:14,322 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:14,322 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:14,624 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:14,624 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:14,928 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:14,928 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:15,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:15,230 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:15,532 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:15,532 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:15,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:15,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:16,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:16,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:16,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:16,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:16,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:16,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:17,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:17,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:17,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:17,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:17,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:17,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:17,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:17,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:18,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:18,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:18,553 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:18,553 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:18,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:18,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:19,157 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:19,157 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:19,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:19,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:19,761 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:19,761 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:20,064 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:20,064 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:20,365 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:20,365 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:20,667 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:20,667 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:20,968 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:20,968 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:21,271 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:21,271 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:21,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:21,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:21,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:21,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:22,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:22,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:22,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:22,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:22,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:22,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:23,084 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:23,084 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:23,385 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:23,385 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:23,686 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:23,686 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:23,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:23,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:24,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:24,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:24,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:24,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:24,896 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:24,896 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:25,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:25,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:25,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:25,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:25,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:25,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:26,101 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:26,101 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:26,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:26,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:26,704 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:26,704 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:27,005 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:27,005 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:27,308 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:27,308 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:27,609 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:27,609 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:27,912 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:27,912 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:28,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:28,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:28,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:28,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:28,818 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:28,818 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:29,122 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:29,122 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:29,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:29,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:29,727 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:29,727 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:30,030 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:30,030 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:30,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:30,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:30,633 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:30,633 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:30,934 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:30,934 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:31,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:31,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:31,537 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:31,537 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:31,840 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:31,840 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:32,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:32,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:32,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:32,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:32,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:32,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:33,048 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:33,048 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:33,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:33,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:33,651 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:33,651 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:33,954 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:33,954 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:34,256 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:34,256 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:34,557 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:34,557 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:34,859 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:34,859 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:35,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:35,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:35,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:35,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:35,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:35,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:36,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:36,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:36,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:36,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:36,671 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:36,671 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:36,973 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:36,973 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:37,275 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:37,275 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:37,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:37,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:37,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:37,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:38,182 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:38,182 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:38,485 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:38,485 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:38,787 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:38,787 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:39,090 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:39,090 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:39,391 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:39,391 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:39,693 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:39,693 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:39,995 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:39,995 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:40,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:40,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:40,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:40,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:40,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:40,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:41,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:41,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:41,504 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:41,504 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:41,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:41,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:42,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:42,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:42,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:42,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:42,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:42,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:43,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:43,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:43,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:43,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:43,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:43,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:43,925 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:43,925 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:44,228 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:44,228 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:44,531 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:44,531 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:44,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:44,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:45,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:45,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:45,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:45,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:45,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:45,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:46,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:46,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:46,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:46,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:46,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:46,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:46,950 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:46,950 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:47,252 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:47,252 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:47,555 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:47,555 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:47,858 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:47,858 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:48,160 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:48,160 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:48,463 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:48,463 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:48,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:48,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:49,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:49,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:49,371 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:49,371 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:49,673 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:49,673 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:49,975 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:49,975 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:50,278 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:50,278 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:50,581 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:50,581 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:50,884 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:50,884 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:51,186 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:51,186 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:51,488 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:51,488 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:51,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:51,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:52,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:52,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:52,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:52,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:52,697 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:52,697 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:52,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:52,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:53,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:53,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:53,603 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:53,605 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:53,907 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:53,907 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:54,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:54,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:54,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:54,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:54,814 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:54,814 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:55,117 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:55,117 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:55,418 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:55,418 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:55,721 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:55,721 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:56,023 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:56,023 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:56,326 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:56,326 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:56,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:56,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:56,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:56,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:57,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:57,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:57,534 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:57,534 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:57,835 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:57,835 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:58,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:58,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:58,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:58,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:58,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:58,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:59,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:59,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:59,347 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:59,347 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:59,649 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:59,649 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:53:59,952 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:53:59,952 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:00,255 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:00,255 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:00,557 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:00,557 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:00,860 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:00,860 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:01,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:01,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:01,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:01,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:01,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:01,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:02,069 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:02,069 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:02,371 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:02,371 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:02,673 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:02,673 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:02,975 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:02,975 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:03,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:03,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:03,579 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:03,579 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:03,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:03,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:04,184 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:04,184 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:04,486 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:04,486 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:04,787 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:04,787 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:05,088 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:05,088 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:05,391 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:05,391 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:05,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:05,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:05,995 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:05,995 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:06,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:06,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:06,600 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:06,600 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:06,902 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:06,902 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:07,205 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:07,205 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:07,506 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:07,506 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:07,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:07,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:08,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:08,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:08,414 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:08,414 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:08,717 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:08,717 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:09,019 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:09,019 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:09,321 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:09,321 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:09,622 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:09,622 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:09,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:09,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:10,226 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:10,226 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:10,528 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:10,528 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:10,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:10,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:11,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:11,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:11,435 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:11,435 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:11,738 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:11,738 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:12,040 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:12,040 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:12,342 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:12,342 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:12,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:12,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:12,948 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:12,948 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:13,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:13,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:13,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:13,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:13,854 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:13,854 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:14,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:14,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:14,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:14,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:14,759 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:14,759 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:15,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:15,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:15,363 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:15,363 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:15,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:15,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:15,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:15,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:16,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:16,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:16,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:16,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:16,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:16,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:17,175 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:17,175 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:17,477 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:17,477 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:17,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:17,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:18,082 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:18,082 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:18,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:18,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:18,685 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:18,685 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:18,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:18,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:19,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:19,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:19,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:19,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:19,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:19,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:20,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:20,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:20,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:20,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:20,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:20,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:21,104 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:21,104 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:21,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:21,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:21,708 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:21,708 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:22,011 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:22,011 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:22,314 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:22,314 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:22,616 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:22,616 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:22,919 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:22,919 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:23,221 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:23,221 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:23,523 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:23,523 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:23,825 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:23,825 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:24,127 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:24,127 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:24,430 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:24,430 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:24,733 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:24,733 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:25,035 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:25,035 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:25,338 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:25,338 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:25,640 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:25,640 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:25,942 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:25,942 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:26,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:26,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:26,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:26,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:26,849 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:26,849 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:27,151 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:27,151 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:27,454 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:27,454 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:27,756 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:27,756 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:28,058 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:28,058 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:28,359 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:28,359 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:28,661 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:28,661 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:28,965 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:28,965 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:29,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:29,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:29,569 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:29,569 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:29,871 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:29,871 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:30,172 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:30,172 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:30,474 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:30,474 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:30,776 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:30,776 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:31,078 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:31,078 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:31,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:31,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:31,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:31,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:31,984 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:31,984 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:32,287 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:32,287 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:32,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:32,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:32,891 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:32,891 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:33,192 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:33,192 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:33,494 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:33,494 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:33,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:33,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:34,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:34,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:34,402 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:34,402 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:34,704 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:34,704 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:35,006 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:35,006 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:35,309 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:35,309 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:35,612 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:35,612 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:35,914 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:35,914 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:36,216 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:36,216 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:36,518 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:36,518 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:36,821 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:36,821 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:37,123 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:37,123 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:37,426 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:37,426 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:37,728 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:37,728 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:38,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:38,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:38,333 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:38,333 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:38,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:38,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:38,937 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:38,937 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:39,240 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:39,240 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:39,543 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:39,543 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:39,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:39,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:40,146 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:40,146 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:40,449 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:40,449 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:40,751 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:40,751 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:41,053 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:41,053 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:41,355 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:41,355 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:41,658 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:41,658 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:41,960 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:41,960 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:42,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:42,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:42,565 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:42,565 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:42,867 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:42,867 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:43,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:43,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:43,473 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:43,473 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:43,776 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:43,776 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:44,078 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:44,078 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:44,380 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:44,380 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:44,683 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:44,683 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:44,985 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:44,985 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:45,287 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:45,287 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:45,589 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:45,589 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:45,891 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:45,891 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-03 08:54:47,184 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 08:54:51,118 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 08:54:55,097 > connected
[DEBUG|open_api.py:244] 2021-02-03 08:54:55,097 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 08:54:55,098 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 08:54:55,098 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 08:54:55,098 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 08:54:55,098 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 08:54:55,099 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 08:54:55,124 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 08:54:55,150 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 08:54:55,151 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 08:54:55,151 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 08:54:55,165 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 08:54:55,199 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-03 08:54:55,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:55,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:55,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:55,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:56,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:56,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:56,408 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:56,408 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:56,710 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:56,710 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:57,013 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:57,013 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:57,315 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:57,315 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:57,617 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:57,617 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:57,920 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:57,920 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:58,222 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:58,222 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:58,525 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:58,525 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:58,827 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:58,827 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:59,130 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:59,130 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:59,431 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:59,431 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:54:59,734 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:54:59,734 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:00,037 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:00,037 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:00,339 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:00,339 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:00,640 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:00,640 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:00,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:00,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:01,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:01,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:01,548 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:01,548 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:01,850 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:01,850 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:02,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:02,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:02,453 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:02,453 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:02,755 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:02,755 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:03,058 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:03,058 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:03,360 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:03,360 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:03,663 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:03,663 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:03,964 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:03,964 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:04,267 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:04,267 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:04,568 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:04,568 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:04,870 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:04,870 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:05,172 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:05,172 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:05,475 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:05,475 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:05,778 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:05,778 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:06,081 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:06,081 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:06,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:06,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:06,686 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:06,686 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:06,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:06,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:07,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:07,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:07,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:07,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:07,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:07,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:08,198 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:08,198 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:08,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:08,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:08,801 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:08,801 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:09,103 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:09,103 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:09,405 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:09,405 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:09,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:09,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:10,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:10,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:10,312 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:10,312 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:10,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:10,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:10,917 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:10,917 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:11,220 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:11,220 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:11,522 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:11,522 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:11,825 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:11,825 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:12,126 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:12,126 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:12,428 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:12,428 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:12,730 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:12,730 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:13,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:13,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:13,334 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:13,334 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:13,636 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:13,636 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:13,938 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:13,938 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:14,240 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:14,240 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:14,543 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:14,543 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:14,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:14,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:15,148 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:15,148 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:15,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:15,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:15,753 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:15,753 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:16,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:16,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:16,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:16,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:16,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:16,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:16,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:16,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:17,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:17,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:17,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:17,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:17,868 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:17,868 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:18,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:18,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:18,474 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:18,474 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:18,776 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:18,776 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:19,079 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:19,079 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:19,381 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:19,381 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:19,683 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:19,683 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:19,984 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:19,984 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:20,285 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:20,285 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:20,587 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:20,587 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:20,890 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:20,890 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:21,192 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:21,192 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:21,495 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:21,495 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:21,797 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:21,797 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:22,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:22,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:22,401 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:22,401 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:22,702 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:22,702 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:23,003 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:23,003 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:23,306 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:23,306 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:23,608 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:23,608 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:23,911 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:23,911 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:24,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:24,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:24,515 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:24,515 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:24,817 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:24,817 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:25,118 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:25,118 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:25,419 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:25,419 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:25,721 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:25,721 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:26,023 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:26,023 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:26,325 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:26,325 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:26,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:26,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:26,929 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:26,929 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:27,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:27,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:27,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:27,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:27,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:27,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:28,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:28,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:28,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:28,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:28,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:28,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:29,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:29,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:29,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:29,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:29,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:29,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:29,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:29,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:30,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:30,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:30,553 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:30,553 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:30,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:30,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:31,158 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:31,158 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:31,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:31,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:31,762 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:31,762 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:32,064 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:32,064 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:32,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:32,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:32,671 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:32,671 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:32,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:32,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:33,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:33,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:33,580 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:33,580 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:33,881 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:33,881 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:34,184 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:34,184 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:34,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:34,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:34,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:34,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:35,091 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:35,091 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:35,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:35,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:35,697 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:35,697 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:35,998 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:35,998 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:36,301 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:36,301 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:36,603 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:36,603 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:36,905 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:36,905 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:37,208 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:37,208 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:37,510 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:37,510 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:37,813 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:37,813 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:38,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:38,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:38,417 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:38,417 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:38,719 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:38,719 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:39,021 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:39,021 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:39,324 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:39,324 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:39,626 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:39,626 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:39,928 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:39,931 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:40,232 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:40,232 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:40,536 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:40,536 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:40,837 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:40,837 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:41,140 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:41,140 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:41,443 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:41,443 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:41,746 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:41,746 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:42,048 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:42,048 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:42,351 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:42,351 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:42,653 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:42,653 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:42,955 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:42,955 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:43,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:43,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:43,559 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:43,559 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:43,862 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:43,862 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:44,165 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:44,165 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:44,467 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:44,467 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:44,770 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:44,770 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:45,072 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:45,072 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:45,375 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:45,375 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:45,677 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:45,677 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:45,979 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:45,979 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:46,281 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:46,281 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:46,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:46,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:46,886 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:46,886 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:47,188 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:47,188 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:47,489 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:47,489 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:47,791 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:47,791 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:48,093 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:48,093 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:48,395 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:48,395 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:48,697 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:48,697 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:48,999 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:48,999 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:49,303 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:49,303 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:49,605 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:49,605 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:49,907 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:49,907 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:50,209 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:50,209 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:50,511 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:50,511 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:50,813 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:50,813 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:51,115 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:51,115 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:51,417 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:51,417 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:51,719 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:51,719 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:52,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:52,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:52,323 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:52,323 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:52,624 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:52,624 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:52,926 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:52,926 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:53,228 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:53,228 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:53,530 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:53,530 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:53,832 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:53,832 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:54,135 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:54,135 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:54,437 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:54,437 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:54,739 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:54,739 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:55,041 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:55,041 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:55,344 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:55,344 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:55,646 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:55,646 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:55,947 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:55,947 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:56,250 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:56,250 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:56,552 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:56,552 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:56,853 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:56,853 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:57,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:57,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:57,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:57,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:57,760 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:57,760 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:58,062 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:58,062 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:58,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:58,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:58,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:58,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:58,968 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:58,968 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:59,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:59,270 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:59,573 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:59,573 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:55:59,875 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:55:59,875 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:00,177 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:00,177 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:00,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:00,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:00,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:00,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:01,084 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:01,084 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:01,385 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:01,385 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:01,688 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:01,688 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:01,989 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:01,989 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:02,292 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:02,292 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:02,594 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:02,594 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:02,897 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:02,897 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:03,199 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:03,199 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:03,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:03,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:03,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:03,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:04,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:04,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:04,407 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:04,407 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:04,709 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:04,709 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:05,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:05,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:05,312 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:05,312 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:05,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:05,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:05,918 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:05,918 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:06,220 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:06,220 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:06,523 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:06,523 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:06,825 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:06,825 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:07,127 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:07,127 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:07,431 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:07,431 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:07,733 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:07,733 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:08,035 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:08,035 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:08,338 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:08,338 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:08,640 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:08,640 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:08,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:08,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:09,244 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:09,244 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:09,545 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:09,545 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:09,847 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:09,847 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:10,150 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:10,150 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:10,451 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:10,451 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:10,754 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:10,754 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:11,056 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:11,056 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:11,358 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:11,358 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:11,661 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:11,661 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:11,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:11,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:12,264 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:12,264 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:12,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:12,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:12,869 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:12,869 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:13,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:13,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:13,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:13,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:13,775 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:13,775 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:14,076 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:14,076 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:14,379 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:14,379 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:14,682 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:14,682 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:14,984 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:14,984 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:15,287 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:15,287 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:15,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:15,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:15,891 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:15,891 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:16,192 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:16,192 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:16,493 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:16,493 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:16,795 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:16,795 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:17,099 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:17,099 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:17,401 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:17,401 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:17,703 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:17,703 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:18,004 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:18,004 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:18,306 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:18,306 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:18,609 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:18,609 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:18,911 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:18,911 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:19,214 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:19,214 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:19,516 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:19,516 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:19,819 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:19,819 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:20,121 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:20,121 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:20,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:20,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:20,726 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:20,726 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:21,029 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:21,029 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:21,330 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:21,330 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:21,632 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:21,632 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:21,933 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:21,933 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:22,235 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:22,235 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:22,536 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:22,536 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:22,838 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:22,838 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:23,140 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:23,140 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:23,443 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:23,443 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:23,745 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:23,745 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:24,047 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:24,047 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:24,349 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:24,349 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:24,652 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:24,652 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:24,954 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:24,954 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:25,257 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:25,257 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:25,559 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:25,559 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:25,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:25,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:26,164 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:26,164 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:26,465 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:26,465 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:26,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:26,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:27,071 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:27,071 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:27,373 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:27,373 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:27,675 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:27,675 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:27,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:27,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:28,280 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:28,280 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:28,581 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:28,581 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:28,882 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:28,882 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:29,184 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:29,184 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:29,487 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:29,487 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:29,789 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:29,789 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:30,092 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:30,092 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:30,394 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:30,394 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:30,696 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:30,696 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:30,997 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:30,997 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:31,299 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:31,299 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:31,600 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:31,600 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:31,901 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:31,901 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:32,203 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:32,203 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:32,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:32,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:32,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:32,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:33,110 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:33,110 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:33,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:33,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:33,714 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:33,714 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:34,016 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:34,016 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:34,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:34,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:34,620 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:34,620 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:34,924 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:34,924 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:35,225 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:35,225 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:35,528 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:35,528 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:35,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:35,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:36,132 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:36,132 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:36,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:36,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:36,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:36,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:37,038 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:37,038 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:37,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:37,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:37,643 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:37,643 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:37,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:37,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:38,247 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:38,247 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:38,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:38,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:38,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:38,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:39,154 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:39,154 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:39,456 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:39,456 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:39,759 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:39,759 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:40,062 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:40,062 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:40,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:40,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:40,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:40,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:40,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:40,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:41,270 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:41,273 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:41,574 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:41,574 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:41,876 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:41,876 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:42,179 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:42,179 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:42,481 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:42,481 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:42,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:42,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:43,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:43,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:43,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:43,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:43,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:43,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:43,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:43,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:44,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:44,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:44,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:44,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:44,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:44,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:45,203 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:45,203 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:45,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:45,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:45,808 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:45,808 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:46,110 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:46,110 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:46,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:46,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:46,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:46,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:47,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:47,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:47,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:47,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:47,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:47,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:47,926 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:47,926 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:48,228 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:48,228 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:48,530 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:48,530 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:48,833 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:48,833 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:49,136 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:49,136 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:49,438 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:49,438 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:49,740 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:49,740 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:50,042 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:50,042 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:50,345 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:50,345 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:50,647 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:50,647 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:50,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:50,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:51,252 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:51,252 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:51,554 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:51,554 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:51,856 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:51,856 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:52,158 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:52,158 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:52,461 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:52,461 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:52,763 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:52,763 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:53,065 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:53,065 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:53,368 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:53,368 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:53,670 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:53,670 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:53,973 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:53,973 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:54,274 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:54,274 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:54,575 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:54,575 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:54,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:54,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:55,180 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:55,180 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:55,481 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:55,481 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:55,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:55,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:56,087 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:56,087 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:56,389 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:56,389 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:56,692 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:56,692 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:56,994 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:56,994 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:57,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:57,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:57,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:57,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:57,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:57,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:58,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:58,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:58,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:58,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:58,809 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:58,809 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:59,113 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:59,113 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:59,415 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:59,415 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:56:59,718 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:56:59,718 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:00,020 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:00,020 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:00,323 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:00,323 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:00,626 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:00,626 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:00,928 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:00,928 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:01,230 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:01,230 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:01,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:01,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:01,835 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:01,835 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:02,138 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:02,138 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:02,441 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:02,441 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:02,743 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:02,743 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:03,046 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:03,046 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:03,348 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:03,348 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:03,650 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:03,650 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:03,952 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:03,952 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:04,255 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:04,255 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:04,558 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:04,558 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:04,861 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:04,861 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:05,163 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:05,163 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:05,466 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:05,466 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:05,768 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:05,768 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:06,070 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:06,070 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:06,372 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:06,372 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:06,674 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:06,674 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:06,977 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:06,977 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:07,278 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:07,278 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:07,580 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:07,580 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:07,882 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:07,882 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:08,185 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:08,185 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:08,488 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:08,488 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-03 08:57:09,601 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 08:57:13,528 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 08:57:17,566 > connected
[DEBUG|open_api.py:244] 2021-02-03 08:57:17,566 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 08:57:17,566 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 08:57:17,566 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 08:57:17,567 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 08:57:17,567 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 08:57:17,567 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 08:57:17,580 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 08:57:17,605 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 08:57:17,605 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 08:57:17,606 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 08:57:17,619 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 08:57:17,642 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-03 08:57:17,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:17,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:18,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:18,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:18,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:18,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:18,849 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:18,849 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:19,153 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:19,153 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:19,455 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:19,455 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:19,757 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:19,757 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:20,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:20,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:20,362 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:20,362 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:20,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:20,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:20,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:20,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:21,268 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:21,268 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:21,570 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:21,570 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:21,872 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:21,872 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:22,175 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:22,175 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:22,477 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:22,477 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:22,780 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:22,780 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:23,083 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:23,083 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:23,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:23,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:23,687 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:23,687 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:23,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:23,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:24,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:24,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:24,593 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:24,593 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:24,895 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:24,895 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:25,198 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:25,198 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:25,500 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:25,500 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:25,801 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:25,801 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:26,104 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:26,104 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:26,405 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:26,405 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:26,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:26,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:27,010 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:27,010 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:27,313 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:27,314 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:27,615 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:27,615 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:27,918 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:27,918 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:28,220 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:28,220 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:28,522 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:28,522 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:28,824 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:28,824 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:29,127 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:29,127 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:29,429 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:29,429 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:29,731 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:29,731 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:30,034 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:30,034 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:30,335 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:30,335 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:30,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:30,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:30,939 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:30,939 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:31,241 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:31,241 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:31,544 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:31,544 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:31,845 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:31,845 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:32,147 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:32,147 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:32,449 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:32,449 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:32,750 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:32,750 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:33,052 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:33,052 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:33,355 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:33,355 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:33,658 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:33,658 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:33,960 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:33,960 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:34,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:34,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:34,565 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:34,565 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:34,868 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:34,868 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:35,169 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:35,169 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:35,471 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:35,471 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:35,772 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:35,772 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:36,074 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:36,074 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:36,376 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:36,376 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:36,678 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:36,678 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:36,980 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:36,980 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:37,282 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:37,282 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:37,584 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:37,584 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:37,887 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:37,887 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:38,188 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:38,188 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:38,491 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:38,491 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:38,794 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:38,794 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:39,096 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:39,096 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:39,397 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:39,397 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:39,699 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:39,699 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:40,002 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:40,002 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:40,305 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:40,305 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:40,607 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:40,607 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:40,909 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:40,909 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:41,210 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:41,210 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:41,512 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:41,512 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:41,813 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:41,813 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:42,116 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:42,116 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:42,417 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:42,417 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:42,721 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:42,721 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:43,024 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:43,024 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:43,325 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:43,325 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:43,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:43,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:43,930 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:43,930 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:44,231 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:44,231 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:44,533 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:44,533 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:44,834 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:44,834 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:45,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:45,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:45,439 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:45,439 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:45,741 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:45,741 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:46,044 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:46,044 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:46,346 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:46,346 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:46,648 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:46,648 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:46,949 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:46,949 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:47,251 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:47,251 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:47,553 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:47,553 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:47,855 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:47,855 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:48,158 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:48,158 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:48,461 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:48,462 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:48,764 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:48,764 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:49,066 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:49,066 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:49,369 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:49,369 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:49,671 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:49,671 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:49,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:49,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:50,275 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:50,275 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:50,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:50,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:50,879 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:50,879 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:51,181 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:51,181 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:51,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:51,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:51,786 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:51,786 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:52,089 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:52,089 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:52,390 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:52,390 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:52,693 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:52,693 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:52,995 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:52,995 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:53,297 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:53,297 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:53,599 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:53,599 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:53,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:53,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:54,202 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:54,202 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:54,505 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:54,505 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:54,807 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:54,807 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:55,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:55,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:55,412 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:55,412 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:55,713 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:55,713 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:56,016 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:56,016 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:56,318 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:56,318 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:56,620 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:56,620 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:56,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:56,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:57,224 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:57,224 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:57,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:57,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:57,829 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:57,829 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:58,130 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:58,130 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:58,432 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:58,432 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:58,734 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:58,734 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:59,036 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:59,036 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:59,339 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:59,339 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:59,641 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:59,641 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:57:59,943 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:57:59,943 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:00,245 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:00,245 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:00,547 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:00,547 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:00,849 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:00,849 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:01,152 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:01,152 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:01,453 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:01,453 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:01,756 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:01,756 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:02,059 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:02,059 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:02,361 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:02,361 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:02,664 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:02,664 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:02,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:02,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:03,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:03,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:03,572 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:03,572 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:03,873 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:03,873 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:04,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:04,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:04,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:04,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:04,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:04,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:05,083 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:05,083 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:05,386 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:05,386 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:05,688 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:05,688 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:05,991 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:05,991 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:06,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:06,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:06,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:06,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:06,898 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:06,898 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:07,201 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:07,201 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:07,504 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:07,504 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:07,806 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:07,806 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:08,109 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:08,109 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:08,411 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:08,411 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:08,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:08,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:09,018 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:09,018 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:09,320 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:09,320 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:09,623 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:09,623 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:09,925 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:09,925 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:10,228 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:10,228 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:10,529 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:10,529 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:10,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:10,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:11,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:11,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:11,435 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:11,435 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:11,738 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:11,738 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:12,040 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:12,040 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:12,343 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:12,343 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:12,645 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:12,645 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:12,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:12,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:13,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:13,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:13,551 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:13,551 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:13,853 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:13,853 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:14,156 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:14,156 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:14,459 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:14,459 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:14,760 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:14,760 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:15,062 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:15,062 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:15,365 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:15,365 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:15,666 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:15,666 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:15,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:15,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:16,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:16,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:16,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:16,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:16,874 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:16,874 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:17,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:17,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:17,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:17,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:17,782 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:17,782 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:18,084 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:18,084 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:18,386 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:18,386 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:18,688 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:18,688 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:18,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:18,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:19,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:19,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:19,595 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:19,595 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:19,897 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:19,897 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:20,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:20,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:20,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:20,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:20,804 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:20,804 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:21,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:21,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:21,409 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:21,409 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:21,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:21,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:22,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:22,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:22,317 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:22,317 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:22,619 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:22,619 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:22,922 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:22,922 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:23,225 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:23,225 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:23,528 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:23,528 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:23,830 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:23,830 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:24,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:24,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:24,435 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:24,435 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:24,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:24,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:25,039 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:25,039 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:25,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:25,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:25,643 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:25,643 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:25,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:25,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:26,249 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:26,249 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:26,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:26,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:26,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:26,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:27,154 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:27,154 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:27,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:27,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:27,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:27,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:28,060 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:28,060 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:28,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:28,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:28,665 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:28,665 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:28,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:28,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:29,268 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:29,268 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:29,570 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:29,570 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:29,872 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:29,872 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:30,175 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:30,175 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:30,476 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:30,476 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:30,778 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:30,778 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:31,080 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:31,080 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:31,382 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:31,382 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:31,684 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:31,688 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:31,989 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:31,989 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:32,290 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:32,290 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:32,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:32,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:32,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:32,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:33,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:33,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:33,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:33,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:33,802 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:33,802 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:34,103 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:34,103 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:34,405 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:34,405 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:34,707 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:34,707 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:35,009 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:35,009 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:35,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:35,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:35,614 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:35,614 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:35,917 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:35,917 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:36,219 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:36,219 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:36,521 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:36,521 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:36,824 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:36,824 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:37,125 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:37,125 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:37,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:37,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:37,730 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:37,730 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:38,032 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:38,032 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:38,335 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:38,335 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:38,638 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:38,638 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:38,940 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:38,940 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:39,242 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:39,242 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:39,545 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:39,545 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:39,847 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:39,847 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:40,149 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:40,149 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:40,450 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:40,450 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:40,752 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:40,752 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:41,055 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:41,055 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:41,357 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:41,357 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:41,659 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:41,659 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:41,962 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:41,962 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:42,263 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:42,263 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:42,566 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:42,566 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:42,868 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:42,868 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:43,170 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:43,170 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:43,472 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:43,472 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:43,774 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:43,774 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:44,076 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:44,076 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:44,378 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:44,378 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:44,681 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:44,681 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:44,983 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:44,983 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:45,286 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:45,286 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:45,588 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:45,588 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:45,891 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:45,891 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:46,192 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:46,192 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:46,496 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:46,496 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:46,799 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:46,799 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:47,101 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:47,101 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:47,403 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:47,403 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:47,706 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:47,706 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:48,007 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:48,007 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:48,310 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:48,310 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:48,612 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:48,612 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:48,915 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:48,915 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:49,216 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:49,216 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:49,519 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:49,519 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:49,820 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:49,820 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:50,123 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:50,123 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:50,424 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:50,424 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:50,725 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:50,725 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:51,028 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:51,028 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:51,331 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:51,331 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:51,633 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:51,633 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:51,935 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:51,935 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:52,236 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:52,236 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:52,538 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:52,538 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:52,840 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:52,840 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:53,142 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:53,142 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:53,445 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:53,445 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:53,747 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:53,747 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:54,050 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:54,050 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:54,352 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:54,352 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:54,653 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:54,653 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:54,955 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:54,955 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:55,258 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:55,258 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:55,560 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:55,560 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:55,865 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:55,865 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:56,167 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:56,167 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:56,470 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:56,470 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:56,771 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:56,771 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:57,074 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:57,074 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:57,375 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:57,375 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:57,678 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:57,678 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:57,981 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:57,981 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:58,283 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:58,283 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:58,585 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:58,585 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:58,886 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:58,886 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:59,188 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:59,188 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:59,490 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:59,490 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:58:59,793 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:58:59,793 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:00,096 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:00,096 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:00,398 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:00,398 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:00,700 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:00,700 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:01,002 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:01,002 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:01,304 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:01,304 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:01,606 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:01,606 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:01,909 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:01,909 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:02,211 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:02,211 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:02,514 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:02,514 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:02,815 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:02,815 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:03,117 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:03,117 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:03,419 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:03,419 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:03,721 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:03,721 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:04,022 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:04,022 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:04,325 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:04,325 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:04,627 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:04,627 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:04,931 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:04,931 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:05,233 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:05,233 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:05,535 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:05,535 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:05,836 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:05,836 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:06,137 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:06,137 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:06,440 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:06,440 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:06,743 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:06,743 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:07,045 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:07,045 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:07,348 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:07,348 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:07,649 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:07,649 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:07,952 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:07,952 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:08,254 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:08,254 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:08,556 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:08,556 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:08,859 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:08,859 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:09,161 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:09,161 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:09,464 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:09,464 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:09,766 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:09,766 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:10,068 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:10,068 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:10,370 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:10,370 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:10,673 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:10,673 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:10,974 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:10,974 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:11,276 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:11,276 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:11,578 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:11,578 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:11,880 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:11,880 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:12,181 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:12,181 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:12,483 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:12,483 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:12,784 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:12,784 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:13,086 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:13,086 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:13,387 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:13,387 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:13,691 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:13,691 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:13,993 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:13,993 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:14,296 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:14,296 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:14,598 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:14,598 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:14,900 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:14,900 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:15,201 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:15,201 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:15,503 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:15,503 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:15,805 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:15,805 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:16,107 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:16,107 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:16,409 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:16,409 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:16,712 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:16,712 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:17,014 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:17,014 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:17,317 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:17,317 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:17,619 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:17,619 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:17,921 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:17,921 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:18,224 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:18,224 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:18,526 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:18,526 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:18,828 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:18,828 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:19,131 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:19,131 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:19,434 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:19,434 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:19,736 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:19,736 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:20,039 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:20,039 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:20,341 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:20,341 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:20,644 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:20,644 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:20,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:20,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:21,248 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:21,248 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:21,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:21,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:21,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:21,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:22,155 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:22,155 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:22,457 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:22,457 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:22,759 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:22,759 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:23,062 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:23,062 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:23,364 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:23,364 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:23,666 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:23,666 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:23,968 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:23,968 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:24,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:24,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:24,571 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:24,571 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:24,873 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:24,873 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:25,177 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:25,177 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:25,479 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:25,479 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:25,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:25,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:26,083 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:26,083 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:26,385 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:26,385 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:26,687 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:26,687 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:26,990 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:26,990 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:27,293 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:27,293 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:27,596 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:27,596 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:27,899 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:27,899 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:28,200 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:28,200 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:28,501 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:28,501 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:28,803 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:28,803 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:29,105 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:29,105 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:29,408 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:29,408 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:29,709 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:29,709 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:7] 2021-02-03 08:59:30,818 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 08:59:34,751 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 08:59:38,830 > connected
[DEBUG|open_api.py:244] 2021-02-03 08:59:38,830 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 08:59:38,830 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 08:59:38,831 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 08:59:38,831 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 08:59:38,831 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 08:59:38,831 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 08:59:38,842 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 08:59:38,868 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 08:59:38,869 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 08:59:38,869 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 08:59:38,882 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 08:59:38,905 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-03 08:59:39,207 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:39,207 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:39,508 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:39,508 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:39,810 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:39,810 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:40,112 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:40,112 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:40,413 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:40,413 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:40,715 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:40,715 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:41,017 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:41,017 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:41,319 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:41,319 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:41,621 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:41,621 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:41,923 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:41,923 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:42,225 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:42,225 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:42,528 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:42,528 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:42,831 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:42,831 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:43,133 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:43,133 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:43,435 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:43,435 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:43,737 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:43,737 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:44,039 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:44,039 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:44,342 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:44,342 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:44,644 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:44,644 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:44,946 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:44,946 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:45,248 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:45,248 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:45,550 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:45,550 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:45,852 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:45,852 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:46,154 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:46,154 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:46,456 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:46,456 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:46,758 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:46,758 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:47,061 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:47,061 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:47,363 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:47,363 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:47,666 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:47,666 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:47,967 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:47,967 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:48,269 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:48,269 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:48,570 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:48,570 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:48,873 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:48,873 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:49,176 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:49,176 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:49,478 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:49,478 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:49,781 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:49,781 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:50,083 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:50,083 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:50,384 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:50,384 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:50,686 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:50,686 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:50,988 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:50,988 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:51,291 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:51,291 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:51,592 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:51,592 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:51,894 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:51,894 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:52,197 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:52,197 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:52,499 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:52,499 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:52,800 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:52,800 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:53,102 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:53,102 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:53,403 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:53,403 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:53,706 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:53,706 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:54,009 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:54,009 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:54,311 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:54,311 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:54,613 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:54,613 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:54,916 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:54,916 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:55,218 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:55,218 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:55,519 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:55,519 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:55,821 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:55,821 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:56,125 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:56,125 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:56,427 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:56,427 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:56,728 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:56,728 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:57,031 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:57,031 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:57,332 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:57,332 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:57,635 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:57,635 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:57,936 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:57,936 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:58,238 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:58,238 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:58,540 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:58,540 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:58,842 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:58,842 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:59,145 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:59,145 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:59,447 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:59,447 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 08:59:59,749 > market_time_check!!!
[DEBUG|trader.py:126] 2021-02-03 08:59:59,749 > 장시간이 아닙니다.테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다. 
[DEBUG|trader.py:114] 2021-02-03 09:00:00,050 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:00,050 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:00,052 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:00,052 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:00,053 > 1
[DEBUG|open_api.py:290] 2021-02-03 09:00:00,858 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:00,858 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:00,860 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:00,862 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:01,060 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:01,061 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:01,063 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:01,063 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:01,066 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:01,068 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:01,068 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:01,068 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:01,070 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:01,070 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:01,164 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:01,164 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:01,165 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:01,165 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:01,166 > 2
[DEBUG|open_api.py:290] 2021-02-03 09:00:01,216 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:01,216 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:01,218 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:01,218 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:01,218 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:01,219 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:01,220 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:01,220 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:01,221 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:01,222 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:01,222 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:01,223 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:01,225 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:01,255 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:01,556 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:01,556 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:01,557 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:01,558 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:01,769 > 3
[DEBUG|open_api.py:290] 2021-02-03 09:00:01,813 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:01,813 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:01,814 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:01,815 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:01,913 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:01,913 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:01,915 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:01,916 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:01,917 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:01,918 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:01,918 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:01,919 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:01,920 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:01,920 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:01,939 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:01,940 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:01,940 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:01,941 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:02,371 > 4
[DEBUG|open_api.py:290] 2021-02-03 09:00:02,415 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:02,415 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:02,417 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:02,417 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:02,417 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:02,418 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:02,418 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:02,419 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:02,440 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:02,440 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:02,441 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:02,442 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:02,447 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:02,454 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:02,754 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:02,754 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:02,756 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:02,756 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:02,973 > 5
[DEBUG|open_api.py:290] 2021-02-03 09:00:03,447 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:03,447 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:03,449 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:03,450 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:03,570 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:03,570 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:03,572 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:03,572 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:03,574 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:03,575 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:03,576 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:03,576 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:03,578 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:03,578 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:03,598 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:03,598 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:03,598 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:03,598 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:03,599 > 6
[DEBUG|open_api.py:290] 2021-02-03 09:00:03,654 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:03,654 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:03,655 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:03,656 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:03,656 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:03,657 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:03,657 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:03,658 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:03,659 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:03,659 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:03,660 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:03,661 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:03,663 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:03,671 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:03,971 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:03,971 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:03,973 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:03,973 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:04,202 > 7
[DEBUG|open_api.py:290] 2021-02-03 09:00:05,041 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:05,041 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:05,043 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:05,045 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:05,179 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:05,179 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:05,181 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:05,181 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:05,183 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:05,184 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:05,184 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:05,185 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:05,186 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:05,186 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:05,205 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:05,205 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:05,205 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:05,206 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:05,207 > 8
[DEBUG|open_api.py:290] 2021-02-03 09:00:05,356 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:05,356 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:05,358 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:05,358 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:05,358 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:05,359 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:05,360 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:05,360 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:05,361 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:05,361 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:05,362 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:05,362 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:05,364 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:05,376 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:05,677 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:05,677 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:05,679 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:05,680 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:05,809 > 9
[DEBUG|open_api.py:290] 2021-02-03 09:00:06,701 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:06,701 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:06,703 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:06,705 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:06,818 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:06,818 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:06,820 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:06,820 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:06,821 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:06,822 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:06,823 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:06,823 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:06,825 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:06,825 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:06,844 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:06,844 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:06,845 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:06,845 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:06,846 > 10
[DEBUG|open_api.py:290] 2021-02-03 09:00:07,219 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:07,219 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:07,221 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:07,221 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:07,222 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:07,223 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:07,223 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:07,225 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:07,228 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:07,228 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:07,229 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:07,230 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:07,239 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:07,247 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:07,548 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:07,548 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:07,550 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:07,550 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:07,550 > 11
[DEBUG|open_api.py:290] 2021-02-03 09:00:08,350 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:08,350 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:08,352 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:08,353 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:08,480 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:08,480 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:08,482 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:08,482 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:08,483 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:08,484 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:08,485 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:08,485 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:08,486 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:08,487 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9570.0, 2985.0, 0.3, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:08,502 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:08,502 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:08,503 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:08,503 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:08,504 > 12
[DEBUG|open_api.py:290] 2021-02-03 09:00:09,362 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:09,362 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:09,364 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:09,364 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:09,365 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:09,366 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:09,366 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:09,366 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:09,390 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:09,390 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:09,391 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:09,391 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:09,397 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:09,405 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:09,706 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:09,706 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:09,708 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:09,708 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:09,709 > 13
[DEBUG|open_api.py:290] 2021-02-03 09:00:11,017 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:11,017 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:11,019 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:11,020 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:11,171 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:11,171 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:11,173 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:11,174 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:11,175 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:11,176 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:11,176 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:11,177 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:11,178 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:11,179 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:11,205 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:11,205 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:11,206 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:11,206 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:11,207 > 14
[DEBUG|open_api.py:290] 2021-02-03 09:00:13,080 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:13,080 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:13,082 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:13,082 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:13,083 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:13,083 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:13,083 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:13,083 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:13,084 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:13,085 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:13,085 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:13,086 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:13,095 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:13,104 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:13,405 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:13,405 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:13,407 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:13,407 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:13,408 > 15
[DEBUG|open_api.py:290] 2021-02-03 09:00:16,107 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:16,107 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:16,109 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:16,111 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:16,222 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:16,222 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:16,224 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:16,224 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:16,225 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:16,226 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:16,226 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:16,226 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:16,229 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:16,229 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:16,246 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:16,246 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:16,247 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:16,247 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:16,248 > 16
[DEBUG|open_api.py:290] 2021-02-03 09:00:18,385 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:18,385 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:00:18,387 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:00:18,387 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:00:18,387 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:00:18,388 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:00:18,389 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:00:18,390 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:00:18,391 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:00:18,391 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:00:18,392 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:00:18,393 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:00:18,404 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:00:18,412 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:00:18,712 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:00:18,712 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:00:18,713 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:00:18,714 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:18,714 > 17
[DEBUG|open_api.py:290] 2021-02-03 09:00:20,469 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:20,469 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:00:20,472 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:00:20,473 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:00:20,584 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:00:20,584 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:00:20,586 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:00:20,586 > []
[DEBUG|trader.py:50] 2021-02-03 09:00:20,587 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:00:20,588 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:00:20,588 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:00:20,589 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:00:20,590 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:00:20,591 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9585.0, 2450.0, 0.25, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:00:20,608 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:00:20,608 > []
[DEBUG|open_api.py:976] 2021-02-03 09:00:20,609 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:00:20,610 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:00:20,611 > 18
[DEBUG|open_api.py:290] 2021-02-03 09:00:20,623 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:00:20,623 > 서비스 TR을 확인바랍니다.(0007)
[DEBUG|trader.py:7] 2021-02-03 09:01:52,994 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 09:01:56,918 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 09:02:00,934 > connected
[DEBUG|open_api.py:244] 2021-02-03 09:02:00,934 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 09:02:00,934 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 09:02:00,935 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 09:02:00,935 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 09:02:00,935 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 09:02:00,935 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 09:02:00,955 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 09:02:00,981 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 09:02:00,981 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 09:02:00,981 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 09:02:00,996 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 09:02:01,032 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-03 09:02:01,334 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:01,334 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:01,335 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:01,336 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:01,336 > 1
[DEBUG|open_api.py:290] 2021-02-03 09:02:02,148 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:02,149 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:02,150 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:02,152 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:02,304 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:02,304 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:02,306 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:02,306 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:02,307 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:02,308 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:02,309 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:02,310 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:02,312 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:02,312 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:02,351 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:02,351 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:02,352 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:02,352 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:02,354 > 2
[DEBUG|open_api.py:290] 2021-02-03 09:02:02,399 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:02,399 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:02,401 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:02,401 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:02,401 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:02,402 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:02,402 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:02,403 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:02,404 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:02,405 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:02,405 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:02,406 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:02,407 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:02,422 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:02,723 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:02,723 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:02,724 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:02,725 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:02,956 > 3
[DEBUG|open_api.py:290] 2021-02-03 09:02:03,282 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:03,282 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:03,284 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:03,286 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:03,386 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:03,386 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:03,388 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:03,389 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:03,390 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:03,391 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:03,391 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:03,391 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:03,393 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:03,393 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:03,410 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:03,410 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:03,411 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:03,412 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:03,559 > 4
[DEBUG|open_api.py:290] 2021-02-03 09:02:03,629 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:03,629 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:03,631 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:03,631 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:03,632 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:03,633 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:03,633 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:03,633 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:03,635 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:03,635 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:03,636 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:03,636 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:03,638 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:03,646 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:03,946 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:03,946 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:03,947 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:03,948 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:04,163 > 5
[DEBUG|open_api.py:290] 2021-02-03 09:02:04,362 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:04,362 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:04,364 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:04,365 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:04,472 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:04,472 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:04,475 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:04,476 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:04,485 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:04,486 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:04,486 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:04,486 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:04,488 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:04,488 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:04,516 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:04,516 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:04,517 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:04,517 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:04,765 > 6
[DEBUG|open_api.py:290] 2021-02-03 09:02:04,805 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:04,805 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:04,806 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:04,807 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:04,808 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:04,809 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:04,809 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:04,809 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:04,815 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:04,816 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:04,816 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:04,817 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:04,821 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:04,831 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:05,132 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:05,132 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:05,134 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:05,134 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:05,367 > 7
[DEBUG|open_api.py:290] 2021-02-03 09:02:05,624 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:05,624 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:05,626 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:05,627 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:05,745 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:05,745 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:05,747 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:05,747 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:05,749 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:05,750 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:05,750 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:05,750 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:05,752 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:05,752 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:05,789 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:05,790 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:05,790 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:05,791 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:05,969 > 8
[DEBUG|open_api.py:290] 2021-02-03 09:02:06,057 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:06,057 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:06,058 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:06,059 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:06,059 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:06,060 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:06,060 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:06,061 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:06,062 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:06,063 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:06,063 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:06,063 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:06,065 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:06,073 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:06,373 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:06,373 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:06,375 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:06,376 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:06,570 > 9
[DEBUG|open_api.py:290] 2021-02-03 09:02:06,779 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:06,779 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:06,781 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:06,782 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:06,903 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:06,903 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:06,905 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:06,905 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:06,906 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:06,907 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:06,907 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:06,908 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:06,909 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:06,909 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:06,926 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:06,926 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:06,927 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:06,927 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:07,173 > 10
[DEBUG|open_api.py:290] 2021-02-03 09:02:07,287 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:07,287 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:07,289 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:07,289 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:07,290 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:07,291 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:07,291 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:07,291 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:07,293 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:07,293 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:07,293 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:07,295 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:07,304 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:07,313 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:07,614 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:07,614 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:07,616 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:07,616 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:07,774 > 11
[DEBUG|open_api.py:290] 2021-02-03 09:02:08,042 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:08,042 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:08,045 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:08,047 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:08,164 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:08,164 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:08,166 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:08,167 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:08,168 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:08,169 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:08,169 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:08,169 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:08,171 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:08,171 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:08,203 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:08,204 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:08,204 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:08,205 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:08,375 > 12
[DEBUG|open_api.py:290] 2021-02-03 09:02:08,432 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:08,432 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:08,434 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:08,434 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:08,434 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:08,435 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:08,435 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:08,436 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:08,437 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:08,437 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:08,438 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:08,438 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:08,440 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:08,447 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:08,747 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:08,747 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:08,748 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:08,749 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:08,977 > 13
[DEBUG|open_api.py:290] 2021-02-03 09:02:09,025 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:09,025 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:09,027 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:09,029 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:09,134 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:09,134 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:09,136 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:09,137 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:09,138 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:09,139 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:09,139 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:09,139 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:09,140 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:09,141 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9550.0, 895.0, 0.09, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:09,158 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:09,158 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:09,159 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:09,159 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:09,579 > 14
[DEBUG|open_api.py:290] 2021-02-03 09:02:09,630 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:09,630 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:09,632 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:09,632 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:09,632 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:09,633 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:09,633 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:09,634 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:09,635 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:09,635 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:09,635 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:09,636 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:09,638 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:09,644 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:09,945 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:09,945 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:09,947 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:09,948 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:10,182 > 15
[DEBUG|open_api.py:290] 2021-02-03 09:02:10,277 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:10,277 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:10,279 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:10,280 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:10,384 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:10,384 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:10,386 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:10,386 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:10,387 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:10,388 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:10,388 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:10,389 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:10,390 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:10,390 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:10,415 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:10,415 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:10,415 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:10,416 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:10,784 > 16
[DEBUG|open_api.py:290] 2021-02-03 09:02:10,848 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:10,848 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:10,850 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:10,850 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:10,850 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:10,851 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:10,851 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:10,852 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:10,853 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:10,853 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:10,854 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:10,854 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:10,856 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:10,862 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:11,162 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:11,162 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:11,164 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:11,164 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:11,386 > 17
[DEBUG|open_api.py:290] 2021-02-03 09:02:11,485 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:11,485 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:11,486 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:11,487 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:11,612 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:11,612 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:11,614 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:11,614 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:11,616 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:11,616 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:11,617 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:11,617 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:11,619 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:11,619 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:11,636 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:11,637 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:11,637 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:11,637 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:11,988 > 18
[DEBUG|open_api.py:290] 2021-02-03 09:02:12,035 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:12,035 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:12,037 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:12,037 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:12,037 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:12,038 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:12,038 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:12,039 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:12,040 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:12,040 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:12,041 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:12,041 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:12,043 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:12,056 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:12,356 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:12,356 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:12,357 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:12,358 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:12,590 > 19
[DEBUG|open_api.py:290] 2021-02-03 09:02:13,133 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:13,133 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:13,135 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:13,136 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:13,263 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:13,263 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:13,265 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:13,265 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:13,266 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:13,267 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:13,267 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:13,268 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:13,269 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:13,269 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:13,284 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:13,284 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:13,285 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:13,285 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:13,286 > 20
[DEBUG|open_api.py:290] 2021-02-03 09:02:13,351 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:13,351 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:13,352 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:13,352 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:13,353 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:13,354 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:13,354 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:13,354 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:13,355 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:13,356 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:13,357 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:13,357 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:13,359 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:13,366 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:13,668 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:13,668 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:13,670 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:13,670 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:13,888 > 21
[DEBUG|open_api.py:290] 2021-02-03 09:02:13,944 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:13,944 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:13,946 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:13,947 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:14,046 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:14,046 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:14,048 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:14,048 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:14,049 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:14,050 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:14,050 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:14,051 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:14,052 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:14,052 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:14,068 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:14,069 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:14,069 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:14,070 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:14,490 > 22
[DEBUG|open_api.py:290] 2021-02-03 09:02:14,548 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:14,548 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:14,550 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:14,550 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:14,550 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:14,552 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:14,552 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:14,552 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:14,554 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:14,554 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:14,554 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:14,555 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:14,564 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:14,573 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:14,874 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:14,874 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:14,876 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:14,877 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:15,092 > 23
[DEBUG|open_api.py:290] 2021-02-03 09:02:15,152 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:15,152 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:15,153 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:15,155 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:15,289 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:15,289 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:15,291 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:15,291 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:15,292 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:15,293 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:15,294 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:15,295 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:15,296 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:15,296 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:15,315 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:15,316 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:15,317 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:15,317 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:15,694 > 24
[DEBUG|open_api.py:290] 2021-02-03 09:02:15,757 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:15,757 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:15,759 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:15,759 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:15,759 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:15,761 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:15,762 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:15,762 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:15,763 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:15,763 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:15,764 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:15,764 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:15,766 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:15,773 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:16,074 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:16,074 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:16,076 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:16,077 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:16,296 > 25
[DEBUG|open_api.py:290] 2021-02-03 09:02:16,361 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:16,361 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:16,363 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:16,364 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:16,483 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:16,483 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:16,486 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:16,486 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:16,498 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:16,500 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:16,500 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:16,501 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:16,502 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:16,502 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:16,520 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:16,520 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:16,521 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:16,521 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:16,898 > 26
[DEBUG|open_api.py:290] 2021-02-03 09:02:16,944 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:16,944 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:16,946 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:16,946 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:16,946 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:16,947 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:16,947 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:16,948 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:16,949 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:16,949 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:16,950 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:16,951 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:16,952 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:16,966 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:17,267 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:17,267 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:17,268 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:17,269 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:17,500 > 27
[DEBUG|open_api.py:290] 2021-02-03 09:02:17,559 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:17,559 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:17,561 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:17,562 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:17,692 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:17,693 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:17,695 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:17,695 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:17,698 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:17,699 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:17,699 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:17,699 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:17,702 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:17,703 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:17,754 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:17,754 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:17,755 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:17,756 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:18,102 > 28
[DEBUG|open_api.py:290] 2021-02-03 09:02:18,152 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:18,152 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:18,154 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:18,154 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:18,155 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:18,155 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:18,156 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:18,157 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:18,164 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:18,165 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:18,165 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:18,166 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:18,174 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:18,183 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:18,485 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:18,485 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:18,486 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:18,487 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:18,704 > 29
[DEBUG|open_api.py:290] 2021-02-03 09:02:18,767 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:18,767 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:18,769 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:18,771 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:18,884 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:18,884 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:18,886 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:18,886 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:18,887 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:18,888 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:18,888 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:18,889 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:18,891 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:18,891 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:18,926 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:18,926 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:18,927 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:18,927 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:19,306 > 30
[DEBUG|open_api.py:290] 2021-02-03 09:02:19,361 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:19,361 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:19,362 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:19,362 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:19,363 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:19,364 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:19,365 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:19,365 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:19,367 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:19,367 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:19,368 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:19,368 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:19,373 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:19,380 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:19,682 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:19,682 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:19,683 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:19,684 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:19,909 > 31
[DEBUG|open_api.py:290] 2021-02-03 09:02:20,052 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:20,052 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:20,053 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:20,054 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:20,166 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:20,166 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:20,168 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:20,169 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:20,170 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:20,171 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:20,172 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:20,172 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:20,174 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:20,174 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:20,208 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:20,208 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:20,208 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:20,209 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:20,512 > 32
[DEBUG|open_api.py:290] 2021-02-03 09:02:20,558 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:20,558 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:20,560 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:20,560 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:20,561 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:20,562 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:20,562 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:20,563 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:20,564 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:20,565 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:20,565 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:20,567 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:20,569 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:20,578 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:20,878 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:20,878 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:20,879 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:20,880 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:21,115 > 33
[DEBUG|open_api.py:290] 2021-02-03 09:02:21,454 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:21,454 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:21,456 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:21,457 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:21,567 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:21,568 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:21,570 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:21,570 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:21,571 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:21,572 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:21,572 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:21,573 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:21,574 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:21,574 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:21,591 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:21,591 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:21,592 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:21,592 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:21,717 > 34
[DEBUG|open_api.py:290] 2021-02-03 09:02:21,779 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:21,779 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:21,781 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:21,781 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:21,782 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:21,783 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:21,783 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:21,783 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:21,786 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:21,786 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:21,786 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:21,786 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:21,788 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:21,795 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:22,097 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:22,097 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:22,099 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:22,099 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:22,319 > 35
[DEBUG|open_api.py:290] 2021-02-03 09:02:22,395 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:22,395 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:22,396 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:22,397 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:22,512 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:22,513 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:22,516 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:22,517 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:22,518 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:22,519 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:22,520 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:22,520 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:22,521 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:22,522 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:22,538 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:22,538 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:22,539 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:22,539 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:22,921 > 36
[DEBUG|open_api.py:290] 2021-02-03 09:02:22,965 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:22,965 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:22,967 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:22,967 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:22,967 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:22,968 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:22,968 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:22,969 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:22,970 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:22,970 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:22,971 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:22,971 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:22,973 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:22,981 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:23,282 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:23,282 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:23,284 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:23,284 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:23,523 > 37
[DEBUG|open_api.py:290] 2021-02-03 09:02:23,569 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:23,569 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:23,571 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:23,573 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:23,692 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:23,692 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:23,695 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:23,695 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:23,696 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:23,697 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:23,697 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:23,698 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:23,699 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:23,699 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:23,718 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:23,718 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:23,718 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:23,719 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:24,124 > 38
[DEBUG|open_api.py:290] 2021-02-03 09:02:24,163 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:24,163 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:24,165 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:24,165 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:24,166 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:24,167 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:24,167 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:24,167 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:24,169 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:24,169 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:24,169 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:24,171 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:24,173 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:24,183 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:24,484 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:24,484 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:24,484 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:24,485 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:24,726 > 39
[DEBUG|open_api.py:290] 2021-02-03 09:02:24,865 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:24,865 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:24,867 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:24,868 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:24,987 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:24,987 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:24,989 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:24,990 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:24,991 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:24,992 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:24,992 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:24,993 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:24,994 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:24,994 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:25,009 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:25,010 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:25,010 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:25,011 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:25,327 > 40
[DEBUG|open_api.py:290] 2021-02-03 09:02:25,394 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:25,394 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:25,396 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:25,396 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:25,397 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:25,397 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:25,398 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:25,398 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:25,399 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:25,399 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:25,400 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:25,400 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:25,409 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:25,432 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:25,732 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:25,732 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:25,733 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:25,734 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:25,929 > 41
[DEBUG|open_api.py:290] 2021-02-03 09:02:26,136 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:26,136 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:26,138 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:26,140 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:26,246 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:26,246 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:26,249 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:26,249 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:26,250 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:26,251 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:26,251 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:26,252 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:26,253 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:26,253 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:26,269 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:26,269 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:26,269 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:26,270 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:26,531 > 42
[DEBUG|open_api.py:290] 2021-02-03 09:02:26,581 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:26,581 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:26,582 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:26,582 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:26,583 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:26,584 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:26,584 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:26,584 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:26,586 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:26,586 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:26,586 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:26,587 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:26,589 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:26,597 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:26,898 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:26,898 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:26,900 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:26,901 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:27,133 > 43
[DEBUG|open_api.py:290] 2021-02-03 09:02:27,325 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:27,325 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:27,327 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:27,328 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:27,441 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:27,441 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:27,443 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:27,443 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:27,456 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:27,457 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:27,457 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:27,458 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:27,459 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:27,459 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:27,475 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:27,475 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:27,476 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:27,477 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:27,735 > 44
[DEBUG|open_api.py:290] 2021-02-03 09:02:27,800 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:27,800 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:27,802 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:27,802 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:27,803 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:27,804 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:27,805 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:27,805 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:27,807 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:27,807 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:27,807 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:27,808 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:27,809 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:27,824 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:28,124 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:28,124 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:28,127 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:28,128 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:28,337 > 45
[DEBUG|open_api.py:290] 2021-02-03 09:02:28,480 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:28,480 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:28,481 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:28,483 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:28,602 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:28,602 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:28,604 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:28,604 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:28,605 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:28,606 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:28,607 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:28,607 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:28,608 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:28,610 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:28,627 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:28,628 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:28,628 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:28,629 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:28,940 > 46
[DEBUG|open_api.py:290] 2021-02-03 09:02:28,977 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:28,977 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:28,979 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:28,979 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:28,979 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:28,980 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:28,980 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:28,981 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:28,983 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:28,983 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:28,983 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:28,984 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:28,986 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:28,992 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:29,293 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:29,293 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:29,295 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:29,295 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:29,542 > 47
[DEBUG|open_api.py:290] 2021-02-03 09:02:29,656 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:29,656 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:29,658 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:29,659 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:29,788 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:29,789 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:29,791 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:29,791 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:29,792 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:29,793 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:29,793 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:29,794 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:29,795 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:29,796 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:29,813 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:29,813 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:29,814 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:29,814 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:30,144 > 48
[DEBUG|open_api.py:290] 2021-02-03 09:02:30,195 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:30,195 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:30,197 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:30,197 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:30,197 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:30,198 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:30,198 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:30,199 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:30,214 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:30,214 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:30,215 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:30,216 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:30,227 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:30,248 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:30,549 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:30,549 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:30,550 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:30,551 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:30,745 > 49
[DEBUG|open_api.py:290] 2021-02-03 09:02:31,025 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:31,025 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:31,027 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:31,028 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:31,150 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:31,150 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:31,152 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:31,152 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:31,153 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:31,154 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:31,154 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:31,156 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:31,158 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:31,158 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:31,198 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:31,198 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:31,198 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:31,200 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:31,347 > 50
[DEBUG|open_api.py:290] 2021-02-03 09:02:31,403 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:31,403 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:31,405 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:31,405 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:31,405 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:31,405 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:31,406 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:31,406 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:31,407 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:31,407 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:31,408 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:31,408 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:31,411 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:31,418 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:31,719 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:31,719 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:31,720 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:31,721 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:31,949 > 51
[DEBUG|open_api.py:290] 2021-02-03 09:02:32,145 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:32,145 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:32,147 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:32,147 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:32,269 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:32,269 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:32,271 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:32,271 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:32,272 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:32,273 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:32,273 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:32,274 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:32,275 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:32,275 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:32,292 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:32,293 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:32,294 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:32,294 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:32,551 > 52
[DEBUG|open_api.py:290] 2021-02-03 09:02:32,674 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:32,674 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:32,676 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:32,676 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:32,676 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:32,676 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:32,676 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:32,677 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:32,679 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:32,679 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:32,679 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:32,680 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:32,681 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:32,688 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:32,990 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:32,990 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:32,992 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:32,992 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:33,152 > 53
[DEBUG|open_api.py:290] 2021-02-03 09:02:33,278 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:33,278 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:33,280 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:33,281 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:33,393 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:33,393 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:33,395 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:33,396 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:33,397 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:33,398 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:33,398 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:33,398 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:33,400 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:33,400 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:33,418 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:33,419 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:33,419 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:33,420 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:33,754 > 54
[DEBUG|open_api.py:290] 2021-02-03 09:02:33,795 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:33,795 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:33,798 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:33,798 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:33,799 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:33,800 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:33,800 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:33,800 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:33,803 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:33,803 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:33,803 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:33,804 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:33,806 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:33,813 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:34,113 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:34,113 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:34,115 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:34,115 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:34,356 > 55
[DEBUG|open_api.py:290] 2021-02-03 09:02:34,411 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:34,411 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:34,413 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:34,414 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:34,537 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:34,537 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:34,539 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:34,539 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:34,541 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:34,542 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:34,542 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:34,542 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:34,544 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:34,544 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:34,562 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:34,562 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:34,563 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:34,563 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:34,959 > 56
[DEBUG|open_api.py:290] 2021-02-03 09:02:35,015 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:35,015 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:35,017 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:35,017 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:35,018 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:35,019 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:35,019 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:35,019 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:35,021 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:35,021 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:35,021 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:35,022 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:35,024 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:35,032 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:35,332 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:35,332 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:35,334 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:35,334 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:35,561 > 57
[DEBUG|open_api.py:290] 2021-02-03 09:02:35,620 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:35,620 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:35,622 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:35,623 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:35,740 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:35,740 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:35,742 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:35,743 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:35,744 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:35,745 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:35,746 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:35,746 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:35,748 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:35,748 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:35,766 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:35,766 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:35,767 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:35,767 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:36,163 > 58
[DEBUG|open_api.py:290] 2021-02-03 09:02:36,202 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:36,202 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:36,204 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:36,204 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:36,204 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:36,206 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:36,206 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:36,207 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:36,208 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:36,208 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:36,209 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:36,209 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:36,215 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:36,228 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:36,529 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:36,529 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:36,531 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:36,531 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:36,765 > 59
[DEBUG|open_api.py:290] 2021-02-03 09:02:36,838 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:36,838 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:36,840 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:36,842 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:36,955 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:36,955 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:36,958 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:36,958 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:36,959 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:36,960 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:36,960 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:36,961 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:36,963 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:36,963 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:36,979 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:36,979 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:36,980 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:36,980 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:37,367 > 60
[DEBUG|open_api.py:290] 2021-02-03 09:02:37,432 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:37,432 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:37,434 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:37,434 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:37,434 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:37,435 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:37,435 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:37,436 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:37,458 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:37,458 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:37,459 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:37,460 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:37,465 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:37,472 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:37,774 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:37,774 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:37,776 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:37,777 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:37,969 > 61
[DEBUG|open_api.py:290] 2021-02-03 09:02:38,026 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:38,026 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:38,028 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:38,030 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:38,126 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:38,127 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:38,129 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:38,129 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:38,130 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:38,131 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:38,131 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:38,132 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:38,133 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:38,134 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:38,150 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:38,151 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:38,151 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:38,152 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:38,571 > 62
[DEBUG|open_api.py:290] 2021-02-03 09:02:38,630 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:38,630 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:38,632 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:38,632 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:38,633 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:38,633 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:38,634 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:38,634 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:38,652 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:38,652 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:38,653 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:38,653 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:38,658 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:38,666 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:38,966 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:38,966 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:38,967 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:38,968 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:39,174 > 63
[DEBUG|open_api.py:290] 2021-02-03 09:02:39,234 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:39,234 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:39,236 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:39,238 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:39,350 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:39,351 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:39,353 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:39,353 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:39,354 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:39,355 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:39,356 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:39,358 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:39,359 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:39,360 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:39,378 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:39,379 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:39,379 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:39,380 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:39,776 > 64
[DEBUG|open_api.py:290] 2021-02-03 09:02:39,828 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:39,828 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:39,830 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:39,830 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:39,830 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:39,832 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:39,832 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:39,832 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:39,833 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:39,833 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:39,834 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:39,834 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:39,836 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:39,845 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:40,146 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:40,146 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:40,148 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:40,148 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:40,383 > 65
[DEBUG|open_api.py:290] 2021-02-03 09:02:40,528 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:40,528 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:40,530 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:40,531 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:40,654 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:40,654 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:40,656 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:40,656 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:40,669 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:40,670 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:40,670 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:40,671 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:40,672 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:40,673 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:40,689 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:40,689 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:40,690 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:40,690 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:40,986 > 66
[DEBUG|open_api.py:290] 2021-02-03 09:02:41,079 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:41,079 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:41,081 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:41,081 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:41,081 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:41,082 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:41,082 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:41,083 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:41,084 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:41,084 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:41,085 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:41,085 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:41,087 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:41,100 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:41,401 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:41,401 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:41,402 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:41,403 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:41,588 > 67
[DEBUG|open_api.py:290] 2021-02-03 09:02:41,737 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:41,737 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:41,739 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:41,741 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:41,858 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:41,858 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:41,860 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:41,861 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:41,862 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:41,863 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:41,863 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:41,863 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:41,865 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:41,865 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:41,883 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:41,883 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:41,884 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:41,884 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:42,190 > 68
[DEBUG|open_api.py:290] 2021-02-03 09:02:42,247 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:42,247 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:42,249 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:42,249 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:42,250 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:42,250 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:42,251 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:42,251 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:42,252 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:42,253 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:42,253 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:42,254 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:42,263 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:42,271 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:42,573 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:42,573 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:42,575 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:42,575 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:42,793 > 69
[DEBUG|open_api.py:290] 2021-02-03 09:02:42,903 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:42,903 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:42,904 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:42,906 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:43,023 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:43,024 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:43,025 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:43,026 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:43,027 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:43,028 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:43,028 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:43,029 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:43,030 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:43,030 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:43,047 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:43,047 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:43,048 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:43,048 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:43,395 > 70
[DEBUG|open_api.py:290] 2021-02-03 09:02:43,453 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:43,453 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:43,455 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:43,455 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:43,455 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:43,457 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:43,457 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:43,458 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:43,475 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:43,476 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:43,477 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:43,477 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:43,482 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:43,490 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:43,790 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:43,790 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:43,794 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:43,797 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:43,996 > 71
[DEBUG|open_api.py:290] 2021-02-03 09:02:44,113 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:44,113 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:44,115 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:44,116 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:44,253 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:44,254 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:44,256 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:44,256 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:44,258 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:44,259 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:44,259 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:44,259 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:44,261 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:44,261 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:44,313 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:44,314 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:44,314 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:44,315 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:44,597 > 72
[DEBUG|open_api.py:290] 2021-02-03 09:02:44,653 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:44,653 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:44,655 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:44,655 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:44,656 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:44,656 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:44,657 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:44,657 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:44,664 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:44,665 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:44,665 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:44,666 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:44,670 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:44,678 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:44,978 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:44,978 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:44,980 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:44,981 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:45,199 > 73
[DEBUG|open_api.py:290] 2021-02-03 09:02:45,353 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:45,353 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:45,355 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:45,357 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:45,485 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:45,485 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:45,488 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:45,488 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:45,489 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:45,490 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:45,491 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:45,491 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:45,493 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:45,493 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:45,517 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:45,518 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:45,518 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:45,519 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:45,801 > 74
[DEBUG|open_api.py:290] 2021-02-03 09:02:45,979 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:45,979 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:45,981 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:45,981 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:45,981 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:45,982 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:45,983 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:45,984 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:45,985 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:45,986 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:45,986 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:45,987 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:45,988 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:45,995 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:46,296 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:46,296 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:46,297 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:46,298 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:46,403 > 75
[DEBUG|open_api.py:290] 2021-02-03 09:02:46,573 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:46,573 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:46,575 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:46,576 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:46,702 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:46,702 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:46,704 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:46,704 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:46,706 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:46,707 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:46,708 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:46,708 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:46,710 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:46,710 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:46,726 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:46,727 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:46,728 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:46,728 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:47,004 > 76
[DEBUG|open_api.py:290] 2021-02-03 09:02:47,155 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:47,155 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:47,156 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:47,156 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:47,156 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:47,157 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:47,158 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:47,158 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:47,160 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:47,160 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:47,161 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:47,161 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:47,163 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:47,171 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:47,472 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:47,472 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:47,474 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:47,475 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:47,606 > 77
[DEBUG|open_api.py:290] 2021-02-03 09:02:47,694 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:47,694 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:47,696 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:47,697 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:47,815 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:47,816 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:47,817 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:47,818 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:47,819 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:47,820 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:47,820 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:47,821 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:47,822 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:47,822 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:47,841 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:47,842 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:47,843 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:47,843 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:48,207 > 78
[DEBUG|open_api.py:290] 2021-02-03 09:02:48,319 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:48,319 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:48,321 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:48,321 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:48,322 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:48,322 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:48,323 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:48,323 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:48,325 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:48,325 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:48,326 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:48,326 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:48,335 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:48,343 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:48,644 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:48,644 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:48,646 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:48,646 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:48,809 > 79
[DEBUG|open_api.py:290] 2021-02-03 09:02:49,105 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:49,105 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:49,107 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:49,109 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:49,236 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:49,237 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:49,239 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:49,239 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:49,241 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:49,242 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:49,243 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:49,243 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:49,243 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:49,244 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:49,263 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:49,263 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:49,264 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:49,264 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:49,410 > 80
[DEBUG|open_api.py:290] 2021-02-03 09:02:49,461 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:49,461 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:49,463 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:49,463 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:49,463 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:49,465 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:49,465 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:49,465 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:49,467 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:49,467 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:49,468 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:49,468 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:49,470 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:49,477 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:49,778 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:49,778 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:49,780 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:49,781 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:50,012 > 81
[DEBUG|open_api.py:290] 2021-02-03 09:02:50,194 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:50,194 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:50,196 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:50,197 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:50,312 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:50,312 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:50,314 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:50,315 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:50,327 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:50,328 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:50,329 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:50,329 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:50,329 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:50,330 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:50,346 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:50,346 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:50,347 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:50,347 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:50,614 > 82
[DEBUG|open_api.py:290] 2021-02-03 09:02:50,669 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:50,669 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:50,671 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:50,671 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:50,671 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:50,672 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:50,672 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:50,673 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:50,674 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:50,674 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:50,675 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:50,675 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:50,677 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:50,686 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:50,986 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:50,986 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:50,987 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:50,988 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:51,217 > 83
[DEBUG|open_api.py:290] 2021-02-03 09:02:51,337 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:51,337 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:51,339 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:51,340 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:51,450 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:51,450 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:51,452 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:51,453 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:51,454 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:51,455 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:51,455 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:51,455 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:51,457 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:51,457 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:51,478 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:51,478 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:51,479 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:51,479 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:51,819 > 84
[DEBUG|open_api.py:290] 2021-02-03 09:02:51,866 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:51,866 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:51,867 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:51,868 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:51,868 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:51,869 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:51,869 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:51,870 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:51,871 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:51,871 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:51,872 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:51,872 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:51,873 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:51,880 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:52,181 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:52,181 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:52,183 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:52,183 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:52,420 > 85
[DEBUG|open_api.py:290] 2021-02-03 09:02:52,554 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:52,554 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:52,556 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:52,558 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:52,675 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:52,675 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:52,677 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:52,677 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:52,679 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:52,680 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:52,680 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:52,681 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:52,682 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:52,682 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:52,700 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:52,700 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:52,701 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:52,701 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:53,022 > 86
[DEBUG|open_api.py:290] 2021-02-03 09:02:53,073 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:53,073 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:53,075 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:53,076 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:53,076 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:53,078 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:53,078 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:53,078 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:53,080 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:53,080 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:53,080 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:53,081 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:53,083 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:53,090 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:53,391 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:53,391 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:53,393 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:53,393 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:53,624 > 87
[DEBUG|open_api.py:290] 2021-02-03 09:02:53,819 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:53,819 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:53,821 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:53,822 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:53,937 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:53,937 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:53,939 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:53,940 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:53,941 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:53,941 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:53,942 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:53,942 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:53,944 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:53,944 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:53,962 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:53,963 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:53,963 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:53,963 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:54,225 > 88
[DEBUG|open_api.py:290] 2021-02-03 09:02:54,272 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:54,272 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:54,274 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:54,274 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:54,275 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:54,276 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:54,276 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:54,276 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:54,279 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:54,279 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:54,280 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:54,281 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:54,291 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:54,298 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:54,599 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:54,599 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:54,601 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:54,601 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:54,827 > 89
[DEBUG|open_api.py:290] 2021-02-03 09:02:55,006 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:55,006 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:55,008 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:55,009 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:55,130 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:55,130 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:55,132 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:55,133 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:55,134 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:55,135 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:55,135 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:55,136 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:55,137 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:55,137 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:55,155 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:55,155 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:55,156 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:55,156 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:55,429 > 90
[DEBUG|open_api.py:290] 2021-02-03 09:02:55,482 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:55,482 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:55,484 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:55,484 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:55,484 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:55,486 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:55,486 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:55,486 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:55,502 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:55,502 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:55,503 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:55,503 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:55,509 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:55,517 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:55,817 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:55,817 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:55,819 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:55,819 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:56,031 > 91
[DEBUG|open_api.py:290] 2021-02-03 09:02:56,195 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:56,195 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:02:56,197 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:02:56,198 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:02:56,301 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:02:56,301 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:02:56,303 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:02:56,304 > []
[DEBUG|trader.py:50] 2021-02-03 09:02:56,305 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:02:56,306 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:02:56,306 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:02:56,307 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:02:56,308 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:02:56,308 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:02:56,326 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:02:56,326 > []
[DEBUG|open_api.py:976] 2021-02-03 09:02:56,328 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:02:56,329 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:56,633 > 92
[DEBUG|open_api.py:290] 2021-02-03 09:02:56,680 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:02:56,680 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:02:56,682 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:02:56,682 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:02:56,682 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:02:56,683 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:02:56,683 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:02:56,684 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:02:56,685 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:02:56,685 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:02:56,686 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:02:56,686 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:02:56,688 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:02:56,696 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:02:56,996 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:02:56,996 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:02:56,998 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:02:56,998 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:02:57,235 > 93
[DEBUG|trader.py:7] 2021-02-03 09:04:17,648 > trader start !!!!!!
[DEBUG|trader.py:12] 2021-02-03 09:04:21,582 > Trader __init__!!!
[DEBUG|open_api.py:303] 2021-02-03 09:04:25,791 > connected
[DEBUG|open_api.py:244] 2021-02-03 09:04:25,792 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 09:04:25,792 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 09:04:25,792 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 09:04:25,792 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 09:04:25,793 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 09:04:25,793 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 09:04:25,812 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 09:04:25,837 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 09:04:25,838 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 09:04:25,838 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 09:04:25,851 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 09:04:25,890 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|trader.py:114] 2021-02-03 09:04:26,192 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:26,192 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:26,194 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:26,196 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:26,197 > 1
[DEBUG|open_api.py:290] 2021-02-03 09:04:26,947 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:26,947 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:26,950 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:26,952 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:27,113 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:27,113 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:27,115 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:27,115 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:27,117 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:27,117 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:27,118 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:27,118 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:27,122 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:27,122 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:27,157 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:27,158 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:27,158 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:27,159 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:27,159 > 2
[DEBUG|open_api.py:290] 2021-02-03 09:04:27,242 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:27,242 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:27,244 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:27,245 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:27,245 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:27,246 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:27,246 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:27,247 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:27,254 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:27,255 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:27,255 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:27,256 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:27,262 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:27,270 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:27,571 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:27,571 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:27,573 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:27,574 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:27,762 > 3
[DEBUG|open_api.py:290] 2021-02-03 09:04:27,814 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:27,814 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:27,816 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:27,817 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:27,927 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:27,927 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:27,929 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:27,931 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:27,932 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:27,934 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:27,934 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:27,935 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:27,937 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:27,938 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:27,955 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:27,955 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:27,956 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:27,957 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:28,364 > 4
[DEBUG|open_api.py:290] 2021-02-03 09:04:28,427 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:28,427 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:28,429 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:28,429 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:28,429 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:28,430 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:28,430 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:28,431 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:28,447 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:28,448 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:28,449 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:28,449 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:28,454 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:28,462 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:28,763 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:28,763 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:28,765 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:28,765 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:28,966 > 5
[DEBUG|open_api.py:290] 2021-02-03 09:04:29,031 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:29,031 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:29,033 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:29,033 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:29,132 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:29,133 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:29,135 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:29,135 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:29,136 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:29,137 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:29,138 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:29,138 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:29,140 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:29,141 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:29,155 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:29,156 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:29,157 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:29,157 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:29,568 > 6
[DEBUG|open_api.py:290] 2021-02-03 09:04:29,624 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:29,624 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:29,626 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:29,626 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:29,627 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:29,628 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:29,629 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:29,629 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:29,648 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:29,648 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:29,649 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:29,650 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:29,654 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:29,664 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:29,965 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:29,965 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:29,967 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:29,968 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:30,170 > 7
[DEBUG|open_api.py:290] 2021-02-03 09:04:30,219 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:30,219 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:30,221 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:30,222 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:30,329 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:30,330 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:30,332 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:30,332 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:30,333 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:30,335 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:30,336 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:30,336 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:30,338 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:30,339 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:30,357 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:30,357 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:30,358 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:30,358 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:30,772 > 8
[DEBUG|open_api.py:290] 2021-02-03 09:04:30,887 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:30,887 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:30,889 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:30,889 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:30,889 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:30,890 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:30,890 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:30,891 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:30,892 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:30,892 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:30,893 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:30,893 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:30,895 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:30,902 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:31,202 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:31,202 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:31,203 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:31,204 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:31,373 > 9
[DEBUG|open_api.py:290] 2021-02-03 09:04:31,489 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:31,489 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:31,491 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:31,493 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:31,611 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:31,611 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:31,613 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:31,614 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:31,626 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:31,627 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:31,628 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:31,628 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:31,630 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:31,630 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:31,646 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:31,646 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:31,647 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:31,647 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:31,976 > 10
[DEBUG|open_api.py:290] 2021-02-03 09:04:32,051 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:32,051 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:32,052 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:32,053 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:32,053 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:32,054 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:32,054 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:32,055 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:32,056 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:32,056 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:32,057 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:32,057 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:32,059 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:32,073 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:32,373 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:32,373 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:32,376 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:32,377 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:32,577 > 11
[DEBUG|open_api.py:290] 2021-02-03 09:04:32,666 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:32,666 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:32,667 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:32,669 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:32,783 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:32,783 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:32,785 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:32,785 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:32,787 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:32,788 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:32,788 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:32,788 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:32,790 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:32,790 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:32,804 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:32,804 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:32,806 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:32,807 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:33,180 > 12
[DEBUG|open_api.py:290] 2021-02-03 09:04:33,239 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:33,239 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:33,241 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:33,241 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:33,241 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:33,242 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:33,242 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:33,243 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:33,244 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:33,244 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:33,245 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:33,245 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:33,250 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:33,258 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:33,560 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:33,560 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:33,562 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:33,562 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:33,782 > 13
[DEBUG|open_api.py:290] 2021-02-03 09:04:34,226 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:34,226 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:34,228 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:34,230 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:34,337 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:34,337 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:34,339 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:34,339 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:34,341 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:34,342 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:34,342 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:34,343 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:34,344 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:34,345 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:34,360 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:34,361 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:34,361 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:34,362 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:34,384 > 14
[DEBUG|open_api.py:290] 2021-02-03 09:04:34,424 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:34,424 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:34,426 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:34,426 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:34,427 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:34,428 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:34,428 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:34,428 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:34,429 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:34,429 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:34,429 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:34,430 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:34,431 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:34,438 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:34,739 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:34,739 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:34,740 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:34,741 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:34,986 > 15
[DEBUG|open_api.py:290] 2021-02-03 09:04:35,544 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:35,544 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:35,546 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:35,548 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:35,664 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:35,665 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:35,666 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:35,667 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:35,679 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:35,680 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:35,681 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:35,681 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:35,683 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:35,683 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:35,699 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:35,699 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:35,700 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:35,701 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:35,701 > 16
[DEBUG|open_api.py:290] 2021-02-03 09:04:35,763 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:35,763 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:35,764 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:35,765 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:35,765 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:35,766 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:35,766 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:35,767 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:35,768 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:35,768 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:35,769 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:35,769 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:35,771 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:35,779 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:36,081 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:36,081 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:36,082 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:36,083 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:36,305 > 17
[DEBUG|open_api.py:290] 2021-02-03 09:04:36,947 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:36,947 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:36,949 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:36,950 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:37,065 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:37,066 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:37,068 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:37,068 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:37,069 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:37,070 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:37,071 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:37,071 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:37,072 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:37,072 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9600.0, 4025.0, 0.4, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:37,089 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:37,089 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:37,090 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:37,091 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:37,091 > 18
[DEBUG|open_api.py:290] 2021-02-03 09:04:37,142 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:37,142 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:37,144 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:37,144 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:37,145 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:37,146 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:37,146 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:37,146 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:37,147 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:37,147 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:37,148 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:37,148 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:37,150 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:37,157 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:37,458 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:37,458 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:37,460 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:37,460 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:37,694 > 19
[DEBUG|open_api.py:290] 2021-02-03 09:04:38,165 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:38,165 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:38,167 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:38,168 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:38,298 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:38,298 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:38,300 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:38,300 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:38,301 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:38,302 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:38,302 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:38,303 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:38,304 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:38,304 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:38,323 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:38,324 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:38,324 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:38,325 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:38,325 > 20
[DEBUG|open_api.py:290] 2021-02-03 09:04:38,372 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:38,372 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:38,374 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:38,374 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:38,375 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:38,376 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:38,376 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:38,377 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:38,379 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:38,379 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:38,379 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:38,379 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:38,381 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:38,389 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:38,690 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:38,690 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:38,692 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:38,692 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:38,928 > 21
[DEBUG|open_api.py:290] 2021-02-03 09:04:39,202 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:39,202 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:39,204 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:39,205 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:39,333 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:39,334 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:39,336 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:39,336 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:39,337 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:39,338 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:39,339 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:39,340 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:39,341 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:39,341 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:39,357 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:39,358 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:39,359 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:39,360 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:39,530 > 22
[DEBUG|open_api.py:290] 2021-02-03 09:04:39,581 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:39,582 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:39,583 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:39,583 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:39,583 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:39,585 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:39,585 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:39,585 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:39,598 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:39,598 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:39,599 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:39,600 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:39,604 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:39,614 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:39,915 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:39,915 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:39,916 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:39,917 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:40,132 > 23
[DEBUG|open_api.py:290] 2021-02-03 09:04:40,463 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:40,463 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:40,464 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:40,466 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:40,601 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:40,601 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:40,603 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:40,603 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:40,605 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:40,606 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:40,606 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:40,608 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:40,609 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:40,609 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:40,633 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:40,633 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:40,634 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:40,635 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:40,736 > 24
[DEBUG|open_api.py:290] 2021-02-03 09:04:40,788 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:40,788 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:40,789 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:40,790 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:40,790 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:40,791 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:40,791 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:40,792 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:40,793 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:40,793 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:40,794 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:40,794 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:40,797 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:40,805 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:41,106 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:41,106 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:41,108 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:41,108 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:41,339 > 25
[DEBUG|open_api.py:290] 2021-02-03 09:04:41,800 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:41,800 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:41,802 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:41,803 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:41,926 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:41,927 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:41,928 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:41,929 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:41,930 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:41,931 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:41,931 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:41,932 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:41,933 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:41,933 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:41,948 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:41,948 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:41,949 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:41,949 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:41,950 > 26
[DEBUG|open_api.py:290] 2021-02-03 09:04:41,996 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:41,996 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:41,998 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:41,998 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:41,998 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:41,999 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:41,999 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:42,000 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:42,001 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:42,001 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:42,002 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:42,002 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:42,004 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:42,011 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:42,311 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:42,311 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:42,313 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:42,313 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:42,553 > 27
[DEBUG|open_api.py:290] 2021-02-03 09:04:42,782 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:42,782 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:42,784 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:42,785 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:42,899 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:42,899 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:42,901 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:42,901 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:42,902 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:42,903 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:42,904 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:42,904 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:42,906 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:42,906 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:42,923 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:42,923 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:42,924 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:42,924 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:43,156 > 28
[DEBUG|open_api.py:290] 2021-02-03 09:04:43,203 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:43,203 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:43,205 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:43,205 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:43,206 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:43,207 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:43,207 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:43,207 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:43,208 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:43,208 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:43,209 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:43,210 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:43,212 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:43,220 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:43,521 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:43,521 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:43,523 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:43,523 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:43,758 > 29
[DEBUG|open_api.py:290] 2021-02-03 09:04:44,268 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:44,268 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:44,270 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:44,271 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:44,389 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:44,390 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:44,392 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:44,392 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:44,394 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:44,395 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:44,395 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:44,396 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:44,397 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:44,397 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:44,412 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:44,412 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:44,413 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:44,413 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:44,414 > 30
[DEBUG|open_api.py:290] 2021-02-03 09:04:44,464 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:44,464 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:44,466 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:44,466 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:44,467 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:44,468 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:44,468 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:44,468 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:44,471 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:44,471 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:44,471 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:44,472 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:44,474 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:44,481 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:44,782 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:44,782 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:44,784 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:44,784 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:45,016 > 31
[DEBUG|open_api.py:290] 2021-02-03 09:04:45,608 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:45,608 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:45,609 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:45,611 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:45,732 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:45,732 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:45,734 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:45,734 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:45,735 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:45,737 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:45,737 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:45,738 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:45,740 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:45,740 > [('261110', 111.0, 8960.0, 9155.0, 14615.0, 1.47, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:45,757 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:45,757 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:45,758 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:45,759 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:45,760 > 32
[DEBUG|open_api.py:290] 2021-02-03 09:04:45,805 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:45,805 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:45,807 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:45,807 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:45,808 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:45,809 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:45,809 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:45,810 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:45,814 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:45,816 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:45,817 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:45,818 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:45,820 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:45,830 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:46,131 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:46,131 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:46,132 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:46,133 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:46,364 > 33
[DEBUG|open_api.py:290] 2021-02-03 09:04:46,849 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:46,849 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:46,851 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:46,852 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:46,973 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:46,973 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:46,975 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:46,975 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:46,976 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:46,977 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:46,977 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:46,977 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:46,979 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:46,979 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:46,999 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:46,999 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:47,000 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:47,000 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:47,001 > 34
[DEBUG|open_api.py:290] 2021-02-03 09:04:47,056 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:47,056 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:47,058 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:47,059 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:47,059 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:47,059 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:47,060 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:47,061 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:47,063 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:47,063 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:47,064 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:47,064 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:47,066 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:47,073 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:47,374 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:47,374 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:47,376 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:47,376 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:47,603 > 35
[DEBUG|open_api.py:290] 2021-02-03 09:04:47,843 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:47,843 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:47,845 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:47,847 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:47,968 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:47,968 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:47,970 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:47,971 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:47,973 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:47,974 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:47,974 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:47,975 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:47,976 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:47,977 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:47,993 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:47,993 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:47,994 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:47,994 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:48,205 > 36
[DEBUG|open_api.py:290] 2021-02-03 09:04:48,255 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:48,255 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:48,257 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:48,257 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:48,258 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:48,259 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:48,259 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:48,259 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:48,260 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:48,260 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:48,261 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:48,261 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:48,266 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:48,280 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:48,581 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:48,581 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:48,583 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:48,583 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:48,807 > 37
[DEBUG|open_api.py:290] 2021-02-03 09:04:48,869 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:48,869 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:48,871 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:48,874 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:48,993 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:48,994 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:48,997 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:48,997 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:48,999 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:49,000 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:49,000 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:49,001 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:49,002 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:49,003 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:49,019 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:49,020 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:49,020 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:49,021 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:49,410 > 38
[DEBUG|open_api.py:290] 2021-02-03 09:04:49,464 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:49,464 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:49,466 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:49,466 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:49,467 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:49,468 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:49,468 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:49,469 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:49,480 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:49,481 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:49,481 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:49,482 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:49,487 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:49,496 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:49,797 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:49,797 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:49,799 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:49,799 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:50,012 > 39
[DEBUG|open_api.py:290] 2021-02-03 09:04:50,081 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:50,081 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:50,083 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:50,084 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:50,205 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:50,205 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:50,207 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:50,208 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:50,209 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:50,210 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:50,210 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:50,210 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:50,212 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:50,212 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:50,245 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:50,246 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:50,246 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:50,247 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:50,613 > 40
[DEBUG|open_api.py:290] 2021-02-03 09:04:50,675 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:50,675 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:50,677 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:50,677 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:50,677 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:50,677 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:50,678 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:50,678 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:50,679 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:50,679 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:50,680 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:50,680 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:50,682 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:50,689 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:50,990 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:50,990 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:50,991 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:50,992 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:51,215 > 41
[DEBUG|open_api.py:290] 2021-02-03 09:04:51,267 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:51,267 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:51,268 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:51,270 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:51,387 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:51,387 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:51,389 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:51,389 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:51,391 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:51,392 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:51,392 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:51,392 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:51,393 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:51,394 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:51,408 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:51,409 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:51,409 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:51,410 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:51,816 > 42
[DEBUG|open_api.py:290] 2021-02-03 09:04:51,882 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:51,882 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:51,884 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:51,884 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:51,884 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:51,885 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:51,886 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:51,887 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:51,888 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:51,888 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:51,888 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:51,888 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:51,890 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:51,897 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:52,198 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:52,198 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:52,200 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:52,200 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:52,418 > 43
[DEBUG|open_api.py:290] 2021-02-03 09:04:52,464 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:52,464 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:52,466 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:52,467 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:52,572 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:52,572 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:52,575 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:52,575 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:52,577 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:52,578 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:52,579 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:52,580 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:52,580 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:52,580 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:52,603 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:52,604 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:52,604 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:52,605 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:53,021 > 44
[DEBUG|open_api.py:290] 2021-02-03 09:04:53,068 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:53,068 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:53,069 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:53,070 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:53,070 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:53,071 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:53,071 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:53,072 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:53,073 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:53,073 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:53,074 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:53,074 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:53,076 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:53,084 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:53,384 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:53,384 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:53,386 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:53,386 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:53,622 > 45
[DEBUG|open_api.py:290] 2021-02-03 09:04:53,704 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:53,704 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:53,706 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:53,707 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:53,831 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:53,832 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:53,834 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:53,834 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:53,836 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:53,837 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:53,837 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:53,838 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:53,839 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:53,839 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:53,891 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:53,891 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:53,892 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:53,892 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:54,225 > 46
[DEBUG|open_api.py:290] 2021-02-03 09:04:54,276 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:54,276 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:54,278 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:54,279 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:54,279 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:54,280 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:54,281 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:54,281 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:54,290 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:54,291 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:54,291 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:54,291 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:54,300 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:54,310 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:54,612 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:54,612 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:54,614 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:54,614 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:54,827 > 47
[DEBUG|open_api.py:290] 2021-02-03 09:04:55,384 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:55,384 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:55,386 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:55,387 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:55,504 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:55,504 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:55,506 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:55,506 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:55,508 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:55,509 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:55,509 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:55,509 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:55,511 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:55,511 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:55,543 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:55,545 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:55,546 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:55,546 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:55,547 > 48
[DEBUG|open_api.py:290] 2021-02-03 09:04:55,601 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:55,601 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:55,603 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:55,603 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:55,604 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:55,605 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:55,605 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:55,605 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:55,606 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:55,607 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:55,607 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:55,608 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:55,610 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:55,616 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:55,917 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:55,917 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:55,919 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:55,920 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:56,148 > 49
[DEBUG|open_api.py:290] 2021-02-03 09:04:56,226 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:56,226 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:56,228 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:56,229 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:56,364 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:56,364 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:56,366 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:56,367 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:56,380 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:56,381 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:56,381 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:56,381 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:56,383 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:56,383 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:56,400 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:56,401 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:56,401 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:56,402 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:56,751 > 50
[DEBUG|open_api.py:290] 2021-02-03 09:04:56,809 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:56,809 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:56,811 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:56,811 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:56,812 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:56,813 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:56,814 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:56,814 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:56,815 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:56,815 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:56,816 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:56,816 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:56,818 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:56,831 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:57,131 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:57,131 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:57,133 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:57,133 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:57,353 > 51
[DEBUG|open_api.py:290] 2021-02-03 09:04:57,404 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:57,404 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:57,406 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:57,407 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:57,532 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:57,532 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:57,534 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:57,534 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:57,536 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:57,537 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:57,537 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:57,537 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:57,539 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:57,539 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:57,556 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:57,556 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:57,557 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:57,557 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:57,956 > 52
[DEBUG|open_api.py:290] 2021-02-03 09:04:58,050 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:58,050 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:58,051 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:58,052 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:58,052 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:58,053 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:58,053 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:58,054 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:58,055 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:58,055 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:58,055 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:58,056 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:58,057 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:58,066 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:58,366 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:58,366 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:58,367 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:58,368 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:58,558 > 53
[DEBUG|open_api.py:290] 2021-02-03 09:04:58,622 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:58,622 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:58,626 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:58,628 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:58,754 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:58,754 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:58,756 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:58,757 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:58,758 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:58,759 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:58,759 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:58,760 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:58,762 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:58,762 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:04:58,777 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:04:58,777 > []
[DEBUG|open_api.py:976] 2021-02-03 09:04:58,778 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:04:58,779 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:59,161 > 54
[DEBUG|open_api.py:290] 2021-02-03 09:04:59,218 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:59,218 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:04:59,220 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:04:59,220 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:04:59,220 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:04:59,221 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:04:59,221 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:04:59,222 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:04:59,223 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:04:59,224 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:04:59,224 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:04:59,224 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:04:59,240 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:04:59,251 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:04:59,552 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:04:59,552 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:04:59,554 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:04:59,554 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:04:59,763 > 55
[DEBUG|open_api.py:290] 2021-02-03 09:04:59,864 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:04:59,864 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:04:59,866 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:04:59,868 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:04:59,985 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:04:59,985 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:04:59,987 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:04:59,987 > []
[DEBUG|trader.py:50] 2021-02-03 09:04:59,988 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:04:59,989 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:04:59,990 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:04:59,990 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:04:59,991 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:04:59,992 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:00,007 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:00,007 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:00,008 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:00,008 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:00,365 > 56
[DEBUG|open_api.py:290] 2021-02-03 09:05:00,413 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:00,413 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:00,415 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:00,415 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:00,415 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:00,416 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:00,416 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:00,417 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:00,417 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:00,417 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:00,418 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:00,418 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:00,428 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:00,436 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:00,737 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:00,737 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:00,739 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:00,739 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:00,967 > 57
[DEBUG|open_api.py:290] 2021-02-03 09:05:01,060 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:01,060 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:01,062 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:01,063 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:01,181 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:01,182 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:01,184 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:01,184 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:01,186 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:01,186 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:01,187 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:01,188 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:01,189 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:01,190 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:01,206 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:01,207 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:01,207 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:01,208 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:01,568 > 58
[DEBUG|open_api.py:290] 2021-02-03 09:05:01,610 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:01,610 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:01,612 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:01,613 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:01,613 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:01,614 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:01,614 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:01,615 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:01,637 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:01,637 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:01,638 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:01,639 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:01,642 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:01,650 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:01,951 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:01,951 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:01,952 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:01,953 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:02,170 > 59
[DEBUG|open_api.py:290] 2021-02-03 09:05:02,225 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:02,225 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:02,227 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:02,228 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:02,335 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:02,335 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:02,336 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:02,336 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:02,337 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:02,338 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:02,339 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:02,339 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:02,341 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:02,341 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:02,357 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:02,358 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:02,358 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:02,359 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:02,772 > 60
[DEBUG|open_api.py:290] 2021-02-03 09:05:02,820 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:02,820 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:02,822 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:02,822 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:02,822 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:02,823 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:02,823 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:02,824 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:02,824 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:02,825 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:02,825 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:02,826 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:02,827 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:02,834 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:03,135 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:03,135 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:03,137 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:03,137 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:03,373 > 61
[DEBUG|open_api.py:290] 2021-02-03 09:05:03,574 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:03,574 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:03,576 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:03,577 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:03,698 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:03,698 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:03,699 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:03,699 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:03,712 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:03,713 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:03,713 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:03,714 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:03,715 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:03,716 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:03,734 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:03,734 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:03,735 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:03,736 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:03,975 > 62
[DEBUG|open_api.py:290] 2021-02-03 09:05:04,027 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:04,027 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:04,029 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:04,029 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:04,030 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:04,031 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:04,031 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:04,032 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:04,033 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:04,033 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:04,033 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:04,034 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:04,036 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:04,044 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:04,345 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:04,345 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:04,347 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:04,347 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:04,577 > 63
[DEBUG|open_api.py:290] 2021-02-03 09:05:04,791 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:04,791 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:04,793 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:04,794 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:04,905 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:04,905 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:04,907 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:04,907 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:04,908 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:04,909 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:04,909 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:04,910 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:04,912 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:04,912 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:04,929 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:04,929 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:04,930 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:04,930 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:05,180 > 64
[DEBUG|open_api.py:290] 2021-02-03 09:05:05,224 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:05,224 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:05,225 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:05,225 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:05,225 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:05,227 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:05,227 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:05,228 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:05,230 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:05,230 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:05,230 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:05,231 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:05,241 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:05,251 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:05,552 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:05,552 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:05,553 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:05,554 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:05,782 > 65
[DEBUG|open_api.py:290] 2021-02-03 09:05:05,904 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:05,904 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:05,906 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:05,907 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:06,020 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:06,020 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:06,023 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:06,024 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:06,025 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:06,026 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:06,026 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:06,027 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:06,029 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:06,029 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:06,045 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:06,045 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:06,046 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:06,046 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:06,383 > 66
[DEBUG|open_api.py:290] 2021-02-03 09:05:06,475 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:06,475 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:06,477 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:06,477 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:06,478 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:06,479 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:06,479 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:06,479 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:06,480 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:06,481 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:06,481 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:06,481 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:06,490 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:06,499 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:06,800 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:06,800 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:06,802 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:06,803 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:06,985 > 67
[DEBUG|open_api.py:290] 2021-02-03 09:05:07,035 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:07,035 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:07,037 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:07,038 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:07,153 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:07,154 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:07,155 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:07,156 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:07,157 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:07,158 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:07,158 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:07,158 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:07,160 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:07,160 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:07,176 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:07,176 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:07,177 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:07,178 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:07,587 > 68
[DEBUG|open_api.py:290] 2021-02-03 09:05:07,714 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:07,714 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:07,716 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:07,716 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:07,716 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:07,717 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:07,717 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:07,718 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:07,738 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:07,739 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:07,740 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:07,741 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:07,746 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:07,754 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:08,055 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:08,055 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:08,056 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:08,057 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:08,189 > 69
[DEBUG|open_api.py:290] 2021-02-03 09:05:08,232 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:08,232 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:08,234 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:08,235 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:08,340 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:08,340 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:08,342 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:08,342 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:08,343 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:08,344 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:08,344 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:08,345 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:08,346 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:08,346 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:08,362 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:08,455 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:08,456 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:08,456 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:08,791 > 70
[DEBUG|open_api.py:290] 2021-02-03 09:05:08,867 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:08,867 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:08,869 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:08,869 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:08,870 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:08,871 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:08,871 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:08,871 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:08,889 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:08,889 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:08,890 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:08,890 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:08,895 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:08,903 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:09,205 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:09,205 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:09,207 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:09,207 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:09,393 > 71
[DEBUG|open_api.py:290] 2021-02-03 09:05:09,448 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:09,448 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:09,450 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:09,452 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:09,610 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:09,610 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:09,612 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:09,612 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:09,614 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:09,614 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:09,615 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:09,615 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:09,617 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:09,617 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:09,646 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:09,647 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:09,647 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:09,648 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:09,996 > 72
[DEBUG|open_api.py:290] 2021-02-03 09:05:10,042 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:10,042 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:10,044 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:10,045 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:10,045 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:10,046 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:10,047 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:10,047 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:10,048 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:10,049 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:10,049 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:10,049 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:10,051 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:10,058 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:10,358 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:10,358 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:10,360 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:10,360 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:10,598 > 73
[DEBUG|open_api.py:290] 2021-02-03 09:05:10,700 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:10,700 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:10,701 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:10,703 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:10,822 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:10,822 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:10,824 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:10,825 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:10,826 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:10,827 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:10,827 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:10,828 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:10,830 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:10,830 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:10,847 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:10,847 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:10,848 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:10,848 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:11,200 > 74
[DEBUG|open_api.py:290] 2021-02-03 09:05:11,250 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:11,250 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 09:05:11,252 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 09:05:11,252 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 09:05:11,253 > 000000496428307
[DEBUG|open_api.py:984] 2021-02-03 09:05:11,253 > 돈안부족해 투자 가능!!!!!!!!
[DEBUG|trader.py:131] 2021-02-03 09:05:11,253 > buy_time_check 함수에 들어왔습니다!
[DEBUG|open_api.py:998] 2021-02-03 09:05:11,254 > buy_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1003] 2021-02-03 09:05:11,255 > GoGo Buying!!!!!!
[DEBUG|trader.py:45] 2021-02-03 09:05:11,255 > auto_trade_stock함수에 들어왔습니다!
[DEBUG|open_api.py:1059] 2021-02-03 09:05:11,256 > get_today_buy_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1061] 2021-02-03 09:05:11,256 > self.today : 20210203 , self.date_rows_yesterday : 20210202 !
[DEBUG|open_api.py:1064] 2021-02-03 09:05:11,262 > realtime_daily_buy_list 생겼다!!!!! 
[DEBUG|open_api.py:1067] 2021-02-03 09:05:11,269 > realtime_daily_buy_list 생겼지만 아직 data가 없다!!!!! 
[DEBUG|trader.py:114] 2021-02-03 09:05:11,570 > market_time_check!!!
[DEBUG|trader.py:120] 2021-02-03 09:05:11,570 > 장시간입니다. 테스트하실 경우는 trader.py 파일의 variable_setting 함수에서
                     ### 모의, 실전 ### 부분을 주석 처리하시고
                     ### 테스트용 ### 부분의 주석을 풀어주시기 바랍니다.
                     실제로 모의/실전 투자 시 반드시 variable_setting을 원복해 주셔야 합니다.  
[DEBUG|trader.py:64] 2021-02-03 09:05:11,572 > auto_trade_sell_stock 함수에 들어왔습니다!
[DEBUG|open_api.py:531] 2021-02-03 09:05:11,572 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:11,802 > 75
[DEBUG|open_api.py:290] 2021-02-03 09:05:11,907 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 09:05:11,907 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 09:05:11,909 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 09:05:11,910 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 09:05:12,025 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 09:05:12,026 > []
[DEBUG|open_api.py:1133] 2021-02-03 09:05:12,028 > possess_item 테이블에는 없는데 all_item_db에 sell_date가 없는 리스트 처리!!!
[DEBUG|open_api.py:1134] 2021-02-03 09:05:12,028 > []
[DEBUG|trader.py:50] 2021-02-03 09:05:12,029 > get_sell_list 함수에 들어왔습니다!
[DEBUG|open_api.py:1213] 2021-02-03 09:05:12,030 > in chegyul_check!!!!! all_item_db에서 cheguyl_check가 1인 종목들(미체결상태) 확인!!!
[DEBUG|open_api.py:1214] 2021-02-03 09:05:12,030 > []
[DEBUG|open_api.py:1147] 2021-02-03 09:05:12,031 > rate_check!!!
[DEBUG|open_api.py:1151] 2021-02-03 09:05:12,032 > rate 업데이트 !!!
[DEBUG|open_api.py:1152] 2021-02-03 09:05:12,033 > [('261110', 111.0, 8960.0, 9120.0, 10740.0, 1.08, 994560.0), ('276970', 105.0, 9495.0, 9615.0, 5590.0, 0.56, 996975.0), ('282000', 5.0, 99417.0, 99445.0, -3330.0, -0.67, 497085.0), ('329750', 105.0, 9475.0, 9555.0, 1410.0, 0.14, 994875.0), ('353490', 473.0, 2107.0, 2180.0, 25078.0, 2.52, 997025.0)]
[DEBUG|trader.py:59] 2021-02-03 09:05:12,049 > 매도 리스트!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[DEBUG|trader.py:60] 2021-02-03 09:05:12,049 > []
[DEBUG|open_api.py:976] 2021-02-03 09:05:12,049 > jango_check 함수에 들어왔습니다!
[DEBUG|open_api.py:1458] 2021-02-03 09:05:12,050 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 09:05:12,405 > 76
[DEBUG|open_api.py:303] 2021-02-03 15:32:11,387 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:32:11,387 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:32:11,387 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:32:11,387 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:32:11,388 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:32:11,388 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:32:11,388 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:32:11,419 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:32:11,464 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:32:11,464 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:32:11,465 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:32:11,486 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:32:11,533 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 15:32:15,041 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:531] 2021-02-03 15:32:15,042 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 15:32:15,043 > 1
[DEBUG|open_api.py:290] 2021-02-03 15:32:15,872 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:32:15,873 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 15:32:15,874 > _opw00018!!!
[DEBUG|collector_api.py:259] 2021-02-03 15:32:50,478 > get_code_list
[DEBUG|open_api.py:303] 2021-02-03 15:32:50,810 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:32:50,811 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:32:50,811 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:32:50,811 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:32:50,811 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:32:50,811 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:32:50,811 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:32:50,827 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:32:50,854 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:32:50,854 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:32:50,854 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:32:50,871 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:32:50,904 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:924] 2021-02-03 15:32:52,023 > py_check_balance!!!
[DEBUG|open_api.py:1124] 2021-02-03 15:32:52,023 > 2
[DEBUG|collector_api.py:38] 2021-02-03 15:33:10,156 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:924] 2021-02-03 15:33:10,157 > py_check_balance!!!
[DEBUG|open_api.py:1124] 2021-02-03 15:33:10,158 > 1
[DEBUG|open_api.py:290] 2021-02-03 15:33:10,462 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:33:10,463 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 15:33:10,464 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 15:33:10,464 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 15:33:10,464 > 000000496428307
[DEBUG|open_api.py:303] 2021-02-03 15:37:04,661 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:37:04,661 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:37:04,662 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:37:04,662 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:37:04,662 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:37:04,662 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:37:04,662 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:37:04,681 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:37:04,708 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:37:04,709 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:37:04,709 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:37:04,725 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:37:04,754 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 15:37:07,227 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:924] 2021-02-03 15:37:07,228 > py_check_balance!!!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:07,229 > 1
[DEBUG|open_api.py:290] 2021-02-03 15:37:08,036 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:37:08,036 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 15:37:08,038 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 15:37:08,038 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 15:37:08,039 > 000000496428307
[DEBUG|open_api.py:1124] 2021-02-03 15:37:08,039 > 2
[DEBUG|open_api.py:290] 2021-02-03 15:37:08,082 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:37:08,082 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 15:37:08,084 > _opw00018!!!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:08,643 > 3
[DEBUG|open_api.py:290] 2021-02-03 15:37:08,676 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:37:08,677 >  조회가 완료되었습니다.
[DEBUG|open_api.py:1486] 2021-02-03 15:37:08,679 > _opt10074!!!
[DEBUG|open_api.py:1495] 2021-02-03 15:37:08,679 > today_profit
[DEBUG|open_api.py:1496] 2021-02-03 15:37:08,680 > 0
[DEBUG|collector_api.py:692] 2021-02-03 15:37:08,693 > self.open_api.today!!!!!!!!
[DEBUG|collector_api.py:693] 2021-02-03 15:37:08,694 > 20210203
[DEBUG|collector_api.py:723] 2021-02-03 15:37:08,726 > today_profit_list total_profitcut 이 비었다!!!! 
[DEBUG|collector_api.py:731] 2021-02-03 15:37:08,727 > today_profit_list total_losscut 이 비었다!!!! 
[DEBUG|collector_api.py:750] 2021-02-03 15:37:08,781 > jango_data rows!!!
[DEBUG|collector_api.py
[DEBUG|collector_api.py:753] 2021-02-03 15:37:08,783 > jango_data len(rows)!!!
[DEBUG|collector_api.py:755] 2021-02-03 15:37:08,783 > 34
[DEBUG|open_api.py:1458] 2021-02-03 15:37:09,597 > get_d2_deposit 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:09,598 > 4
[DEBUG|open_api.py:290] 2021-02-03 15:37:09,636 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:37:09,636 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1469] 2021-02-03 15:37:09,638 > _opw00001!!!
[DEBUG|open_api.py:1473] 2021-02-03 15:37:09,638 > 예수금!!!!
[DEBUG|open_api.py:1474] 2021-02-03 15:37:09,638 > 000000496428307
[DEBUG|open_api.py:531] 2021-02-03 15:37:09,639 > check_balance 함수에 들어왔습니다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:10,200 > 5
[DEBUG|open_api.py:290] 2021-02-03 15:37:10,239 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:37:10,239 > [00Z310] 모의투자 조회가 완료되었습니다
[DEBUG|open_api.py:1622] 2021-02-03 15:37:10,241 > _opw00018!!!
[DEBUG|open_api.py:571] 2021-02-03 15:37:10,243 > db_to_possesed_item 함수에 들어왔습니다!
[DEBUG|open_api.py:1178] 2021-02-03 15:37:10,377 > possess_item 테이블에는 있는데 all_item_db에 없는 종목들 처리!!!
[DEBUG|open_api.py:1179] 2021-02-03 15:37:10,377 > []
[DEBUG|collector_api.py:588] 2021-02-03 15:37:10,381 > db_to_today_profit_list!!!
[DEBUG|open_api.py:1691] 2021-02-03 15:37:10,382 > reset_opt10073_output!!!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:10,802 > 6
[DEBUG|open_api.py:290] 2021-02-03 15:37:10,844 > _receive_msg 함수에 들어왔습니다!
[DEBUG|open_api.py:298] 2021-02-03 15:37:10,844 >  조회가 완료되었습니다.
[DEBUG|open_api.py:1588] 2021-02-03 15:37:10,845 > _opt10073!!!
[DEBUG|open_api.py:1609] 2021-02-03 15:37:10,846 > _opt10073 end!!!
[DEBUG|collector_api.py:606] 2021-02-03 15:37:10,847 > self.opt10073_output['multi']!!!!!
[DEBUG|collector_api.py:607] 2021-02-03 15:37:10,847 > []
[DEBUG|collector_api.py:629] 2021-02-03 15:37:10,849 > today_profit_item!!!
[DEBUG|collector_api.py:630] 2021-02-03 15:37:10,849 > Empty DataFrame
Columns: [date, code, code_name, amount, today_profit, earning_rate]
Index: []
[DEBUG|collector_api.py:180] 2021-02-03 15:37:10,860 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 15:37:10,914 > ++++++++++++++DSR++++++++++++++++++++1/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:10,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:11,420 > 7
[DEBUG|collector_api.py:200] 2021-02-03 15:37:11,742 > ++++++++++++++GS글로벌++++++++++++++++++++2/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:11,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:12,039 > 8
[DEBUG|collector_api.py:200] 2021-02-03 15:37:12,309 > ++++++++++++++HDC현대산업개발++++++++++++++++++++3/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:12,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:12,646 > 9
[DEBUG|collector_api.py:200] 2021-02-03 15:37:12,896 > ++++++++++++++KG케미칼++++++++++++++++++++4/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:12,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:13,253 > 10
[DEBUG|collector_api.py:200] 2021-02-03 15:37:13,533 > ++++++++++++++LG이노텍++++++++++++++++++++5/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:13,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:13,860 > 11
[DEBUG|collector_api.py:200] 2021-02-03 15:37:14,110 > ++++++++++++++LG전자++++++++++++++++++++6/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:14,110 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:14,466 > 12
[DEBUG|collector_api.py:200] 2021-02-03 15:37:14,717 > ++++++++++++++LG헬로비전++++++++++++++++++++7/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:14,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:15,073 > 13
[DEBUG|collector_api.py:200] 2021-02-03 15:37:15,316 > ++++++++++++++OCI++++++++++++++++++++8/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:15,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:15,680 > 14
[DEBUG|collector_api.py:200] 2021-02-03 15:37:15,955 > ++++++++++++++S&TC++++++++++++++++++++9/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:15,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:16,286 > 15
[DEBUG|collector_api.py:200] 2021-02-03 15:37:16,545 > ++++++++++++++S&T모티브++++++++++++++++++++10/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:16,545 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:16,893 > 16
[DEBUG|collector_api.py:200] 2021-02-03 15:37:17,147 > ++++++++++++++SK이노베이션++++++++++++++++++++11/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:17,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:17,500 > 17
[DEBUG|collector_api.py:200] 2021-02-03 15:37:17,751 > ++++++++++++++STX++++++++++++++++++++12/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:17,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:18,108 > 18
[DEBUG|collector_api.py:200] 2021-02-03 15:37:18,385 > ++++++++++++++YG PLUS++++++++++++++++++++13/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:18,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:18,716 > 19
[DEBUG|collector_api.py:200] 2021-02-03 15:37:18,981 > ++++++++++++++갤럭시아에스엠++++++++++++++++++++14/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:18,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:19,324 > 20
[DEBUG|collector_api.py:200] 2021-02-03 15:37:19,591 > ++++++++++++++고려아연++++++++++++++++++++15/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:19,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:19,932 > 21
[DEBUG|collector_api.py:200] 2021-02-03 15:37:20,201 > ++++++++++++++극동유화++++++++++++++++++++16/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:20,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:20,538 > 22
[DEBUG|collector_api.py:200] 2021-02-03 15:37:20,807 > ++++++++++++++까뮤이앤씨++++++++++++++++++++17/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:20,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:21,146 > 23
[DEBUG|collector_api.py:200] 2021-02-03 15:37:21,440 > ++++++++++++++남선알미늄++++++++++++++++++++18/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:21,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:21,753 > 24
[DEBUG|collector_api.py:200] 2021-02-03 15:37:22,026 > ++++++++++++++대덕전자++++++++++++++++++++19/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:22,026 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:22,361 > 25
[DEBUG|collector_api.py:200] 2021-02-03 15:37:22,535 > ++++++++++++++대영포장++++++++++++++++++++20/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:22,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:22,969 > 26
[DEBUG|collector_api.py:200] 2021-02-03 15:37:23,241 > ++++++++++++++대웅++++++++++++++++++++21/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:23,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:23,577 > 27
[DEBUG|collector_api.py:200] 2021-02-03 15:37:23,849 > ++++++++++++++대한유화++++++++++++++++++++22/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:23,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:24,184 > 28
[DEBUG|collector_api.py:200] 2021-02-03 15:37:24,441 > ++++++++++++++두산++++++++++++++++++++23/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:24,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:24,794 > 29
[DEBUG|collector_api.py:200] 2021-02-03 15:37:25,067 > ++++++++++++++두산밥캣++++++++++++++++++++24/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:25,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:25,400 > 30
[DEBUG|collector_api.py:200] 2021-02-03 15:37:25,656 > ++++++++++++++락앤락++++++++++++++++++++25/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:25,656 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:26,008 > 31
[DEBUG|collector_api.py:200] 2021-02-03 15:37:26,259 > ++++++++++++++롯데정보통신++++++++++++++++++++26/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:26,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:26,615 > 32
[DEBUG|collector_api.py:200] 2021-02-03 15:37:26,857 > ++++++++++++++마니커++++++++++++++++++++27/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:26,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:27,222 > 33
[DEBUG|collector_api.py:200] 2021-02-03 15:37:27,474 > ++++++++++++++만도++++++++++++++++++++28/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:27,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:27,831 > 34
[DEBUG|collector_api.py:200] 2021-02-03 15:37:28,094 > ++++++++++++++메리츠증권++++++++++++++++++++29/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:28,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:28,438 > 35
[DEBUG|collector_api.py:200] 2021-02-03 15:37:28,702 > ++++++++++++++모두투어리츠++++++++++++++++++++30/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:28,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:29,046 > 36
[DEBUG|collector_api.py:200] 2021-02-03 15:37:29,286 > ++++++++++++++부국증권++++++++++++++++++++31/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:29,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:29,653 > 37
[DEBUG|collector_api.py:200] 2021-02-03 15:37:29,923 > ++++++++++++++삼성SDI++++++++++++++++++++32/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:29,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:30,260 > 38
[DEBUG|collector_api.py:200] 2021-02-03 15:37:30,529 > ++++++++++++++삼성엔지니어링++++++++++++++++++++33/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:30,530 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:30,867 > 39
[DEBUG|collector_api.py:200] 2021-02-03 15:37:31,128 > ++++++++++++++삼성중공업++++++++++++++++++++34/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:31,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:31,475 > 40
[DEBUG|collector_api.py:200] 2021-02-03 15:37:31,727 > ++++++++++++++삼성출판사++++++++++++++++++++35/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:31,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:32,082 > 41
[DEBUG|collector_api.py:200] 2021-02-03 15:37:32,329 > ++++++++++++++삼성화재++++++++++++++++++++36/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:32,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:32,688 > 42
[DEBUG|collector_api.py:200] 2021-02-03 15:37:32,969 > ++++++++++++++삼양홀딩스++++++++++++++++++++37/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:32,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:33,295 > 43
[DEBUG|collector_api.py:200] 2021-02-03 15:37:33,560 > ++++++++++++++삼영전자++++++++++++++++++++38/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:33,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:33,903 > 44
[DEBUG|collector_api.py:200] 2021-02-03 15:37:34,167 > ++++++++++++++삼영화학++++++++++++++++++++39/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:34,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:34,511 > 45
[DEBUG|collector_api.py:200] 2021-02-03 15:37:34,781 > ++++++++++++++상상인증권++++++++++++++++++++40/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:34,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:35,118 > 46
[DEBUG|collector_api.py:200] 2021-02-03 15:37:35,388 > ++++++++++++++선도전기++++++++++++++++++++41/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:35,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:35,727 > 47
[DEBUG|collector_api.py:200] 2021-02-03 15:37:36,000 > ++++++++++++++선진++++++++++++++++++++42/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:36,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:36,334 > 48
[DEBUG|collector_api.py:200] 2021-02-03 15:37:36,570 > ++++++++++++++세방전지++++++++++++++++++++43/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:36,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:36,943 > 49
[DEBUG|collector_api.py:200] 2021-02-03 15:37:37,248 > ++++++++++++++세원셀론텍++++++++++++++++++++44/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:37,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:37,549 > 50
[DEBUG|collector_api.py:200] 2021-02-03 15:37:37,792 > ++++++++++++++신한알파리츠++++++++++++++++++++45/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:37,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:38,155 > 51
[DEBUG|collector_api.py:200] 2021-02-03 15:37:38,398 > ++++++++++++++신한지주++++++++++++++++++++46/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:38,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:38,762 > 52
[DEBUG|collector_api.py:200] 2021-02-03 15:37:39,016 > ++++++++++++++쌍용차++++++++++++++++++++47/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:39,016 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:39,371 > 53
[DEBUG|collector_api.py:200] 2021-02-03 15:37:39,645 > ++++++++++++++에넥스++++++++++++++++++++48/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:39,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:39,980 > 54
[DEBUG|collector_api.py:200] 2021-02-03 15:37:40,254 > ++++++++++++++영화금속++++++++++++++++++++49/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:40,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:40,588 > 55
[DEBUG|collector_api.py:200] 2021-02-03 15:37:40,849 > ++++++++++++++윌비스++++++++++++++++++++50/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:40,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:41,196 > 56
[DEBUG|collector_api.py:200] 2021-02-03 15:37:41,453 > ++++++++++++++유나이티드제약++++++++++++++++++++51/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:41,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:41,803 > 57
[DEBUG|collector_api.py:200] 2021-02-03 15:37:42,069 > ++++++++++++++인지컨트롤스++++++++++++++++++++52/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:42,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:42,409 > 58
[DEBUG|collector_api.py:200] 2021-02-03 15:37:42,658 > ++++++++++++++인터지스++++++++++++++++++++53/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:42,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:43,016 > 59
[DEBUG|collector_api.py:200] 2021-02-03 15:37:43,275 > ++++++++++++++일성건설++++++++++++++++++++54/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:43,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:43,623 > 60
[DEBUG|collector_api.py:200] 2021-02-03 15:37:43,897 > ++++++++++++++일진다이아++++++++++++++++++++55/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:43,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:44,230 > 61
[DEBUG|collector_api.py:200] 2021-02-03 15:37:44,463 > ++++++++++++++제일약품++++++++++++++++++++56/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:44,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:44,839 > 62
[DEBUG|collector_api.py:200] 2021-02-03 15:37:45,103 > ++++++++++++++제일연마++++++++++++++++++++57/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:45,103 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:45,447 > 63
[DEBUG|collector_api.py:200] 2021-02-03 15:37:45,692 > ++++++++++++++제일파마홀딩스++++++++++++++++++++58/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:45,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:46,054 > 64
[DEBUG|collector_api.py:200] 2021-02-03 15:37:46,321 > ++++++++++++++조흥++++++++++++++++++++59/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:46,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:46,661 > 65
[DEBUG|collector_api.py:200] 2021-02-03 15:37:46,952 > ++++++++++++++지역난방공사++++++++++++++++++++60/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:46,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:47,269 > 66
[DEBUG|collector_api.py:200] 2021-02-03 15:37:47,518 > ++++++++++++++진도++++++++++++++++++++61/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:47,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:47,877 > 67
[DEBUG|collector_api.py:200] 2021-02-03 15:37:48,127 > ++++++++++++++코오롱인더++++++++++++++++++++62/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:48,127 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:48,484 > 68
[DEBUG|collector_api.py:200] 2021-02-03 15:37:48,731 > ++++++++++++++키다리스튜디오++++++++++++++++++++63/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:48,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:49,092 > 69
[DEBUG|collector_api.py:200] 2021-02-03 15:37:49,359 > ++++++++++++++태경산업++++++++++++++++++++64/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:49,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:49,700 > 70
[DEBUG|collector_api.py:200] 2021-02-03 15:37:49,986 > ++++++++++++++태양금속++++++++++++++++++++65/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:49,987 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:50,307 > 71
[DEBUG|collector_api.py:200] 2021-02-03 15:37:50,575 > ++++++++++++++포스코강판++++++++++++++++++++66/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:50,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:50,914 > 72
[DEBUG|collector_api.py:200] 2021-02-03 15:37:51,186 > ++++++++++++++한국공항++++++++++++++++++++67/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:51,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:51,521 > 73
[DEBUG|collector_api.py:200] 2021-02-03 15:37:51,778 > ++++++++++++++한국종합기술++++++++++++++++++++68/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:51,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:52,129 > 74
[DEBUG|collector_api.py:200] 2021-02-03 15:37:52,390 > ++++++++++++++한국패러랠++++++++++++++++++++69/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:52,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:52,736 > 75
[DEBUG|collector_api.py:200] 2021-02-03 15:37:52,969 > ++++++++++++++한솔로지스틱스++++++++++++++++++++70/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:52,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:53,342 > 76
[DEBUG|collector_api.py:200] 2021-02-03 15:37:53,650 > ++++++++++++++한일철강++++++++++++++++++++71/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:53,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:53,950 > 77
[DEBUG|collector_api.py:200] 2021-02-03 15:37:54,203 > ++++++++++++++한일현대시멘트++++++++++++++++++++72/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:54,203 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:54,558 > 78
[DEBUG|collector_api.py:200] 2021-02-03 15:37:54,849 > ++++++++++++++한창제지++++++++++++++++++++73/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:54,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:55,165 > 79
[DEBUG|collector_api.py:200] 2021-02-03 15:37:55,432 > ++++++++++++++한화생명++++++++++++++++++++74/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:55,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:55,772 > 80
[DEBUG|collector_api.py:200] 2021-02-03 15:37:56,032 > ++++++++++++++현대건설기계++++++++++++++++++++75/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:56,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:56,379 > 81
[DEBUG|collector_api.py:200] 2021-02-03 15:37:56,608 > ++++++++++++++현대모비스++++++++++++++++++++76/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:56,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:56,986 > 82
[DEBUG|collector_api.py:200] 2021-02-03 15:37:57,260 > ++++++++++++++현대엘리베이++++++++++++++++++++77/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:57,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:57,593 > 83
[DEBUG|collector_api.py:200] 2021-02-03 15:37:57,856 > ++++++++++++++현대차증권++++++++++++++++++++78/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:57,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:58,201 > 84
[DEBUG|collector_api.py:200] 2021-02-03 15:37:58,457 > ++++++++++++++현대홈쇼핑++++++++++++++++++++79/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:58,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:58,808 > 85
[DEBUG|collector_api.py:200] 2021-02-03 15:37:59,077 > ++++++++++++++호전실업++++++++++++++++++++80/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:59,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:37:59,416 > 86
[DEBUG|collector_api.py:200] 2021-02-03 15:37:59,641 > ++++++++++++++CJ CGV++++++++++++++++++++81/2888
[DEBUG|open_api.py:656] 2021-02-03 15:37:59,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:00,022 > 87
[DEBUG|collector_api.py:200] 2021-02-03 15:38:00,264 > ++++++++++++++CJ제일제당++++++++++++++++++++82/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:00,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:00,629 > 88
[DEBUG|collector_api.py:200] 2021-02-03 15:38:00,904 > ++++++++++++++HDC현대EP++++++++++++++++++++83/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:00,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:01,236 > 89
[DEBUG|collector_api.py:200] 2021-02-03 15:38:01,486 > ++++++++++++++JW홀딩스++++++++++++++++++++84/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:01,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:01,844 > 90
[DEBUG|collector_api.py:200] 2021-02-03 15:38:02,096 > ++++++++++++++KB금융++++++++++++++++++++85/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:02,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:02,451 > 91
[DEBUG|collector_api.py:200] 2021-02-03 15:38:02,696 > ++++++++++++++KC코트렐++++++++++++++++++++86/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:02,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:03,058 > 92
[DEBUG|collector_api.py:200] 2021-02-03 15:38:03,305 > ++++++++++++++KPX케미칼++++++++++++++++++++87/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:03,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:03,666 > 93
[DEBUG|collector_api.py:200] 2021-02-03 15:38:03,919 > ++++++++++++++SG충방++++++++++++++++++++88/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:03,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:04,273 > 94
[DEBUG|collector_api.py:200] 2021-02-03 15:38:04,547 > ++++++++++++++금강공업++++++++++++++++++++89/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:04,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:04,882 > 95
[DEBUG|collector_api.py:200] 2021-02-03 15:38:05,158 > ++++++++++++++금호산업++++++++++++++++++++90/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:05,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:05,489 > 96
[DEBUG|collector_api.py:200] 2021-02-03 15:38:05,767 > ++++++++++++++금호전기++++++++++++++++++++91/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:05,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:06,095 > 97
[DEBUG|collector_api.py:200] 2021-02-03 15:38:06,365 > ++++++++++++++기업은행++++++++++++++++++++92/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:06,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:06,702 > 98
[DEBUG|collector_api.py:200] 2021-02-03 15:38:06,965 > ++++++++++++++남성++++++++++++++++++++93/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:06,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:07,310 > 99
[DEBUG|collector_api.py:200] 2021-02-03 15:38:07,565 > ++++++++++++++넷마블++++++++++++++++++++94/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:07,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:07,918 > 100
[DEBUG|collector_api.py:200] 2021-02-03 15:38:08,176 > ++++++++++++++대구백화점++++++++++++++++++++95/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:08,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:08,526 > 101
[DEBUG|collector_api.py:200] 2021-02-03 15:38:08,778 > ++++++++++++++대우건설++++++++++++++++++++96/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:08,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:09,136 > 102
[DEBUG|collector_api.py:200] 2021-02-03 15:38:09,412 > ++++++++++++++대원제약++++++++++++++++++++97/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:09,413 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:09,743 > 103
[DEBUG|collector_api.py:200] 2021-02-03 15:38:09,990 > ++++++++++++++대한방직++++++++++++++++++++98/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:09,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:10,352 > 104
[DEBUG|collector_api.py:200] 2021-02-03 15:38:10,615 > ++++++++++++++대한제당++++++++++++++++++++99/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:10,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:10,960 > 105
[DEBUG|collector_api.py:200] 2021-02-03 15:38:11,256 > ++++++++++++++대한해운++++++++++++++++++++100/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:11,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:11,567 > 106
[DEBUG|collector_api.py:200] 2021-02-03 15:38:11,861 > ++++++++++++++덕양산업++++++++++++++++++++101/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:11,861 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:12,175 > 107
[DEBUG|collector_api.py:200] 2021-02-03 15:38:12,429 > ++++++++++++++동원금속++++++++++++++++++++102/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:12,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:12,783 > 108
[DEBUG|collector_api.py:200] 2021-02-03 15:38:13,052 > ++++++++++++++두산인프라코어++++++++++++++++++++103/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:13,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:13,391 > 109
[DEBUG|collector_api.py:200] 2021-02-03 15:38:13,652 > ++++++++++++++디씨엠++++++++++++++++++++104/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:13,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:13,998 > 110
[DEBUG|collector_api.py:200] 2021-02-03 15:38:14,254 > ++++++++++++++디티알오토모티브++++++++++++++++++++105/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:14,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:14,607 > 111
[DEBUG|collector_api.py:200] 2021-02-03 15:38:14,873 > ++++++++++++++롯데손해보험++++++++++++++++++++106/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:14,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:15,216 > 112
[DEBUG|collector_api.py:200] 2021-02-03 15:38:15,468 > ++++++++++++++롯데제과++++++++++++++++++++107/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:15,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:15,824 > 113
[DEBUG|collector_api.py:200] 2021-02-03 15:38:16,064 > ++++++++++++++롯데칠성++++++++++++++++++++108/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:16,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:16,430 > 114
[DEBUG|collector_api.py:200] 2021-02-03 15:38:16,710 > ++++++++++++++롯데케미칼++++++++++++++++++++109/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:16,710 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:17,037 > 115
[DEBUG|collector_api.py:200] 2021-02-03 15:38:17,306 > ++++++++++++++롯데하이마트++++++++++++++++++++110/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:17,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:17,644 > 116
[DEBUG|collector_api.py:200] 2021-02-03 15:38:17,907 > ++++++++++++++미원홀딩스++++++++++++++++++++111/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:17,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:18,251 > 117
[DEBUG|collector_api.py:200] 2021-02-03 15:38:18,495 > ++++++++++++++백산++++++++++++++++++++112/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:18,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:18,857 > 118
[DEBUG|collector_api.py:200] 2021-02-03 15:38:19,117 > ++++++++++++++보락++++++++++++++++++++113/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:19,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:19,464 > 119
[DEBUG|collector_api.py:200] 2021-02-03 15:38:19,745 > ++++++++++++++사조대림++++++++++++++++++++114/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:19,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:20,073 > 120
[DEBUG|collector_api.py:200] 2021-02-03 15:38:20,335 > ++++++++++++++사조동아원++++++++++++++++++++115/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:20,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:20,681 > 121
[DEBUG|collector_api.py:200] 2021-02-03 15:38:20,953 > ++++++++++++++삼양식품++++++++++++++++++++116/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:20,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:21,290 > 122
[DEBUG|collector_api.py:200] 2021-02-03 15:38:21,545 > ++++++++++++++서원++++++++++++++++++++117/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:21,545 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:21,898 > 123
[DEBUG|collector_api.py:200] 2021-02-03 15:38:22,159 > ++++++++++++++성안++++++++++++++++++++118/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:22,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:22,505 > 124
[DEBUG|collector_api.py:200] 2021-02-03 15:38:22,778 > ++++++++++++++세방++++++++++++++++++++119/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:22,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:23,113 > 125
[DEBUG|collector_api.py:200] 2021-02-03 15:38:23,379 > ++++++++++++++세아홀딩스++++++++++++++++++++120/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:23,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:23,720 > 126
[DEBUG|collector_api.py:200] 2021-02-03 15:38:23,968 > ++++++++++++++세이브존I&C++++++++++++++++++++121/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:23,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:24,327 > 127
[DEBUG|collector_api.py:200] 2021-02-03 15:38:24,610 > ++++++++++++++신송홀딩스++++++++++++++++++++122/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:24,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:24,933 > 128
[DEBUG|collector_api.py:200] 2021-02-03 15:38:25,168 > ++++++++++++++신일전자++++++++++++++++++++123/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:25,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:25,541 > 129
[DEBUG|collector_api.py:200] 2021-02-03 15:38:25,820 > ++++++++++++++신풍제약++++++++++++++++++++124/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:25,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:26,148 > 130
[DEBUG|collector_api.py:200] 2021-02-03 15:38:26,419 > ++++++++++++++써니전자++++++++++++++++++++125/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:26,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:26,755 > 131
[DEBUG|collector_api.py:200] 2021-02-03 15:38:27,027 > ++++++++++++++아이마켓코리아++++++++++++++++++++126/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:27,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:27,362 > 132
[DEBUG|collector_api.py:200] 2021-02-03 15:38:27,617 > ++++++++++++++IHQ++++++++++++++++++++127/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:27,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:27,970 > 133
[DEBUG|collector_api.py:200] 2021-02-03 15:38:28,255 > ++++++++++++++에이블씨엔씨++++++++++++++++++++128/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:28,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:28,577 > 134
[DEBUG|collector_api.py:200] 2021-02-03 15:38:28,845 > ++++++++++++++엔씨소프트++++++++++++++++++++129/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:28,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:29,186 > 135
[DEBUG|collector_api.py:200] 2021-02-03 15:38:29,428 > ++++++++++++++영보화학++++++++++++++++++++130/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:29,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:29,793 > 136
[DEBUG|collector_api.py:200] 2021-02-03 15:38:30,054 > ++++++++++++++영진약품++++++++++++++++++++131/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:30,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:30,401 > 137
[DEBUG|collector_api.py:200] 2021-02-03 15:38:30,671 > ++++++++++++++영풍++++++++++++++++++++132/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:30,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:31,008 > 138
[DEBUG|collector_api.py:200] 2021-02-03 15:38:31,271 > ++++++++++++++우리금융캐피탈++++++++++++++++++++133/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:31,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:31,615 > 139
[DEBUG|collector_api.py:200] 2021-02-03 15:38:31,874 > ++++++++++++++유니온머티리얼++++++++++++++++++++134/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:31,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:32,224 > 140
[DEBUG|collector_api.py:200] 2021-02-03 15:38:32,469 > ++++++++++++++유유제약++++++++++++++++++++135/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:32,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:32,830 > 141
[DEBUG|collector_api.py:200] 2021-02-03 15:38:33,106 > ++++++++++++++유한양행++++++++++++++++++++136/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:33,106 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:33,437 > 142
[DEBUG|collector_api.py:200] 2021-02-03 15:38:33,735 > ++++++++++++++이마트++++++++++++++++++++137/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:33,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:34,044 > 143
[DEBUG|collector_api.py:200] 2021-02-03 15:38:34,281 > ++++++++++++++이수화학++++++++++++++++++++138/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:34,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:34,651 > 144
[DEBUG|collector_api.py:200] 2021-02-03 15:38:34,923 > ++++++++++++++이스타코++++++++++++++++++++139/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:34,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:35,259 > 145
[DEBUG|collector_api.py:200] 2021-02-03 15:38:35,516 > ++++++++++++++인천도시가스++++++++++++++++++++140/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:35,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:35,866 > 146
[DEBUG|collector_api.py:200] 2021-02-03 15:38:36,127 > ++++++++++++++일정실업++++++++++++++++++++141/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:36,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:36,473 > 147
[DEBUG|collector_api.py:200] 2021-02-03 15:38:36,731 > ++++++++++++++종근당홀딩스++++++++++++++++++++142/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:36,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:37,082 > 148
[DEBUG|collector_api.py:200] 2021-02-03 15:38:37,352 > ++++++++++++++지엠비코리아++++++++++++++++++++143/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:37,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:37,688 > 149
[DEBUG|collector_api.py:200] 2021-02-03 15:38:37,946 > ++++++++++++++진원생명과학++++++++++++++++++++144/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:37,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:38,295 > 150
[DEBUG|collector_api.py:200] 2021-02-03 15:38:38,555 > ++++++++++++++컨버즈++++++++++++++++++++145/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:38,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:38,903 > 151
[DEBUG|collector_api.py:200] 2021-02-03 15:38:39,156 > ++++++++++++++케이씨텍++++++++++++++++++++146/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:39,156 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:39,510 > 152
[DEBUG|collector_api.py:200] 2021-02-03 15:38:39,747 > ++++++++++++++코리아써키트++++++++++++++++++++147/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:39,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:40,116 > 153
[DEBUG|collector_api.py:200] 2021-02-03 15:38:40,410 > ++++++++++++++코스모화학++++++++++++++++++++148/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:40,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:40,723 > 154
[DEBUG|collector_api.py:200] 2021-02-03 15:38:40,992 > ++++++++++++++코아스++++++++++++++++++++149/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:40,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:41,331 > 155
[DEBUG|collector_api.py:200] 2021-02-03 15:38:41,562 > ++++++++++++++코오롱플라스틱++++++++++++++++++++150/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:41,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:41,939 > 156
[DEBUG|collector_api.py:200] 2021-02-03 15:38:42,198 > ++++++++++++++쿠쿠홀딩스++++++++++++++++++++151/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:42,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:42,547 > 157
[DEBUG|collector_api.py:200] 2021-02-03 15:38:42,786 > ++++++++++++++큐로++++++++++++++++++++152/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:42,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:43,155 > 158
[DEBUG|collector_api.py:200] 2021-02-03 15:38:43,402 > ++++++++++++++TBH글로벌++++++++++++++++++++153/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:43,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:43,762 > 159
[DEBUG|collector_api.py:200] 2021-02-03 15:38:44,027 > ++++++++++++++포스코케미칼++++++++++++++++++++154/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:44,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:44,369 > 160
[DEBUG|collector_api.py:200] 2021-02-03 15:38:44,631 > ++++++++++++++하이트론++++++++++++++++++++155/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:44,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:44,977 > 161
[DEBUG|collector_api.py:200] 2021-02-03 15:38:45,246 > ++++++++++++++한국금융지주++++++++++++++++++++156/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:45,246 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:45,584 > 162
[DEBUG|collector_api.py:200] 2021-02-03 15:38:45,830 > ++++++++++++++한국전자홀딩스++++++++++++++++++++157/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:45,831 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:46,191 > 163
[DEBUG|collector_api.py:200] 2021-02-03 15:38:46,455 > ++++++++++++++한국타이어앤테크놀로지++++++++++++++++++++158/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:46,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:46,799 > 164
[DEBUG|collector_api.py:200] 2021-02-03 15:38:47,067 > ++++++++++++++한국토지신탁++++++++++++++++++++159/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:47,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:47,407 > 165
[DEBUG|collector_api.py:200] 2021-02-03 15:38:47,650 > ++++++++++++++한국특수형강++++++++++++++++++++160/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:47,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:48,014 > 166
[DEBUG|collector_api.py:200] 2021-02-03 15:38:48,271 > ++++++++++++++한온시스템++++++++++++++++++++161/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:48,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:48,621 > 167
[DEBUG|collector_api.py:200] 2021-02-03 15:38:48,883 > ++++++++++++++한화솔루션++++++++++++++++++++162/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:48,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:49,229 > 168
[DEBUG|collector_api.py:200] 2021-02-03 15:38:49,489 > ++++++++++++++해태제과식품++++++++++++++++++++163/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:49,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:49,835 > 169
[DEBUG|collector_api.py:200] 2021-02-03 15:38:50,093 > ++++++++++++++현대에너지솔루션++++++++++++++++++++164/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:50,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:50,443 > 170
[DEBUG|collector_api.py:200] 2021-02-03 15:38:50,636 > ++++++++++++++현대위아++++++++++++++++++++165/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:50,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:51,050 > 171
[DEBUG|collector_api.py:200] 2021-02-03 15:38:51,294 > ++++++++++++++현대코퍼레이션홀딩스++++++++++++++++++++166/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:51,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:51,656 > 172
[DEBUG|collector_api.py:200] 2021-02-03 15:38:51,897 > ++++++++++++++호텔신라++++++++++++++++++++167/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:51,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:52,265 > 173
[DEBUG|collector_api.py:200] 2021-02-03 15:38:52,528 > ++++++++++++++화승인더++++++++++++++++++++168/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:52,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:52,872 > 174
[DEBUG|collector_api.py:200] 2021-02-03 15:38:53,148 > ++++++++++++++화천기공++++++++++++++++++++169/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:53,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:53,480 > 175
[DEBUG|collector_api.py:200] 2021-02-03 15:38:53,728 > ++++++++++++++환인제약++++++++++++++++++++170/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:53,729 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:54,086 > 176
[DEBUG|collector_api.py:200] 2021-02-03 15:38:54,351 > ++++++++++++++효성++++++++++++++++++++171/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:54,351 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:54,694 > 177
[DEBUG|collector_api.py:200] 2021-02-03 15:38:54,966 > ++++++++++++++효성화학++++++++++++++++++++172/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:54,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:55,303 > 178
[DEBUG|collector_api.py:200] 2021-02-03 15:38:55,561 > ++++++++++++++흥아해운++++++++++++++++++++173/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:55,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:55,910 > 179
[DEBUG|collector_api.py:200] 2021-02-03 15:38:56,177 > ++++++++++++++BGF리테일++++++++++++++++++++174/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:56,177 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:56,517 > 180
[DEBUG|collector_api.py:200] 2021-02-03 15:38:56,782 > ++++++++++++++BNK금융지주++++++++++++++++++++175/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:56,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:57,124 > 181
[DEBUG|collector_api.py:200] 2021-02-03 15:38:57,363 > ++++++++++++++DRB동일++++++++++++++++++++176/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:57,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:57,730 > 182
[DEBUG|collector_api.py:200] 2021-02-03 15:38:57,981 > ++++++++++++++GS건설++++++++++++++++++++177/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:57,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:58,337 > 183
[DEBUG|collector_api.py:200] 2021-02-03 15:38:58,594 > ++++++++++++++HDC아이콘트롤스++++++++++++++++++++178/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:58,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:58,945 > 184
[DEBUG|collector_api.py:200] 2021-02-03 15:38:59,176 > ++++++++++++++KTis++++++++++++++++++++179/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:59,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:38:59,552 > 185
[DEBUG|collector_api.py:200] 2021-02-03 15:38:59,781 > ++++++++++++++LG상사++++++++++++++++++++180/2888
[DEBUG|open_api.py:656] 2021-02-03 15:38:59,782 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:00,159 > 186
[DEBUG|collector_api.py:200] 2021-02-03 15:39:00,429 > ++++++++++++++MH에탄올++++++++++++++++++++181/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:00,429 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:00,766 > 187
[DEBUG|collector_api.py:200] 2021-02-03 15:39:01,061 > ++++++++++++++SBS++++++++++++++++++++182/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:01,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:01,374 > 188
[DEBUG|collector_api.py:200] 2021-02-03 15:39:01,630 > ++++++++++++++SBS미디어홀딩스++++++++++++++++++++183/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:01,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:01,983 > 189
[DEBUG|collector_api.py:200] 2021-02-03 15:39:02,240 > ++++++++++++++SK텔레콤++++++++++++++++++++184/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:02,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:02,590 > 190
[DEBUG|collector_api.py:200] 2021-02-03 15:39:02,864 > ++++++++++++++강원랜드++++++++++++++++++++185/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:02,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:03,199 > 191
[DEBUG|collector_api.py:200] 2021-02-03 15:39:03,450 > ++++++++++++++교보증권++++++++++++++++++++186/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:03,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:03,807 > 192
[DEBUG|collector_api.py:200] 2021-02-03 15:39:04,072 > ++++++++++++++국제약품++++++++++++++++++++187/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:04,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:04,416 > 193
[DEBUG|collector_api.py:200] 2021-02-03 15:39:04,698 > ++++++++++++++금양++++++++++++++++++++188/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:04,698 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:05,023 > 194
[DEBUG|collector_api.py:200] 2021-02-03 15:39:05,298 > ++++++++++++++넥센타이어++++++++++++++++++++189/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:05,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:05,631 > 195
[DEBUG|collector_api.py:200] 2021-02-03 15:39:05,899 > ++++++++++++++녹십자홀딩스++++++++++++++++++++190/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:05,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:06,238 > 196
[DEBUG|collector_api.py:200] 2021-02-03 15:39:06,518 > ++++++++++++++농심홀딩스++++++++++++++++++++191/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:06,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:06,844 > 197
[DEBUG|collector_api.py:200] 2021-02-03 15:39:07,092 > ++++++++++++++다스코++++++++++++++++++++192/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:07,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:07,450 > 198
[DEBUG|collector_api.py:200] 2021-02-03 15:39:07,697 > ++++++++++++++대교++++++++++++++++++++193/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:07,698 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:08,059 > 199
[DEBUG|collector_api.py:200] 2021-02-03 15:39:08,311 > ++++++++++++++대림건설++++++++++++++++++++194/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:08,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:08,666 > 200
[DEBUG|collector_api.py:200] 2021-02-03 15:39:08,954 > ++++++++++++++대웅제약++++++++++++++++++++195/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:08,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:09,272 > 201
[DEBUG|collector_api.py:200] 2021-02-03 15:39:09,517 > ++++++++++++++더존비즈온++++++++++++++++++++196/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:09,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:09,879 > 202
[DEBUG|collector_api.py:200] 2021-02-03 15:39:10,151 > ++++++++++++++덕성++++++++++++++++++++197/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:10,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:10,486 > 203
[DEBUG|collector_api.py:200] 2021-02-03 15:39:10,757 > ++++++++++++++동방아그로++++++++++++++++++++198/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:10,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:11,094 > 204
[DEBUG|collector_api.py:200] 2021-02-03 15:39:11,363 > ++++++++++++++동서++++++++++++++++++++199/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:11,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:11,703 > 205
[DEBUG|collector_api.py:200] 2021-02-03 15:39:12,001 > ++++++++++++++동성코퍼레이션++++++++++++++++++++200/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:12,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:12,311 > 206
[DEBUG|collector_api.py:200] 2021-02-03 15:39:12,550 > ++++++++++++++동아쏘시오홀딩스++++++++++++++++++++201/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:12,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:12,919 > 207
[DEBUG|collector_api.py:200] 2021-02-03 15:39:13,199 > ++++++++++++++동양++++++++++++++++++++202/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:13,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:13,528 > 208
[DEBUG|collector_api.py:200] 2021-02-03 15:39:13,791 > ++++++++++++++동양생명++++++++++++++++++++203/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:13,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:14,134 > 209
[DEBUG|collector_api.py:200] 2021-02-03 15:39:14,392 > ++++++++++++++동원산업++++++++++++++++++++204/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:14,393 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:14,743 > 210
[DEBUG|collector_api.py:200] 2021-02-03 15:39:15,015 > ++++++++++++++디아이++++++++++++++++++++205/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:15,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:15,350 > 211
[DEBUG|collector_api.py:200] 2021-02-03 15:39:15,601 > ++++++++++++++디와이++++++++++++++++++++206/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:15,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:15,959 > 212
[DEBUG|collector_api.py:200] 2021-02-03 15:39:16,230 > ++++++++++++++디피씨++++++++++++++++++++207/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:16,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:16,567 > 213
[DEBUG|collector_api.py:200] 2021-02-03 15:39:16,850 > ++++++++++++++롯데정밀화학++++++++++++++++++++208/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:16,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:17,173 > 214
[DEBUG|collector_api.py:200] 2021-02-03 15:39:17,459 > ++++++++++++++롯데푸드++++++++++++++++++++209/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:17,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:17,781 > 215
[DEBUG|collector_api.py:200] 2021-02-03 15:39:18,049 > ++++++++++++++맥쿼리인프라++++++++++++++++++++210/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:18,050 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:18,388 > 216
[DEBUG|collector_api.py:200] 2021-02-03 15:39:18,623 > ++++++++++++++메타랩스++++++++++++++++++++211/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:18,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:18,996 > 217
[DEBUG|collector_api.py:200] 2021-02-03 15:39:19,258 > ++++++++++++++명문제약++++++++++++++++++++212/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:19,258 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:19,604 > 218
[DEBUG|collector_api.py:200] 2021-02-03 15:39:19,852 > ++++++++++++++모토닉++++++++++++++++++++213/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:19,852 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:20,210 > 219
[DEBUG|collector_api.py:200] 2021-02-03 15:39:20,465 > ++++++++++++++미래에셋맵스리츠++++++++++++++++++++214/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:20,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:20,819 > 220
[DEBUG|collector_api.py:200] 2021-02-03 15:39:21,001 > ++++++++++++++미원화학++++++++++++++++++++215/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:21,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:21,427 > 221
[DEBUG|collector_api.py:200] 2021-02-03 15:39:21,674 > ++++++++++++++범양건영++++++++++++++++++++216/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:21,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:22,033 > 222
[DEBUG|collector_api.py:200] 2021-02-03 15:39:22,281 > ++++++++++++++베트남개발1++++++++++++++++++++217/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:22,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:22,642 > 223
[DEBUG|collector_api.py:200] 2021-02-03 15:39:22,884 > ++++++++++++++빙그레++++++++++++++++++++218/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:22,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:23,248 > 224
[DEBUG|collector_api.py:200] 2021-02-03 15:39:23,493 > ++++++++++++++삼성바이오로직스++++++++++++++++++++219/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:23,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:23,855 > 225
[DEBUG|collector_api.py:200] 2021-02-03 15:39:24,093 > ++++++++++++++삼성에스디에스++++++++++++++++++++220/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:24,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:24,463 > 226
[DEBUG|collector_api.py:200] 2021-02-03 15:39:24,706 > ++++++++++++++삼성증권++++++++++++++++++++221/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:24,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:25,069 > 227
[DEBUG|collector_api.py:200] 2021-02-03 15:39:25,326 > ++++++++++++++삼성카드++++++++++++++++++++222/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:25,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:25,677 > 228
[DEBUG|collector_api.py:200] 2021-02-03 15:39:25,935 > ++++++++++++++삼양통상++++++++++++++++++++223/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:25,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:26,286 > 229
[DEBUG|collector_api.py:200] 2021-02-03 15:39:26,550 > ++++++++++++++삼영무역++++++++++++++++++++224/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:26,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:26,893 > 230
[DEBUG|collector_api.py:200] 2021-02-03 15:39:27,162 > ++++++++++++++삼정펄프++++++++++++++++++++225/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:27,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:27,502 > 231
[DEBUG|collector_api.py:200] 2021-02-03 15:39:27,779 > ++++++++++++++샘표식품++++++++++++++++++++226/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:27,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:28,109 > 232
[DEBUG|collector_api.py:200] 2021-02-03 15:39:28,368 > ++++++++++++++서연이화++++++++++++++++++++227/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:28,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:28,717 > 233
[DEBUG|collector_api.py:200] 2021-02-03 15:39:28,955 > ++++++++++++++성보화학++++++++++++++++++++228/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:28,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:29,325 > 234
[DEBUG|collector_api.py:200] 2021-02-03 15:39:29,576 > ++++++++++++++세아제강++++++++++++++++++++229/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:29,576 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:29,933 > 235
[DEBUG|collector_api.py:200] 2021-02-03 15:39:30,178 > ++++++++++++++센트랄모텍++++++++++++++++++++230/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:30,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:30,539 > 236
[DEBUG|collector_api.py:200] 2021-02-03 15:39:30,731 > ++++++++++++++솔루스첨단소재++++++++++++++++++++231/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:30,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:31,147 > 237
[DEBUG|collector_api.py:200] 2021-02-03 15:39:31,338 > ++++++++++++++송원산업++++++++++++++++++++232/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:31,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:31,754 > 238
[DEBUG|collector_api.py:200] 2021-02-03 15:39:32,026 > ++++++++++++++신성이엔지++++++++++++++++++++233/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:32,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:32,361 > 239
[DEBUG|collector_api.py:200] 2021-02-03 15:39:32,618 > ++++++++++++++신세계인터내셔날++++++++++++++++++++234/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:32,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:32,968 > 240
[DEBUG|collector_api.py:200] 2021-02-03 15:39:33,226 > ++++++++++++++신세계푸드++++++++++++++++++++235/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:33,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:33,575 > 241
[DEBUG|collector_api.py:200] 2021-02-03 15:39:33,823 > ++++++++++++++신화실업++++++++++++++++++++236/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:33,823 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:34,181 > 242
[DEBUG|collector_api.py:200] 2021-02-03 15:39:34,433 > ++++++++++++++씨아이테크++++++++++++++++++++237/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:34,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:34,788 > 243
[DEBUG|collector_api.py:200] 2021-02-03 15:39:35,053 > ++++++++++++++아세아시멘트++++++++++++++++++++238/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:35,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:35,396 > 244
[DEBUG|collector_api.py:200] 2021-02-03 15:39:35,628 > ++++++++++++++애경산업++++++++++++++++++++239/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:35,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:36,003 > 245
[DEBUG|collector_api.py:200] 2021-02-03 15:39:36,264 > ++++++++++++++에이플러스에셋++++++++++++++++++++240/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:36,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:36,611 > 246
[DEBUG|collector_api.py:200] 2021-02-03 15:39:36,783 > ++++++++++++++NHN++++++++++++++++++++241/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:36,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:37,219 > 247
[DEBUG|collector_api.py:200] 2021-02-03 15:39:37,449 > ++++++++++++++유니켐++++++++++++++++++++242/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:37,449 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:37,827 > 248
[DEBUG|collector_api.py:200] 2021-02-03 15:39:38,095 > ++++++++++++++유양디앤유++++++++++++++++++++243/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:38,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:38,435 > 249
[DEBUG|collector_api.py:200] 2021-02-03 15:39:38,702 > ++++++++++++++유화증권++++++++++++++++++++244/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:38,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:39,043 > 250
[DEBUG|collector_api.py:200] 2021-02-03 15:39:39,328 > ++++++++++++++이구산업++++++++++++++++++++245/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:39,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:39,649 > 251
[DEBUG|collector_api.py:200] 2021-02-03 15:39:39,932 > ++++++++++++++이월드++++++++++++++++++++246/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:39,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:40,257 > 252
[DEBUG|collector_api.py:200] 2021-02-03 15:39:40,493 > ++++++++++++++일성신약++++++++++++++++++++247/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:40,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:40,865 > 253
[DEBUG|collector_api.py:200] 2021-02-03 15:39:41,136 > ++++++++++++++제이에스코퍼레이션++++++++++++++++++++248/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:41,137 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:41,471 > 254
[DEBUG|collector_api.py:200] 2021-02-03 15:39:41,738 > ++++++++++++++제이준코스메틱++++++++++++++++++++249/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:41,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:42,080 > 255
[DEBUG|collector_api.py:200] 2021-02-03 15:39:42,336 > ++++++++++++++조비++++++++++++++++++++250/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:42,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:42,687 > 256
[DEBUG|collector_api.py:200] 2021-02-03 15:39:43,015 > ++++++++++++++조선선재++++++++++++++++++++251/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:43,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:43,293 > 257
[DEBUG|collector_api.py:200] 2021-02-03 15:39:43,550 > ++++++++++++++종근당바이오++++++++++++++++++++252/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:43,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:43,900 > 258
[DEBUG|collector_api.py:200] 2021-02-03 15:39:44,144 > ++++++++++++++지누스++++++++++++++++++++253/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:44,144 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:44,507 > 259
[DEBUG|collector_api.py:200] 2021-02-03 15:39:44,743 > ++++++++++++++진양화학++++++++++++++++++++254/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:44,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:45,117 > 260
[DEBUG|collector_api.py:200] 2021-02-03 15:39:45,366 > ++++++++++++++케이탑리츠++++++++++++++++++++255/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:45,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:45,725 > 261
[DEBUG|collector_api.py:200] 2021-02-03 15:39:45,954 > ++++++++++++++코람코에너지리츠++++++++++++++++++++256/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:45,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:46,331 > 262
[DEBUG|collector_api.py:200] 2021-02-03 15:39:46,498 > ++++++++++++++코스모신소재++++++++++++++++++++257/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:46,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:46,938 > 263
[DEBUG|collector_api.py:200] 2021-02-03 15:39:47,199 > ++++++++++++++코웨이++++++++++++++++++++258/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:47,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:47,545 > 264
[DEBUG|collector_api.py:200] 2021-02-03 15:39:47,825 > ++++++++++++++쿠쿠홈시스++++++++++++++++++++259/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:47,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:48,153 > 265
[DEBUG|collector_api.py:200] 2021-02-03 15:39:48,381 > ++++++++++++++키위미디어그룹++++++++++++++++++++260/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:48,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:48,760 > 266
[DEBUG|collector_api.py:200] 2021-02-03 15:39:49,020 > ++++++++++++++태평양물산++++++++++++++++++++261/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:49,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:49,367 > 267
[DEBUG|collector_api.py:200] 2021-02-03 15:39:49,619 > ++++++++++++++테이팩스++++++++++++++++++++262/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:49,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:49,975 > 268
[DEBUG|collector_api.py:200] 2021-02-03 15:39:50,239 > ++++++++++++++텔코웨어++++++++++++++++++++263/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:50,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:50,582 > 269
[DEBUG|collector_api.py:200] 2021-02-03 15:39:50,818 > ++++++++++++++티와이홀딩스++++++++++++++++++++264/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:50,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:51,190 > 270
[DEBUG|collector_api.py:200] 2021-02-03 15:39:51,351 > ++++++++++++++팜스코++++++++++++++++++++265/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:51,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:51,797 > 271
[DEBUG|collector_api.py:200] 2021-02-03 15:39:52,060 > ++++++++++++++퍼시스++++++++++++++++++++266/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:52,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:52,404 > 272
[DEBUG|collector_api.py:200] 2021-02-03 15:39:52,648 > ++++++++++++++풍산홀딩스++++++++++++++++++++267/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:52,648 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:53,011 > 273
[DEBUG|collector_api.py:200] 2021-02-03 15:39:53,292 > ++++++++++++++하이스틸++++++++++++++++++++268/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:53,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:53,619 > 274
[DEBUG|collector_api.py:200] 2021-02-03 15:39:53,897 > ++++++++++++++하이트진로++++++++++++++++++++269/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:53,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:54,228 > 275
[DEBUG|collector_api.py:200] 2021-02-03 15:39:54,479 > ++++++++++++++한국석유++++++++++++++++++++270/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:54,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:54,836 > 276
[DEBUG|collector_api.py:200] 2021-02-03 15:39:55,109 > ++++++++++++++한국수출포장++++++++++++++++++++271/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:55,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:55,444 > 277
[DEBUG|collector_api.py:200] 2021-02-03 15:39:55,709 > ++++++++++++++한국자산신탁++++++++++++++++++++272/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:55,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:56,051 > 278
[DEBUG|collector_api.py:200] 2021-02-03 15:39:56,302 > ++++++++++++++한국주강++++++++++++++++++++273/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:56,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:56,660 > 279
[DEBUG|collector_api.py:200] 2021-02-03 15:39:56,910 > ++++++++++++++한국콜마홀딩스++++++++++++++++++++274/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:56,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:57,267 > 280
[DEBUG|collector_api.py:200] 2021-02-03 15:39:57,519 > ++++++++++++++한국항공우주++++++++++++++++++++275/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:57,519 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:57,875 > 281
[DEBUG|collector_api.py:200] 2021-02-03 15:39:58,149 > ++++++++++++++한라홀딩스++++++++++++++++++++276/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:58,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:58,481 > 282
[DEBUG|collector_api.py:200] 2021-02-03 15:39:58,715 > ++++++++++++++한미사이언스++++++++++++++++++++277/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:58,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:59,088 > 283
[DEBUG|collector_api.py:200] 2021-02-03 15:39:59,354 > ++++++++++++++한샘++++++++++++++++++++278/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:59,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:39:59,697 > 284
[DEBUG|collector_api.py:200] 2021-02-03 15:39:59,963 > ++++++++++++++한솔홀딩스++++++++++++++++++++279/2888
[DEBUG|open_api.py:656] 2021-02-03 15:39:59,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:00,306 > 285
[DEBUG|collector_api.py:200] 2021-02-03 15:40:00,563 > ++++++++++++++한신기계++++++++++++++++++++280/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:00,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:00,915 > 286
[DEBUG|collector_api.py:200] 2021-02-03 15:40:01,217 > ++++++++++++++한화++++++++++++++++++++281/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:01,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:01,523 > 287
[DEBUG|collector_api.py:200] 2021-02-03 15:40:01,791 > ++++++++++++++한화에어로스페이스++++++++++++++++++++282/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:01,792 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:02,131 > 288
[DEBUG|collector_api.py:200] 2021-02-03 15:40:02,394 > ++++++++++++++현대차++++++++++++++++++++283/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:02,395 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:02,737 > 289
[DEBUG|collector_api.py:200] 2021-02-03 15:40:03,015 > ++++++++++++++현대퓨처넷++++++++++++++++++++284/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:03,016 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:03,345 > 290
[DEBUG|collector_api.py:200] 2021-02-03 15:40:03,584 > ++++++++++++++효성ITX++++++++++++++++++++285/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:03,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:03,954 > 291
[DEBUG|collector_api.py:200] 2021-02-03 15:40:04,221 > ++++++++++++++휴니드++++++++++++++++++++286/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:04,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:04,563 > 292
[DEBUG|collector_api.py:200] 2021-02-03 15:40:04,820 > ++++++++++++++CJ대한통운++++++++++++++++++++287/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:04,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:05,170 > 293
[DEBUG|collector_api.py:200] 2021-02-03 15:40:05,430 > ++++++++++++++DSR제강++++++++++++++++++++288/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:05,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:05,776 > 294
[DEBUG|collector_api.py:200] 2021-02-03 15:40:06,034 > ++++++++++++++ESR켄달스퀘어리츠++++++++++++++++++++289/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:06,034 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:06,384 > 295
[DEBUG|collector_api.py:200] 2021-02-03 15:40:06,543 > ++++++++++++++GKL++++++++++++++++++++290/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:06,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:06,992 > 296
[DEBUG|collector_api.py:200] 2021-02-03 15:40:07,232 > ++++++++++++++JW중외제약++++++++++++++++++++291/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:07,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:07,599 > 297
[DEBUG|collector_api.py:200] 2021-02-03 15:40:07,870 > ++++++++++++++KPX홀딩스++++++++++++++++++++292/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:07,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:08,207 > 298
[DEBUG|collector_api.py:200] 2021-02-03 15:40:08,443 > ++++++++++++++KSS해운++++++++++++++++++++293/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:08,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:08,816 > 299
[DEBUG|collector_api.py:200] 2021-02-03 15:40:09,064 > ++++++++++++++LF++++++++++++++++++++294/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:09,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:09,423 > 300
[DEBUG|collector_api.py:200] 2021-02-03 15:40:09,674 > ++++++++++++++LG하우시스++++++++++++++++++++295/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:09,675 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:10,032 > 301
[DEBUG|collector_api.py:200] 2021-02-03 15:40:10,277 > ++++++++++++++LG화학++++++++++++++++++++296/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:10,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:10,640 > 302
[DEBUG|collector_api.py:200] 2021-02-03 15:40:10,882 > ++++++++++++++LIG넥스원++++++++++++++++++++297/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:10,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:11,248 > 303
[DEBUG|collector_api.py:200] 2021-02-03 15:40:11,475 > ++++++++++++++LS++++++++++++++++++++298/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:11,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:11,856 > 304
[DEBUG|collector_api.py:200] 2021-02-03 15:40:12,146 > ++++++++++++++NAVER++++++++++++++++++++299/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:12,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:12,464 > 305
[DEBUG|collector_api.py:200] 2021-02-03 15:40:12,737 > ++++++++++++++NICE++++++++++++++++++++300/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:12,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:13,072 > 306
[DEBUG|collector_api.py:200] 2021-02-03 15:40:13,310 > ++++++++++++++NI스틸++++++++++++++++++++301/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:13,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:13,679 > 307
[DEBUG|collector_api.py:200] 2021-02-03 15:40:13,971 > ++++++++++++++SGC에너지++++++++++++++++++++302/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:13,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:14,287 > 308
[DEBUG|collector_api.py:200] 2021-02-03 15:40:14,547 > ++++++++++++++SH에너지화학++++++++++++++++++++303/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:14,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:14,894 > 309
[DEBUG|collector_api.py:200] 2021-02-03 15:40:15,176 > ++++++++++++++SK증권++++++++++++++++++++304/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:15,177 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:15,500 > 310
[DEBUG|collector_api.py:200] 2021-02-03 15:40:15,767 > ++++++++++++++SK하이닉스++++++++++++++++++++305/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:15,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:16,108 > 311
[DEBUG|collector_api.py:200] 2021-02-03 15:40:16,365 > ++++++++++++++경인양행++++++++++++++++++++306/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:16,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:16,716 > 312
[DEBUG|collector_api.py:200] 2021-02-03 15:40:16,976 > ++++++++++++++경인전자++++++++++++++++++++307/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:16,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:17,325 > 313
[DEBUG|collector_api.py:200] 2021-02-03 15:40:17,580 > ++++++++++++++국보++++++++++++++++++++308/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:17,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:17,931 > 314
[DEBUG|collector_api.py:200] 2021-02-03 15:40:18,206 > ++++++++++++++기신정기++++++++++++++++++++309/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:18,206 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:18,540 > 315
[DEBUG|collector_api.py:200] 2021-02-03 15:40:18,784 > ++++++++++++++녹십자++++++++++++++++++++310/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:18,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:19,148 > 316
[DEBUG|collector_api.py:200] 2021-02-03 15:40:19,419 > ++++++++++++++대덕++++++++++++++++++++311/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:19,420 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:19,755 > 317
[DEBUG|collector_api.py:200] 2021-02-03 15:40:20,035 > ++++++++++++++대동전자++++++++++++++++++++312/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:20,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:20,364 > 318
[DEBUG|collector_api.py:200] 2021-02-03 15:40:20,619 > ++++++++++++++대림B&Co++++++++++++++++++++313/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:20,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:20,971 > 319
[DEBUG|collector_api.py:200] 2021-02-03 15:40:21,235 > ++++++++++++++대양금속++++++++++++++++++++314/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:21,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:21,578 > 320
[DEBUG|collector_api.py:200] 2021-02-03 15:40:21,842 > ++++++++++++++대창++++++++++++++++++++315/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:21,842 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:22,185 > 321
[DEBUG|collector_api.py:200] 2021-02-03 15:40:22,439 > ++++++++++++++동국제강++++++++++++++++++++316/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:22,440 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:22,793 > 322
[DEBUG|collector_api.py:200] 2021-02-03 15:40:23,094 > ++++++++++++++동양물산++++++++++++++++++++317/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:23,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:23,400 > 323
[DEBUG|collector_api.py:200] 2021-02-03 15:40:23,669 > ++++++++++++++동화약품++++++++++++++++++++318/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:23,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:24,008 > 324
[DEBUG|collector_api.py:200] 2021-02-03 15:40:24,276 > ++++++++++++++두산중공업++++++++++++++++++++319/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:24,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:24,616 > 325
[DEBUG|collector_api.py:200] 2021-02-03 15:40:24,879 > ++++++++++++++DI동일++++++++++++++++++++320/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:24,879 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:25,223 > 326
[DEBUG|collector_api.py:200] 2021-02-03 15:40:25,483 > ++++++++++++++디아이씨++++++++++++++++++++321/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:25,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:25,830 > 327
[DEBUG|collector_api.py:200] 2021-02-03 15:40:26,083 > ++++++++++++++롯데관광개발++++++++++++++++++++322/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:26,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:26,439 > 328
[DEBUG|collector_api.py:200] 2021-02-03 15:40:26,689 > ++++++++++++++맵스리얼티1++++++++++++++++++++323/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:26,690 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:27,047 > 329
[DEBUG|collector_api.py:200] 2021-02-03 15:40:27,297 > ++++++++++++++명신산업++++++++++++++++++++324/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:27,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:27,655 > 330
[DEBUG|collector_api.py:200] 2021-02-03 15:40:27,820 > ++++++++++++++무학++++++++++++++++++++325/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:27,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:28,263 > 331
[DEBUG|collector_api.py:200] 2021-02-03 15:40:28,532 > ++++++++++++++미래아이앤지++++++++++++++++++++326/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:28,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:28,871 > 332
[DEBUG|collector_api.py:200] 2021-02-03 15:40:29,133 > ++++++++++++++바다로19호++++++++++++++++++++327/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:29,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:29,478 > 333
[DEBUG|collector_api.py:200] 2021-02-03 15:40:29,756 > ++++++++++++++부산주공++++++++++++++++++++328/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:29,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:30,085 > 334
[DEBUG|collector_api.py:200] 2021-02-03 15:40:30,353 > ++++++++++++++비케이탑스++++++++++++++++++++329/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:30,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:30,693 > 335
[DEBUG|collector_api.py:200] 2021-02-03 15:40:30,967 > ++++++++++++++사조씨푸드++++++++++++++++++++330/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:30,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:31,300 > 336
[DEBUG|collector_api.py:200] 2021-02-03 15:40:31,538 > ++++++++++++++삼성물산++++++++++++++++++++331/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:31,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:31,907 > 337
[DEBUG|collector_api.py:200] 2021-02-03 15:40:32,159 > ++++++++++++++삼성전자++++++++++++++++++++332/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:32,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:32,515 > 338
[DEBUG|collector_api.py:200] 2021-02-03 15:40:32,771 > ++++++++++++++삼성제약++++++++++++++++++++333/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:32,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:33,122 > 339
[DEBUG|collector_api.py:200] 2021-02-03 15:40:33,388 > ++++++++++++++삼원강재++++++++++++++++++++334/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:33,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:33,730 > 340
[DEBUG|collector_api.py:200] 2021-02-03 15:40:33,994 > ++++++++++++++삼익THK++++++++++++++++++++335/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:33,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:34,338 > 341
[DEBUG|collector_api.py:200] 2021-02-03 15:40:34,586 > ++++++++++++++삼일제약++++++++++++++++++++336/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:34,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:34,945 > 342
[DEBUG|collector_api.py:200] 2021-02-03 15:40:35,205 > ++++++++++++++삼진제약++++++++++++++++++++337/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:35,205 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:35,552 > 343
[DEBUG|collector_api.py:200] 2021-02-03 15:40:35,807 > ++++++++++++++삼화왕관++++++++++++++++++++338/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:35,808 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:36,159 > 344
[DEBUG|collector_api.py:200] 2021-02-03 15:40:36,405 > ++++++++++++++서연++++++++++++++++++++339/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:36,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:36,768 > 345
[DEBUG|collector_api.py:200] 2021-02-03 15:40:37,032 > ++++++++++++++선창산업++++++++++++++++++++340/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:37,032 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:37,375 > 346
[DEBUG|collector_api.py:200] 2021-02-03 15:40:37,655 > ++++++++++++++성신양회++++++++++++++++++++341/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:37,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:37,982 > 347
[DEBUG|collector_api.py:200] 2021-02-03 15:40:38,263 > ++++++++++++++세기상사++++++++++++++++++++342/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:38,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:38,590 > 348
[DEBUG|collector_api.py:200] 2021-02-03 15:40:38,865 > ++++++++++++++세아특수강++++++++++++++++++++343/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:38,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:39,199 > 349
[DEBUG|collector_api.py:200] 2021-02-03 15:40:39,429 > ++++++++++++++세우글로벌++++++++++++++++++++344/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:39,429 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:39,808 > 350
[DEBUG|collector_api.py:200] 2021-02-03 15:40:40,078 > ++++++++++++++세원정공++++++++++++++++++++345/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:40,079 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:40,415 > 351
[DEBUG|collector_api.py:200] 2021-02-03 15:40:40,672 > ++++++++++++++세진중공업++++++++++++++++++++346/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:40,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:41,023 > 352
[DEBUG|collector_api.py:200] 2021-02-03 15:40:41,265 > ++++++++++++++세화아이엠씨++++++++++++++++++++347/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:41,266 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:41,629 > 353
[DEBUG|collector_api.py:200] 2021-02-03 15:40:41,857 > ++++++++++++++셀트리온++++++++++++++++++++348/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:41,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:42,236 > 354
[DEBUG|collector_api.py:200] 2021-02-03 15:40:42,474 > ++++++++++++++신라교역++++++++++++++++++++349/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:42,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:42,845 > 355
[DEBUG|collector_api.py:200] 2021-02-03 15:40:43,104 > ++++++++++++++신성통상++++++++++++++++++++350/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:43,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:43,454 > 356
[DEBUG|collector_api.py:200] 2021-02-03 15:40:43,724 > ++++++++++++++신세계++++++++++++++++++++351/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:43,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:44,061 > 357
[DEBUG|collector_api.py:200] 2021-02-03 15:40:44,332 > ++++++++++++++아모레퍼시픽++++++++++++++++++++352/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:44,333 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:44,669 > 358
[DEBUG|collector_api.py:200] 2021-02-03 15:40:44,942 > ++++++++++++++아세아++++++++++++++++++++353/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:44,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:45,277 > 359
[DEBUG|collector_api.py:200] 2021-02-03 15:40:45,575 > ++++++++++++++아이에스동서++++++++++++++++++++354/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:45,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:45,884 > 360
[DEBUG|collector_api.py:200] 2021-02-03 15:40:46,164 > ++++++++++++++SJM++++++++++++++++++++355/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:46,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:46,490 > 361
[DEBUG|collector_api.py:200] 2021-02-03 15:40:46,745 > ++++++++++++++에이리츠++++++++++++++++++++356/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:46,746 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:47,098 > 362
[DEBUG|collector_api.py:200] 2021-02-03 15:40:47,342 > ++++++++++++++엔에스쇼핑++++++++++++++++++++357/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:47,342 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:47,705 > 363
[DEBUG|collector_api.py:200] 2021-02-03 15:40:47,952 > ++++++++++++++엔케이++++++++++++++++++++358/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:47,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:48,313 > 364
[DEBUG|collector_api.py:200] 2021-02-03 15:40:48,554 > ++++++++++++++NPC++++++++++++++++++++359/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:48,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:48,920 > 365
[DEBUG|collector_api.py:200] 2021-02-03 15:40:49,176 > ++++++++++++++영원무역++++++++++++++++++++360/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:49,176 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:49,527 > 366
[DEBUG|collector_api.py:200] 2021-02-03 15:40:49,787 > ++++++++++++++영원무역홀딩스++++++++++++++++++++361/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:49,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:50,134 > 367
[DEBUG|collector_api.py:200] 2021-02-03 15:40:50,394 > ++++++++++++++우리들휴브레인++++++++++++++++++++362/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:50,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:50,741 > 368
[DEBUG|collector_api.py:200] 2021-02-03 15:40:51,005 > ++++++++++++++우신시스템++++++++++++++++++++363/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:51,006 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:51,348 > 369
[DEBUG|collector_api.py:200] 2021-02-03 15:40:51,593 > ++++++++++++++우진++++++++++++++++++++364/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:51,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:51,955 > 370
[DEBUG|collector_api.py:200] 2021-02-03 15:40:52,210 > ++++++++++++++우진플라임++++++++++++++++++++365/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:52,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:52,562 > 371
[DEBUG|collector_api.py:200] 2021-02-03 15:40:52,807 > ++++++++++++++유니드++++++++++++++++++++366/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:52,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:53,168 > 372
[DEBUG|collector_api.py:200] 2021-02-03 15:40:53,407 > ++++++++++++++유진투자증권++++++++++++++++++++367/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:53,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:53,775 > 373
[DEBUG|collector_api.py:200] 2021-02-03 15:40:54,055 > ++++++++++++++이건산업++++++++++++++++++++368/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:54,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:54,383 > 374
[DEBUG|collector_api.py:200] 2021-02-03 15:40:54,639 > ++++++++++++++이노션++++++++++++++++++++369/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:54,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:54,990 > 375
[DEBUG|collector_api.py:200] 2021-02-03 15:40:55,235 > ++++++++++++++이연제약++++++++++++++++++++370/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:55,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:55,597 > 376
[DEBUG|collector_api.py:200] 2021-02-03 15:40:55,864 > ++++++++++++++인스코비++++++++++++++++++++371/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:55,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:56,204 > 377
[DEBUG|collector_api.py:200] 2021-02-03 15:40:56,455 > ++++++++++++++잇츠한불++++++++++++++++++++372/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:56,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:56,811 > 378
[DEBUG|collector_api.py:200] 2021-02-03 15:40:57,051 > ++++++++++++++조광페인트++++++++++++++++++++373/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:57,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:57,418 > 379
[DEBUG|collector_api.py:200] 2021-02-03 15:40:57,684 > ++++++++++++++조선내화++++++++++++++++++++374/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:57,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:58,025 > 380
[DEBUG|collector_api.py:200] 2021-02-03 15:40:58,294 > ++++++++++++++진에어++++++++++++++++++++375/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:58,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:58,632 > 381
[DEBUG|collector_api.py:200] 2021-02-03 15:40:58,886 > ++++++++++++++참엔지니어링++++++++++++++++++++376/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:58,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:59,241 > 382
[DEBUG|collector_api.py:200] 2021-02-03 15:40:59,504 > ++++++++++++++케이씨씨글라스++++++++++++++++++++377/2888
[DEBUG|open_api.py:656] 2021-02-03 15:40:59,504 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:40:59,848 > 383
[DEBUG|collector_api.py:200] 2021-02-03 15:41:00,057 > ++++++++++++++코오롱글로벌++++++++++++++++++++378/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:00,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:00,455 > 384
[DEBUG|collector_api.py:200] 2021-02-03 15:41:00,750 > ++++++++++++++태경케미컬++++++++++++++++++++379/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:00,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:01,064 > 385
[DEBUG|collector_api.py:200] 2021-02-03 15:41:01,330 > ++++++++++++++토니모리++++++++++++++++++++380/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:01,331 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:01,671 > 386
[DEBUG|collector_api.py:200] 2021-02-03 15:41:01,909 > ++++++++++++++페이퍼코리아++++++++++++++++++++381/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:01,909 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:02,279 > 387
[DEBUG|collector_api.py:200] 2021-02-03 15:41:02,528 > ++++++++++++++POSCO++++++++++++++++++++382/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:02,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:02,887 > 388
[DEBUG|collector_api.py:200] 2021-02-03 15:41:03,155 > ++++++++++++++폴루스바이오팜++++++++++++++++++++383/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:03,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:03,496 > 389
[DEBUG|collector_api.py:200] 2021-02-03 15:41:03,773 > ++++++++++++++하나제약++++++++++++++++++++384/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:03,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:04,103 > 390
[DEBUG|collector_api.py:200] 2021-02-03 15:41:04,364 > ++++++++++++++한국쉘석유++++++++++++++++++++385/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:04,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:04,712 > 391
[DEBUG|collector_api.py:200] 2021-02-03 15:41:04,996 > ++++++++++++++한국철강++++++++++++++++++++386/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:04,997 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:05,318 > 392
[DEBUG|collector_api.py:200] 2021-02-03 15:41:05,559 > ++++++++++++++한국화장품제조++++++++++++++++++++387/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:05,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:05,926 > 393
[DEBUG|collector_api.py:200] 2021-02-03 15:41:06,192 > ++++++++++++++한미글로벌++++++++++++++++++++388/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:06,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:06,533 > 394
[DEBUG|collector_api.py:200] 2021-02-03 15:41:06,810 > ++++++++++++++한솔PNS++++++++++++++++++++389/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:06,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:07,140 > 395
[DEBUG|collector_api.py:200] 2021-02-03 15:41:07,405 > ++++++++++++++한양증권++++++++++++++++++++390/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:07,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:07,748 > 396
[DEBUG|collector_api.py:200] 2021-02-03 15:41:08,027 > ++++++++++++++한진중공업++++++++++++++++++++391/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:08,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:08,356 > 397
[DEBUG|collector_api.py:200] 2021-02-03 15:41:08,598 > ++++++++++++++한진중공업홀딩스++++++++++++++++++++392/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:08,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:08,964 > 398
[DEBUG|collector_api.py:200] 2021-02-03 15:41:09,243 > ++++++++++++++현대일렉트릭++++++++++++++++++++393/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:09,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:09,573 > 399
[DEBUG|collector_api.py:200] 2021-02-03 15:41:09,816 > ++++++++++++++현대제철++++++++++++++++++++394/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:09,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:10,180 > 400
[DEBUG|collector_api.py:200] 2021-02-03 15:41:10,432 > ++++++++++++++황금에스티++++++++++++++++++++395/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:10,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:10,788 > 401
[DEBUG|collector_api.py:200] 2021-02-03 15:41:11,095 > ++++++++++++++AJ네트웍스++++++++++++++++++++396/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:11,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:11,395 > 402
[DEBUG|collector_api.py:200] 2021-02-03 15:41:11,629 > ++++++++++++++AK홀딩스++++++++++++++++++++397/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:11,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:12,003 > 403
[DEBUG|collector_api.py:200] 2021-02-03 15:41:12,267 > ++++++++++++++CJ++++++++++++++++++++398/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:12,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:12,612 > 404
[DEBUG|collector_api.py:200] 2021-02-03 15:41:12,882 > ++++++++++++++CJ씨푸드++++++++++++++++++++399/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:12,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:13,220 > 405
[DEBUG|collector_api.py:200] 2021-02-03 15:41:13,477 > ++++++++++++++DB금융투자++++++++++++++++++++400/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:13,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:13,828 > 406
[DEBUG|collector_api.py:200] 2021-02-03 15:41:14,096 > ++++++++++++++DGB금융지주++++++++++++++++++++401/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:14,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:14,434 > 407
[DEBUG|collector_api.py:200] 2021-02-03 15:41:14,688 > ++++++++++++++E1++++++++++++++++++++402/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:14,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:15,041 > 408
[DEBUG|collector_api.py:200] 2021-02-03 15:41:15,302 > ++++++++++++++F&F++++++++++++++++++++403/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:15,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:15,649 > 409
[DEBUG|collector_api.py:200] 2021-02-03 15:41:15,942 > ++++++++++++++KEC++++++++++++++++++++404/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:15,943 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:16,256 > 410
[DEBUG|collector_api.py:200] 2021-02-03 15:41:16,494 > ++++++++++++++KISCO홀딩스++++++++++++++++++++405/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:16,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:16,864 > 411
[DEBUG|collector_api.py:200] 2021-02-03 15:41:17,150 > ++++++++++++++LG++++++++++++++++++++406/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:17,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:17,472 > 412
[DEBUG|collector_api.py:200] 2021-02-03 15:41:17,769 > ++++++++++++++LG디스플레이++++++++++++++++++++407/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:17,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:18,082 > 413
[DEBUG|collector_api.py:200] 2021-02-03 15:41:18,328 > ++++++++++++++LS전선아시아++++++++++++++++++++408/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:18,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:18,689 > 414
[DEBUG|collector_api.py:200] 2021-02-03 15:41:18,944 > ++++++++++++++NH프라임리츠++++++++++++++++++++409/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:18,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:19,299 > 415
[DEBUG|collector_api.py:200] 2021-02-03 15:41:19,497 > ++++++++++++++S&T중공업++++++++++++++++++++410/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:19,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:19,906 > 416
[DEBUG|collector_api.py:200] 2021-02-03 15:41:20,173 > ++++++++++++++S&T홀딩스++++++++++++++++++++411/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:20,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:20,513 > 417
[DEBUG|collector_api.py:200] 2021-02-03 15:41:20,795 > ++++++++++++++S-Oil++++++++++++++++++++412/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:20,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:21,121 > 418
[DEBUG|collector_api.py:200] 2021-02-03 15:41:21,375 > ++++++++++++++SK네트웍스++++++++++++++++++++413/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:21,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:21,728 > 419
[DEBUG|collector_api.py:200] 2021-02-03 15:41:21,995 > ++++++++++++++SK케미칼++++++++++++++++++++414/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:21,996 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:22,337 > 420
[DEBUG|collector_api.py:200] 2021-02-03 15:41:22,584 > ++++++++++++++경동인베스트++++++++++++++++++++415/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:22,584 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:22,944 > 421
[DEBUG|collector_api.py:200] 2021-02-03 15:41:23,205 > ++++++++++++++계룡건설++++++++++++++++++++416/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:23,206 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:23,552 > 422
[DEBUG|collector_api.py:200] 2021-02-03 15:41:23,800 > ++++++++++++++국동++++++++++++++++++++417/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:23,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:24,158 > 423
[DEBUG|collector_api.py:200] 2021-02-03 15:41:24,408 > ++++++++++++++남양유업++++++++++++++++++++418/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:24,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:24,766 > 424
[DEBUG|collector_api.py:200] 2021-02-03 15:41:25,038 > ++++++++++++++남해화학++++++++++++++++++++419/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:25,038 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:25,373 > 425
[DEBUG|collector_api.py:200] 2021-02-03 15:41:25,638 > ++++++++++++++노루페인트++++++++++++++++++++420/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:25,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:25,981 > 426
[DEBUG|collector_api.py:200] 2021-02-03 15:41:26,225 > ++++++++++++++대림통상++++++++++++++++++++421/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:26,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:26,587 > 427
[DEBUG|collector_api.py:200] 2021-02-03 15:41:26,849 > ++++++++++++++대상++++++++++++++++++++422/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:26,850 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:27,194 > 428
[DEBUG|collector_api.py:200] 2021-02-03 15:41:27,454 > ++++++++++++++대성홀딩스++++++++++++++++++++423/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:27,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:27,802 > 429
[DEBUG|collector_api.py:200] 2021-02-03 15:41:28,053 > ++++++++++++++대한제강++++++++++++++++++++424/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:28,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:28,410 > 430
[DEBUG|collector_api.py:200] 2021-02-03 15:41:28,685 > ++++++++++++++대호에이엘++++++++++++++++++++425/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:28,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:29,017 > 431
[DEBUG|collector_api.py:200] 2021-02-03 15:41:29,268 > ++++++++++++++덴티움++++++++++++++++++++426/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:29,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:29,624 > 432
[DEBUG|collector_api.py:200] 2021-02-03 15:41:29,862 > ++++++++++++++동원F&B++++++++++++++++++++427/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:29,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:30,231 > 433
[DEBUG|collector_api.py:200] 2021-02-03 15:41:30,474 > ++++++++++++++두산퓨얼셀++++++++++++++++++++428/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:30,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:30,839 > 434
[DEBUG|collector_api.py:200] 2021-02-03 15:41:31,043 > ++++++++++++++만호제강++++++++++++++++++++429/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:31,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:31,446 > 435
[DEBUG|collector_api.py:200] 2021-02-03 15:41:31,757 > ++++++++++++++모나미++++++++++++++++++++430/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:31,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:32,053 > 436
[DEBUG|collector_api.py:200] 2021-02-03 15:41:32,302 > ++++++++++++++문배철강++++++++++++++++++++431/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:32,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:32,661 > 437
[DEBUG|collector_api.py:200] 2021-02-03 15:41:32,931 > ++++++++++++++미래에셋생명++++++++++++++++++++432/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:32,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:33,268 > 438
[DEBUG|collector_api.py:200] 2021-02-03 15:41:33,497 > ++++++++++++++미창석유++++++++++++++++++++433/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:33,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:33,875 > 439
[DEBUG|collector_api.py:200] 2021-02-03 15:41:34,141 > ++++++++++++++백광산업++++++++++++++++++++434/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:34,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:34,482 > 440
[DEBUG|collector_api.py:200] 2021-02-03 15:41:34,748 > ++++++++++++++벽산++++++++++++++++++++435/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:34,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:35,089 > 441
[DEBUG|collector_api.py:200] 2021-02-03 15:41:35,360 > ++++++++++++++부국철강++++++++++++++++++++436/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:35,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:35,698 > 442
[DEBUG|collector_api.py:200] 2021-02-03 15:41:35,966 > ++++++++++++++부산가스++++++++++++++++++++437/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:35,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:36,305 > 443
[DEBUG|collector_api.py:200] 2021-02-03 15:41:36,558 > ++++++++++++++비비안++++++++++++++++++++438/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:36,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:36,913 > 444
[DEBUG|collector_api.py:200] 2021-02-03 15:41:37,190 > ++++++++++++++비상교육++++++++++++++++++++439/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:37,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:37,520 > 445
[DEBUG|collector_api.py:200] 2021-02-03 15:41:37,755 > ++++++++++++++사조산업++++++++++++++++++++440/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:37,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:38,128 > 446
[DEBUG|collector_api.py:200] 2021-02-03 15:41:38,375 > ++++++++++++++삼부토건++++++++++++++++++++441/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:38,376 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:38,735 > 447
[DEBUG|collector_api.py:200] 2021-02-03 15:41:38,995 > ++++++++++++++삼성공조++++++++++++++++++++442/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:38,996 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:39,343 > 448
[DEBUG|collector_api.py:200] 2021-02-03 15:41:39,613 > ++++++++++++++삼성생명++++++++++++++++++++443/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:39,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:39,950 > 449
[DEBUG|collector_api.py:200] 2021-02-03 15:41:40,199 > ++++++++++++++삼성전기++++++++++++++++++++444/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:40,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:40,558 > 450
[DEBUG|collector_api.py:200] 2021-02-03 15:41:40,825 > ++++++++++++++삼양사++++++++++++++++++++445/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:40,825 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:41,164 > 451
[DEBUG|collector_api.py:200] 2021-02-03 15:41:41,394 > ++++++++++++++삼양패키징++++++++++++++++++++446/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:41,395 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:41,772 > 452
[DEBUG|collector_api.py:200] 2021-02-03 15:41:42,022 > ++++++++++++++삼일씨엔에스++++++++++++++++++++447/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:42,022 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:42,379 > 453
[DEBUG|collector_api.py:200] 2021-02-03 15:41:42,606 > ++++++++++++++삼화전기++++++++++++++++++++448/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:42,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:42,986 > 454
[DEBUG|collector_api.py:200] 2021-02-03 15:41:43,237 > ++++++++++++++샘표++++++++++++++++++++449/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:43,238 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:43,593 > 455
[DEBUG|collector_api.py:200] 2021-02-03 15:41:43,854 > ++++++++++++++서흥++++++++++++++++++++450/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:43,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:44,200 > 456
[DEBUG|collector_api.py:200] 2021-02-03 15:41:44,462 > ++++++++++++++세아베스틸++++++++++++++++++++451/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:44,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:44,808 > 457
[DEBUG|collector_api.py:200] 2021-02-03 15:41:45,072 > ++++++++++++++세하++++++++++++++++++++452/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:45,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:45,416 > 458
[DEBUG|collector_api.py:200] 2021-02-03 15:41:45,674 > ++++++++++++++수산중공업++++++++++++++++++++453/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:45,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:46,023 > 459
[DEBUG|collector_api.py:200] 2021-02-03 15:41:46,293 > ++++++++++++++신세계건설++++++++++++++++++++454/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:46,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:46,630 > 460
[DEBUG|collector_api.py:200] 2021-02-03 15:41:46,876 > ++++++++++++++신영와코루++++++++++++++++++++455/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:46,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:47,237 > 461
[DEBUG|collector_api.py:200] 2021-02-03 15:41:47,535 > ++++++++++++++신영증권++++++++++++++++++++456/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:47,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:47,845 > 462
[DEBUG|collector_api.py:200] 2021-02-03 15:41:48,117 > ++++++++++++++신원++++++++++++++++++++457/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:48,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:48,452 > 463
[DEBUG|collector_api.py:200] 2021-02-03 15:41:48,721 > ++++++++++++++신풍제지++++++++++++++++++++458/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:48,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:49,059 > 464
[DEBUG|collector_api.py:200] 2021-02-03 15:41:49,339 > ++++++++++++++에스엘++++++++++++++++++++459/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:49,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:49,666 > 465
[DEBUG|collector_api.py:200] 2021-02-03 15:41:49,941 > ++++++++++++++에이프로젠 KIC++++++++++++++++++++460/2888
[DEBUG|open_api.py:656] 2021-02-03 15:41:49,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:41:50,273 > 466
[DEBUG|open_api.py:303] 2021-02-03 15:42:04,785 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:42:04,786 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:42:04,786 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:42:04,786 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:42:04,786 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:42:04,787 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:42:04,787 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:42:04,800 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:42:04,826 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:42:04,827 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:42:04,827 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:42:04,844 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:42:04,877 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 15:42:07,253 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-03 15:42:07,255 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 15:42:07,313 > ++++++++++++++에이프로젠 KIC++++++++++++++++++++460/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:07,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:07,315 > 1
[DEBUG|collector_api.py:200] 2021-02-03 15:42:08,385 > ++++++++++++++엘브이엠씨홀딩스++++++++++++++++++++461/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:08,386 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:08,387 > 2
[DEBUG|collector_api.py:200] 2021-02-03 15:42:08,627 > ++++++++++++++LS ELECTRIC++++++++++++++++++++462/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:08,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:08,995 > 3
[DEBUG|collector_api.py:200] 2021-02-03 15:42:09,261 > ++++++++++++++오리온++++++++++++++++++++463/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:09,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:09,603 > 4
[DEBUG|collector_api.py:200] 2021-02-03 15:42:09,835 > ++++++++++++++우리금융지주++++++++++++++++++++464/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:09,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:10,211 > 5
[DEBUG|collector_api.py:200] 2021-02-03 15:42:10,444 > ++++++++++++++우성사료++++++++++++++++++++465/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:10,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:10,821 > 6
[DEBUG|collector_api.py:200] 2021-02-03 15:42:11,075 > ++++++++++++++웰바이오텍++++++++++++++++++++466/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:11,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:11,428 > 7
[DEBUG|collector_api.py:200] 2021-02-03 15:42:11,710 > ++++++++++++++유니온++++++++++++++++++++467/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:11,711 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:12,036 > 8
[DEBUG|collector_api.py:200] 2021-02-03 15:42:12,292 > ++++++++++++++유안타증권++++++++++++++++++++468/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:12,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:12,644 > 9
[DEBUG|collector_api.py:200] 2021-02-03 15:42:12,903 > ++++++++++++++일진전기++++++++++++++++++++469/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:12,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:13,251 > 10
[DEBUG|collector_api.py:200] 2021-02-03 15:42:13,489 > ++++++++++++++조광피혁++++++++++++++++++++470/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:13,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:13,860 > 11
[DEBUG|collector_api.py:200] 2021-02-03 15:42:14,144 > ++++++++++++++조일알미늄++++++++++++++++++++471/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:14,144 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:14,467 > 12
[DEBUG|collector_api.py:200] 2021-02-03 15:42:14,742 > ++++++++++++++진흥기업++++++++++++++++++++472/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:14,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:15,074 > 13
[DEBUG|collector_api.py:200] 2021-02-03 15:42:15,344 > ++++++++++++++카카오++++++++++++++++++++473/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:15,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:15,681 > 14
[DEBUG|collector_api.py:200] 2021-02-03 15:42:15,936 > ++++++++++++++KCTC++++++++++++++++++++474/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:15,937 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:16,287 > 15
[DEBUG|collector_api.py:200] 2021-02-03 15:42:16,547 > ++++++++++++++KT++++++++++++++++++++475/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:16,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:16,894 > 16
[DEBUG|collector_api.py:200] 2021-02-03 15:42:17,150 > ++++++++++++++코리안리++++++++++++++++++++476/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:17,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:17,502 > 17
[DEBUG|collector_api.py:200] 2021-02-03 15:42:17,758 > ++++++++++++++코스맥스비티아이++++++++++++++++++++477/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:17,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:18,111 > 18
[DEBUG|collector_api.py:200] 2021-02-03 15:42:18,383 > ++++++++++++++코오롱머티리얼++++++++++++++++++++478/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:18,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:18,719 > 19
[DEBUG|collector_api.py:200] 2021-02-03 15:42:18,955 > ++++++++++++++크라운제과++++++++++++++++++++479/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:18,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:19,326 > 20
[DEBUG|collector_api.py:200] 2021-02-03 15:42:19,557 > ++++++++++++++크라운해태홀딩스++++++++++++++++++++480/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:19,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:19,933 > 21
[DEBUG|collector_api.py:200] 2021-02-03 15:42:20,203 > ++++++++++++++키움증권++++++++++++++++++++481/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:20,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:20,541 > 22
[DEBUG|collector_api.py:200] 2021-02-03 15:42:20,794 > ++++++++++++++태림포장++++++++++++++++++++482/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:20,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:21,150 > 23
[DEBUG|collector_api.py:200] 2021-02-03 15:42:21,419 > ++++++++++++++태원물산++++++++++++++++++++483/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:21,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:21,758 > 24
[DEBUG|collector_api.py:200] 2021-02-03 15:42:22,041 > ++++++++++++++티에이치엔++++++++++++++++++++484/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:22,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:22,365 > 25
[DEBUG|collector_api.py:200] 2021-02-03 15:42:22,640 > ++++++++++++++팬오션++++++++++++++++++++485/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:22,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:22,974 > 26
[DEBUG|collector_api.py:200] 2021-02-03 15:42:23,229 > ++++++++++++++평화산업++++++++++++++++++++486/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:23,229 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:23,580 > 27
[DEBUG|collector_api.py:200] 2021-02-03 15:42:23,817 > ++++++++++++++하나투어++++++++++++++++++++487/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:23,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:24,187 > 28
[DEBUG|collector_api.py:200] 2021-02-03 15:42:24,428 > ++++++++++++++하이골드12호++++++++++++++++++++488/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:24,428 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:24,795 > 29
[DEBUG|collector_api.py:200] 2021-02-03 15:42:25,039 > ++++++++++++++한국앤컴퍼니++++++++++++++++++++489/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:25,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:25,404 > 30
[DEBUG|collector_api.py:200] 2021-02-03 15:42:25,688 > ++++++++++++++한국프랜지++++++++++++++++++++490/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:25,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:26,011 > 31
[DEBUG|collector_api.py:200] 2021-02-03 15:42:26,278 > ++++++++++++++한독++++++++++++++++++++491/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:26,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:26,618 > 32
[DEBUG|collector_api.py:200] 2021-02-03 15:42:26,898 > ++++++++++++++한세엠케이++++++++++++++++++++492/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:26,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:27,225 > 33
[DEBUG|collector_api.py:200] 2021-02-03 15:42:27,457 > ++++++++++++++한솔제지++++++++++++++++++++493/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:27,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:27,833 > 34
[DEBUG|collector_api.py:200] 2021-02-03 15:42:28,072 > ++++++++++++++한솔케미칼++++++++++++++++++++494/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:28,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:28,439 > 35
[DEBUG|collector_api.py:200] 2021-02-03 15:42:28,706 > ++++++++++++++한솔테크닉스++++++++++++++++++++495/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:28,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:29,045 > 36
[DEBUG|collector_api.py:200] 2021-02-03 15:42:29,323 > ++++++++++++++한진++++++++++++++++++++496/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:29,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:29,652 > 37
[DEBUG|collector_api.py:200] 2021-02-03 15:42:29,908 > ++++++++++++++해성디에스++++++++++++++++++++497/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:29,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:30,261 > 38
[DEBUG|collector_api.py:200] 2021-02-03 15:42:30,486 > ++++++++++++++현대리바트++++++++++++++++++++498/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:30,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:30,868 > 39
[DEBUG|collector_api.py:200] 2021-02-03 15:42:31,123 > ++++++++++++++현대백화점++++++++++++++++++++499/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:31,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:31,476 > 40
[DEBUG|collector_api.py:200] 2021-02-03 15:42:31,733 > ++++++++++++++형지엘리트++++++++++++++++++++500/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:31,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:32,085 > 41
[DEBUG|collector_api.py:200] 2021-02-03 15:42:32,334 > ++++++++++++++혜인++++++++++++++++++++501/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:32,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:32,693 > 42
[DEBUG|collector_api.py:200] 2021-02-03 15:42:32,971 > ++++++++++++++화성산업++++++++++++++++++++502/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:32,971 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:33,302 > 43
[DEBUG|collector_api.py:200] 2021-02-03 15:42:33,561 > ++++++++++++++휴비스++++++++++++++++++++503/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:33,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:33,910 > 44
[DEBUG|collector_api.py:200] 2021-02-03 15:42:34,195 > ++++++++++++++BGF++++++++++++++++++++504/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:34,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:34,518 > 45
[DEBUG|collector_api.py:200] 2021-02-03 15:42:34,763 > ++++++++++++++CS홀딩스++++++++++++++++++++505/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:34,763 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:35,125 > 46
[DEBUG|collector_api.py:200] 2021-02-03 15:42:35,375 > ++++++++++++++DB++++++++++++++++++++506/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:35,376 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:35,732 > 47
[DEBUG|collector_api.py:200] 2021-02-03 15:42:35,992 > ++++++++++++++DL++++++++++++++++++++507/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:35,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:36,339 > 48
[DEBUG|collector_api.py:200] 2021-02-03 15:42:36,592 > ++++++++++++++GS리테일++++++++++++++++++++508/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:36,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:36,947 > 49
[DEBUG|collector_api.py:200] 2021-02-03 15:42:37,202 > ++++++++++++++HDC++++++++++++++++++++509/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:37,203 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:37,555 > 50
[DEBUG|collector_api.py:200] 2021-02-03 15:42:37,809 > ++++++++++++++JW생명과학++++++++++++++++++++510/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:37,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:38,162 > 51
[DEBUG|collector_api.py:200] 2021-02-03 15:42:38,401 > ++++++++++++++KC그린홀딩스++++++++++++++++++++511/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:38,401 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:38,768 > 52
[DEBUG|collector_api.py:200] 2021-02-03 15:42:39,019 > ++++++++++++++KR모터스++++++++++++++++++++512/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:39,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:39,377 > 53
[DEBUG|collector_api.py:200] 2021-02-03 15:42:39,630 > ++++++++++++++LG유플러스++++++++++++++++++++513/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:39,630 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:39,984 > 54
[DEBUG|collector_api.py:200] 2021-02-03 15:42:40,259 > ++++++++++++++SPC삼립++++++++++++++++++++514/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:40,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:40,591 > 55
[DEBUG|collector_api.py:200] 2021-02-03 15:42:40,848 > ++++++++++++++경농++++++++++++++++++++515/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:40,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:41,199 > 56
[DEBUG|collector_api.py:200] 2021-02-03 15:42:41,457 > ++++++++++++++경동도시가스++++++++++++++++++++516/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:41,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:41,807 > 57
[DEBUG|collector_api.py:200] 2021-02-03 15:42:42,036 > ++++++++++++++경방++++++++++++++++++++517/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:42,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:42,414 > 58
[DEBUG|collector_api.py:200] 2021-02-03 15:42:42,677 > ++++++++++++++고려제강++++++++++++++++++++518/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:42,677 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:43,022 > 59
[DEBUG|collector_api.py:200] 2021-02-03 15:42:43,290 > ++++++++++++++광동제약++++++++++++++++++++519/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:43,290 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:43,629 > 60
[DEBUG|collector_api.py:200] 2021-02-03 15:42:43,912 > ++++++++++++++광주신세계++++++++++++++++++++520/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:43,912 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:44,235 > 61
[DEBUG|collector_api.py:200] 2021-02-03 15:42:44,468 > ++++++++++++++국도화학++++++++++++++++++++521/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:44,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:44,842 > 62
[DEBUG|collector_api.py:200] 2021-02-03 15:42:45,107 > ++++++++++++++금비++++++++++++++++++++522/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:45,108 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:45,449 > 63
[DEBUG|collector_api.py:200] 2021-02-03 15:42:45,749 > ++++++++++++++금호타이어++++++++++++++++++++523/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:45,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:46,056 > 64
[DEBUG|collector_api.py:200] 2021-02-03 15:42:46,318 > ++++++++++++++대신증권++++++++++++++++++++524/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:46,318 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:46,663 > 65
[DEBUG|collector_api.py:200] 2021-02-03 15:42:46,931 > ++++++++++++++대원강업++++++++++++++++++++525/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:46,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:47,271 > 66
[DEBUG|collector_api.py:200] 2021-02-03 15:42:47,525 > ++++++++++++++대원전선++++++++++++++++++++526/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:47,526 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:47,877 > 67
[DEBUG|collector_api.py:200] 2021-02-03 15:42:48,150 > ++++++++++++++대원화성++++++++++++++++++++527/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:48,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:48,484 > 68
[DEBUG|collector_api.py:200] 2021-02-03 15:42:48,759 > ++++++++++++++대유에이텍++++++++++++++++++++528/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:48,759 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:49,091 > 69
[DEBUG|collector_api.py:200] 2021-02-03 15:42:49,344 > ++++++++++++++더블유게임즈++++++++++++++++++++529/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:49,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:49,698 > 70
[DEBUG|collector_api.py:200] 2021-02-03 15:42:49,974 > ++++++++++++++동부건설++++++++++++++++++++530/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:49,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:50,306 > 71
[DEBUG|collector_api.py:200] 2021-02-03 15:42:50,558 > ++++++++++++++동성제약++++++++++++++++++++531/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:50,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:50,914 > 72
[DEBUG|collector_api.py:200] 2021-02-03 15:42:51,183 > ++++++++++++++동아에스티++++++++++++++++++++532/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:51,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:51,521 > 73
[DEBUG|collector_api.py:200] 2021-02-03 15:42:51,769 > ++++++++++++++동양고속++++++++++++++++++++533/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:51,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:52,128 > 74
[DEBUG|collector_api.py:200] 2021-02-03 15:42:52,368 > ++++++++++++++동양철관++++++++++++++++++++534/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:52,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:52,734 > 75
[DEBUG|collector_api.py:200] 2021-02-03 15:42:53,003 > ++++++++++++++동원수산++++++++++++++++++++535/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:53,003 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:53,340 > 76
[DEBUG|collector_api.py:200] 2021-02-03 15:42:53,594 > ++++++++++++++롯데쇼핑++++++++++++++++++++536/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:53,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:53,947 > 77
[DEBUG|collector_api.py:200] 2021-02-03 15:42:54,216 > ++++++++++++++메리츠화재++++++++++++++++++++537/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:54,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:54,555 > 78
[DEBUG|collector_api.py:200] 2021-02-03 15:42:54,820 > ++++++++++++++미원에스씨++++++++++++++++++++538/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:54,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:55,163 > 79
[DEBUG|collector_api.py:200] 2021-02-03 15:42:55,393 > ++++++++++++++부광약품++++++++++++++++++++539/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:55,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:55,770 > 80
[DEBUG|collector_api.py:200] 2021-02-03 15:42:56,045 > ++++++++++++++부산산업++++++++++++++++++++540/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:56,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:56,378 > 81
[DEBUG|collector_api.py:200] 2021-02-03 15:42:56,638 > ++++++++++++++삼익악기++++++++++++++++++++541/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:56,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:56,986 > 82
[DEBUG|collector_api.py:200] 2021-02-03 15:42:57,247 > ++++++++++++++삼천리++++++++++++++++++++542/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:57,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:57,594 > 83
[DEBUG|collector_api.py:200] 2021-02-03 15:42:57,874 > ++++++++++++++서울식품++++++++++++++++++++543/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:57,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:58,201 > 84
[DEBUG|collector_api.py:200] 2021-02-03 15:42:58,451 > ++++++++++++++성창기업지주++++++++++++++++++++544/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:58,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:58,809 > 85
[DEBUG|collector_api.py:200] 2021-02-03 15:42:59,070 > ++++++++++++++세종공업++++++++++++++++++++545/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:59,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:42:59,417 > 86
[DEBUG|collector_api.py:200] 2021-02-03 15:42:59,671 > ++++++++++++++솔루엠++++++++++++++++++++546/2888
[DEBUG|open_api.py:656] 2021-02-03 15:42:59,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:00,024 > 87
[DEBUG|collector_api.py:200] 2021-02-03 15:43:00,216 > ++++++++++++++시디즈++++++++++++++++++++547/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:00,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:00,632 > 88
[DEBUG|collector_api.py:200] 2021-02-03 15:43:00,868 > ++++++++++++++아시아나항공++++++++++++++++++++548/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:00,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:01,239 > 89
[DEBUG|collector_api.py:200] 2021-02-03 15:43:01,494 > ++++++++++++++알루코++++++++++++++++++++549/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:01,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:01,847 > 90
[DEBUG|collector_api.py:200] 2021-02-03 15:43:02,113 > ++++++++++++++SJM홀딩스++++++++++++++++++++550/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:02,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:02,455 > 91
[DEBUG|collector_api.py:200] 2021-02-03 15:43:02,706 > ++++++++++++++오뚜기++++++++++++++++++++551/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:02,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:03,063 > 92
[DEBUG|collector_api.py:200] 2021-02-03 15:43:03,303 > ++++++++++++++유성기업++++++++++++++++++++552/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:03,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:03,669 > 93
[DEBUG|collector_api.py:200] 2021-02-03 15:43:03,916 > ++++++++++++++이리츠코크렙++++++++++++++++++++553/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:03,916 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:04,277 > 94
[DEBUG|collector_api.py:200] 2021-02-03 15:43:04,503 > ++++++++++++++이수페타시스++++++++++++++++++++554/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:04,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:04,883 > 95
[DEBUG|collector_api.py:200] 2021-02-03 15:43:05,148 > ++++++++++++++이아이디++++++++++++++++++++555/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:05,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:05,492 > 96
[DEBUG|collector_api.py:200] 2021-02-03 15:43:05,734 > ++++++++++++++인디에프++++++++++++++++++++556/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:05,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:06,098 > 97
[DEBUG|collector_api.py:200] 2021-02-03 15:43:06,400 > ++++++++++++++일동홀딩스++++++++++++++++++++557/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:06,401 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:06,705 > 98
[DEBUG|collector_api.py:200] 2021-02-03 15:43:06,965 > ++++++++++++++일진홀딩스++++++++++++++++++++558/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:06,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:07,314 > 99
[DEBUG|collector_api.py:200] 2021-02-03 15:43:07,568 > ++++++++++++++자이에스앤디++++++++++++++++++++559/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:07,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:07,921 > 100
[DEBUG|collector_api.py:200] 2021-02-03 15:43:08,119 > ++++++++++++++자화전자++++++++++++++++++++560/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:08,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:08,529 > 101
[DEBUG|collector_api.py:200] 2021-02-03 15:43:08,780 > ++++++++++++++전방++++++++++++++++++++561/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:08,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:09,136 > 102
[DEBUG|collector_api.py:200] 2021-02-03 15:43:09,391 > ++++++++++++++제이알글로벌리츠++++++++++++++++++++562/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:09,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:09,747 > 103
[DEBUG|collector_api.py:200] 2021-02-03 15:43:09,933 > ++++++++++++++제이콘텐트리++++++++++++++++++++563/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:09,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:10,355 > 104
[DEBUG|collector_api.py:200] 2021-02-03 15:43:10,595 > ++++++++++++++제일기획++++++++++++++++++++564/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:10,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:10,962 > 105
[DEBUG|collector_api.py:200] 2021-02-03 15:43:11,217 > ++++++++++++++지투알++++++++++++++++++++565/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:11,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:11,569 > 106
[DEBUG|collector_api.py:200] 2021-02-03 15:43:11,821 > ++++++++++++++진양폴리++++++++++++++++++++566/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:11,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:12,178 > 107
[DEBUG|collector_api.py:200] 2021-02-03 15:43:12,431 > ++++++++++++++KCC++++++++++++++++++++567/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:12,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:12,786 > 108
[DEBUG|collector_api.py:200] 2021-02-03 15:43:13,050 > ++++++++++++++코스맥스++++++++++++++++++++568/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:13,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:13,393 > 109
[DEBUG|collector_api.py:200] 2021-02-03 15:43:13,632 > ++++++++++++++콤텍시스템++++++++++++++++++++569/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:13,633 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:14,000 > 110
[DEBUG|collector_api.py:200] 2021-02-03 15:43:14,264 > ++++++++++++++태경비케이++++++++++++++++++++570/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:14,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:14,608 > 111
[DEBUG|collector_api.py:200] 2021-02-03 15:43:14,887 > ++++++++++++++티웨이항공++++++++++++++++++++571/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:14,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:15,214 > 112
[DEBUG|collector_api.py:200] 2021-02-03 15:43:15,441 > ++++++++++++++퍼스텍++++++++++++++++++++572/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:15,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:15,822 > 113
[DEBUG|collector_api.py:200] 2021-02-03 15:43:16,102 > ++++++++++++++포스코인터내셔널++++++++++++++++++++573/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:16,103 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:16,430 > 114
[DEBUG|collector_api.py:200] 2021-02-03 15:43:16,698 > ++++++++++++++필룩스++++++++++++++++++++574/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:16,698 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:17,038 > 115
[DEBUG|collector_api.py:200] 2021-02-03 15:43:17,313 > ++++++++++++++하이골드3호++++++++++++++++++++575/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:17,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:17,646 > 116
[DEBUG|collector_api.py:200] 2021-02-03 15:43:17,889 > ++++++++++++++한국ANKOR유전++++++++++++++++++++576/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:17,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:18,252 > 117
[DEBUG|collector_api.py:200] 2021-02-03 15:43:18,487 > ++++++++++++++한국내화++++++++++++++++++++577/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:18,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:18,860 > 118
[DEBUG|collector_api.py:200] 2021-02-03 15:43:19,113 > ++++++++++++++한국주철관++++++++++++++++++++578/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:19,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:19,468 > 119
[DEBUG|collector_api.py:200] 2021-02-03 15:43:19,742 > ++++++++++++++한국화장품++++++++++++++++++++579/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:19,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:20,077 > 120
[DEBUG|collector_api.py:200] 2021-02-03 15:43:20,339 > ++++++++++++++한라++++++++++++++++++++580/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:20,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:20,685 > 121
[DEBUG|collector_api.py:200] 2021-02-03 15:43:20,985 > ++++++++++++++한미반도체++++++++++++++++++++581/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:20,985 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:21,292 > 122
[DEBUG|collector_api.py:200] 2021-02-03 15:43:21,530 > ++++++++++++++한섬++++++++++++++++++++582/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:21,530 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:21,901 > 123
[DEBUG|collector_api.py:200] 2021-02-03 15:43:22,166 > ++++++++++++++한세실업++++++++++++++++++++583/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:22,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:22,509 > 124
[DEBUG|collector_api.py:200] 2021-02-03 15:43:22,744 > ++++++++++++++한솔홈데코++++++++++++++++++++584/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:22,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:23,116 > 125
[DEBUG|collector_api.py:200] 2021-02-03 15:43:23,354 > ++++++++++++++한올바이오파마++++++++++++++++++++585/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:23,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:23,725 > 126
[DEBUG|collector_api.py:200] 2021-02-03 15:43:24,009 > ++++++++++++++한전산업++++++++++++++++++++586/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:24,010 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:24,332 > 127
[DEBUG|collector_api.py:200] 2021-02-03 15:43:24,562 > ++++++++++++++한화손해보험++++++++++++++++++++587/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:24,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:24,939 > 128
[DEBUG|collector_api.py:200] 2021-02-03 15:43:25,207 > ++++++++++++++핸즈코퍼레이션++++++++++++++++++++588/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:25,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:25,547 > 129
[DEBUG|collector_api.py:200] 2021-02-03 15:43:25,795 > ++++++++++++++현대비앤지스틸++++++++++++++++++++589/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:25,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:26,153 > 130
[DEBUG|collector_api.py:200] 2021-02-03 15:43:26,431 > ++++++++++++++현대오토에버++++++++++++++++++++590/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:26,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:26,762 > 131
[DEBUG|collector_api.py:200] 2021-02-03 15:43:27,008 > ++++++++++++++화승엔터프라이즈++++++++++++++++++++591/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:27,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:27,369 > 132
[DEBUG|collector_api.py:200] 2021-02-03 15:43:27,599 > ++++++++++++++화인베스틸++++++++++++++++++++592/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:27,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:27,977 > 133
[DEBUG|collector_api.py:200] 2021-02-03 15:43:28,213 > ++++++++++++++화천기계++++++++++++++++++++593/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:28,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:28,585 > 134
[DEBUG|collector_api.py:200] 2021-02-03 15:43:28,848 > ++++++++++++++효성첨단소재++++++++++++++++++++594/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:28,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:29,193 > 135
[DEBUG|collector_api.py:200] 2021-02-03 15:43:29,429 > ++++++++++++++후성++++++++++++++++++++595/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:29,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:29,801 > 136
[DEBUG|collector_api.py:200] 2021-02-03 15:43:30,059 > ++++++++++++++휠라홀딩스++++++++++++++++++++596/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:30,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:30,407 > 137
[DEBUG|collector_api.py:200] 2021-02-03 15:43:30,635 > ++++++++++++++휴스틸++++++++++++++++++++597/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:30,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:31,015 > 138
[DEBUG|collector_api.py:200] 2021-02-03 15:43:31,269 > ++++++++++++++DB하이텍++++++++++++++++++++598/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:31,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:31,624 > 139
[DEBUG|collector_api.py:200] 2021-02-03 15:43:31,904 > ++++++++++++++DL이앤씨++++++++++++++++++++599/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:31,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:32,232 > 140
[DEBUG|collector_api.py:200] 2021-02-03 15:43:32,402 > ++++++++++++++HSD엔진++++++++++++++++++++600/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:32,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:32,839 > 141
[DEBUG|collector_api.py:200] 2021-02-03 15:43:33,080 > ++++++++++++++KG동부제철++++++++++++++++++++601/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:33,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:33,446 > 142
[DEBUG|collector_api.py:200] 2021-02-03 15:43:33,725 > ++++++++++++++KTB투자증권++++++++++++++++++++602/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:33,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:34,053 > 143
[DEBUG|collector_api.py:200] 2021-02-03 15:43:34,322 > ++++++++++++++KTcs++++++++++++++++++++603/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:34,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:34,660 > 144
[DEBUG|collector_api.py:200] 2021-02-03 15:43:34,911 > ++++++++++++++LG생활건강++++++++++++++++++++604/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:34,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:35,268 > 145
[DEBUG|collector_api.py:200] 2021-02-03 15:43:35,507 > ++++++++++++++SG세계물산++++++++++++++++++++605/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:35,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:35,875 > 146
[DEBUG|collector_api.py:200] 2021-02-03 15:43:36,143 > ++++++++++++++SIMPAC++++++++++++++++++++606/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:36,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:36,482 > 147
[DEBUG|collector_api.py:200] 2021-02-03 15:43:36,784 > ++++++++++++++SKC++++++++++++++++++++607/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:36,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:37,090 > 148
[DEBUG|collector_api.py:200] 2021-02-03 15:43:37,355 > ++++++++++++++SK가스++++++++++++++++++++608/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:37,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:37,698 > 149
[DEBUG|collector_api.py:200] 2021-02-03 15:43:37,956 > ++++++++++++++SK디앤디++++++++++++++++++++609/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:37,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:38,305 > 150
[DEBUG|collector_api.py:200] 2021-02-03 15:43:38,547 > ++++++++++++++SK렌터카++++++++++++++++++++610/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:38,547 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:38,911 > 151
[DEBUG|collector_api.py:200] 2021-02-03 15:43:39,137 > ++++++++++++++STX엔진++++++++++++++++++++611/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:39,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:39,519 > 152
[DEBUG|collector_api.py:200] 2021-02-03 15:43:39,749 > ++++++++++++++STX중공업++++++++++++++++++++612/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:39,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:40,127 > 153
[DEBUG|collector_api.py:200] 2021-02-03 15:43:40,368 > ++++++++++++++TCC스틸++++++++++++++++++++613/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:40,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:40,735 > 154
[DEBUG|collector_api.py:200] 2021-02-03 15:43:41,036 > ++++++++++++++가온전선++++++++++++++++++++614/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:41,036 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:41,343 > 155
[DEBUG|collector_api.py:200] 2021-02-03 15:43:41,597 > ++++++++++++++경보제약++++++++++++++++++++615/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:41,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:41,950 > 156
[DEBUG|collector_api.py:200] 2021-02-03 15:43:42,184 > ++++++++++++++계양전기++++++++++++++++++++616/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:42,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:42,558 > 157
[DEBUG|collector_api.py:200] 2021-02-03 15:43:42,810 > ++++++++++++++고려산업++++++++++++++++++++617/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:42,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:43,165 > 158
[DEBUG|collector_api.py:200] 2021-02-03 15:43:43,426 > ++++++++++++++광전자++++++++++++++++++++618/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:43,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:43,772 > 159
[DEBUG|collector_api.py:200] 2021-02-03 15:43:44,034 > ++++++++++++++기아차++++++++++++++++++++619/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:44,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:44,381 > 160
[DEBUG|collector_api.py:200] 2021-02-03 15:43:44,638 > ++++++++++++++넥센++++++++++++++++++++620/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:44,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:44,989 > 161
[DEBUG|collector_api.py:200] 2021-02-03 15:43:45,258 > ++++++++++++++넥스트사이언스++++++++++++++++++++621/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:45,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:45,596 > 162
[DEBUG|collector_api.py:200] 2021-02-03 15:43:45,855 > ++++++++++++++농심++++++++++++++++++++622/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:45,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:46,203 > 163
[DEBUG|collector_api.py:200] 2021-02-03 15:43:46,461 > ++++++++++++++다우기술++++++++++++++++++++623/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:46,461 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:46,811 > 164
[DEBUG|collector_api.py:200] 2021-02-03 15:43:47,075 > ++++++++++++++대성산업++++++++++++++++++++624/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:47,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:47,419 > 165
[DEBUG|collector_api.py:200] 2021-02-03 15:43:47,659 > ++++++++++++++대유플러스++++++++++++++++++++625/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:47,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:48,026 > 166
[DEBUG|collector_api.py:200] 2021-02-03 15:43:48,284 > ++++++++++++++대한전선++++++++++++++++++++626/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:48,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:48,633 > 167
[DEBUG|collector_api.py:200] 2021-02-03 15:43:48,920 > ++++++++++++++대한제분++++++++++++++++++++627/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:48,920 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:49,242 > 168
[DEBUG|collector_api.py:200] 2021-02-03 15:43:49,493 > ++++++++++++++대한항공++++++++++++++++++++628/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:49,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:49,850 > 169
[DEBUG|collector_api.py:200] 2021-02-03 15:43:50,126 > ++++++++++++++대한화섬++++++++++++++++++++629/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:50,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:50,458 > 170
[DEBUG|collector_api.py:200] 2021-02-03 15:43:50,734 > ++++++++++++++동남합성++++++++++++++++++++630/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:50,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:51,065 > 171
[DEBUG|collector_api.py:200] 2021-02-03 15:43:51,314 > ++++++++++++++동방++++++++++++++++++++631/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:51,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:51,671 > 172
[DEBUG|collector_api.py:200] 2021-02-03 15:43:51,936 > ++++++++++++++동아타이어++++++++++++++++++++632/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:51,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:52,279 > 173
[DEBUG|collector_api.py:200] 2021-02-03 15:43:52,545 > ++++++++++++++동양피스톤++++++++++++++++++++633/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:52,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:52,886 > 174
[DEBUG|collector_api.py:200] 2021-02-03 15:43:53,131 > ++++++++++++++동원시스템즈++++++++++++++++++++634/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:53,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:53,494 > 175
[DEBUG|collector_api.py:200] 2021-02-03 15:43:53,768 > ++++++++++++++디와이파워++++++++++++++++++++635/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:53,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:54,102 > 176
[DEBUG|collector_api.py:200] 2021-02-03 15:43:54,335 > ++++++++++++++롯데리츠++++++++++++++++++++636/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:54,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:54,709 > 177
[DEBUG|collector_api.py:200] 2021-02-03 15:43:54,930 > ++++++++++++++메리츠금융지주++++++++++++++++++++637/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:54,931 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:55,317 > 178
[DEBUG|collector_api.py:200] 2021-02-03 15:43:55,565 > ++++++++++++++무림P&P++++++++++++++++++++638/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:55,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:55,924 > 179
[DEBUG|collector_api.py:200] 2021-02-03 15:43:56,181 > ++++++++++++++미원상사++++++++++++++++++++639/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:56,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:56,532 > 180
[DEBUG|collector_api.py:200] 2021-02-03 15:43:56,790 > ++++++++++++++방림++++++++++++++++++++640/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:56,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:57,139 > 181
[DEBUG|collector_api.py:200] 2021-02-03 15:43:57,413 > ++++++++++++++보령제약++++++++++++++++++++641/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:57,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:57,745 > 182
[DEBUG|collector_api.py:200] 2021-02-03 15:43:58,016 > ++++++++++++++사조오양++++++++++++++++++++642/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:58,016 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:58,354 > 183
[DEBUG|collector_api.py:200] 2021-02-03 15:43:58,635 > ++++++++++++++삼아알미늄++++++++++++++++++++643/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:58,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:58,961 > 184
[DEBUG|collector_api.py:200] 2021-02-03 15:43:59,228 > ++++++++++++++삼호개발++++++++++++++++++++644/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:59,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:43:59,569 > 185
[DEBUG|collector_api.py:200] 2021-02-03 15:43:59,856 > ++++++++++++++삼화전자++++++++++++++++++++645/2888
[DEBUG|open_api.py:656] 2021-02-03 15:43:59,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:00,176 > 186
[DEBUG|collector_api.py:200] 2021-02-03 15:44:00,432 > ++++++++++++++삼화페인트++++++++++++++++++++646/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:00,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:00,783 > 187
[DEBUG|collector_api.py:200] 2021-02-03 15:44:01,065 > ++++++++++++++새론오토모티브++++++++++++++++++++647/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:01,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:01,390 > 188
[DEBUG|collector_api.py:200] 2021-02-03 15:44:01,634 > ++++++++++++++성문전자++++++++++++++++++++648/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:01,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:01,996 > 189
[DEBUG|collector_api.py:200] 2021-02-03 15:44:02,270 > ++++++++++++++세아제강지주++++++++++++++++++++649/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:02,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:02,604 > 190
[DEBUG|collector_api.py:200] 2021-02-03 15:44:02,886 > ++++++++++++++신세계 I&C++++++++++++++++++++650/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:02,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:03,211 > 191
[DEBUG|collector_api.py:200] 2021-02-03 15:44:03,456 > ++++++++++++++쌍방울++++++++++++++++++++651/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:03,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:03,818 > 192
[DEBUG|collector_api.py:200] 2021-02-03 15:44:04,075 > ++++++++++++++쌍용양회++++++++++++++++++++652/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:04,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:04,426 > 193
[DEBUG|collector_api.py:200] 2021-02-03 15:44:04,706 > ++++++++++++++아남전자++++++++++++++++++++653/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:04,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:05,033 > 194
[DEBUG|collector_api.py:200] 2021-02-03 15:44:05,321 > ++++++++++++++아세아제지++++++++++++++++++++654/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:05,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:05,639 > 195
[DEBUG|collector_api.py:200] 2021-02-03 15:44:05,920 > ++++++++++++++아시아나IDT++++++++++++++++++++655/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:05,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:06,248 > 196
[DEBUG|collector_api.py:200] 2021-02-03 15:44:06,480 > ++++++++++++++애경유화++++++++++++++++++++656/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:06,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:06,856 > 197
[DEBUG|collector_api.py:200] 2021-02-03 15:44:07,119 > ++++++++++++++에쓰씨엔지니어링++++++++++++++++++++657/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:07,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:07,464 > 198
[DEBUG|collector_api.py:200] 2021-02-03 15:44:07,778 > ++++++++++++++에어부산++++++++++++++++++++658/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:07,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:08,072 > 199
[DEBUG|collector_api.py:200] 2021-02-03 15:44:08,297 > ++++++++++++++에이엔피++++++++++++++++++++659/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:08,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:08,680 > 200
[DEBUG|collector_api.py:200] 2021-02-03 15:44:08,939 > ++++++++++++++엔케이물산++++++++++++++++++++660/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:08,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:09,288 > 201
[DEBUG|collector_api.py:200] 2021-02-03 15:44:09,539 > ++++++++++++++영흥++++++++++++++++++++661/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:09,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:09,896 > 202
[DEBUG|collector_api.py:200] 2021-02-03 15:44:10,138 > ++++++++++++++오리엔트바이오++++++++++++++++++++662/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:10,138 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:10,505 > 203
[DEBUG|collector_api.py:200] 2021-02-03 15:44:10,749 > ++++++++++++++오리온홀딩스++++++++++++++++++++663/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:10,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:11,111 > 204
[DEBUG|collector_api.py:200] 2021-02-03 15:44:11,377 > ++++++++++++++용평리조트++++++++++++++++++++664/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:11,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:11,720 > 205
[DEBUG|collector_api.py:200] 2021-02-03 15:44:11,969 > ++++++++++++++웅진++++++++++++++++++++665/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:11,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:12,328 > 206
[DEBUG|collector_api.py:200] 2021-02-03 15:44:12,570 > ++++++++++++++원림++++++++++++++++++++666/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:12,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:12,935 > 207
[DEBUG|collector_api.py:200] 2021-02-03 15:44:13,200 > ++++++++++++++유니퀘스트++++++++++++++++++++667/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:13,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:13,542 > 208
[DEBUG|collector_api.py:200] 2021-02-03 15:44:13,784 > ++++++++++++++이엔플러스++++++++++++++++++++668/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:13,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:14,149 > 209
[DEBUG|collector_api.py:200] 2021-02-03 15:44:14,389 > ++++++++++++++이지스밸류리츠++++++++++++++++++++669/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:14,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:14,759 > 210
[DEBUG|collector_api.py:200] 2021-02-03 15:44:14,944 > ++++++++++++++인바이오젠++++++++++++++++++++670/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:14,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:15,366 > 211
[DEBUG|collector_api.py:200] 2021-02-03 15:44:15,590 > ++++++++++++++일동제약++++++++++++++++++++671/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:15,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:15,972 > 212
[DEBUG|collector_api.py:200] 2021-02-03 15:44:16,217 > ++++++++++++++일신석재++++++++++++++++++++672/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:16,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:16,579 > 213
[DEBUG|collector_api.py:200] 2021-02-03 15:44:16,837 > ++++++++++++++일양약품++++++++++++++++++++673/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:16,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:17,187 > 214
[DEBUG|collector_api.py:200] 2021-02-03 15:44:17,439 > ++++++++++++++주연테크++++++++++++++++++++674/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:17,440 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:17,796 > 215
[DEBUG|collector_api.py:200] 2021-02-03 15:44:18,042 > ++++++++++++++지코++++++++++++++++++++675/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:18,043 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:18,403 > 216
[DEBUG|collector_api.py:200] 2021-02-03 15:44:18,671 > ++++++++++++++진양산업++++++++++++++++++++676/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:18,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:19,011 > 217
[DEBUG|collector_api.py:200] 2021-02-03 15:44:19,287 > ++++++++++++++케이비아이동국실업++++++++++++++++++++677/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:19,287 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:19,619 > 218
[DEBUG|collector_api.py:200] 2021-02-03 15:44:19,899 > ++++++++++++++케이씨++++++++++++++++++++678/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:19,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:20,227 > 219
[DEBUG|collector_api.py:200] 2021-02-03 15:44:20,469 > ++++++++++++++스카이라이프++++++++++++++++++++679/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:20,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:20,834 > 220
[DEBUG|collector_api.py:200] 2021-02-03 15:44:21,080 > ++++++++++++++코오롱++++++++++++++++++++680/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:21,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:21,443 > 221
[DEBUG|collector_api.py:200] 2021-02-03 15:44:21,708 > ++++++++++++++티웨이홀딩스++++++++++++++++++++681/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:21,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:22,050 > 222
[DEBUG|collector_api.py:200] 2021-02-03 15:44:22,301 > ++++++++++++++파미셀++++++++++++++++++++682/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:22,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:22,658 > 223
[DEBUG|collector_api.py:200] 2021-02-03 15:44:22,936 > ++++++++++++++평화홀딩스++++++++++++++++++++683/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:22,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:23,266 > 224
[DEBUG|collector_api.py:200] 2021-02-03 15:44:23,529 > ++++++++++++++풀무원++++++++++++++++++++684/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:23,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:23,873 > 225
[DEBUG|collector_api.py:200] 2021-02-03 15:44:24,166 > ++++++++++++++하이트진로홀딩스++++++++++++++++++++685/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:24,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:24,480 > 226
[DEBUG|collector_api.py:200] 2021-02-03 15:44:24,759 > ++++++++++++++한국단자++++++++++++++++++++686/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:24,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:25,086 > 227
[DEBUG|collector_api.py:200] 2021-02-03 15:44:25,349 > ++++++++++++++한국조선해양++++++++++++++++++++687/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:25,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:25,694 > 228
[DEBUG|collector_api.py:200] 2021-02-03 15:44:25,945 > ++++++++++++++한국카본++++++++++++++++++++688/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:25,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:26,302 > 229
[DEBUG|collector_api.py:200] 2021-02-03 15:44:26,537 > ++++++++++++++한미약품++++++++++++++++++++689/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:26,538 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:26,913 > 230
[DEBUG|collector_api.py:200] 2021-02-03 15:44:27,167 > ++++++++++++++한신공영++++++++++++++++++++690/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:27,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:27,521 > 231
[DEBUG|collector_api.py:200] 2021-02-03 15:44:27,773 > ++++++++++++++한익스프레스++++++++++++++++++++691/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:27,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:28,129 > 232
[DEBUG|collector_api.py:200] 2021-02-03 15:44:28,380 > ++++++++++++++한전기술++++++++++++++++++++692/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:28,380 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:28,736 > 233
[DEBUG|collector_api.py:200] 2021-02-03 15:44:28,985 > ++++++++++++++한화시스템++++++++++++++++++++693/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:28,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:29,343 > 234
[DEBUG|collector_api.py:200] 2021-02-03 15:44:29,526 > ++++++++++++++한화투자증권++++++++++++++++++++694/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:29,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:29,951 > 235
[DEBUG|collector_api.py:200] 2021-02-03 15:44:30,218 > ++++++++++++++현대글로비스++++++++++++++++++++695/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:30,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:30,558 > 236
[DEBUG|collector_api.py:200] 2021-02-03 15:44:30,800 > ++++++++++++++현대약품++++++++++++++++++++696/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:30,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:31,165 > 237
[DEBUG|collector_api.py:200] 2021-02-03 15:44:31,414 > ++++++++++++++현대중공업지주++++++++++++++++++++697/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:31,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:31,772 > 238
[DEBUG|collector_api.py:200] 2021-02-03 15:44:32,019 > ++++++++++++++현대해상++++++++++++++++++++698/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:32,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:32,378 > 239
[DEBUG|collector_api.py:200] 2021-02-03 15:44:32,639 > ++++++++++++++화승알앤에이++++++++++++++++++++699/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:32,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:32,986 > 240
[DEBUG|collector_api.py:200] 2021-02-03 15:44:33,267 > ++++++++++++++효성중공업++++++++++++++++++++700/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:33,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:33,593 > 241
[DEBUG|collector_api.py:200] 2021-02-03 15:44:33,839 > ++++++++++++++효성티앤씨++++++++++++++++++++701/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:33,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:34,199 > 242
[DEBUG|collector_api.py:200] 2021-02-03 15:44:34,433 > ++++++++++++++BYC++++++++++++++++++++702/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:34,433 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:34,806 > 243
[DEBUG|collector_api.py:200] 2021-02-03 15:44:35,055 > ++++++++++++++DB손해보험++++++++++++++++++++703/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:35,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:35,413 > 244
[DEBUG|collector_api.py:200] 2021-02-03 15:44:35,702 > ++++++++++++++GS++++++++++++++++++++704/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:35,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:36,020 > 245
[DEBUG|collector_api.py:200] 2021-02-03 15:44:36,268 > ++++++++++++++HMM++++++++++++++++++++705/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:36,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:36,628 > 246
[DEBUG|collector_api.py:200] 2021-02-03 15:44:36,891 > ++++++++++++++JB금융지주++++++++++++++++++++706/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:36,891 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:37,235 > 247
[DEBUG|collector_api.py:200] 2021-02-03 15:44:37,463 > ++++++++++++++LS네트웍스++++++++++++++++++++707/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:37,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:37,842 > 248
[DEBUG|collector_api.py:200] 2021-02-03 15:44:38,103 > ++++++++++++++NH투자증권++++++++++++++++++++708/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:38,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:38,450 > 249
[DEBUG|collector_api.py:200] 2021-02-03 15:44:38,718 > ++++++++++++++SK++++++++++++++++++++709/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:38,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:39,057 > 250
[DEBUG|collector_api.py:200] 2021-02-03 15:44:39,307 > ++++++++++++++SK디스커버리++++++++++++++++++++710/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:39,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:39,666 > 251
[DEBUG|collector_api.py:200] 2021-02-03 15:44:39,934 > ++++++++++++++WISCOM++++++++++++++++++++711/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:39,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:40,274 > 252
[DEBUG|collector_api.py:200] 2021-02-03 15:44:40,560 > ++++++++++++++강남제비스코++++++++++++++++++++712/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:40,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:40,880 > 253
[DEBUG|collector_api.py:200] 2021-02-03 15:44:41,145 > ++++++++++++++경동나비엔++++++++++++++++++++713/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:41,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:41,488 > 254
[DEBUG|collector_api.py:200] 2021-02-03 15:44:41,757 > ++++++++++++++광명전기++++++++++++++++++++714/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:41,757 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:42,096 > 255
[DEBUG|collector_api.py:200] 2021-02-03 15:44:42,366 > ++++++++++++++교촌에프앤비++++++++++++++++++++715/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:42,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:42,703 > 256
[DEBUG|collector_api.py:200] 2021-02-03 15:44:42,875 > ++++++++++++++그린케미칼++++++++++++++++++++716/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:42,876 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:43,311 > 257
[DEBUG|collector_api.py:200] 2021-02-03 15:44:43,537 > ++++++++++++++금호석유++++++++++++++++++++717/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:43,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:43,917 > 258
[DEBUG|collector_api.py:200] 2021-02-03 15:44:44,181 > ++++++++++++++금호에이치티++++++++++++++++++++718/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:44,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:44,526 > 259
[DEBUG|collector_api.py:200] 2021-02-03 15:44:44,766 > ++++++++++++++깨끗한나라++++++++++++++++++++719/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:44,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:45,132 > 260
[DEBUG|collector_api.py:200] 2021-02-03 15:44:45,397 > ++++++++++++++남광토건++++++++++++++++++++720/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:45,397 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:45,739 > 261
[DEBUG|collector_api.py:200] 2021-02-03 15:44:46,037 > ++++++++++++++노루홀딩스++++++++++++++++++++721/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:46,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:46,347 > 262
[DEBUG|collector_api.py:200] 2021-02-03 15:44:46,603 > ++++++++++++++대동공업++++++++++++++++++++722/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:46,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:46,954 > 263
[DEBUG|collector_api.py:200] 2021-02-03 15:44:47,230 > ++++++++++++++대상홀딩스++++++++++++++++++++723/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:47,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:47,562 > 264
[DEBUG|collector_api.py:200] 2021-02-03 15:44:47,817 > ++++++++++++++대성에너지++++++++++++++++++++724/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:47,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:48,169 > 265
[DEBUG|collector_api.py:200] 2021-02-03 15:44:48,390 > ++++++++++++++대우부품++++++++++++++++++++725/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:48,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:48,776 > 266
[DEBUG|collector_api.py:200] 2021-02-03 15:44:49,034 > ++++++++++++++대우조선해양++++++++++++++++++++726/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:49,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:49,383 > 267
[DEBUG|collector_api.py:200] 2021-02-03 15:44:49,630 > ++++++++++++++대창단조++++++++++++++++++++727/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:49,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:49,990 > 268
[DEBUG|collector_api.py:200] 2021-02-03 15:44:50,257 > ++++++++++++++대현++++++++++++++++++++728/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:50,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:50,599 > 269
[DEBUG|collector_api.py:200] 2021-02-03 15:44:50,894 > ++++++++++++++도화엔지니어링++++++++++++++++++++729/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:50,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:51,207 > 270
[DEBUG|collector_api.py:200] 2021-02-03 15:44:51,434 > ++++++++++++++동성화학++++++++++++++++++++730/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:51,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:51,815 > 271
[DEBUG|collector_api.py:200] 2021-02-03 15:44:52,080 > ++++++++++++++동아지질++++++++++++++++++++731/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:52,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:52,423 > 272
[DEBUG|collector_api.py:200] 2021-02-03 15:44:52,670 > ++++++++++++++동일고무벨트++++++++++++++++++++732/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:52,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:53,030 > 273
[DEBUG|collector_api.py:200] 2021-02-03 15:44:53,282 > ++++++++++++++동일산업++++++++++++++++++++733/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:53,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:53,640 > 274
[DEBUG|collector_api.py:200] 2021-02-03 15:44:53,872 > ++++++++++++++동일제강++++++++++++++++++++734/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:53,872 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:54,248 > 275
[DEBUG|collector_api.py:200] 2021-02-03 15:44:54,466 > ++++++++++++++두올++++++++++++++++++++735/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:54,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:54,857 > 276
[DEBUG|collector_api.py:200] 2021-02-03 15:44:55,100 > ++++++++++++++드림텍++++++++++++++++++++736/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:55,101 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:55,464 > 277
[DEBUG|collector_api.py:200] 2021-02-03 15:44:55,674 > ++++++++++++++롯데지주++++++++++++++++++++737/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:55,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:56,071 > 278
[DEBUG|collector_api.py:200] 2021-02-03 15:44:56,360 > ++++++++++++++모나리자++++++++++++++++++++738/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:56,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:56,679 > 279
[DEBUG|collector_api.py:200] 2021-02-03 15:44:56,946 > ++++++++++++++무림페이퍼++++++++++++++++++++739/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:56,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:57,285 > 280
[DEBUG|collector_api.py:200] 2021-02-03 15:44:57,538 > ++++++++++++++미래산업++++++++++++++++++++740/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:57,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:57,892 > 281
[DEBUG|collector_api.py:200] 2021-02-03 15:44:58,154 > ++++++++++++++미래에셋대우++++++++++++++++++++741/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:58,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:58,501 > 282
[DEBUG|collector_api.py:200] 2021-02-03 15:44:58,750 > ++++++++++++++보해양조++++++++++++++++++++742/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:58,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:59,108 > 283
[DEBUG|collector_api.py:200] 2021-02-03 15:44:59,375 > ++++++++++++++빅히트++++++++++++++++++++743/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:59,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:44:59,716 > 284
[DEBUG|collector_api.py:200] 2021-02-03 15:44:59,883 > ++++++++++++++삼화콘덴서++++++++++++++++++++744/2888
[DEBUG|open_api.py:656] 2021-02-03 15:44:59,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:00,324 > 285
[DEBUG|collector_api.py:200] 2021-02-03 15:45:00,578 > ++++++++++++++상신브레이크++++++++++++++++++++745/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:00,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:00,932 > 286
[DEBUG|collector_api.py:200] 2021-02-03 15:45:01,191 > ++++++++++++++서울가스++++++++++++++++++++746/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:01,191 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:01,540 > 287
[DEBUG|collector_api.py:200] 2021-02-03 15:45:01,788 > ++++++++++++++센트럴인사이트++++++++++++++++++++747/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:01,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:02,148 > 288
[DEBUG|collector_api.py:200] 2021-02-03 15:45:02,407 > ++++++++++++++신대양제지++++++++++++++++++++748/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:02,407 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:02,756 > 289
[DEBUG|collector_api.py:200] 2021-02-03 15:45:03,009 > ++++++++++++++신도리코++++++++++++++++++++749/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:03,010 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:03,364 > 290
[DEBUG|collector_api.py:200] 2021-02-03 15:45:03,625 > ++++++++++++++신흥++++++++++++++++++++750/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:03,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:03,971 > 291
[DEBUG|collector_api.py:200] 2021-02-03 15:45:04,237 > ++++++++++++++쎌마테라퓨틱스++++++++++++++++++++751/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:04,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:04,580 > 292
[DEBUG|collector_api.py:200] 2021-02-03 15:45:04,853 > ++++++++++++++씨에스윈드++++++++++++++++++++752/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:04,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:05,188 > 293
[DEBUG|collector_api.py:200] 2021-02-03 15:45:05,417 > ++++++++++++++아모레G++++++++++++++++++++753/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:05,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:05,795 > 294
[DEBUG|collector_api.py:200] 2021-02-03 15:45:06,062 > ++++++++++++++에스원++++++++++++++++++++754/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:06,063 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:06,402 > 295
[DEBUG|collector_api.py:200] 2021-02-03 15:45:06,658 > ++++++++++++++SK바이오팜++++++++++++++++++++755/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:06,658 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:07,010 > 296
[DEBUG|collector_api.py:200] 2021-02-03 15:45:07,185 > ++++++++++++++에이프로젠제약++++++++++++++++++++756/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:07,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:07,617 > 297
[DEBUG|collector_api.py:200] 2021-02-03 15:45:07,883 > ++++++++++++++영풍제지++++++++++++++++++++757/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:07,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:08,226 > 298
[DEBUG|collector_api.py:200] 2021-02-03 15:45:08,496 > ++++++++++++++예스코홀딩스++++++++++++++++++++758/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:08,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:08,835 > 299
[DEBUG|collector_api.py:200] 2021-02-03 15:45:09,093 > ++++++++++++++우리들제약++++++++++++++++++++759/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:09,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:09,442 > 300
[DEBUG|collector_api.py:200] 2021-02-03 15:45:09,715 > ++++++++++++++우리종금++++++++++++++++++++760/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:09,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:10,050 > 301
[DEBUG|collector_api.py:200] 2021-02-03 15:45:10,312 > ++++++++++++++우진아이엔에스++++++++++++++++++++761/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:10,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:10,658 > 302
[DEBUG|collector_api.py:200] 2021-02-03 15:45:10,922 > ++++++++++++++웅진씽크빅++++++++++++++++++++762/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:10,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:11,267 > 303
[DEBUG|collector_api.py:200] 2021-02-03 15:45:11,531 > ++++++++++++++유수홀딩스++++++++++++++++++++763/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:11,531 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:11,875 > 304
[DEBUG|collector_api.py:200] 2021-02-03 15:45:12,125 > ++++++++++++++유엔젤++++++++++++++++++++764/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:12,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:12,483 > 305
[DEBUG|collector_api.py:200] 2021-02-03 15:45:12,727 > ++++++++++++++율촌화학++++++++++++++++++++765/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:12,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:13,089 > 306
[DEBUG|collector_api.py:200] 2021-02-03 15:45:13,364 > ++++++++++++++이지스레지던스리츠++++++++++++++++++++766/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:13,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:13,697 > 307
[DEBUG|collector_api.py:200] 2021-02-03 15:45:13,897 > ++++++++++++++이화산업++++++++++++++++++++767/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:13,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:14,304 > 308
[DEBUG|collector_api.py:200] 2021-02-03 15:45:14,558 > ++++++++++++++인팩++++++++++++++++++++768/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:14,559 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:14,911 > 309
[DEBUG|collector_api.py:200] 2021-02-03 15:45:15,171 > ++++++++++++++일신방직++++++++++++++++++++769/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:15,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:15,517 > 310
[DEBUG|collector_api.py:200] 2021-02-03 15:45:15,770 > ++++++++++++++일진디스플++++++++++++++++++++770/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:15,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:16,125 > 311
[DEBUG|collector_api.py:200] 2021-02-03 15:45:16,382 > ++++++++++++++일진머티리얼즈++++++++++++++++++++771/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:16,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:16,733 > 312
[DEBUG|collector_api.py:200] 2021-02-03 15:45:17,005 > ++++++++++++++제주은행++++++++++++++++++++772/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:17,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:17,340 > 313
[DEBUG|collector_api.py:200] 2021-02-03 15:45:17,588 > ++++++++++++++제주항공++++++++++++++++++++773/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:17,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:17,948 > 314
[DEBUG|collector_api.py:200] 2021-02-03 15:45:18,222 > ++++++++++++++종근당++++++++++++++++++++774/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:18,223 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:18,556 > 315
[DEBUG|collector_api.py:200] 2021-02-03 15:45:18,792 > ++++++++++++++진양홀딩스++++++++++++++++++++775/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:18,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:19,163 > 316
[DEBUG|collector_api.py:200] 2021-02-03 15:45:19,410 > ++++++++++++++천일고속++++++++++++++++++++776/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:19,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:19,770 > 317
[DEBUG|collector_api.py:200] 2021-02-03 15:45:20,033 > ++++++++++++++체시스++++++++++++++++++++777/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:20,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:20,378 > 318
[DEBUG|collector_api.py:200] 2021-02-03 15:45:20,629 > ++++++++++++++카프로++++++++++++++++++++778/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:20,629 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:20,985 > 319
[DEBUG|collector_api.py:200] 2021-02-03 15:45:21,254 > ++++++++++++++KT&G++++++++++++++++++++779/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:21,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:21,592 > 320
[DEBUG|collector_api.py:200] 2021-02-03 15:45:21,863 > ++++++++++++++태광산업++++++++++++++++++++780/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:21,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:22,200 > 321
[DEBUG|collector_api.py:200] 2021-02-03 15:45:22,447 > ++++++++++++++태영건설++++++++++++++++++++781/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:22,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:22,806 > 322
[DEBUG|collector_api.py:200] 2021-02-03 15:45:23,080 > ++++++++++++++풍산++++++++++++++++++++782/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:23,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:23,413 > 323
[DEBUG|collector_api.py:200] 2021-02-03 15:45:23,647 > ++++++++++++++하나금융지주++++++++++++++++++++783/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:23,647 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:24,021 > 324
[DEBUG|collector_api.py:200] 2021-02-03 15:45:24,282 > ++++++++++++++한국가스공사++++++++++++++++++++784/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:24,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:24,628 > 325
[DEBUG|collector_api.py:200] 2021-02-03 15:45:24,871 > ++++++++++++++한국전력++++++++++++++++++++785/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:24,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:25,234 > 326
[DEBUG|collector_api.py:200] 2021-02-03 15:45:25,502 > ++++++++++++++한국콜마++++++++++++++++++++786/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:25,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:25,842 > 327
[DEBUG|collector_api.py:200] 2021-02-03 15:45:26,088 > ++++++++++++++한농화성++++++++++++++++++++787/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:26,089 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:26,448 > 328
[DEBUG|collector_api.py:200] 2021-02-03 15:45:26,730 > ++++++++++++++한성기업++++++++++++++++++++788/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:26,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:27,054 > 329
[DEBUG|collector_api.py:200] 2021-02-03 15:45:27,309 > ++++++++++++++한세예스24홀딩스++++++++++++++++++++789/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:27,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:27,661 > 330
[DEBUG|collector_api.py:200] 2021-02-03 15:45:27,926 > ++++++++++++++한일시멘트++++++++++++++++++++790/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:27,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:28,268 > 331
[DEBUG|collector_api.py:200] 2021-02-03 15:45:28,503 > ++++++++++++++한일홀딩스++++++++++++++++++++791/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:28,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:28,875 > 332
[DEBUG|collector_api.py:200] 2021-02-03 15:45:29,146 > ++++++++++++++한전KPS++++++++++++++++++++792/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:29,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:29,482 > 333
[DEBUG|collector_api.py:200] 2021-02-03 15:45:29,719 > ++++++++++++++한진칼++++++++++++++++++++793/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:29,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:30,090 > 334
[DEBUG|collector_api.py:200] 2021-02-03 15:45:30,330 > ++++++++++++++한창++++++++++++++++++++794/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:30,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:30,697 > 335
[DEBUG|collector_api.py:200] 2021-02-03 15:45:30,936 > ++++++++++++++현대건설++++++++++++++++++++795/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:30,936 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:31,304 > 336
[DEBUG|collector_api.py:200] 2021-02-03 15:45:31,563 > ++++++++++++++현대그린푸드++++++++++++++++++++796/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:31,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:31,912 > 337
[DEBUG|collector_api.py:200] 2021-02-03 15:45:32,162 > ++++++++++++++현대로템++++++++++++++++++++797/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:32,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:32,520 > 338
[DEBUG|collector_api.py:200] 2021-02-03 15:45:32,753 > ++++++++++++++현대미포조선++++++++++++++++++++798/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:32,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:33,128 > 339
[DEBUG|collector_api.py:200] 2021-02-03 15:45:33,380 > ++++++++++++++현대상사++++++++++++++++++++799/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:33,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:33,735 > 340
[DEBUG|collector_api.py:200] 2021-02-03 15:45:34,033 > ++++++++++++++화신++++++++++++++++++++800/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:34,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:34,342 > 341
[DEBUG|collector_api.py:200] 2021-02-03 15:45:34,613 > ++++++++++++++휴켐스++++++++++++++++++++801/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:34,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:34,949 > 342
[DEBUG|collector_api.py:200] 2021-02-03 15:45:35,199 > ++++++++++++++흥국화재++++++++++++++++++++802/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:35,200 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:35,557 > 343
[DEBUG|collector_api.py:200] 2021-02-03 15:45:35,802 > ++++++++++++++EDGC++++++++++++++++++++803/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:35,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:36,163 > 344
[DEBUG|collector_api.py:200] 2021-02-03 15:45:36,389 > ++++++++++++++GST++++++++++++++++++++804/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:36,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:36,769 > 345
[DEBUG|collector_api.py:200] 2021-02-03 15:45:37,017 > ++++++++++++++GS홈쇼핑++++++++++++++++++++805/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:37,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:37,376 > 346
[DEBUG|collector_api.py:200] 2021-02-03 15:45:37,616 > ++++++++++++++IBKS제13호스팩++++++++++++++++++++806/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:37,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:37,983 > 347
[DEBUG|collector_api.py:200] 2021-02-03 15:45:38,165 > ++++++++++++++ITX-AI++++++++++++++++++++807/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:38,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:38,591 > 348
[DEBUG|collector_api.py:200] 2021-02-03 15:45:38,834 > ++++++++++++++JW신약++++++++++++++++++++808/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:38,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:39,198 > 349
[DEBUG|collector_api.py:200] 2021-02-03 15:45:39,443 > ++++++++++++++KB오토시스++++++++++++++++++++809/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:39,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:39,807 > 350
[DEBUG|collector_api.py:200] 2021-02-03 15:45:40,057 > ++++++++++++++KH바텍++++++++++++++++++++810/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:40,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:40,415 > 351
[DEBUG|collector_api.py:200] 2021-02-03 15:45:40,659 > ++++++++++++++SK5호스팩++++++++++++++++++++811/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:40,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:41,022 > 352
[DEBUG|collector_api.py:200] 2021-02-03 15:45:41,215 > ++++++++++++++SK6호스팩++++++++++++++++++++812/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:41,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:41,629 > 353
[DEBUG|collector_api.py:200] 2021-02-03 15:45:41,811 > ++++++++++++++YW++++++++++++++++++++813/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:41,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:42,237 > 354
[DEBUG|collector_api.py:200] 2021-02-03 15:45:42,476 > ++++++++++++++경남제약헬스케어++++++++++++++++++++814/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:42,477 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:42,844 > 355
[DEBUG|collector_api.py:200] 2021-02-03 15:45:43,141 > ++++++++++++++경창산업++++++++++++++++++++815/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:43,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:43,451 > 356
[DEBUG|collector_api.py:200] 2021-02-03 15:45:43,701 > ++++++++++++++고려시멘트++++++++++++++++++++816/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:43,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:44,059 > 357
[DEBUG|collector_api.py:200] 2021-02-03 15:45:44,296 > ++++++++++++++골프존++++++++++++++++++++817/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:44,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:44,667 > 358
[DEBUG|collector_api.py:200] 2021-02-03 15:45:44,900 > ++++++++++++++국순당++++++++++++++++++++818/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:44,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:45,275 > 359
[DEBUG|collector_api.py:200] 2021-02-03 15:45:45,512 > ++++++++++++++그리티++++++++++++++++++++819/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:45,513 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:45,882 > 360
[DEBUG|collector_api.py:200] 2021-02-03 15:45:46,129 > ++++++++++++++나노브릭++++++++++++++++++++820/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:46,129 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:46,488 > 361
[DEBUG|collector_api.py:200] 2021-02-03 15:45:46,684 > ++++++++++++++네스엠++++++++++++++++++++821/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:46,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:47,095 > 362
[DEBUG|collector_api.py:200] 2021-02-03 15:45:47,344 > ++++++++++++++네오티스++++++++++++++++++++822/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:47,345 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:47,701 > 363
[DEBUG|collector_api.py:200] 2021-02-03 15:45:47,947 > ++++++++++++++네이처셀++++++++++++++++++++823/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:47,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:48,308 > 364
[DEBUG|collector_api.py:200] 2021-02-03 15:45:48,553 > ++++++++++++++녹십자셀++++++++++++++++++++824/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:48,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:48,916 > 365
[DEBUG|collector_api.py:200] 2021-02-03 15:45:49,182 > ++++++++++++++뉴인텍++++++++++++++++++++825/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:49,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:49,523 > 366
[DEBUG|collector_api.py:200] 2021-02-03 15:45:49,767 > ++++++++++++++뉴프렉스++++++++++++++++++++826/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:49,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:50,130 > 367
[DEBUG|collector_api.py:200] 2021-02-03 15:45:50,358 > ++++++++++++++대봉엘에스++++++++++++++++++++827/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:50,358 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:50,737 > 368
[DEBUG|collector_api.py:200] 2021-02-03 15:45:50,989 > ++++++++++++++대신밸런스제9호스팩++++++++++++++++++++828/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:50,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:51,344 > 369
[DEBUG|collector_api.py:200] 2021-02-03 15:45:51,519 > ++++++++++++++대유++++++++++++++++++++829/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:51,520 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:51,954 > 370
[DEBUG|collector_api.py:200] 2021-02-03 15:45:52,191 > ++++++++++++++대유에이피++++++++++++++++++++830/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:52,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:52,562 > 371
[DEBUG|collector_api.py:200] 2021-02-03 15:45:52,784 > ++++++++++++++대주산업++++++++++++++++++++831/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:52,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:53,169 > 372
[DEBUG|collector_api.py:200] 2021-02-03 15:45:53,414 > ++++++++++++++대한약품++++++++++++++++++++832/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:53,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:53,775 > 373
[DEBUG|collector_api.py:200] 2021-02-03 15:45:54,029 > ++++++++++++++동구바이오제약++++++++++++++++++++833/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:54,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:54,383 > 374
[DEBUG|collector_api.py:200] 2021-02-03 15:45:54,611 > ++++++++++++++동방선기++++++++++++++++++++834/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:54,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:54,991 > 375
[DEBUG|collector_api.py:200] 2021-02-03 15:45:55,233 > ++++++++++++++디에이테크놀로지++++++++++++++++++++835/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:55,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:55,597 > 376
[DEBUG|collector_api.py:200] 2021-02-03 15:45:55,838 > ++++++++++++++디에이피++++++++++++++++++++836/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:55,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:56,204 > 377
[DEBUG|collector_api.py:200] 2021-02-03 15:45:56,446 > ++++++++++++++디엔에이링크++++++++++++++++++++837/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:56,446 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:56,811 > 378
[DEBUG|collector_api.py:200] 2021-02-03 15:45:57,056 > ++++++++++++++디엔에프++++++++++++++++++++838/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:57,056 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:57,417 > 379
[DEBUG|collector_api.py:200] 2021-02-03 15:45:57,655 > ++++++++++++++디지틀조선++++++++++++++++++++839/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:57,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:58,024 > 380
[DEBUG|collector_api.py:200] 2021-02-03 15:45:58,285 > ++++++++++++++룽투코리아++++++++++++++++++++840/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:58,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:58,631 > 381
[DEBUG|collector_api.py:200] 2021-02-03 15:45:58,882 > ++++++++++++++링크제니시스++++++++++++++++++++841/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:58,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:59,238 > 382
[DEBUG|collector_api.py:200] 2021-02-03 15:45:59,508 > ++++++++++++++메디톡스++++++++++++++++++++842/2888
[DEBUG|open_api.py:656] 2021-02-03 15:45:59,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:45:59,846 > 383
[DEBUG|collector_api.py:200] 2021-02-03 15:46:00,099 > ++++++++++++++메이슨캐피탈++++++++++++++++++++843/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:00,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:00,454 > 384
[DEBUG|collector_api.py:200] 2021-02-03 15:46:00,733 > ++++++++++++++메탈라이프++++++++++++++++++++844/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:00,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:01,062 > 385
[DEBUG|collector_api.py:200] 2021-02-03 15:46:01,262 > ++++++++++++++모두투어++++++++++++++++++++845/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:01,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:01,669 > 386
[DEBUG|collector_api.py:200] 2021-02-03 15:46:01,918 > ++++++++++++++모비스++++++++++++++++++++846/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:01,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:02,276 > 387
[DEBUG|collector_api.py:200] 2021-02-03 15:46:02,516 > ++++++++++++++모트렉스++++++++++++++++++++847/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:02,516 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:02,886 > 388
[DEBUG|collector_api.py:200] 2021-02-03 15:46:03,118 > ++++++++++++++미래SCI++++++++++++++++++++848/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:03,118 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:03,494 > 389
[DEBUG|collector_api.py:200] 2021-02-03 15:46:03,743 > ++++++++++++++미스터블루++++++++++++++++++++849/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:03,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:04,101 > 390
[DEBUG|collector_api.py:200] 2021-02-03 15:46:04,336 > ++++++++++++++미코바이오메드++++++++++++++++++++850/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:04,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:04,710 > 391
[DEBUG|collector_api.py:200] 2021-02-03 15:46:04,959 > ++++++++++++++바디텍메드++++++++++++++++++++851/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:04,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:05,317 > 392
[DEBUG|collector_api.py:200] 2021-02-03 15:46:05,533 > ++++++++++++++바이넥스++++++++++++++++++++852/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:05,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:05,925 > 393
[DEBUG|collector_api.py:200] 2021-02-03 15:46:06,151 > ++++++++++++++브랜드엑스코퍼레이션++++++++++++++++++++853/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:06,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:06,534 > 394
[DEBUG|collector_api.py:200] 2021-02-03 15:46:06,712 > ++++++++++++++삼보판지++++++++++++++++++++854/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:06,712 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:07,142 > 395
[DEBUG|collector_api.py:200] 2021-02-03 15:46:07,381 > ++++++++++++++삼본전자++++++++++++++++++++855/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:07,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:07,748 > 396
[DEBUG|collector_api.py:200] 2021-02-03 15:46:07,991 > ++++++++++++++삼아제약++++++++++++++++++++856/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:07,991 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:08,355 > 397
[DEBUG|collector_api.py:200] 2021-02-03 15:46:08,594 > ++++++++++++++상지카일룸++++++++++++++++++++857/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:08,595 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:08,963 > 398
[DEBUG|collector_api.py:200] 2021-02-03 15:46:09,229 > ++++++++++++++서암기계공업++++++++++++++++++++858/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:09,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:09,570 > 399
[DEBUG|collector_api.py:200] 2021-02-03 15:46:09,803 > ++++++++++++++선진뷰티사이언스++++++++++++++++++++859/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:09,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:10,179 > 400
[DEBUG|collector_api.py:200] 2021-02-03 15:46:10,345 > ++++++++++++++성창오토텍++++++++++++++++++++860/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:10,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:10,785 > 401
[DEBUG|collector_api.py:200] 2021-02-03 15:46:11,022 > ++++++++++++++세보엠이씨++++++++++++++++++++861/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:11,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:11,392 > 402
[DEBUG|collector_api.py:200] 2021-02-03 15:46:11,643 > ++++++++++++++세종메디칼++++++++++++++++++++862/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:11,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:12,000 > 403
[DEBUG|collector_api.py:200] 2021-02-03 15:46:12,253 > ++++++++++++++세코닉스++++++++++++++++++++863/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:12,254 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:12,608 > 404
[DEBUG|collector_api.py:200] 2021-02-03 15:46:12,848 > ++++++++++++++셀루메드++++++++++++++++++++864/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:12,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:13,216 > 405
[DEBUG|collector_api.py:200] 2021-02-03 15:46:13,452 > ++++++++++++++셀바스헬스케어++++++++++++++++++++865/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:13,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:13,824 > 406
[DEBUG|collector_api.py:200] 2021-02-03 15:46:14,077 > ++++++++++++++셀트리온제약++++++++++++++++++++866/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:14,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:14,431 > 407
[DEBUG|collector_api.py:200] 2021-02-03 15:46:14,684 > ++++++++++++++소리바다++++++++++++++++++++867/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:14,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:15,038 > 408
[DEBUG|collector_api.py:200] 2021-02-03 15:46:15,314 > ++++++++++++++스튜디오산타클로스++++++++++++++++++++868/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:15,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:15,645 > 409
[DEBUG|collector_api.py:200] 2021-02-03 15:46:15,884 > ++++++++++++++스페코++++++++++++++++++++869/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:15,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:16,252 > 410
[DEBUG|collector_api.py:200] 2021-02-03 15:46:16,510 > ++++++++++++++승일++++++++++++++++++++870/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:16,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:16,861 > 411
[DEBUG|collector_api.py:200] 2021-02-03 15:46:17,109 > ++++++++++++++시스웍++++++++++++++++++++871/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:17,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:17,468 > 412
[DEBUG|collector_api.py:200] 2021-02-03 15:46:17,713 > ++++++++++++++심텍++++++++++++++++++++872/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:17,714 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:18,077 > 413
[DEBUG|collector_api.py:200] 2021-02-03 15:46:18,300 > ++++++++++++++쌍용정보통신++++++++++++++++++++873/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:18,300 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:18,685 > 414
[DEBUG|collector_api.py:200] 2021-02-03 15:46:18,914 > ++++++++++++++씨유메디칼++++++++++++++++++++874/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:18,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:19,292 > 415
[DEBUG|collector_api.py:200] 2021-02-03 15:46:19,519 > ++++++++++++++씨케이에이치++++++++++++++++++++875/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:19,520 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:19,898 > 416
[DEBUG|collector_api.py:200] 2021-02-03 15:46:20,136 > ++++++++++++++아나패스++++++++++++++++++++876/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:20,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:20,505 > 417
[DEBUG|collector_api.py:200] 2021-02-03 15:46:20,746 > ++++++++++++++아이센스++++++++++++++++++++877/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:20,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:21,113 > 418
[DEBUG|collector_api.py:200] 2021-02-03 15:46:21,340 > ++++++++++++++아이씨디++++++++++++++++++++878/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:21,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:21,720 > 419
[DEBUG|collector_api.py:200] 2021-02-03 15:46:21,974 > ++++++++++++++아이씨케이++++++++++++++++++++879/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:21,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:22,329 > 420
[DEBUG|collector_api.py:200] 2021-02-03 15:46:22,569 > ++++++++++++++아이오케이++++++++++++++++++++880/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:22,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:22,936 > 421
[DEBUG|collector_api.py:200] 2021-02-03 15:46:23,180 > ++++++++++++++아이원스++++++++++++++++++++881/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:23,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:23,542 > 422
[DEBUG|collector_api.py:200] 2021-02-03 15:46:23,788 > ++++++++++++++아이즈비전++++++++++++++++++++882/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:23,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:24,150 > 423
[DEBUG|collector_api.py:200] 2021-02-03 15:46:24,395 > ++++++++++++++아이티센++++++++++++++++++++883/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:24,395 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:24,756 > 424
[DEBUG|collector_api.py:200] 2021-02-03 15:46:25,002 > ++++++++++++++알리코제약++++++++++++++++++++884/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:25,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:25,363 > 425
[DEBUG|collector_api.py:200] 2021-02-03 15:46:25,593 > ++++++++++++++알에프세미++++++++++++++++++++885/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:25,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:25,971 > 426
[DEBUG|collector_api.py:200] 2021-02-03 15:46:26,209 > ++++++++++++++알에프텍++++++++++++++++++++886/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:26,209 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:26,579 > 427
[DEBUG|collector_api.py:200] 2021-02-03 15:46:26,826 > ++++++++++++++애니플러스++++++++++++++++++++887/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:26,826 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:27,186 > 428
[DEBUG|collector_api.py:200] 2021-02-03 15:46:27,404 > ++++++++++++++어보브반도체++++++++++++++++++++888/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:27,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:27,793 > 429
[DEBUG|collector_api.py:200] 2021-02-03 15:46:28,058 > ++++++++++++++에스아이리소스++++++++++++++++++++889/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:28,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:28,400 > 430
[DEBUG|collector_api.py:200] 2021-02-03 15:46:28,642 > ++++++++++++++에스앤에스텍++++++++++++++++++++890/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:28,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:29,006 > 431
[DEBUG|collector_api.py:200] 2021-02-03 15:46:29,264 > ++++++++++++++에스에너지++++++++++++++++++++891/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:29,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:29,615 > 432
[DEBUG|collector_api.py:200] 2021-02-03 15:46:29,862 > ++++++++++++++에스코넥++++++++++++++++++++892/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:29,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:30,222 > 433
[DEBUG|collector_api.py:200] 2021-02-03 15:46:30,453 > ++++++++++++++에쎈테크++++++++++++++++++++893/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:30,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:30,829 > 434
[DEBUG|collector_api.py:200] 2021-02-03 15:46:31,112 > ++++++++++++++에이루트++++++++++++++++++++894/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:31,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:31,436 > 435
[DEBUG|collector_api.py:200] 2021-02-03 15:46:31,670 > ++++++++++++++에이스토리++++++++++++++++++++895/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:31,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:32,045 > 436
[DEBUG|collector_api.py:200] 2021-02-03 15:46:32,247 > ++++++++++++++에이티넘인베스트++++++++++++++++++++896/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:32,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:32,651 > 437
[DEBUG|collector_api.py:200] 2021-02-03 15:46:32,903 > ++++++++++++++엑사이엔씨++++++++++++++++++++897/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:32,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:33,259 > 438
[DEBUG|collector_api.py:200] 2021-02-03 15:46:33,509 > ++++++++++++++엑세스바이오++++++++++++++++++++898/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:33,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:33,867 > 439
[DEBUG|collector_api.py:200] 2021-02-03 15:46:34,129 > ++++++++++++++엑스큐어++++++++++++++++++++899/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:34,129 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:34,473 > 440
[DEBUG|collector_api.py:200] 2021-02-03 15:46:34,705 > ++++++++++++++엑시콘++++++++++++++++++++900/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:34,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:35,081 > 441
[DEBUG|collector_api.py:200] 2021-02-03 15:46:35,337 > ++++++++++++++엔피케이++++++++++++++++++++901/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:35,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:35,689 > 442
[DEBUG|collector_api.py:200] 2021-02-03 15:46:35,932 > ++++++++++++++엠게임++++++++++++++++++++902/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:35,933 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:36,295 > 443
[DEBUG|collector_api.py:200] 2021-02-03 15:46:36,536 > ++++++++++++++엠벤처투자++++++++++++++++++++903/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:36,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:36,903 > 444
[DEBUG|collector_api.py:200] 2021-02-03 15:46:37,170 > ++++++++++++++엠씨넥스++++++++++++++++++++904/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:37,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:37,511 > 445
[DEBUG|collector_api.py:200] 2021-02-03 15:46:37,731 > ++++++++++++++영화테크++++++++++++++++++++905/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:37,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:38,119 > 446
[DEBUG|collector_api.py:200] 2021-02-03 15:46:38,338 > ++++++++++++++오공++++++++++++++++++++906/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:38,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:38,725 > 447
[DEBUG|collector_api.py:200] 2021-02-03 15:46:38,961 > ++++++++++++++오스템임플란트++++++++++++++++++++907/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:38,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:39,334 > 448
[DEBUG|collector_api.py:200] 2021-02-03 15:46:39,568 > ++++++++++++++오픈베이스++++++++++++++++++++908/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:39,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:39,942 > 449
[DEBUG|collector_api.py:200] 2021-02-03 15:46:40,207 > ++++++++++++++옵티시스++++++++++++++++++++909/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:40,207 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:40,549 > 450
[DEBUG|collector_api.py:200] 2021-02-03 15:46:40,788 > ++++++++++++++와이더플래닛++++++++++++++++++++910/2888
[DEBUG|open_api.py:656] 2021-02-03 15:46:40,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:46:41,156 > 451
[DEBUG|open_api.py:696] 2021-02-03 15:46:41,173 > 와이더플래닛 테이블이 daily_craw db 에 없다. 새로 생성! 
[INFO|collector_api.py:557] 2021-02-03 15:46:41,359 > daily_craw.와이더플래닛 업데이트 완료 321820
[INFO|collector_api.py:558] 2021-02-03 15:46:41,359 > daily_buy_list 업데이트 중..
[INFO|collector_api.py:565] 2021-02-03 15:46:41,369 > 321820 와이더플래닛 - daily_buy_list.`20190102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,417 > 321820 와이더플래닛 - daily_buy_list.`20190103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,446 > 321820 와이더플래닛 - daily_buy_list.`20190104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,476 > 321820 와이더플래닛 - daily_buy_list.`20190107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,505 > 321820 와이더플래닛 - daily_buy_list.`20190108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,534 > 321820 와이더플래닛 - daily_buy_list.`20190109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,562 > 321820 와이더플래닛 - daily_buy_list.`20190110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,592 > 321820 와이더플래닛 - daily_buy_list.`20190111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,631 > 321820 와이더플래닛 - daily_buy_list.`20190114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,693 > 321820 와이더플래닛 - daily_buy_list.`20190115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,721 > 321820 와이더플래닛 - daily_buy_list.`20190116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,747 > 321820 와이더플래닛 - daily_buy_list.`20190117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,775 > 321820 와이더플래닛 - daily_buy_list.`20190118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,805 > 321820 와이더플래닛 - daily_buy_list.`20190121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,837 > 321820 와이더플래닛 - daily_buy_list.`20190122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,874 > 321820 와이더플래닛 - daily_buy_list.`20190123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,903 > 321820 와이더플래닛 - daily_buy_list.`20190124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,932 > 321820 와이더플래닛 - daily_buy_list.`20190125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,959 > 321820 와이더플래닛 - daily_buy_list.`20190128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:41,987 > 321820 와이더플래닛 - daily_buy_list.`20190129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,017 > 321820 와이더플래닛 - daily_buy_list.`20190130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,048 > 321820 와이더플래닛 - daily_buy_list.`20190131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,078 > 321820 와이더플래닛 - daily_buy_list.`20190201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,106 > 321820 와이더플래닛 - daily_buy_list.`20190207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,135 > 321820 와이더플래닛 - daily_buy_list.`20190208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,167 > 321820 와이더플래닛 - daily_buy_list.`20190211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,196 > 321820 와이더플래닛 - daily_buy_list.`20190212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,226 > 321820 와이더플래닛 - daily_buy_list.`20190213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,256 > 321820 와이더플래닛 - daily_buy_list.`20190214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,284 > 321820 와이더플래닛 - daily_buy_list.`20190215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,312 > 321820 와이더플래닛 - daily_buy_list.`20190218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,340 > 321820 와이더플래닛 - daily_buy_list.`20190219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,369 > 321820 와이더플래닛 - daily_buy_list.`20190220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,399 > 321820 와이더플래닛 - daily_buy_list.`20190221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,429 > 321820 와이더플래닛 - daily_buy_list.`20190222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,459 > 321820 와이더플래닛 - daily_buy_list.`20190225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,487 > 321820 와이더플래닛 - daily_buy_list.`20190226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,517 > 321820 와이더플래닛 - daily_buy_list.`20190227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,544 > 321820 와이더플래닛 - daily_buy_list.`20190228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,573 > 321820 와이더플래닛 - daily_buy_list.`20190304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,607 > 321820 와이더플래닛 - daily_buy_list.`20190305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,635 > 321820 와이더플래닛 - daily_buy_list.`20190306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,662 > 321820 와이더플래닛 - daily_buy_list.`20190307` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,690 > 321820 와이더플래닛 - daily_buy_list.`20190308` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,718 > 321820 와이더플래닛 - daily_buy_list.`20190311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,748 > 321820 와이더플래닛 - daily_buy_list.`20190312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,777 > 321820 와이더플래닛 - daily_buy_list.`20190313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,809 > 321820 와이더플래닛 - daily_buy_list.`20190314` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,837 > 321820 와이더플래닛 - daily_buy_list.`20190315` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,868 > 321820 와이더플래닛 - daily_buy_list.`20190318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,898 > 321820 와이더플래닛 - daily_buy_list.`20190319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,927 > 321820 와이더플래닛 - daily_buy_list.`20190320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,955 > 321820 와이더플래닛 - daily_buy_list.`20190321` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:42,978 > 321820 와이더플래닛 - daily_buy_list.`20190322` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,003 > 321820 와이더플래닛 - daily_buy_list.`20190325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,027 > 321820 와이더플래닛 - daily_buy_list.`20190326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,050 > 321820 와이더플래닛 - daily_buy_list.`20190327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,079 > 321820 와이더플래닛 - daily_buy_list.`20190328` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,108 > 321820 와이더플래닛 - daily_buy_list.`20190329` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,139 > 321820 와이더플래닛 - daily_buy_list.`20190401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,167 > 321820 와이더플래닛 - daily_buy_list.`20190402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,198 > 321820 와이더플래닛 - daily_buy_list.`20190403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,227 > 321820 와이더플래닛 - daily_buy_list.`20190404` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,257 > 321820 와이더플래닛 - daily_buy_list.`20190405` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,287 > 321820 와이더플래닛 - daily_buy_list.`20190408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,316 > 321820 와이더플래닛 - daily_buy_list.`20190409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,346 > 321820 와이더플래닛 - daily_buy_list.`20190410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,378 > 321820 와이더플래닛 - daily_buy_list.`20190411` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,408 > 321820 와이더플래닛 - daily_buy_list.`20190412` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,437 > 321820 와이더플래닛 - daily_buy_list.`20190415` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,469 > 321820 와이더플래닛 - daily_buy_list.`20190416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,497 > 321820 와이더플래닛 - daily_buy_list.`20190417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,525 > 321820 와이더플래닛 - daily_buy_list.`20190418` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,553 > 321820 와이더플래닛 - daily_buy_list.`20190419` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,582 > 321820 와이더플래닛 - daily_buy_list.`20190422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,616 > 321820 와이더플래닛 - daily_buy_list.`20190423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,644 > 321820 와이더플래닛 - daily_buy_list.`20190424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,672 > 321820 와이더플래닛 - daily_buy_list.`20190425` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,702 > 321820 와이더플래닛 - daily_buy_list.`20190426` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,730 > 321820 와이더플래닛 - daily_buy_list.`20190429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,760 > 321820 와이더플래닛 - daily_buy_list.`20190430` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,790 > 321820 와이더플래닛 - daily_buy_list.`20190502` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,823 > 321820 와이더플래닛 - daily_buy_list.`20190503` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,853 > 321820 와이더플래닛 - daily_buy_list.`20190507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,883 > 321820 와이더플래닛 - daily_buy_list.`20190508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,913 > 321820 와이더플래닛 - daily_buy_list.`20190509` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,946 > 321820 와이더플래닛 - daily_buy_list.`20190510` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:43,973 > 321820 와이더플래닛 - daily_buy_list.`20190513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,003 > 321820 와이더플래닛 - daily_buy_list.`20190514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,032 > 321820 와이더플래닛 - daily_buy_list.`20190515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,068 > 321820 와이더플래닛 - daily_buy_list.`20190516` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,097 > 321820 와이더플래닛 - daily_buy_list.`20190517` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,129 > 321820 와이더플래닛 - daily_buy_list.`20190520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,157 > 321820 와이더플래닛 - daily_buy_list.`20190521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,187 > 321820 와이더플래닛 - daily_buy_list.`20190522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,218 > 321820 와이더플래닛 - daily_buy_list.`20190523` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,247 > 321820 와이더플래닛 - daily_buy_list.`20190524` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,277 > 321820 와이더플래닛 - daily_buy_list.`20190527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,304 > 321820 와이더플래닛 - daily_buy_list.`20190528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,334 > 321820 와이더플래닛 - daily_buy_list.`20190529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,364 > 321820 와이더플래닛 - daily_buy_list.`20190530` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,395 > 321820 와이더플래닛 - daily_buy_list.`20190531` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,426 > 321820 와이더플래닛 - daily_buy_list.`20190603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,454 > 321820 와이더플래닛 - daily_buy_list.`20190604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,486 > 321820 와이더플래닛 - daily_buy_list.`20190605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,515 > 321820 와이더플래닛 - daily_buy_list.`20190607` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,546 > 321820 와이더플래닛 - daily_buy_list.`20190610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,577 > 321820 와이더플래닛 - daily_buy_list.`20190611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,610 > 321820 와이더플래닛 - daily_buy_list.`20190612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,640 > 321820 와이더플래닛 - daily_buy_list.`20190613` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,667 > 321820 와이더플래닛 - daily_buy_list.`20190614` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,689 > 321820 와이더플래닛 - daily_buy_list.`20190617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,711 > 321820 와이더플래닛 - daily_buy_list.`20190618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,732 > 321820 와이더플래닛 - daily_buy_list.`20190619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,755 > 321820 와이더플래닛 - daily_buy_list.`20190620` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,784 > 321820 와이더플래닛 - daily_buy_list.`20190621` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,816 > 321820 와이더플래닛 - daily_buy_list.`20190624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,846 > 321820 와이더플래닛 - daily_buy_list.`20190625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,877 > 321820 와이더플래닛 - daily_buy_list.`20190626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,906 > 321820 와이더플래닛 - daily_buy_list.`20190627` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,949 > 321820 와이더플래닛 - daily_buy_list.`20190628` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:44,987 > 321820 와이더플래닛 - daily_buy_list.`20190701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,016 > 321820 와이더플래닛 - daily_buy_list.`20190702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,045 > 321820 와이더플래닛 - daily_buy_list.`20190703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,073 > 321820 와이더플래닛 - daily_buy_list.`20190704` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,103 > 321820 와이더플래닛 - daily_buy_list.`20190705` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,131 > 321820 와이더플래닛 - daily_buy_list.`20190708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,159 > 321820 와이더플래닛 - daily_buy_list.`20190709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,189 > 321820 와이더플래닛 - daily_buy_list.`20190710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,218 > 321820 와이더플래닛 - daily_buy_list.`20190711` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,249 > 321820 와이더플래닛 - daily_buy_list.`20190712` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,278 > 321820 와이더플래닛 - daily_buy_list.`20190715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,305 > 321820 와이더플래닛 - daily_buy_list.`20190716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,336 > 321820 와이더플래닛 - daily_buy_list.`20190717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,365 > 321820 와이더플래닛 - daily_buy_list.`20190718` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,398 > 321820 와이더플래닛 - daily_buy_list.`20190719` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,427 > 321820 와이더플래닛 - daily_buy_list.`20190722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,458 > 321820 와이더플래닛 - daily_buy_list.`20190723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,486 > 321820 와이더플래닛 - daily_buy_list.`20190724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,514 > 321820 와이더플래닛 - daily_buy_list.`20190725` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,542 > 321820 와이더플래닛 - daily_buy_list.`20190726` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,571 > 321820 와이더플래닛 - daily_buy_list.`20190729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,604 > 321820 와이더플래닛 - daily_buy_list.`20190730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,642 > 321820 와이더플래닛 - daily_buy_list.`20190731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,670 > 321820 와이더플래닛 - daily_buy_list.`20190801` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,700 > 321820 와이더플래닛 - daily_buy_list.`20190802` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,730 > 321820 와이더플래닛 - daily_buy_list.`20190805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,757 > 321820 와이더플래닛 - daily_buy_list.`20190806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,785 > 321820 와이더플래닛 - daily_buy_list.`20190807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,814 > 321820 와이더플래닛 - daily_buy_list.`20190808` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,844 > 321820 와이더플래닛 - daily_buy_list.`20190809` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,872 > 321820 와이더플래닛 - daily_buy_list.`20190812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,903 > 321820 와이더플래닛 - daily_buy_list.`20190813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,932 > 321820 와이더플래닛 - daily_buy_list.`20190814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,961 > 321820 와이더플래닛 - daily_buy_list.`20190816` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:45,991 > 321820 와이더플래닛 - daily_buy_list.`20190819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,019 > 321820 와이더플래닛 - daily_buy_list.`20190820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,048 > 321820 와이더플래닛 - daily_buy_list.`20190821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,076 > 321820 와이더플래닛 - daily_buy_list.`20190822` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,106 > 321820 와이더플래닛 - daily_buy_list.`20190823` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,135 > 321820 와이더플래닛 - daily_buy_list.`20190826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,164 > 321820 와이더플래닛 - daily_buy_list.`20190827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,194 > 321820 와이더플래닛 - daily_buy_list.`20190828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,221 > 321820 와이더플래닛 - daily_buy_list.`20190829` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,249 > 321820 와이더플래닛 - daily_buy_list.`20190830` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,277 > 321820 와이더플래닛 - daily_buy_list.`20190902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,308 > 321820 와이더플래닛 - daily_buy_list.`20190903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,337 > 321820 와이더플래닛 - daily_buy_list.`20190904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,365 > 321820 와이더플래닛 - daily_buy_list.`20190905` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,390 > 321820 와이더플래닛 - daily_buy_list.`20190906` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,414 > 321820 와이더플래닛 - daily_buy_list.`20190909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,437 > 321820 와이더플래닛 - daily_buy_list.`20190910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,461 > 321820 와이더플래닛 - daily_buy_list.`20190911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,490 > 321820 와이더플래닛 - daily_buy_list.`20190916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,519 > 321820 와이더플래닛 - daily_buy_list.`20190917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,549 > 321820 와이더플래닛 - daily_buy_list.`20190918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,578 > 321820 와이더플래닛 - daily_buy_list.`20190919` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,608 > 321820 와이더플래닛 - daily_buy_list.`20190920` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,638 > 321820 와이더플래닛 - daily_buy_list.`20190923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,668 > 321820 와이더플래닛 - daily_buy_list.`20190924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,696 > 321820 와이더플래닛 - daily_buy_list.`20190925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,723 > 321820 와이더플래닛 - daily_buy_list.`20190926` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,752 > 321820 와이더플래닛 - daily_buy_list.`20190927` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,781 > 321820 와이더플래닛 - daily_buy_list.`20190930` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,813 > 321820 와이더플래닛 - daily_buy_list.`20191001` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,843 > 321820 와이더플래닛 - daily_buy_list.`20191002` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,872 > 321820 와이더플래닛 - daily_buy_list.`20191004` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,901 > 321820 와이더플래닛 - daily_buy_list.`20191007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,928 > 321820 와이더플래닛 - daily_buy_list.`20191008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,957 > 321820 와이더플래닛 - daily_buy_list.`20191010` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:46,986 > 321820 와이더플래닛 - daily_buy_list.`20191011` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,017 > 321820 와이더플래닛 - daily_buy_list.`20191014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,046 > 321820 와이더플래닛 - daily_buy_list.`20191015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,075 > 321820 와이더플래닛 - daily_buy_list.`20191016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,105 > 321820 와이더플래닛 - daily_buy_list.`20191017` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,135 > 321820 와이더플래닛 - daily_buy_list.`20191018` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,164 > 321820 와이더플래닛 - daily_buy_list.`20191021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,194 > 321820 와이더플래닛 - daily_buy_list.`20191022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,222 > 321820 와이더플래닛 - daily_buy_list.`20191023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,254 > 321820 와이더플래닛 - daily_buy_list.`20191024` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,283 > 321820 와이더플래닛 - daily_buy_list.`20191025` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,314 > 321820 와이더플래닛 - daily_buy_list.`20191028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,342 > 321820 와이더플래닛 - daily_buy_list.`20191029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,371 > 321820 와이더플래닛 - daily_buy_list.`20191030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,401 > 321820 와이더플래닛 - daily_buy_list.`20191031` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,429 > 321820 와이더플래닛 - daily_buy_list.`20191101` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,460 > 321820 와이더플래닛 - daily_buy_list.`20191104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,489 > 321820 와이더플래닛 - daily_buy_list.`20191105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,517 > 321820 와이더플래닛 - daily_buy_list.`20191106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,545 > 321820 와이더플래닛 - daily_buy_list.`20191107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,574 > 321820 와이더플래닛 - daily_buy_list.`20191108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,604 > 321820 와이더플래닛 - daily_buy_list.`20191111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,632 > 321820 와이더플래닛 - daily_buy_list.`20191112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,660 > 321820 와이더플래닛 - daily_buy_list.`20191113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,689 > 321820 와이더플래닛 - daily_buy_list.`20191114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,717 > 321820 와이더플래닛 - daily_buy_list.`20191115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,745 > 321820 와이더플래닛 - daily_buy_list.`20191118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,776 > 321820 와이더플래닛 - daily_buy_list.`20191119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,805 > 321820 와이더플래닛 - daily_buy_list.`20191120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,834 > 321820 와이더플래닛 - daily_buy_list.`20191121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,864 > 321820 와이더플래닛 - daily_buy_list.`20191122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,893 > 321820 와이더플래닛 - daily_buy_list.`20191125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,922 > 321820 와이더플래닛 - daily_buy_list.`20191126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,951 > 321820 와이더플래닛 - daily_buy_list.`20191127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:47,983 > 321820 와이더플래닛 - daily_buy_list.`20191128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,014 > 321820 와이더플래닛 - daily_buy_list.`20191129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,043 > 321820 와이더플래닛 - daily_buy_list.`20191202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,068 > 321820 와이더플래닛 - daily_buy_list.`20191203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,090 > 321820 와이더플래닛 - daily_buy_list.`20191204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,113 > 321820 와이더플래닛 - daily_buy_list.`20191205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,138 > 321820 와이더플래닛 - daily_buy_list.`20191206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,166 > 321820 와이더플래닛 - daily_buy_list.`20191209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,199 > 321820 와이더플래닛 - daily_buy_list.`20191210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,228 > 321820 와이더플래닛 - daily_buy_list.`20191211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,258 > 321820 와이더플래닛 - daily_buy_list.`20191212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,287 > 321820 와이더플래닛 - daily_buy_list.`20191213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,316 > 321820 와이더플래닛 - daily_buy_list.`20191216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,346 > 321820 와이더플래닛 - daily_buy_list.`20191217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,379 > 321820 와이더플래닛 - daily_buy_list.`20191218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,409 > 321820 와이더플래닛 - daily_buy_list.`20191219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,441 > 321820 와이더플래닛 - daily_buy_list.`20191220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,471 > 321820 와이더플래닛 - daily_buy_list.`20191223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,498 > 321820 와이더플래닛 - daily_buy_list.`20191224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,527 > 321820 와이더플래닛 - daily_buy_list.`20191226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,555 > 321820 와이더플래닛 - daily_buy_list.`20191227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,585 > 321820 와이더플래닛 - daily_buy_list.`20191230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,614 > 321820 와이더플래닛 - daily_buy_list.`20200102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,645 > 321820 와이더플래닛 - daily_buy_list.`20200103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,674 > 321820 와이더플래닛 - daily_buy_list.`20200106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,702 > 321820 와이더플래닛 - daily_buy_list.`20200107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,732 > 321820 와이더플래닛 - daily_buy_list.`20200108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,761 > 321820 와이더플래닛 - daily_buy_list.`20200109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,794 > 321820 와이더플래닛 - daily_buy_list.`20200110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,823 > 321820 와이더플래닛 - daily_buy_list.`20200113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,854 > 321820 와이더플래닛 - daily_buy_list.`20200114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,884 > 321820 와이더플래닛 - daily_buy_list.`20200115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,913 > 321820 와이더플래닛 - daily_buy_list.`20200116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,941 > 321820 와이더플래닛 - daily_buy_list.`20200117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:48,971 > 321820 와이더플래닛 - daily_buy_list.`20200120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,003 > 321820 와이더플래닛 - daily_buy_list.`20200121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,031 > 321820 와이더플래닛 - daily_buy_list.`20200122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,060 > 321820 와이더플래닛 - daily_buy_list.`20200123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,088 > 321820 와이더플래닛 - daily_buy_list.`20200128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,118 > 321820 와이더플래닛 - daily_buy_list.`20200129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,148 > 321820 와이더플래닛 - daily_buy_list.`20200130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,178 > 321820 와이더플래닛 - daily_buy_list.`20200131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,210 > 321820 와이더플래닛 - daily_buy_list.`20200203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,240 > 321820 와이더플래닛 - daily_buy_list.`20200204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,271 > 321820 와이더플래닛 - daily_buy_list.`20200205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,299 > 321820 와이더플래닛 - daily_buy_list.`20200206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,329 > 321820 와이더플래닛 - daily_buy_list.`20200207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,360 > 321820 와이더플래닛 - daily_buy_list.`20200210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,392 > 321820 와이더플래닛 - daily_buy_list.`20200211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,423 > 321820 와이더플래닛 - daily_buy_list.`20200212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,455 > 321820 와이더플래닛 - daily_buy_list.`20200213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,485 > 321820 와이더플래닛 - daily_buy_list.`20200214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,513 > 321820 와이더플래닛 - daily_buy_list.`20200217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,542 > 321820 와이더플래닛 - daily_buy_list.`20200218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,573 > 321820 와이더플래닛 - daily_buy_list.`20200219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,606 > 321820 와이더플래닛 - daily_buy_list.`20200220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,652 > 321820 와이더플래닛 - daily_buy_list.`20200221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,680 > 321820 와이더플래닛 - daily_buy_list.`20200224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,706 > 321820 와이더플래닛 - daily_buy_list.`20200225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,736 > 321820 와이더플래닛 - daily_buy_list.`20200226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,764 > 321820 와이더플래닛 - daily_buy_list.`20200227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,788 > 321820 와이더플래닛 - daily_buy_list.`20200228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,815 > 321820 와이더플래닛 - daily_buy_list.`20200302` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,839 > 321820 와이더플래닛 - daily_buy_list.`20200303` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,863 > 321820 와이더플래닛 - daily_buy_list.`20200304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,892 > 321820 와이더플래닛 - daily_buy_list.`20200305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,923 > 321820 와이더플래닛 - daily_buy_list.`20200306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,952 > 321820 와이더플래닛 - daily_buy_list.`20200309` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:49,984 > 321820 와이더플래닛 - daily_buy_list.`20200310` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,015 > 321820 와이더플래닛 - daily_buy_list.`20200311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,044 > 321820 와이더플래닛 - daily_buy_list.`20200312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,074 > 321820 와이더플래닛 - daily_buy_list.`20200313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,104 > 321820 와이더플래닛 - daily_buy_list.`20200316` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,132 > 321820 와이더플래닛 - daily_buy_list.`20200317` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,161 > 321820 와이더플래닛 - daily_buy_list.`20200318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,191 > 321820 와이더플래닛 - daily_buy_list.`20200319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,220 > 321820 와이더플래닛 - daily_buy_list.`20200320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,250 > 321820 와이더플래닛 - daily_buy_list.`20200323` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,280 > 321820 와이더플래닛 - daily_buy_list.`20200324` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,306 > 321820 와이더플래닛 - daily_buy_list.`20200325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,336 > 321820 와이더플래닛 - daily_buy_list.`20200326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,365 > 321820 와이더플래닛 - daily_buy_list.`20200327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,397 > 321820 와이더플래닛 - daily_buy_list.`20200330` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,428 > 321820 와이더플래닛 - daily_buy_list.`20200331` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,456 > 321820 와이더플래닛 - daily_buy_list.`20200401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,486 > 321820 와이더플래닛 - daily_buy_list.`20200402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,516 > 321820 와이더플래닛 - daily_buy_list.`20200403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,548 > 321820 와이더플래닛 - daily_buy_list.`20200406` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,577 > 321820 와이더플래닛 - daily_buy_list.`20200407` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,608 > 321820 와이더플래닛 - daily_buy_list.`20200408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,637 > 321820 와이더플래닛 - daily_buy_list.`20200409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,667 > 321820 와이더플래닛 - daily_buy_list.`20200410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,695 > 321820 와이더플래닛 - daily_buy_list.`20200413` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,725 > 321820 와이더플래닛 - daily_buy_list.`20200414` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,756 > 321820 와이더플래닛 - daily_buy_list.`20200416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,787 > 321820 와이더플래닛 - daily_buy_list.`20200417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,818 > 321820 와이더플래닛 - daily_buy_list.`20200420` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,847 > 321820 와이더플래닛 - daily_buy_list.`20200421` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,877 > 321820 와이더플래닛 - daily_buy_list.`20200422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,906 > 321820 와이더플래닛 - daily_buy_list.`20200423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,935 > 321820 와이더플래닛 - daily_buy_list.`20200424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,964 > 321820 와이더플래닛 - daily_buy_list.`20200427` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:50,995 > 321820 와이더플래닛 - daily_buy_list.`20200428` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,024 > 321820 와이더플래닛 - daily_buy_list.`20200429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,054 > 321820 와이더플래닛 - daily_buy_list.`20200504` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,086 > 321820 와이더플래닛 - daily_buy_list.`20200506` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,114 > 321820 와이더플래닛 - daily_buy_list.`20200507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,143 > 321820 와이더플래닛 - daily_buy_list.`20200508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,174 > 321820 와이더플래닛 - daily_buy_list.`20200511` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,204 > 321820 와이더플래닛 - daily_buy_list.`20200512` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,234 > 321820 와이더플래닛 - daily_buy_list.`20200513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,264 > 321820 와이더플래닛 - daily_buy_list.`20200514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,294 > 321820 와이더플래닛 - daily_buy_list.`20200515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,323 > 321820 와이더플래닛 - daily_buy_list.`20200518` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,350 > 321820 와이더플래닛 - daily_buy_list.`20200519` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,380 > 321820 와이더플래닛 - daily_buy_list.`20200520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,410 > 321820 와이더플래닛 - daily_buy_list.`20200521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,442 > 321820 와이더플래닛 - daily_buy_list.`20200522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,475 > 321820 와이더플래닛 - daily_buy_list.`20200525` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,497 > 321820 와이더플래닛 - daily_buy_list.`20200526` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,522 > 321820 와이더플래닛 - daily_buy_list.`20200527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,546 > 321820 와이더플래닛 - daily_buy_list.`20200528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,571 > 321820 와이더플래닛 - daily_buy_list.`20200529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,603 > 321820 와이더플래닛 - daily_buy_list.`20200601` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,632 > 321820 와이더플래닛 - daily_buy_list.`20200602` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,662 > 321820 와이더플래닛 - daily_buy_list.`20200603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,691 > 321820 와이더플래닛 - daily_buy_list.`20200604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,723 > 321820 와이더플래닛 - daily_buy_list.`20200605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,752 > 321820 와이더플래닛 - daily_buy_list.`20200608` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,782 > 321820 와이더플래닛 - daily_buy_list.`20200609` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,814 > 321820 와이더플래닛 - daily_buy_list.`20200610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,845 > 321820 와이더플래닛 - daily_buy_list.`20200611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,874 > 321820 와이더플래닛 - daily_buy_list.`20200612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,904 > 321820 와이더플래닛 - daily_buy_list.`20200615` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,932 > 321820 와이더플래닛 - daily_buy_list.`20200616` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,963 > 321820 와이더플래닛 - daily_buy_list.`20200617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:51,992 > 321820 와이더플래닛 - daily_buy_list.`20200618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,023 > 321820 와이더플래닛 - daily_buy_list.`20200619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,052 > 321820 와이더플래닛 - daily_buy_list.`20200622` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,082 > 321820 와이더플래닛 - daily_buy_list.`20200623` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,111 > 321820 와이더플래닛 - daily_buy_list.`20200624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,139 > 321820 와이더플래닛 - daily_buy_list.`20200625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,168 > 321820 와이더플래닛 - daily_buy_list.`20200626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,197 > 321820 와이더플래닛 - daily_buy_list.`20200629` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,227 > 321820 와이더플래닛 - daily_buy_list.`20200630` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,254 > 321820 와이더플래닛 - daily_buy_list.`20200701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,285 > 321820 와이더플래닛 - daily_buy_list.`20200702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,314 > 321820 와이더플래닛 - daily_buy_list.`20200703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,342 > 321820 와이더플래닛 - daily_buy_list.`20200706` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,373 > 321820 와이더플래닛 - daily_buy_list.`20200707` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,403 > 321820 와이더플래닛 - daily_buy_list.`20200708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,434 > 321820 와이더플래닛 - daily_buy_list.`20200709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,463 > 321820 와이더플래닛 - daily_buy_list.`20200710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,493 > 321820 와이더플래닛 - daily_buy_list.`20200713` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,522 > 321820 와이더플래닛 - daily_buy_list.`20200714` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,550 > 321820 와이더플래닛 - daily_buy_list.`20200715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,579 > 321820 와이더플래닛 - daily_buy_list.`20200716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,612 > 321820 와이더플래닛 - daily_buy_list.`20200717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,642 > 321820 와이더플래닛 - daily_buy_list.`20200720` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,671 > 321820 와이더플래닛 - daily_buy_list.`20200721` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,700 > 321820 와이더플래닛 - daily_buy_list.`20200722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,734 > 321820 와이더플래닛 - daily_buy_list.`20200723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,763 > 321820 와이더플래닛 - daily_buy_list.`20200724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,794 > 321820 와이더플래닛 - daily_buy_list.`20200727` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,823 > 321820 와이더플래닛 - daily_buy_list.`20200728` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,853 > 321820 와이더플래닛 - daily_buy_list.`20200729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,885 > 321820 와이더플래닛 - daily_buy_list.`20200730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,917 > 321820 와이더플래닛 - daily_buy_list.`20200731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,946 > 321820 와이더플래닛 - daily_buy_list.`20200803` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,970 > 321820 와이더플래닛 - daily_buy_list.`20200804` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:52,994 > 321820 와이더플래닛 - daily_buy_list.`20200805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,019 > 321820 와이더플래닛 - daily_buy_list.`20200806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,043 > 321820 와이더플래닛 - daily_buy_list.`20200807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,072 > 321820 와이더플래닛 - daily_buy_list.`20200810` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,100 > 321820 와이더플래닛 - daily_buy_list.`20200811` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,131 > 321820 와이더플래닛 - daily_buy_list.`20200812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,166 > 321820 와이더플래닛 - daily_buy_list.`20200813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,195 > 321820 와이더플래닛 - daily_buy_list.`20200814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,226 > 321820 와이더플래닛 - daily_buy_list.`20200818` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,254 > 321820 와이더플래닛 - daily_buy_list.`20200819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,283 > 321820 와이더플래닛 - daily_buy_list.`20200820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,313 > 321820 와이더플래닛 - daily_buy_list.`20200821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,342 > 321820 와이더플래닛 - daily_buy_list.`20200824` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,372 > 321820 와이더플래닛 - daily_buy_list.`20200825` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,403 > 321820 와이더플래닛 - daily_buy_list.`20200826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,434 > 321820 와이더플래닛 - daily_buy_list.`20200827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,465 > 321820 와이더플래닛 - daily_buy_list.`20200828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,495 > 321820 와이더플래닛 - daily_buy_list.`20200831` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,524 > 321820 와이더플래닛 - daily_buy_list.`20200901` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,554 > 321820 와이더플래닛 - daily_buy_list.`20200902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,585 > 321820 와이더플래닛 - daily_buy_list.`20200903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,616 > 321820 와이더플래닛 - daily_buy_list.`20200904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,644 > 321820 와이더플래닛 - daily_buy_list.`20200907` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,670 > 321820 와이더플래닛 - daily_buy_list.`20200908` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,698 > 321820 와이더플래닛 - daily_buy_list.`20200909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,725 > 321820 와이더플래닛 - daily_buy_list.`20200910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,751 > 321820 와이더플래닛 - daily_buy_list.`20200911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,778 > 321820 와이더플래닛 - daily_buy_list.`20200914` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,807 > 321820 와이더플래닛 - daily_buy_list.`20200915` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,835 > 321820 와이더플래닛 - daily_buy_list.`20200916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,863 > 321820 와이더플래닛 - daily_buy_list.`20200917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,890 > 321820 와이더플래닛 - daily_buy_list.`20200918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,918 > 321820 와이더플래닛 - daily_buy_list.`20200921` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,947 > 321820 와이더플래닛 - daily_buy_list.`20200922` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:53,976 > 321820 와이더플래닛 - daily_buy_list.`20200923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:54,004 > 321820 와이더플래닛 - daily_buy_list.`20200924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:54,034 > 321820 와이더플래닛 - daily_buy_list.`20200925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:46:54,061 > 321820 와이더플래닛 - daily_buy_list.`20200928` 업데이트
[DEBUG|open_api.py:303] 2021-02-03 15:47:03,535 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:47:03,536 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:47:03,536 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:47:03,536 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:47:03,536 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:47:03,536 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:47:03,536 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:47:03,549 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:47:03,573 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:47:03,574 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:47:03,574 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:47:03,606 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:47:03,640 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 15:47:06,021 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-03 15:47:06,022 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 15:47:06,071 > ++++++++++++++와이더플래닛++++++++++++++++++++910/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:06,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:06,072 > 1
[INFO|collector_api.py:557] 2021-02-03 15:47:07,268 > daily_craw.와이더플래닛 업데이트 완료 321820
[INFO|collector_api.py:558] 2021-02-03 15:47:07,268 > daily_buy_list 업데이트 중..
[INFO|collector_api.py:565] 2021-02-03 15:47:07,278 > 321820 와이더플래닛 - daily_buy_list.`20190102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,307 > 321820 와이더플래닛 - daily_buy_list.`20190103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,329 > 321820 와이더플래닛 - daily_buy_list.`20190104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,350 > 321820 와이더플래닛 - daily_buy_list.`20190107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,374 > 321820 와이더플래닛 - daily_buy_list.`20190108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,395 > 321820 와이더플래닛 - daily_buy_list.`20190109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,419 > 321820 와이더플래닛 - daily_buy_list.`20190110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,442 > 321820 와이더플래닛 - daily_buy_list.`20190111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,466 > 321820 와이더플래닛 - daily_buy_list.`20190114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,490 > 321820 와이더플래닛 - daily_buy_list.`20190115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,516 > 321820 와이더플래닛 - daily_buy_list.`20190116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,538 > 321820 와이더플래닛 - daily_buy_list.`20190117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,561 > 321820 와이더플래닛 - daily_buy_list.`20190118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,583 > 321820 와이더플래닛 - daily_buy_list.`20190121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,606 > 321820 와이더플래닛 - daily_buy_list.`20190122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,631 > 321820 와이더플래닛 - daily_buy_list.`20190123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,651 > 321820 와이더플래닛 - daily_buy_list.`20190124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,672 > 321820 와이더플래닛 - daily_buy_list.`20190125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,694 > 321820 와이더플래닛 - daily_buy_list.`20190128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,717 > 321820 와이더플래닛 - daily_buy_list.`20190129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,740 > 321820 와이더플래닛 - daily_buy_list.`20190130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,762 > 321820 와이더플래닛 - daily_buy_list.`20190131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,786 > 321820 와이더플래닛 - daily_buy_list.`20190201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,809 > 321820 와이더플래닛 - daily_buy_list.`20190207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,837 > 321820 와이더플래닛 - daily_buy_list.`20190208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,861 > 321820 와이더플래닛 - daily_buy_list.`20190211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,884 > 321820 와이더플래닛 - daily_buy_list.`20190212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,910 > 321820 와이더플래닛 - daily_buy_list.`20190213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,934 > 321820 와이더플래닛 - daily_buy_list.`20190214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,958 > 321820 와이더플래닛 - daily_buy_list.`20190215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:07,980 > 321820 와이더플래닛 - daily_buy_list.`20190218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,002 > 321820 와이더플래닛 - daily_buy_list.`20190219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,026 > 321820 와이더플래닛 - daily_buy_list.`20190220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,049 > 321820 와이더플래닛 - daily_buy_list.`20190221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,073 > 321820 와이더플래닛 - daily_buy_list.`20190222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,098 > 321820 와이더플래닛 - daily_buy_list.`20190225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,122 > 321820 와이더플래닛 - daily_buy_list.`20190226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,146 > 321820 와이더플래닛 - daily_buy_list.`20190227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,168 > 321820 와이더플래닛 - daily_buy_list.`20190228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,191 > 321820 와이더플래닛 - daily_buy_list.`20190304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,214 > 321820 와이더플래닛 - daily_buy_list.`20190305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,237 > 321820 와이더플래닛 - daily_buy_list.`20190306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,260 > 321820 와이더플래닛 - daily_buy_list.`20190307` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,285 > 321820 와이더플래닛 - daily_buy_list.`20190308` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,306 > 321820 와이더플래닛 - daily_buy_list.`20190311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,330 > 321820 와이더플래닛 - daily_buy_list.`20190312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,355 > 321820 와이더플래닛 - daily_buy_list.`20190313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,376 > 321820 와이더플래닛 - daily_buy_list.`20190314` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,399 > 321820 와이더플래닛 - daily_buy_list.`20190315` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,421 > 321820 와이더플래닛 - daily_buy_list.`20190318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,444 > 321820 와이더플래닛 - daily_buy_list.`20190319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,465 > 321820 와이더플래닛 - daily_buy_list.`20190320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,490 > 321820 와이더플래닛 - daily_buy_list.`20190321` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,510 > 321820 와이더플래닛 - daily_buy_list.`20190322` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,531 > 321820 와이더플래닛 - daily_buy_list.`20190325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,556 > 321820 와이더플래닛 - daily_buy_list.`20190326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,577 > 321820 와이더플래닛 - daily_buy_list.`20190327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,601 > 321820 와이더플래닛 - daily_buy_list.`20190328` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,624 > 321820 와이더플래닛 - daily_buy_list.`20190329` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,646 > 321820 와이더플래닛 - daily_buy_list.`20190401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,667 > 321820 와이더플래닛 - daily_buy_list.`20190402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,692 > 321820 와이더플래닛 - daily_buy_list.`20190403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,714 > 321820 와이더플래닛 - daily_buy_list.`20190404` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,738 > 321820 와이더플래닛 - daily_buy_list.`20190405` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,766 > 321820 와이더플래닛 - daily_buy_list.`20190408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,787 > 321820 와이더플래닛 - daily_buy_list.`20190409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,814 > 321820 와이더플래닛 - daily_buy_list.`20190410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,838 > 321820 와이더플래닛 - daily_buy_list.`20190411` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,861 > 321820 와이더플래닛 - daily_buy_list.`20190412` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,883 > 321820 와이더플래닛 - daily_buy_list.`20190415` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,908 > 321820 와이더플래닛 - daily_buy_list.`20190416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,930 > 321820 와이더플래닛 - daily_buy_list.`20190417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,954 > 321820 와이더플래닛 - daily_buy_list.`20190418` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,976 > 321820 와이더플래닛 - daily_buy_list.`20190419` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:08,998 > 321820 와이더플래닛 - daily_buy_list.`20190422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,020 > 321820 와이더플래닛 - daily_buy_list.`20190423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,043 > 321820 와이더플래닛 - daily_buy_list.`20190424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,066 > 321820 와이더플래닛 - daily_buy_list.`20190425` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,088 > 321820 와이더플래닛 - daily_buy_list.`20190426` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,113 > 321820 와이더플래닛 - daily_buy_list.`20190429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,137 > 321820 와이더플래닛 - daily_buy_list.`20190430` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,158 > 321820 와이더플래닛 - daily_buy_list.`20190502` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,181 > 321820 와이더플래닛 - daily_buy_list.`20190503` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,202 > 321820 와이더플래닛 - daily_buy_list.`20190507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,226 > 321820 와이더플래닛 - daily_buy_list.`20190508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,248 > 321820 와이더플래닛 - daily_buy_list.`20190509` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,271 > 321820 와이더플래닛 - daily_buy_list.`20190510` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,293 > 321820 와이더플래닛 - daily_buy_list.`20190513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,316 > 321820 와이더플래닛 - daily_buy_list.`20190514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,340 > 321820 와이더플래닛 - daily_buy_list.`20190515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,362 > 321820 와이더플래닛 - daily_buy_list.`20190516` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,385 > 321820 와이더플래닛 - daily_buy_list.`20190517` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,407 > 321820 와이더플래닛 - daily_buy_list.`20190520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,428 > 321820 와이더플래닛 - daily_buy_list.`20190521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,450 > 321820 와이더플래닛 - daily_buy_list.`20190522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,472 > 321820 와이더플래닛 - daily_buy_list.`20190523` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,493 > 321820 와이더플래닛 - daily_buy_list.`20190524` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,517 > 321820 와이더플래닛 - daily_buy_list.`20190527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,540 > 321820 와이더플래닛 - daily_buy_list.`20190528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,564 > 321820 와이더플래닛 - daily_buy_list.`20190529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,587 > 321820 와이더플래닛 - daily_buy_list.`20190530` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,609 > 321820 와이더플래닛 - daily_buy_list.`20190531` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,631 > 321820 와이더플래닛 - daily_buy_list.`20190603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,651 > 321820 와이더플래닛 - daily_buy_list.`20190604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,672 > 321820 와이더플래닛 - daily_buy_list.`20190605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,694 > 321820 와이더플래닛 - daily_buy_list.`20190607` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,719 > 321820 와이더플래닛 - daily_buy_list.`20190610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,740 > 321820 와이더플래닛 - daily_buy_list.`20190611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,762 > 321820 와이더플래닛 - daily_buy_list.`20190612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,784 > 321820 와이더플래닛 - daily_buy_list.`20190613` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,804 > 321820 와이더플래닛 - daily_buy_list.`20190614` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,826 > 321820 와이더플래닛 - daily_buy_list.`20190617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,847 > 321820 와이더플래닛 - daily_buy_list.`20190618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,869 > 321820 와이더플래닛 - daily_buy_list.`20190619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,890 > 321820 와이더플래닛 - daily_buy_list.`20190620` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,914 > 321820 와이더플래닛 - daily_buy_list.`20190621` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,939 > 321820 와이더플래닛 - daily_buy_list.`20190624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,966 > 321820 와이더플래닛 - daily_buy_list.`20190625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:09,989 > 321820 와이더플래닛 - daily_buy_list.`20190626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,009 > 321820 와이더플래닛 - daily_buy_list.`20190627` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,033 > 321820 와이더플래닛 - daily_buy_list.`20190628` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,053 > 321820 와이더플래닛 - daily_buy_list.`20190701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,075 > 321820 와이더플래닛 - daily_buy_list.`20190702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,096 > 321820 와이더플래닛 - daily_buy_list.`20190703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,120 > 321820 와이더플래닛 - daily_buy_list.`20190704` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,144 > 321820 와이더플래닛 - daily_buy_list.`20190705` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,166 > 321820 와이더플래닛 - daily_buy_list.`20190708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,190 > 321820 와이더플래닛 - daily_buy_list.`20190709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,212 > 321820 와이더플래닛 - daily_buy_list.`20190710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,235 > 321820 와이더플래닛 - daily_buy_list.`20190711` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,257 > 321820 와이더플래닛 - daily_buy_list.`20190712` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,280 > 321820 와이더플래닛 - daily_buy_list.`20190715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,301 > 321820 와이더플래닛 - daily_buy_list.`20190716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,324 > 321820 와이더플래닛 - daily_buy_list.`20190717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,348 > 321820 와이더플래닛 - daily_buy_list.`20190718` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,372 > 321820 와이더플래닛 - daily_buy_list.`20190719` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,395 > 321820 와이더플래닛 - daily_buy_list.`20190722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,418 > 321820 와이더플래닛 - daily_buy_list.`20190723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,442 > 321820 와이더플래닛 - daily_buy_list.`20190724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,465 > 321820 와이더플래닛 - daily_buy_list.`20190725` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,486 > 321820 와이더플래닛 - daily_buy_list.`20190726` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,508 > 321820 와이더플래닛 - daily_buy_list.`20190729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,532 > 321820 와이더플래닛 - daily_buy_list.`20190730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,560 > 321820 와이더플래닛 - daily_buy_list.`20190731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,581 > 321820 와이더플래닛 - daily_buy_list.`20190801` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,606 > 321820 와이더플래닛 - daily_buy_list.`20190802` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,628 > 321820 와이더플래닛 - daily_buy_list.`20190805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,649 > 321820 와이더플래닛 - daily_buy_list.`20190806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,670 > 321820 와이더플래닛 - daily_buy_list.`20190807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,692 > 321820 와이더플래닛 - daily_buy_list.`20190808` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,713 > 321820 와이더플래닛 - daily_buy_list.`20190809` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,736 > 321820 와이더플래닛 - daily_buy_list.`20190812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,758 > 321820 와이더플래닛 - daily_buy_list.`20190813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,781 > 321820 와이더플래닛 - daily_buy_list.`20190814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,803 > 321820 와이더플래닛 - daily_buy_list.`20190816` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,826 > 321820 와이더플래닛 - daily_buy_list.`20190819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,849 > 321820 와이더플래닛 - daily_buy_list.`20190820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,873 > 321820 와이더플래닛 - daily_buy_list.`20190821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,893 > 321820 와이더플래닛 - daily_buy_list.`20190822` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,915 > 321820 와이더플래닛 - daily_buy_list.`20190823` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,938 > 321820 와이더플래닛 - daily_buy_list.`20190826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,960 > 321820 와이더플래닛 - daily_buy_list.`20190827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:10,982 > 321820 와이더플래닛 - daily_buy_list.`20190828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,004 > 321820 와이더플래닛 - daily_buy_list.`20190829` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,026 > 321820 와이더플래닛 - daily_buy_list.`20190830` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,049 > 321820 와이더플래닛 - daily_buy_list.`20190902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,072 > 321820 와이더플래닛 - daily_buy_list.`20190903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,094 > 321820 와이더플래닛 - daily_buy_list.`20190904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,116 > 321820 와이더플래닛 - daily_buy_list.`20190905` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,139 > 321820 와이더플래닛 - daily_buy_list.`20190906` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,163 > 321820 와이더플래닛 - daily_buy_list.`20190909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,186 > 321820 와이더플래닛 - daily_buy_list.`20190910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,208 > 321820 와이더플래닛 - daily_buy_list.`20190911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,231 > 321820 와이더플래닛 - daily_buy_list.`20190916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,254 > 321820 와이더플래닛 - daily_buy_list.`20190917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,277 > 321820 와이더플래닛 - daily_buy_list.`20190918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,299 > 321820 와이더플래닛 - daily_buy_list.`20190919` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,323 > 321820 와이더플래닛 - daily_buy_list.`20190920` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,346 > 321820 와이더플래닛 - daily_buy_list.`20190923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,368 > 321820 와이더플래닛 - daily_buy_list.`20190924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,392 > 321820 와이더플래닛 - daily_buy_list.`20190925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,413 > 321820 와이더플래닛 - daily_buy_list.`20190926` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,435 > 321820 와이더플래닛 - daily_buy_list.`20190927` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,458 > 321820 와이더플래닛 - daily_buy_list.`20190930` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,482 > 321820 와이더플래닛 - daily_buy_list.`20191001` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,503 > 321820 와이더플래닛 - daily_buy_list.`20191002` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,525 > 321820 와이더플래닛 - daily_buy_list.`20191004` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,549 > 321820 와이더플래닛 - daily_buy_list.`20191007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,569 > 321820 와이더플래닛 - daily_buy_list.`20191008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,593 > 321820 와이더플래닛 - daily_buy_list.`20191010` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,617 > 321820 와이더플래닛 - daily_buy_list.`20191011` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,638 > 321820 와이더플래닛 - daily_buy_list.`20191014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,660 > 321820 와이더플래닛 - daily_buy_list.`20191015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,682 > 321820 와이더플래닛 - daily_buy_list.`20191016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,703 > 321820 와이더플래닛 - daily_buy_list.`20191017` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,724 > 321820 와이더플래닛 - daily_buy_list.`20191018` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,750 > 321820 와이더플래닛 - daily_buy_list.`20191021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,773 > 321820 와이더플래닛 - daily_buy_list.`20191022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,797 > 321820 와이더플래닛 - daily_buy_list.`20191023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,820 > 321820 와이더플래닛 - daily_buy_list.`20191024` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,845 > 321820 와이더플래닛 - daily_buy_list.`20191025` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,867 > 321820 와이더플래닛 - daily_buy_list.`20191028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,890 > 321820 와이더플래닛 - daily_buy_list.`20191029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,912 > 321820 와이더플래닛 - daily_buy_list.`20191030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,935 > 321820 와이더플래닛 - daily_buy_list.`20191031` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,958 > 321820 와이더플래닛 - daily_buy_list.`20191101` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:11,980 > 321820 와이더플래닛 - daily_buy_list.`20191104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,002 > 321820 와이더플래닛 - daily_buy_list.`20191105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,025 > 321820 와이더플래닛 - daily_buy_list.`20191106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,049 > 321820 와이더플래닛 - daily_buy_list.`20191107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,072 > 321820 와이더플래닛 - daily_buy_list.`20191108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,094 > 321820 와이더플래닛 - daily_buy_list.`20191111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,116 > 321820 와이더플래닛 - daily_buy_list.`20191112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,137 > 321820 와이더플래닛 - daily_buy_list.`20191113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,161 > 321820 와이더플래닛 - daily_buy_list.`20191114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,184 > 321820 와이더플래닛 - daily_buy_list.`20191115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,207 > 321820 와이더플래닛 - daily_buy_list.`20191118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,231 > 321820 와이더플래닛 - daily_buy_list.`20191119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,252 > 321820 와이더플래닛 - daily_buy_list.`20191120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,276 > 321820 와이더플래닛 - daily_buy_list.`20191121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,298 > 321820 와이더플래닛 - daily_buy_list.`20191122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,320 > 321820 와이더플래닛 - daily_buy_list.`20191125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,343 > 321820 와이더플래닛 - daily_buy_list.`20191126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,366 > 321820 와이더플래닛 - daily_buy_list.`20191127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,389 > 321820 와이더플래닛 - daily_buy_list.`20191128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,412 > 321820 와이더플래닛 - daily_buy_list.`20191129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,434 > 321820 와이더플래닛 - daily_buy_list.`20191202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,455 > 321820 와이더플래닛 - daily_buy_list.`20191203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,477 > 321820 와이더플래닛 - daily_buy_list.`20191204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,499 > 321820 와이더플래닛 - daily_buy_list.`20191205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,520 > 321820 와이더플래닛 - daily_buy_list.`20191206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,542 > 321820 와이더플래닛 - daily_buy_list.`20191209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,564 > 321820 와이더플래닛 - daily_buy_list.`20191210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,586 > 321820 와이더플래닛 - daily_buy_list.`20191211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,609 > 321820 와이더플래닛 - daily_buy_list.`20191212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,632 > 321820 와이더플래닛 - daily_buy_list.`20191213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,653 > 321820 와이더플래닛 - daily_buy_list.`20191216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,676 > 321820 와이더플래닛 - daily_buy_list.`20191217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,697 > 321820 와이더플래닛 - daily_buy_list.`20191218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,720 > 321820 와이더플래닛 - daily_buy_list.`20191219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,742 > 321820 와이더플래닛 - daily_buy_list.`20191220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,765 > 321820 와이더플래닛 - daily_buy_list.`20191223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,787 > 321820 와이더플래닛 - daily_buy_list.`20191224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,810 > 321820 와이더플래닛 - daily_buy_list.`20191226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,832 > 321820 와이더플래닛 - daily_buy_list.`20191227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,854 > 321820 와이더플래닛 - daily_buy_list.`20191230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,878 > 321820 와이더플래닛 - daily_buy_list.`20200102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,900 > 321820 와이더플래닛 - daily_buy_list.`20200103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,922 > 321820 와이더플래닛 - daily_buy_list.`20200106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,943 > 321820 와이더플래닛 - daily_buy_list.`20200107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,965 > 321820 와이더플래닛 - daily_buy_list.`20200108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:12,986 > 321820 와이더플래닛 - daily_buy_list.`20200109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,010 > 321820 와이더플래닛 - daily_buy_list.`20200110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,032 > 321820 와이더플래닛 - daily_buy_list.`20200113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,055 > 321820 와이더플래닛 - daily_buy_list.`20200114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,077 > 321820 와이더플래닛 - daily_buy_list.`20200115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,100 > 321820 와이더플래닛 - daily_buy_list.`20200116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,123 > 321820 와이더플래닛 - daily_buy_list.`20200117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,145 > 321820 와이더플래닛 - daily_buy_list.`20200120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,167 > 321820 와이더플래닛 - daily_buy_list.`20200121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,193 > 321820 와이더플래닛 - daily_buy_list.`20200122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,214 > 321820 와이더플래닛 - daily_buy_list.`20200123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,238 > 321820 와이더플래닛 - daily_buy_list.`20200128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,260 > 321820 와이더플래닛 - daily_buy_list.`20200129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,282 > 321820 와이더플래닛 - daily_buy_list.`20200130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,305 > 321820 와이더플래닛 - daily_buy_list.`20200131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,327 > 321820 와이더플래닛 - daily_buy_list.`20200203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,352 > 321820 와이더플래닛 - daily_buy_list.`20200204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,375 > 321820 와이더플래닛 - daily_buy_list.`20200205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,396 > 321820 와이더플래닛 - daily_buy_list.`20200206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,420 > 321820 와이더플래닛 - daily_buy_list.`20200207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,442 > 321820 와이더플래닛 - daily_buy_list.`20200210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,464 > 321820 와이더플래닛 - daily_buy_list.`20200211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,487 > 321820 와이더플래닛 - daily_buy_list.`20200212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,509 > 321820 와이더플래닛 - daily_buy_list.`20200213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,532 > 321820 와이더플래닛 - daily_buy_list.`20200214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,555 > 321820 와이더플래닛 - daily_buy_list.`20200217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,577 > 321820 와이더플래닛 - daily_buy_list.`20200218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,597 > 321820 와이더플래닛 - daily_buy_list.`20200219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,622 > 321820 와이더플래닛 - daily_buy_list.`20200220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,645 > 321820 와이더플래닛 - daily_buy_list.`20200221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,667 > 321820 와이더플래닛 - daily_buy_list.`20200224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,689 > 321820 와이더플래닛 - daily_buy_list.`20200225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,711 > 321820 와이더플래닛 - daily_buy_list.`20200226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,734 > 321820 와이더플래닛 - daily_buy_list.`20200227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,755 > 321820 와이더플래닛 - daily_buy_list.`20200228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,777 > 321820 와이더플래닛 - daily_buy_list.`20200302` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,798 > 321820 와이더플래닛 - daily_buy_list.`20200303` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,819 > 321820 와이더플래닛 - daily_buy_list.`20200304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,843 > 321820 와이더플래닛 - daily_buy_list.`20200305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,868 > 321820 와이더플래닛 - daily_buy_list.`20200306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,889 > 321820 와이더플래닛 - daily_buy_list.`20200309` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,913 > 321820 와이더플래닛 - daily_buy_list.`20200310` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,937 > 321820 와이더플래닛 - daily_buy_list.`20200311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,962 > 321820 와이더플래닛 - daily_buy_list.`20200312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:13,982 > 321820 와이더플래닛 - daily_buy_list.`20200313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,005 > 321820 와이더플래닛 - daily_buy_list.`20200316` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,026 > 321820 와이더플래닛 - daily_buy_list.`20200317` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,051 > 321820 와이더플래닛 - daily_buy_list.`20200318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,074 > 321820 와이더플래닛 - daily_buy_list.`20200319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,096 > 321820 와이더플래닛 - daily_buy_list.`20200320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,119 > 321820 와이더플래닛 - daily_buy_list.`20200323` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,140 > 321820 와이더플래닛 - daily_buy_list.`20200324` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,162 > 321820 와이더플래닛 - daily_buy_list.`20200325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,186 > 321820 와이더플래닛 - daily_buy_list.`20200326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,210 > 321820 와이더플래닛 - daily_buy_list.`20200327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,234 > 321820 와이더플래닛 - daily_buy_list.`20200330` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,260 > 321820 와이더플래닛 - daily_buy_list.`20200331` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,283 > 321820 와이더플래닛 - daily_buy_list.`20200401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,306 > 321820 와이더플래닛 - daily_buy_list.`20200402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,330 > 321820 와이더플래닛 - daily_buy_list.`20200403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,354 > 321820 와이더플래닛 - daily_buy_list.`20200406` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,378 > 321820 와이더플래닛 - daily_buy_list.`20200407` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,398 > 321820 와이더플래닛 - daily_buy_list.`20200408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,423 > 321820 와이더플래닛 - daily_buy_list.`20200409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,444 > 321820 와이더플래닛 - daily_buy_list.`20200410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,466 > 321820 와이더플래닛 - daily_buy_list.`20200413` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,490 > 321820 와이더플래닛 - daily_buy_list.`20200414` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,511 > 321820 와이더플래닛 - daily_buy_list.`20200416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,534 > 321820 와이더플래닛 - daily_buy_list.`20200417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,558 > 321820 와이더플래닛 - daily_buy_list.`20200420` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,582 > 321820 와이더플래닛 - daily_buy_list.`20200421` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,603 > 321820 와이더플래닛 - daily_buy_list.`20200422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,624 > 321820 와이더플래닛 - daily_buy_list.`20200423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,645 > 321820 와이더플래닛 - daily_buy_list.`20200424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,667 > 321820 와이더플래닛 - daily_buy_list.`20200427` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,689 > 321820 와이더플래닛 - daily_buy_list.`20200428` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,711 > 321820 와이더플래닛 - daily_buy_list.`20200429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,733 > 321820 와이더플래닛 - daily_buy_list.`20200504` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,756 > 321820 와이더플래닛 - daily_buy_list.`20200506` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,778 > 321820 와이더플래닛 - daily_buy_list.`20200507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,799 > 321820 와이더플래닛 - daily_buy_list.`20200508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,821 > 321820 와이더플래닛 - daily_buy_list.`20200511` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,842 > 321820 와이더플래닛 - daily_buy_list.`20200512` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,865 > 321820 와이더플래닛 - daily_buy_list.`20200513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,888 > 321820 와이더플래닛 - daily_buy_list.`20200514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,911 > 321820 와이더플래닛 - daily_buy_list.`20200515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,932 > 321820 와이더플래닛 - daily_buy_list.`20200518` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,954 > 321820 와이더플래닛 - daily_buy_list.`20200519` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:14,977 > 321820 와이더플래닛 - daily_buy_list.`20200520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,000 > 321820 와이더플래닛 - daily_buy_list.`20200521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,021 > 321820 와이더플래닛 - daily_buy_list.`20200522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,042 > 321820 와이더플래닛 - daily_buy_list.`20200525` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,065 > 321820 와이더플래닛 - daily_buy_list.`20200526` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,088 > 321820 와이더플래닛 - daily_buy_list.`20200527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,110 > 321820 와이더플래닛 - daily_buy_list.`20200528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,129 > 321820 와이더플래닛 - daily_buy_list.`20200529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,151 > 321820 와이더플래닛 - daily_buy_list.`20200601` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,173 > 321820 와이더플래닛 - daily_buy_list.`20200602` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,197 > 321820 와이더플래닛 - daily_buy_list.`20200603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,219 > 321820 와이더플래닛 - daily_buy_list.`20200604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,240 > 321820 와이더플래닛 - daily_buy_list.`20200605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,262 > 321820 와이더플래닛 - daily_buy_list.`20200608` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,285 > 321820 와이더플래닛 - daily_buy_list.`20200609` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,306 > 321820 와이더플래닛 - daily_buy_list.`20200610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,326 > 321820 와이더플래닛 - daily_buy_list.`20200611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,349 > 321820 와이더플래닛 - daily_buy_list.`20200612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,371 > 321820 와이더플래닛 - daily_buy_list.`20200615` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,394 > 321820 와이더플래닛 - daily_buy_list.`20200616` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,415 > 321820 와이더플래닛 - daily_buy_list.`20200617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,438 > 321820 와이더플래닛 - daily_buy_list.`20200618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,459 > 321820 와이더플래닛 - daily_buy_list.`20200619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,481 > 321820 와이더플래닛 - daily_buy_list.`20200622` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,505 > 321820 와이더플래닛 - daily_buy_list.`20200623` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,528 > 321820 와이더플래닛 - daily_buy_list.`20200624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,548 > 321820 와이더플래닛 - daily_buy_list.`20200625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,572 > 321820 와이더플래닛 - daily_buy_list.`20200626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,594 > 321820 와이더플래닛 - daily_buy_list.`20200629` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,616 > 321820 와이더플래닛 - daily_buy_list.`20200630` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,637 > 321820 와이더플래닛 - daily_buy_list.`20200701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,659 > 321820 와이더플래닛 - daily_buy_list.`20200702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,679 > 321820 와이더플래닛 - daily_buy_list.`20200703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,703 > 321820 와이더플래닛 - daily_buy_list.`20200706` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,727 > 321820 와이더플래닛 - daily_buy_list.`20200707` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,748 > 321820 와이더플래닛 - daily_buy_list.`20200708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,773 > 321820 와이더플래닛 - daily_buy_list.`20200709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,794 > 321820 와이더플래닛 - daily_buy_list.`20200710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,817 > 321820 와이더플래닛 - daily_buy_list.`20200713` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,837 > 321820 와이더플래닛 - daily_buy_list.`20200714` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,860 > 321820 와이더플래닛 - daily_buy_list.`20200715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,881 > 321820 와이더플래닛 - daily_buy_list.`20200716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,903 > 321820 와이더플래닛 - daily_buy_list.`20200717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,926 > 321820 와이더플래닛 - daily_buy_list.`20200720` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,950 > 321820 와이더플래닛 - daily_buy_list.`20200721` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,975 > 321820 와이더플래닛 - daily_buy_list.`20200722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:15,998 > 321820 와이더플래닛 - daily_buy_list.`20200723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,020 > 321820 와이더플래닛 - daily_buy_list.`20200724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,042 > 321820 와이더플래닛 - daily_buy_list.`20200727` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,064 > 321820 와이더플래닛 - daily_buy_list.`20200728` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,087 > 321820 와이더플래닛 - daily_buy_list.`20200729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,110 > 321820 와이더플래닛 - daily_buy_list.`20200730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,134 > 321820 와이더플래닛 - daily_buy_list.`20200731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,156 > 321820 와이더플래닛 - daily_buy_list.`20200803` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,179 > 321820 와이더플래닛 - daily_buy_list.`20200804` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,201 > 321820 와이더플래닛 - daily_buy_list.`20200805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,223 > 321820 와이더플래닛 - daily_buy_list.`20200806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,245 > 321820 와이더플래닛 - daily_buy_list.`20200807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,269 > 321820 와이더플래닛 - daily_buy_list.`20200810` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,290 > 321820 와이더플래닛 - daily_buy_list.`20200811` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,311 > 321820 와이더플래닛 - daily_buy_list.`20200812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,335 > 321820 와이더플래닛 - daily_buy_list.`20200813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,358 > 321820 와이더플래닛 - daily_buy_list.`20200814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,382 > 321820 와이더플래닛 - daily_buy_list.`20200818` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,405 > 321820 와이더플래닛 - daily_buy_list.`20200819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,426 > 321820 와이더플래닛 - daily_buy_list.`20200820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,451 > 321820 와이더플래닛 - daily_buy_list.`20200821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,474 > 321820 와이더플래닛 - daily_buy_list.`20200824` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,498 > 321820 와이더플래닛 - daily_buy_list.`20200825` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,521 > 321820 와이더플래닛 - daily_buy_list.`20200826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,545 > 321820 와이더플래닛 - daily_buy_list.`20200827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,569 > 321820 와이더플래닛 - daily_buy_list.`20200828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,591 > 321820 와이더플래닛 - daily_buy_list.`20200831` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,613 > 321820 와이더플래닛 - daily_buy_list.`20200901` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,634 > 321820 와이더플래닛 - daily_buy_list.`20200902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,655 > 321820 와이더플래닛 - daily_buy_list.`20200903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,678 > 321820 와이더플래닛 - daily_buy_list.`20200904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,701 > 321820 와이더플래닛 - daily_buy_list.`20200907` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,723 > 321820 와이더플래닛 - daily_buy_list.`20200908` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,747 > 321820 와이더플래닛 - daily_buy_list.`20200909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,769 > 321820 와이더플래닛 - daily_buy_list.`20200910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,791 > 321820 와이더플래닛 - daily_buy_list.`20200911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,815 > 321820 와이더플래닛 - daily_buy_list.`20200914` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,837 > 321820 와이더플래닛 - daily_buy_list.`20200915` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,857 > 321820 와이더플래닛 - daily_buy_list.`20200916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,881 > 321820 와이더플래닛 - daily_buy_list.`20200917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,901 > 321820 와이더플래닛 - daily_buy_list.`20200918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,925 > 321820 와이더플래닛 - daily_buy_list.`20200921` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,947 > 321820 와이더플래닛 - daily_buy_list.`20200922` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,970 > 321820 와이더플래닛 - daily_buy_list.`20200923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:16,991 > 321820 와이더플래닛 - daily_buy_list.`20200924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,014 > 321820 와이더플래닛 - daily_buy_list.`20200925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,036 > 321820 와이더플래닛 - daily_buy_list.`20200928` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,059 > 321820 와이더플래닛 - daily_buy_list.`20200929` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,089 > 321820 와이더플래닛 - daily_buy_list.`20201005` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,116 > 321820 와이더플래닛 - daily_buy_list.`20201006` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,144 > 321820 와이더플래닛 - daily_buy_list.`20201007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,173 > 321820 와이더플래닛 - daily_buy_list.`20201008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,202 > 321820 와이더플래닛 - daily_buy_list.`20201012` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,232 > 321820 와이더플래닛 - daily_buy_list.`20201013` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,260 > 321820 와이더플래닛 - daily_buy_list.`20201014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,288 > 321820 와이더플래닛 - daily_buy_list.`20201015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,319 > 321820 와이더플래닛 - daily_buy_list.`20201016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,345 > 321820 와이더플래닛 - daily_buy_list.`20201019` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,375 > 321820 와이더플래닛 - daily_buy_list.`20201020` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,404 > 321820 와이더플래닛 - daily_buy_list.`20201021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,434 > 321820 와이더플래닛 - daily_buy_list.`20201022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,464 > 321820 와이더플래닛 - daily_buy_list.`20201023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,492 > 321820 와이더플래닛 - daily_buy_list.`20201026` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,520 > 321820 와이더플래닛 - daily_buy_list.`20201027` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,547 > 321820 와이더플래닛 - daily_buy_list.`20201028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,578 > 321820 와이더플래닛 - daily_buy_list.`20201029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,600 > 321820 와이더플래닛 - daily_buy_list.`20201030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,623 > 321820 와이더플래닛 - daily_buy_list.`20201102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,644 > 321820 와이더플래닛 - daily_buy_list.`20201103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,667 > 321820 와이더플래닛 - daily_buy_list.`20201104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,695 > 321820 와이더플래닛 - daily_buy_list.`20201105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,724 > 321820 와이더플래닛 - daily_buy_list.`20201106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,751 > 321820 와이더플래닛 - daily_buy_list.`20201109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,782 > 321820 와이더플래닛 - daily_buy_list.`20201110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,813 > 321820 와이더플래닛 - daily_buy_list.`20201111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,842 > 321820 와이더플래닛 - daily_buy_list.`20201112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,870 > 321820 와이더플래닛 - daily_buy_list.`20201113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,900 > 321820 와이더플래닛 - daily_buy_list.`20201116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,927 > 321820 와이더플래닛 - daily_buy_list.`20201117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,954 > 321820 와이더플래닛 - daily_buy_list.`20201118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:17,984 > 321820 와이더플래닛 - daily_buy_list.`20201119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,013 > 321820 와이더플래닛 - daily_buy_list.`20201120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,042 > 321820 와이더플래닛 - daily_buy_list.`20201123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,071 > 321820 와이더플래닛 - daily_buy_list.`20201124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,100 > 321820 와이더플래닛 - daily_buy_list.`20201125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,127 > 321820 와이더플래닛 - daily_buy_list.`20201126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,155 > 321820 와이더플래닛 - daily_buy_list.`20201127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,185 > 321820 와이더플래닛 - daily_buy_list.`20201130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,215 > 321820 와이더플래닛 - daily_buy_list.`20201201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,243 > 321820 와이더플래닛 - daily_buy_list.`20201202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,273 > 321820 와이더플래닛 - daily_buy_list.`20201203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,300 > 321820 와이더플래닛 - daily_buy_list.`20201204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,330 > 321820 와이더플래닛 - daily_buy_list.`20201207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,359 > 321820 와이더플래닛 - daily_buy_list.`20201208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,387 > 321820 와이더플래닛 - daily_buy_list.`20201209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,415 > 321820 와이더플래닛 - daily_buy_list.`20201210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,446 > 321820 와이더플래닛 - daily_buy_list.`20201211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,476 > 321820 와이더플래닛 - daily_buy_list.`20201214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,501 > 321820 와이더플래닛 - daily_buy_list.`20201215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,529 > 321820 와이더플래닛 - daily_buy_list.`20201216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,557 > 321820 와이더플래닛 - daily_buy_list.`20201217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,586 > 321820 와이더플래닛 - daily_buy_list.`20201218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,615 > 321820 와이더플래닛 - daily_buy_list.`20201221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,643 > 321820 와이더플래닛 - daily_buy_list.`20201222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,671 > 321820 와이더플래닛 - daily_buy_list.`20201223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,698 > 321820 와이더플래닛 - daily_buy_list.`20201224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,727 > 321820 와이더플래닛 - daily_buy_list.`20201228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,759 > 321820 와이더플래닛 - daily_buy_list.`20201229` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,786 > 321820 와이더플래닛 - daily_buy_list.`20201230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,816 > 321820 와이더플래닛 - daily_buy_list.`20210104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,845 > 321820 와이더플래닛 - daily_buy_list.`20210105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,876 > 321820 와이더플래닛 - daily_buy_list.`20210106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,910 > 321820 와이더플래닛 - daily_buy_list.`20210107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,940 > 321820 와이더플래닛 - daily_buy_list.`20210108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:18,973 > 321820 와이더플래닛 - daily_buy_list.`20210111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,004 > 321820 와이더플래닛 - daily_buy_list.`20210112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,035 > 321820 와이더플래닛 - daily_buy_list.`20210113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,065 > 321820 와이더플래닛 - daily_buy_list.`20210114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,094 > 321820 와이더플래닛 - daily_buy_list.`20210115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,123 > 321820 와이더플래닛 - daily_buy_list.`20210118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,151 > 321820 와이더플래닛 - daily_buy_list.`20210119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,180 > 321820 와이더플래닛 - daily_buy_list.`20210120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,208 > 321820 와이더플래닛 - daily_buy_list.`20210121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,234 > 321820 와이더플래닛 - daily_buy_list.`20210122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,267 > 321820 와이더플래닛 - daily_buy_list.`20210125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,300 > 321820 와이더플래닛 - daily_buy_list.`20210126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,332 > 321820 와이더플래닛 - daily_buy_list.`20210127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,369 > 321820 와이더플래닛 - daily_buy_list.`20210128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,406 > 321820 와이더플래닛 - daily_buy_list.`20210129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,436 > 321820 와이더플래닛 - daily_buy_list.`20210201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:47:19,470 > 321820 와이더플래닛 - daily_buy_list.`20210202` 업데이트
[INFO|collector_api.py:575] 2021-02-03 15:47:19,502 > daily_buy_list 업데이트 완료
[DEBUG|collector_api.py:200] 2021-02-03 15:47:19,512 > ++++++++++++++와이지-원++++++++++++++++++++911/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:19,512 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:19,513 > 2
[DEBUG|collector_api.py:200] 2021-02-03 15:47:19,788 > ++++++++++++++우리바이오++++++++++++++++++++912/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:19,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:20,121 > 3
[DEBUG|collector_api.py:200] 2021-02-03 15:47:20,381 > ++++++++++++++원익QnC++++++++++++++++++++913/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:20,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:20,730 > 4
[DEBUG|collector_api.py:200] 2021-02-03 15:47:20,992 > ++++++++++++++원익큐브++++++++++++++++++++914/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:20,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:21,339 > 5
[DEBUG|collector_api.py:200] 2021-02-03 15:47:21,578 > ++++++++++++++원풍물산++++++++++++++++++++915/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:21,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:21,946 > 6
[DEBUG|collector_api.py:200] 2021-02-03 15:47:22,226 > ++++++++++++++웨이브일렉트로++++++++++++++++++++916/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:22,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:22,553 > 7
[DEBUG|collector_api.py:200] 2021-02-03 15:47:22,806 > ++++++++++++++웰크론++++++++++++++++++++917/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:22,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:23,161 > 8
[DEBUG|collector_api.py:200] 2021-02-03 15:47:23,406 > ++++++++++++++위지트++++++++++++++++++++918/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:23,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:23,767 > 9
[DEBUG|collector_api.py:200] 2021-02-03 15:47:24,031 > ++++++++++++++유니온커뮤니티++++++++++++++++++++919/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:24,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:24,373 > 10
[DEBUG|collector_api.py:200] 2021-02-03 15:47:24,617 > ++++++++++++++유니테크노++++++++++++++++++++920/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:24,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:24,981 > 11
[DEBUG|collector_api.py:200] 2021-02-03 15:47:25,230 > ++++++++++++++유비쿼스홀딩스++++++++++++++++++++921/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:25,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:25,588 > 12
[DEBUG|collector_api.py:200] 2021-02-03 15:47:25,834 > ++++++++++++++유신++++++++++++++++++++922/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:25,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:26,195 > 13
[DEBUG|collector_api.py:200] 2021-02-03 15:47:26,441 > ++++++++++++++유안타제5호스팩++++++++++++++++++++923/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:26,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:26,802 > 14
[DEBUG|collector_api.py:200] 2021-02-03 15:47:27,012 > ++++++++++++++유안타제7호스팩++++++++++++++++++++924/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:27,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:27,409 > 15
[DEBUG|collector_api.py:200] 2021-02-03 15:47:27,566 > ++++++++++++++유진스팩5호++++++++++++++++++++925/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:27,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:28,015 > 16
[DEBUG|collector_api.py:200] 2021-02-03 15:47:28,211 > ++++++++++++++유테크++++++++++++++++++++926/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:28,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:28,623 > 17
[DEBUG|collector_api.py:200] 2021-02-03 15:47:28,870 > ++++++++++++++유티아이++++++++++++++++++++927/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:28,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:29,230 > 18
[DEBUG|collector_api.py:200] 2021-02-03 15:47:29,466 > ++++++++++++++이스트소프트++++++++++++++++++++928/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:29,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:29,837 > 19
[DEBUG|collector_api.py:200] 2021-02-03 15:47:30,079 > ++++++++++++++이스트아시아홀딩스++++++++++++++++++++929/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:30,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:30,445 > 20
[DEBUG|collector_api.py:200] 2021-02-03 15:47:30,702 > ++++++++++++++이엠네트웍스++++++++++++++++++++930/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:30,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:31,054 > 21
[DEBUG|collector_api.py:200] 2021-02-03 15:47:31,321 > ++++++++++++++이엠넷++++++++++++++++++++931/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:31,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:31,662 > 22
[DEBUG|collector_api.py:200] 2021-02-03 15:47:31,916 > ++++++++++++++이지바이오++++++++++++++++++++932/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:31,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:32,269 > 23
[DEBUG|collector_api.py:200] 2021-02-03 15:47:32,460 > ++++++++++++++인베니아++++++++++++++++++++933/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:32,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:32,877 > 24
[DEBUG|collector_api.py:200] 2021-02-03 15:47:33,133 > ++++++++++++++인텍플러스++++++++++++++++++++934/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:33,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:33,484 > 25
[DEBUG|collector_api.py:200] 2021-02-03 15:47:33,734 > ++++++++++++++자비스++++++++++++++++++++935/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:33,735 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:34,091 > 26
[DEBUG|collector_api.py:200] 2021-02-03 15:47:34,337 > ++++++++++++++자이글++++++++++++++++++++936/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:34,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:34,698 > 27
[DEBUG|collector_api.py:200] 2021-02-03 15:47:34,972 > ++++++++++++++장원테크++++++++++++++++++++937/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:34,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:35,304 > 28
[DEBUG|collector_api.py:200] 2021-02-03 15:47:35,540 > ++++++++++++++정상제이엘에스++++++++++++++++++++938/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:35,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:35,912 > 29
[DEBUG|collector_api.py:200] 2021-02-03 15:47:36,150 > ++++++++++++++제우스++++++++++++++++++++939/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:36,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:36,519 > 30
[DEBUG|collector_api.py:200] 2021-02-03 15:47:36,770 > ++++++++++++++제이엠티++++++++++++++++++++940/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:36,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:37,127 > 31
[DEBUG|collector_api.py:200] 2021-02-03 15:47:37,373 > ++++++++++++++제일제강++++++++++++++++++++941/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:37,373 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:37,733 > 32
[DEBUG|collector_api.py:200] 2021-02-03 15:47:37,998 > ++++++++++++++제주반도체++++++++++++++++++++942/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:37,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:38,341 > 33
[DEBUG|collector_api.py:200] 2021-02-03 15:47:38,580 > ++++++++++++++젬백스++++++++++++++++++++943/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:38,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:38,948 > 34
[DEBUG|collector_api.py:200] 2021-02-03 15:47:39,215 > ++++++++++++++조아제약++++++++++++++++++++944/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:39,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:39,555 > 35
[DEBUG|collector_api.py:200] 2021-02-03 15:47:39,816 > ++++++++++++++주성엔지니어링++++++++++++++++++++945/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:39,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:40,164 > 36
[DEBUG|collector_api.py:200] 2021-02-03 15:47:40,411 > ++++++++++++++지엔씨에너지++++++++++++++++++++946/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:40,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:40,771 > 37
[DEBUG|collector_api.py:200] 2021-02-03 15:47:41,031 > ++++++++++++++지엔코++++++++++++++++++++947/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:41,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:41,379 > 38
[DEBUG|collector_api.py:200] 2021-02-03 15:47:41,624 > ++++++++++++++캐스텍코리아++++++++++++++++++++948/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:41,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:41,987 > 39
[DEBUG|collector_api.py:200] 2021-02-03 15:47:42,234 > ++++++++++++++케이비제20호스팩++++++++++++++++++++949/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:42,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:42,594 > 40
[DEBUG|collector_api.py:200] 2021-02-03 15:47:42,800 > ++++++++++++++케이피엠테크++++++++++++++++++++950/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:42,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:43,201 > 41
[DEBUG|collector_api.py:200] 2021-02-03 15:47:43,442 > ++++++++++++++케이피티유++++++++++++++++++++951/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:43,442 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:43,808 > 42
[DEBUG|collector_api.py:200] 2021-02-03 15:47:44,058 > ++++++++++++++켄코아에어로스페이스++++++++++++++++++++952/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:44,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:44,415 > 43
[DEBUG|collector_api.py:200] 2021-02-03 15:47:44,599 > ++++++++++++++코렌++++++++++++++++++++953/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:44,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:45,023 > 44
[DEBUG|collector_api.py:200] 2021-02-03 15:47:45,270 > ++++++++++++++코프라++++++++++++++++++++954/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:45,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:45,629 > 45
[DEBUG|collector_api.py:200] 2021-02-03 15:47:45,882 > ++++++++++++++크로바하이텍++++++++++++++++++++955/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:45,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:46,237 > 46
[DEBUG|collector_api.py:200] 2021-02-03 15:47:46,468 > ++++++++++++++클리노믹스++++++++++++++++++++956/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:46,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:46,845 > 47
[DEBUG|collector_api.py:200] 2021-02-03 15:47:47,011 > ++++++++++++++키네마스터++++++++++++++++++++957/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:47,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:47,452 > 48
[DEBUG|collector_api.py:200] 2021-02-03 15:47:47,692 > ++++++++++++++토탈소프트++++++++++++++++++++958/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:47,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:48,060 > 49
[DEBUG|collector_api.py:200] 2021-02-03 15:47:48,293 > ++++++++++++++트루윈++++++++++++++++++++959/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:48,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:48,667 > 50
[DEBUG|collector_api.py:200] 2021-02-03 15:47:48,906 > ++++++++++++++특수건설++++++++++++++++++++960/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:48,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:49,274 > 51
[DEBUG|collector_api.py:200] 2021-02-03 15:47:49,534 > ++++++++++++++티앤알바이오팹++++++++++++++++++++961/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:49,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:49,882 > 52
[DEBUG|collector_api.py:200] 2021-02-03 15:47:50,128 > ++++++++++++++티에스이++++++++++++++++++++962/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:50,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:50,489 > 53
[DEBUG|collector_api.py:200] 2021-02-03 15:47:50,791 > ++++++++++++++파라텍++++++++++++++++++++963/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:50,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:51,097 > 54
[DEBUG|collector_api.py:200] 2021-02-03 15:47:51,360 > ++++++++++++++파세코++++++++++++++++++++964/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:51,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:51,705 > 55
[DEBUG|collector_api.py:200] 2021-02-03 15:47:51,944 > ++++++++++++++파커스++++++++++++++++++++965/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:51,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:52,311 > 56
[DEBUG|collector_api.py:200] 2021-02-03 15:47:52,545 > ++++++++++++++패션플랫폼++++++++++++++++++++966/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:52,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:52,920 > 57
[DEBUG|collector_api.py:200] 2021-02-03 15:47:53,157 > ++++++++++++++푸드웰++++++++++++++++++++967/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:53,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:53,528 > 58
[DEBUG|collector_api.py:200] 2021-02-03 15:47:53,784 > ++++++++++++++프로스테믹스++++++++++++++++++++968/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:53,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:54,135 > 59
[DEBUG|collector_api.py:200] 2021-02-03 15:47:54,374 > ++++++++++++++프리시젼바이오++++++++++++++++++++969/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:54,374 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:54,742 > 60
[DEBUG|collector_api.py:200] 2021-02-03 15:47:54,909 > ++++++++++++++피델릭스++++++++++++++++++++970/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:54,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:55,349 > 61
[DEBUG|collector_api.py:200] 2021-02-03 15:47:55,607 > ++++++++++++++피에스엠씨++++++++++++++++++++971/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:55,608 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:55,958 > 62
[DEBUG|collector_api.py:200] 2021-02-03 15:47:56,201 > ++++++++++++++하나금융15호스팩++++++++++++++++++++972/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:56,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:56,564 > 63
[DEBUG|collector_api.py:200] 2021-02-03 15:47:56,742 > ++++++++++++++하나기술++++++++++++++++++++973/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:56,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:57,173 > 64
[DEBUG|collector_api.py:200] 2021-02-03 15:47:57,330 > ++++++++++++++하이즈항공++++++++++++++++++++974/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:57,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:57,781 > 65
[DEBUG|collector_api.py:200] 2021-02-03 15:47:58,007 > ++++++++++++++한국맥널티++++++++++++++++++++975/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:58,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:58,387 > 66
[DEBUG|collector_api.py:200] 2021-02-03 15:47:58,618 > ++++++++++++++한국코퍼레이션++++++++++++++++++++976/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:58,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:58,994 > 67
[DEBUG|collector_api.py:200] 2021-02-03 15:47:59,237 > ++++++++++++++한양디지텍++++++++++++++++++++977/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:59,238 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:47:59,600 > 68
[DEBUG|collector_api.py:200] 2021-02-03 15:47:59,871 > ++++++++++++++한일진공++++++++++++++++++++978/2888
[DEBUG|open_api.py:656] 2021-02-03 15:47:59,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:00,208 > 69
[DEBUG|collector_api.py:200] 2021-02-03 15:48:00,452 > ++++++++++++++한일화학++++++++++++++++++++979/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:00,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:00,816 > 70
[DEBUG|collector_api.py:200] 2021-02-03 15:48:01,064 > ++++++++++++++해성산업++++++++++++++++++++980/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:01,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:01,423 > 71
[DEBUG|collector_api.py:200] 2021-02-03 15:48:01,683 > ++++++++++++++현대바이오++++++++++++++++++++981/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:01,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:02,031 > 72
[DEBUG|collector_api.py:200] 2021-02-03 15:48:02,283 > ++++++++++++++화성밸브++++++++++++++++++++982/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:02,283 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:02,639 > 73
[DEBUG|collector_api.py:200] 2021-02-03 15:48:02,888 > ++++++++++++++휴맥스++++++++++++++++++++983/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:02,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:03,247 > 74
[DEBUG|collector_api.py:200] 2021-02-03 15:48:03,488 > ++++++++++++++APS홀딩스++++++++++++++++++++984/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:03,489 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:03,855 > 75
[DEBUG|collector_api.py:200] 2021-02-03 15:48:04,108 > ++++++++++++++CJ ENM++++++++++++++++++++985/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:04,108 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:04,463 > 76
[DEBUG|collector_api.py:200] 2021-02-03 15:48:04,758 > ++++++++++++++CMG제약++++++++++++++++++++986/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:04,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:05,071 > 77
[DEBUG|collector_api.py:200] 2021-02-03 15:48:05,322 > ++++++++++++++CS++++++++++++++++++++987/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:05,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:05,679 > 78
[DEBUG|collector_api.py:200] 2021-02-03 15:48:05,930 > ++++++++++++++CSA 코스믹++++++++++++++++++++988/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:05,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:06,288 > 79
[DEBUG|collector_api.py:200] 2021-02-03 15:48:06,529 > ++++++++++++++DB금융스팩8호++++++++++++++++++++989/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:06,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:06,896 > 80
[DEBUG|collector_api.py:200] 2021-02-03 15:48:07,086 > ++++++++++++++EG++++++++++++++++++++990/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:07,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:07,504 > 81
[DEBUG|collector_api.py:200] 2021-02-03 15:48:07,752 > ++++++++++++++HRS++++++++++++++++++++991/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:07,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:08,112 > 82
[DEBUG|collector_api.py:200] 2021-02-03 15:48:08,370 > ++++++++++++++NICE평가정보++++++++++++++++++++992/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:08,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:08,719 > 83
[DEBUG|collector_api.py:200] 2021-02-03 15:48:08,978 > ++++++++++++++PN풍년++++++++++++++++++++993/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:08,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:09,327 > 84
[DEBUG|collector_api.py:200] 2021-02-03 15:48:09,575 > ++++++++++++++SCI평가정보++++++++++++++++++++994/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:09,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:09,934 > 85
[DEBUG|collector_api.py:200] 2021-02-03 15:48:10,189 > ++++++++++++++SM C&C++++++++++++++++++++995/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:10,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:10,542 > 86
[DEBUG|collector_api.py:200] 2021-02-03 15:48:10,792 > ++++++++++++++TS트릴리온++++++++++++++++++++996/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:10,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:11,150 > 87
[DEBUG|collector_api.py:200] 2021-02-03 15:48:11,353 > ++++++++++++++UCI++++++++++++++++++++997/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:11,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:11,757 > 88
[DEBUG|collector_api.py:200] 2021-02-03 15:48:11,995 > ++++++++++++++감마누++++++++++++++++++++998/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:11,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:12,365 > 89
[DEBUG|collector_api.py:200] 2021-02-03 15:48:12,590 > ++++++++++++++강스템바이오텍++++++++++++++++++++999/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:12,590 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:12,972 > 90
[DEBUG|collector_api.py:200] 2021-02-03 15:48:13,217 > ++++++++++++++게임빌++++++++++++++++++++1000/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:13,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:13,580 > 91
[DEBUG|collector_api.py:200] 2021-02-03 15:48:13,811 > ++++++++++++++경남바이오파마++++++++++++++++++++1001/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:13,811 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:14,188 > 92
[DEBUG|collector_api.py:200] 2021-02-03 15:48:14,426 > ++++++++++++++고영++++++++++++++++++++1002/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:14,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:14,795 > 93
[DEBUG|collector_api.py:200] 2021-02-03 15:48:15,049 > ++++++++++++++광림++++++++++++++++++++1003/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:15,049 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:15,403 > 94
[DEBUG|collector_api.py:200] 2021-02-03 15:48:15,667 > ++++++++++++++국영지앤엠++++++++++++++++++++1004/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:15,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:16,010 > 95
[DEBUG|collector_api.py:200] 2021-02-03 15:48:16,288 > ++++++++++++++나노엔텍++++++++++++++++++++1005/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:16,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:16,617 > 96
[DEBUG|collector_api.py:200] 2021-02-03 15:48:16,877 > ++++++++++++++나이벡++++++++++++++++++++1006/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:16,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:17,226 > 97
[DEBUG|collector_api.py:200] 2021-02-03 15:48:17,461 > ++++++++++++++남화토건++++++++++++++++++++1007/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:17,461 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:17,833 > 98
[DEBUG|collector_api.py:200] 2021-02-03 15:48:18,094 > ++++++++++++++네오팜++++++++++++++++++++1008/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:18,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:18,442 > 99
[DEBUG|collector_api.py:200] 2021-02-03 15:48:18,681 > ++++++++++++++넥스턴++++++++++++++++++++1009/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:18,681 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:19,048 > 100
[DEBUG|collector_api.py:200] 2021-02-03 15:48:19,295 > ++++++++++++++넥스틴++++++++++++++++++++1010/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:19,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:19,655 > 101
[DEBUG|collector_api.py:200] 2021-02-03 15:48:19,823 > ++++++++++++++넵튠++++++++++++++++++++1011/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:19,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:20,264 > 102
[DEBUG|collector_api.py:200] 2021-02-03 15:48:20,491 > ++++++++++++++녹원씨엔아이++++++++++++++++++++1012/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:20,491 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:20,872 > 103
[DEBUG|collector_api.py:200] 2021-02-03 15:48:21,109 > ++++++++++++++누리텔레콤++++++++++++++++++++1013/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:21,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:21,479 > 104
[DEBUG|collector_api.py:200] 2021-02-03 15:48:21,725 > ++++++++++++++뉴파워프라즈마++++++++++++++++++++1014/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:21,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:22,087 > 105
[DEBUG|collector_api.py:200] 2021-02-03 15:48:22,321 > ++++++++++++++대성파인텍++++++++++++++++++++1015/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:22,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:22,694 > 106
[DEBUG|collector_api.py:200] 2021-02-03 15:48:22,972 > ++++++++++++++대아티아이++++++++++++++++++++1016/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:22,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:23,302 > 107
[DEBUG|collector_api.py:200] 2021-02-03 15:48:23,550 > ++++++++++++++대주전자재료++++++++++++++++++++1017/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:23,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:23,909 > 108
[DEBUG|collector_api.py:200] 2021-02-03 15:48:24,178 > ++++++++++++++대창솔루션++++++++++++++++++++1018/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:24,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:24,515 > 109
[DEBUG|collector_api.py:200] 2021-02-03 15:48:24,756 > ++++++++++++++덕산네오룩스++++++++++++++++++++1019/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:24,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:25,122 > 110
[DEBUG|collector_api.py:200] 2021-02-03 15:48:25,368 > ++++++++++++++동국S&C++++++++++++++++++++1020/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:25,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:25,729 > 111
[DEBUG|collector_api.py:200] 2021-02-03 15:48:25,958 > ++++++++++++++동아엘텍++++++++++++++++++++1021/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:25,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:26,337 > 112
[DEBUG|collector_api.py:200] 2021-02-03 15:48:26,583 > ++++++++++++++듀오백++++++++++++++++++++1022/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:26,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:26,944 > 113
[DEBUG|collector_api.py:200] 2021-02-03 15:48:27,188 > ++++++++++++++디알텍++++++++++++++++++++1023/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:27,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:27,551 > 114
[DEBUG|collector_api.py:200] 2021-02-03 15:48:27,773 > ++++++++++++++디엠티++++++++++++++++++++1024/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:27,773 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:28,158 > 115
[DEBUG|collector_api.py:200] 2021-02-03 15:48:28,391 > ++++++++++++++디오++++++++++++++++++++1025/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:28,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:28,765 > 116
[DEBUG|collector_api.py:200] 2021-02-03 15:48:29,011 > ++++++++++++++딜리++++++++++++++++++++1026/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:29,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:29,373 > 117
[DEBUG|collector_api.py:200] 2021-02-03 15:48:29,604 > ++++++++++++++럭슬++++++++++++++++++++1027/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:29,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:29,980 > 118
[DEBUG|collector_api.py:200] 2021-02-03 15:48:30,234 > ++++++++++++++레드캡투어++++++++++++++++++++1028/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:30,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:30,588 > 119
[DEBUG|collector_api.py:200] 2021-02-03 15:48:30,836 > ++++++++++++++레이언스++++++++++++++++++++1029/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:30,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:31,195 > 120
[DEBUG|collector_api.py:200] 2021-02-03 15:48:31,440 > ++++++++++++++로보로보++++++++++++++++++++1030/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:31,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:31,802 > 121
[DEBUG|collector_api.py:200] 2021-02-03 15:48:32,044 > ++++++++++++++매일홀딩스++++++++++++++++++++1031/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:32,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:32,409 > 122
[DEBUG|collector_api.py:200] 2021-02-03 15:48:32,650 > ++++++++++++++머큐리++++++++++++++++++++1032/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:32,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:33,015 > 123
[DEBUG|collector_api.py:200] 2021-02-03 15:48:33,244 > ++++++++++++++메디앙스++++++++++++++++++++1033/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:33,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:33,623 > 124
[DEBUG|collector_api.py:200] 2021-02-03 15:48:33,877 > ++++++++++++++메타바이오메드++++++++++++++++++++1034/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:33,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:34,231 > 125
[DEBUG|collector_api.py:200] 2021-02-03 15:48:34,469 > ++++++++++++++멕아이씨에스++++++++++++++++++++1035/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:34,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:34,837 > 126
[DEBUG|collector_api.py:200] 2021-02-03 15:48:35,099 > ++++++++++++++명성티엔에스++++++++++++++++++++1036/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:35,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:35,444 > 127
[DEBUG|collector_api.py:200] 2021-02-03 15:48:35,677 > ++++++++++++++무림SP++++++++++++++++++++1037/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:35,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:36,051 > 128
[DEBUG|collector_api.py:200] 2021-02-03 15:48:36,297 > ++++++++++++++미래에셋대우스팩3호++++++++++++++++++++1038/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:36,297 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:36,657 > 129
[DEBUG|collector_api.py:200] 2021-02-03 15:48:36,865 > ++++++++++++++미래에셋벤처투자++++++++++++++++++++1039/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:36,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:37,266 > 130
[DEBUG|collector_api.py:200] 2021-02-03 15:48:37,497 > ++++++++++++++부스타++++++++++++++++++++1040/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:37,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:37,872 > 131
[DEBUG|collector_api.py:200] 2021-02-03 15:48:38,105 > ++++++++++++++비즈니스온++++++++++++++++++++1041/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:38,105 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:38,479 > 132
[DEBUG|collector_api.py:200] 2021-02-03 15:48:38,753 > ++++++++++++++비트컴퓨터++++++++++++++++++++1042/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:38,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:39,088 > 133
[DEBUG|collector_api.py:200] 2021-02-03 15:48:39,340 > ++++++++++++++사람인에이치알++++++++++++++++++++1043/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:39,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:39,696 > 134
[DEBUG|collector_api.py:200] 2021-02-03 15:48:39,941 > ++++++++++++++삼륭물산++++++++++++++++++++1044/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:39,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:40,302 > 135
[DEBUG|collector_api.py:200] 2021-02-03 15:48:40,550 > ++++++++++++++삼양옵틱스++++++++++++++++++++1045/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:40,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:40,909 > 136
[DEBUG|collector_api.py:200] 2021-02-03 15:48:41,152 > ++++++++++++++삼일++++++++++++++++++++1046/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:41,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:41,516 > 137
[DEBUG|collector_api.py:200] 2021-02-03 15:48:41,767 > ++++++++++++++삼일기업공사++++++++++++++++++++1047/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:41,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:42,122 > 138
[DEBUG|collector_api.py:200] 2021-02-03 15:48:42,382 > ++++++++++++++삼지전자++++++++++++++++++++1048/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:42,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:42,730 > 139
[DEBUG|collector_api.py:200] 2021-02-03 15:48:43,013 > ++++++++++++++삼진++++++++++++++++++++1049/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:43,013 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:43,337 > 140
[DEBUG|collector_api.py:200] 2021-02-03 15:48:43,585 > ++++++++++++++상보++++++++++++++++++++1050/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:43,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:43,945 > 141
[DEBUG|collector_api.py:200] 2021-02-03 15:48:44,190 > ++++++++++++++상신이디피++++++++++++++++++++1051/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:44,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:44,551 > 142
[DEBUG|collector_api.py:200] 2021-02-03 15:48:44,785 > ++++++++++++++서린바이오++++++++++++++++++++1052/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:44,786 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:45,160 > 143
[DEBUG|collector_api.py:200] 2021-02-03 15:48:45,395 > ++++++++++++++서호전기++++++++++++++++++++1053/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:45,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:45,767 > 144
[DEBUG|collector_api.py:200] 2021-02-03 15:48:46,019 > ++++++++++++++세경하이테크++++++++++++++++++++1054/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:46,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:46,376 > 145
[DEBUG|collector_api.py:200] 2021-02-03 15:48:46,582 > ++++++++++++++세명전기++++++++++++++++++++1055/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:46,582 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:46,984 > 146
[DEBUG|collector_api.py:200] 2021-02-03 15:48:47,232 > ++++++++++++++셀바스AI++++++++++++++++++++1056/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:47,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:47,590 > 147
[DEBUG|collector_api.py:200] 2021-02-03 15:48:47,836 > ++++++++++++++손오공++++++++++++++++++++1057/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:47,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:48,197 > 148
[DEBUG|collector_api.py:200] 2021-02-03 15:48:48,469 > ++++++++++++++솔루에타++++++++++++++++++++1058/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:48,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:48,804 > 149
[DEBUG|collector_api.py:200] 2021-02-03 15:48:49,048 > ++++++++++++++수성++++++++++++++++++++1059/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:49,049 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:49,413 > 150
[DEBUG|collector_api.py:200] 2021-02-03 15:48:49,652 > ++++++++++++++슈프리마++++++++++++++++++++1060/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:49,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:50,019 > 151
[DEBUG|collector_api.py:200] 2021-02-03 15:48:50,261 > ++++++++++++++스튜디오드래곤++++++++++++++++++++1061/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:50,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:50,627 > 152
[DEBUG|collector_api.py:200] 2021-02-03 15:48:50,869 > ++++++++++++++신라젠++++++++++++++++++++1062/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:50,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:51,234 > 153
[DEBUG|collector_api.py:200] 2021-02-03 15:48:51,457 > ++++++++++++++신영스팩5호++++++++++++++++++++1063/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:51,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:51,841 > 154
[DEBUG|collector_api.py:200] 2021-02-03 15:48:52,044 > ++++++++++++++신한제6호스팩++++++++++++++++++++1064/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:52,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:52,448 > 155
[DEBUG|collector_api.py:200] 2021-02-03 15:48:52,638 > ++++++++++++++쎄트렉아이++++++++++++++++++++1065/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:52,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:53,055 > 156
[DEBUG|collector_api.py:200] 2021-02-03 15:48:53,300 > ++++++++++++++씨앤투스성진++++++++++++++++++++1066/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:53,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:53,662 > 157
[DEBUG|collector_api.py:200] 2021-02-03 15:48:53,809 > ++++++++++++++아가방컴퍼니++++++++++++++++++++1067/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:53,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:54,271 > 158
[DEBUG|collector_api.py:200] 2021-02-03 15:48:54,547 > ++++++++++++++아래스++++++++++++++++++++1068/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:54,547 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:54,878 > 159
[DEBUG|collector_api.py:200] 2021-02-03 15:48:55,113 > ++++++++++++++아모텍++++++++++++++++++++1069/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:55,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:55,485 > 160
[DEBUG|collector_api.py:200] 2021-02-03 15:48:55,742 > ++++++++++++++아미코젠++++++++++++++++++++1070/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:55,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:56,093 > 161
[DEBUG|collector_api.py:200] 2021-02-03 15:48:56,327 > ++++++++++++++아이에이++++++++++++++++++++1071/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:56,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:56,700 > 162
[DEBUG|collector_api.py:200] 2021-02-03 15:48:56,954 > ++++++++++++++아이에이네트웍스++++++++++++++++++++1072/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:56,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:57,307 > 163
[DEBUG|collector_api.py:200] 2021-02-03 15:48:57,537 > ++++++++++++++액트로++++++++++++++++++++1073/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:57,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:57,915 > 164
[DEBUG|collector_api.py:200] 2021-02-03 15:48:58,153 > ++++++++++++++앱코++++++++++++++++++++1074/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:58,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:58,522 > 165
[DEBUG|collector_api.py:200] 2021-02-03 15:48:58,673 > ++++++++++++++에스에스알++++++++++++++++++++1075/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:58,674 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:59,129 > 166
[DEBUG|collector_api.py:200] 2021-02-03 15:48:59,378 > ++++++++++++++에스제이그룹++++++++++++++++++++1076/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:59,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:48:59,736 > 167
[DEBUG|collector_api.py:200] 2021-02-03 15:48:59,918 > ++++++++++++++에스제이케이++++++++++++++++++++1077/2888
[DEBUG|open_api.py:656] 2021-02-03 15:48:59,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:00,344 > 168
[DEBUG|collector_api.py:200] 2021-02-03 15:49:00,570 > ++++++++++++++에스티팜++++++++++++++++++++1078/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:00,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:00,952 > 169
[DEBUG|collector_api.py:200] 2021-02-03 15:49:01,199 > ++++++++++++++에이씨티++++++++++++++++++++1079/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:01,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:01,558 > 170
[DEBUG|collector_api.py:200] 2021-02-03 15:49:01,789 > ++++++++++++++에프알텍++++++++++++++++++++1080/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:01,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:02,166 > 171
[DEBUG|collector_api.py:200] 2021-02-03 15:49:02,405 > ++++++++++++++에프에스티++++++++++++++++++++1081/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:02,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:02,772 > 172
[DEBUG|collector_api.py:200] 2021-02-03 15:49:03,027 > ++++++++++++++엠에프엠코리아++++++++++++++++++++1082/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:03,027 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:03,379 > 173
[DEBUG|collector_api.py:200] 2021-02-03 15:49:03,579 > ++++++++++++++영신금속++++++++++++++++++++1083/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:03,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:03,985 > 174
[DEBUG|collector_api.py:200] 2021-02-03 15:49:04,239 > ++++++++++++++예림당++++++++++++++++++++1084/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:04,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:04,592 > 175
[DEBUG|collector_api.py:200] 2021-02-03 15:49:04,835 > ++++++++++++++오르비텍++++++++++++++++++++1085/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:04,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:05,199 > 176
[DEBUG|collector_api.py:200] 2021-02-03 15:49:05,436 > ++++++++++++++오성첨단소재++++++++++++++++++++1086/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:05,437 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:05,807 > 177
[DEBUG|collector_api.py:200] 2021-02-03 15:49:06,055 > ++++++++++++++우리손에프앤지++++++++++++++++++++1087/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:06,056 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:06,414 > 178
[DEBUG|collector_api.py:200] 2021-02-03 15:49:06,646 > ++++++++++++++우림기계++++++++++++++++++++1088/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:06,647 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:07,021 > 179
[DEBUG|collector_api.py:200] 2021-02-03 15:49:07,274 > ++++++++++++++우수AMS++++++++++++++++++++1089/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:07,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:07,629 > 180
[DEBUG|collector_api.py:200] 2021-02-03 15:49:07,874 > ++++++++++++++원일특강++++++++++++++++++++1090/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:07,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:08,235 > 181
[DEBUG|collector_api.py:200] 2021-02-03 15:49:08,481 > ++++++++++++++윈하이텍++++++++++++++++++++1091/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:08,481 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:08,843 > 182
[DEBUG|collector_api.py:200] 2021-02-03 15:49:09,094 > ++++++++++++++윌링스++++++++++++++++++++1092/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:09,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:09,450 > 183
[DEBUG|collector_api.py:200] 2021-02-03 15:49:09,641 > ++++++++++++++유니테스트++++++++++++++++++++1093/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:09,641 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:10,057 > 184
[DEBUG|collector_api.py:200] 2021-02-03 15:49:10,312 > ++++++++++++++유바이오로직스++++++++++++++++++++1094/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:10,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:10,665 > 185
[DEBUG|collector_api.py:200] 2021-02-03 15:49:10,933 > ++++++++++++++유안타제6호스팩++++++++++++++++++++1095/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:10,934 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:11,272 > 186
[DEBUG|collector_api.py:200] 2021-02-03 15:49:11,460 > ++++++++++++++육일씨엔에쓰++++++++++++++++++++1096/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:11,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:11,879 > 187
[DEBUG|collector_api.py:200] 2021-02-03 15:49:12,108 > ++++++++++++++이글루시큐리티++++++++++++++++++++1097/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:12,108 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:12,486 > 188
[DEBUG|collector_api.py:200] 2021-02-03 15:49:12,724 > ++++++++++++++이글벳++++++++++++++++++++1098/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:12,724 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:13,093 > 189
[DEBUG|collector_api.py:200] 2021-02-03 15:49:13,339 > ++++++++++++++이녹스++++++++++++++++++++1099/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:13,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:13,700 > 190
[DEBUG|collector_api.py:200] 2021-02-03 15:49:13,967 > ++++++++++++++이랜시스++++++++++++++++++++1100/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:13,967 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:14,307 > 191
[DEBUG|collector_api.py:200] 2021-02-03 15:49:14,535 > ++++++++++++++이베스트스팩5호++++++++++++++++++++1101/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:14,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:14,915 > 192
[DEBUG|collector_api.py:200] 2021-02-03 15:49:15,094 > ++++++++++++++이에스에이++++++++++++++++++++1102/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:15,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:15,522 > 193
[DEBUG|collector_api.py:200] 2021-02-03 15:49:15,749 > ++++++++++++++이엠앤아이++++++++++++++++++++1103/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:15,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:16,129 > 194
[DEBUG|collector_api.py:200] 2021-02-03 15:49:16,357 > ++++++++++++++이엠텍++++++++++++++++++++1104/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:16,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:16,737 > 195
[DEBUG|collector_api.py:200] 2021-02-03 15:49:16,999 > ++++++++++++++이즈미디어++++++++++++++++++++1105/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:17,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:17,345 > 196
[DEBUG|collector_api.py:200] 2021-02-03 15:49:17,578 > ++++++++++++++이지케어텍++++++++++++++++++++1106/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:17,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:17,953 > 197
[DEBUG|collector_api.py:200] 2021-02-03 15:49:18,160 > ++++++++++++++인바디++++++++++++++++++++1107/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:18,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:18,559 > 198
[DEBUG|collector_api.py:200] 2021-02-03 15:49:18,813 > ++++++++++++++인선이엔티++++++++++++++++++++1108/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:18,813 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:19,167 > 199
[DEBUG|collector_api.py:200] 2021-02-03 15:49:19,409 > ++++++++++++++인포마크++++++++++++++++++++1109/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:19,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:19,774 > 200
[DEBUG|collector_api.py:200] 2021-02-03 15:49:20,033 > ++++++++++++++인포바인++++++++++++++++++++1110/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:20,034 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:20,382 > 201
[DEBUG|collector_api.py:200] 2021-02-03 15:49:20,625 > ++++++++++++++인포뱅크++++++++++++++++++++1111/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:20,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:20,989 > 202
[DEBUG|collector_api.py:200] 2021-02-03 15:49:21,250 > ++++++++++++++잉크테크++++++++++++++++++++1112/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:21,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:21,597 > 203
[DEBUG|collector_api.py:200] 2021-02-03 15:49:21,845 > ++++++++++++++전진바이오팜++++++++++++++++++++1113/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:21,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:22,204 > 204
[DEBUG|collector_api.py:200] 2021-02-03 15:49:22,433 > ++++++++++++++정다운++++++++++++++++++++1114/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:22,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:22,812 > 205
[DEBUG|collector_api.py:200] 2021-02-03 15:49:23,055 > ++++++++++++++제놀루션++++++++++++++++++++1115/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:23,056 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:23,419 > 206
[DEBUG|collector_api.py:200] 2021-02-03 15:49:23,656 > ++++++++++++++제이스텍++++++++++++++++++++1116/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:23,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:24,026 > 207
[DEBUG|collector_api.py:200] 2021-02-03 15:49:24,277 > ++++++++++++++제이엘케이++++++++++++++++++++1117/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:24,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:24,633 > 208
[DEBUG|collector_api.py:200] 2021-02-03 15:49:24,832 > ++++++++++++++제일바이오++++++++++++++++++++1118/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:24,832 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:25,239 > 209
[DEBUG|collector_api.py:200] 2021-02-03 15:49:25,482 > ++++++++++++++젬백스지오++++++++++++++++++++1119/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:25,482 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:25,847 > 210
[DEBUG|collector_api.py:200] 2021-02-03 15:49:26,084 > ++++++++++++++조이맥스++++++++++++++++++++1120/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:26,084 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:26,454 > 211
[DEBUG|collector_api.py:200] 2021-02-03 15:49:26,749 > ++++++++++++++조이시티++++++++++++++++++++1121/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:26,750 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:27,061 > 212
[DEBUG|collector_api.py:200] 2021-02-03 15:49:27,312 > ++++++++++++++줌인터넷++++++++++++++++++++1122/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:27,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:27,668 > 213
[DEBUG|collector_api.py:200] 2021-02-03 15:49:27,903 > ++++++++++++++지니뮤직++++++++++++++++++++1123/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:27,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:28,275 > 214
[DEBUG|collector_api.py:200] 2021-02-03 15:49:28,542 > ++++++++++++++지니언스++++++++++++++++++++1124/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:28,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:28,883 > 215
[DEBUG|collector_api.py:200] 2021-02-03 15:49:29,181 > ++++++++++++++지란지교시큐리티++++++++++++++++++++1125/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:29,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:29,494 > 216
[DEBUG|collector_api.py:200] 2021-02-03 15:49:29,740 > ++++++++++++++지스마트글로벌++++++++++++++++++++1126/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:29,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:30,103 > 217
[DEBUG|collector_api.py:200] 2021-02-03 15:49:30,340 > ++++++++++++++지티지웰니스++++++++++++++++++++1127/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:30,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:30,710 > 218
[DEBUG|collector_api.py:200] 2021-02-03 15:49:30,950 > ++++++++++++++참좋은여행++++++++++++++++++++1128/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:30,950 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:31,317 > 219
[DEBUG|collector_api.py:200] 2021-02-03 15:49:31,563 > ++++++++++++++천보++++++++++++++++++++1129/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:31,564 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:31,924 > 220
[DEBUG|collector_api.py:200] 2021-02-03 15:49:32,171 > ++++++++++++++초록뱀++++++++++++++++++++1130/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:32,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:32,532 > 221
[DEBUG|collector_api.py:200] 2021-02-03 15:49:32,771 > ++++++++++++++컴투스++++++++++++++++++++1131/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:32,772 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:33,140 > 222
[DEBUG|collector_api.py:200] 2021-02-03 15:49:33,379 > ++++++++++++++케이비제19호스팩++++++++++++++++++++1132/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:33,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:33,748 > 223
[DEBUG|collector_api.py:200] 2021-02-03 15:49:33,954 > ++++++++++++++케이씨피드++++++++++++++++++++1133/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:33,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:34,355 > 224
[DEBUG|collector_api.py:200] 2021-02-03 15:49:34,599 > ++++++++++++++케이엔더블유++++++++++++++++++++1134/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:34,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:34,963 > 225
[DEBUG|collector_api.py:200] 2021-02-03 15:49:35,213 > ++++++++++++++코데즈컴바인++++++++++++++++++++1135/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:35,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:35,571 > 226
[DEBUG|collector_api.py:200] 2021-02-03 15:49:35,795 > ++++++++++++++코리아센터++++++++++++++++++++1136/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:35,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:36,178 > 227
[DEBUG|collector_api.py:200] 2021-02-03 15:49:36,349 > ++++++++++++++코메론++++++++++++++++++++1137/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:36,349 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:36,785 > 228
[DEBUG|collector_api.py:200] 2021-02-03 15:49:37,022 > ++++++++++++++코미팜++++++++++++++++++++1138/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:37,022 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:37,393 > 229
[DEBUG|collector_api.py:200] 2021-02-03 15:49:37,620 > ++++++++++++++코아시아++++++++++++++++++++1139/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:37,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:38,000 > 230
[DEBUG|collector_api.py:200] 2021-02-03 15:49:38,249 > ++++++++++++++코오롱생명과학++++++++++++++++++++1140/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:38,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:38,608 > 231
[DEBUG|collector_api.py:200] 2021-02-03 15:49:38,839 > ++++++++++++++코웰패션++++++++++++++++++++1141/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:38,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:39,216 > 232
[DEBUG|collector_api.py:200] 2021-02-03 15:49:39,455 > ++++++++++++++코위버++++++++++++++++++++1142/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:39,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:39,822 > 233
[DEBUG|collector_api.py:200] 2021-02-03 15:49:40,065 > ++++++++++++++큐브엔터++++++++++++++++++++1143/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:40,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:40,429 > 234
[DEBUG|collector_api.py:200] 2021-02-03 15:49:40,671 > ++++++++++++++크리스탈지노믹스++++++++++++++++++++1144/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:40,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:41,036 > 235
[DEBUG|collector_api.py:200] 2021-02-03 15:49:41,274 > ++++++++++++++클리오++++++++++++++++++++1145/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:41,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:41,644 > 236
[DEBUG|collector_api.py:200] 2021-02-03 15:49:41,880 > ++++++++++++++키움제5호스팩++++++++++++++++++++1146/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:41,880 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:42,251 > 237
[DEBUG|collector_api.py:200] 2021-02-03 15:49:42,459 > ++++++++++++++테고사이언스++++++++++++++++++++1147/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:42,459 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:42,858 > 238
[DEBUG|collector_api.py:200] 2021-02-03 15:49:43,149 > ++++++++++++++테라사이언스++++++++++++++++++++1148/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:43,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:43,465 > 239
[DEBUG|collector_api.py:200] 2021-02-03 15:49:43,698 > ++++++++++++++테라젠이텍스++++++++++++++++++++1149/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:43,698 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:44,072 > 240
[DEBUG|collector_api.py:200] 2021-02-03 15:49:44,305 > ++++++++++++++테스나++++++++++++++++++++1150/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:44,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:44,681 > 241
[DEBUG|collector_api.py:200] 2021-02-03 15:49:44,918 > ++++++++++++++티에스아이++++++++++++++++++++1151/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:44,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:45,289 > 242
[DEBUG|collector_api.py:200] 2021-02-03 15:49:45,508 > ++++++++++++++파루++++++++++++++++++++1152/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:45,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:45,898 > 243
[DEBUG|collector_api.py:200] 2021-02-03 15:49:46,145 > ++++++++++++++파멥신++++++++++++++++++++1153/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:46,146 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:46,504 > 244
[DEBUG|collector_api.py:200] 2021-02-03 15:49:46,722 > ++++++++++++++파수++++++++++++++++++++1154/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:46,723 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:47,112 > 245
[DEBUG|collector_api.py:200] 2021-02-03 15:49:47,366 > ++++++++++++++파인디지털++++++++++++++++++++1155/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:47,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:47,720 > 246
[DEBUG|collector_api.py:200] 2021-02-03 15:49:47,955 > ++++++++++++++팬엔터테인먼트++++++++++++++++++++1156/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:47,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:48,329 > 247
[DEBUG|collector_api.py:200] 2021-02-03 15:49:48,571 > ++++++++++++++펄어비스++++++++++++++++++++1157/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:48,571 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:48,935 > 248
[DEBUG|collector_api.py:200] 2021-02-03 15:49:49,178 > ++++++++++++++펌텍코리아++++++++++++++++++++1158/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:49,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:49,541 > 249
[DEBUG|collector_api.py:200] 2021-02-03 15:49:49,744 > ++++++++++++++풍강++++++++++++++++++++1159/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:49,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:50,149 > 250
[DEBUG|collector_api.py:200] 2021-02-03 15:49:50,383 > ++++++++++++++플레이디++++++++++++++++++++1160/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:50,384 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:50,756 > 251
[DEBUG|collector_api.py:200] 2021-02-03 15:49:50,931 > ++++++++++++++피앤이솔루션++++++++++++++++++++1161/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:50,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:51,364 > 252
[DEBUG|collector_api.py:200] 2021-02-03 15:49:51,604 > ++++++++++++++피에스텍++++++++++++++++++++1162/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:51,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:51,972 > 253
[DEBUG|collector_api.py:200] 2021-02-03 15:49:52,216 > ++++++++++++++피엔티++++++++++++++++++++1163/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:52,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:52,580 > 254
[DEBUG|collector_api.py:200] 2021-02-03 15:49:52,835 > ++++++++++++++핌스++++++++++++++++++++1164/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:52,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:53,188 > 255
[DEBUG|collector_api.py:200] 2021-02-03 15:49:53,344 > ++++++++++++++핑거++++++++++++++++++++1165/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:53,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:53,795 > 256
[DEBUG|collector_api.py:200] 2021-02-03 15:49:53,967 > ++++++++++++++하나마이크론++++++++++++++++++++1166/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:53,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:54,403 > 257
[DEBUG|collector_api.py:200] 2021-02-03 15:49:54,637 > ++++++++++++++한국경제TV++++++++++++++++++++1167/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:54,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:55,010 > 258
[DEBUG|collector_api.py:200] 2021-02-03 15:49:55,254 > ++++++++++++++한국기업평가++++++++++++++++++++1168/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:55,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:55,617 > 259
[DEBUG|collector_api.py:200] 2021-02-03 15:49:55,874 > ++++++++++++++한국바이오젠++++++++++++++++++++1169/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:55,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:56,226 > 260
[DEBUG|collector_api.py:200] 2021-02-03 15:49:56,414 > ++++++++++++++한국비엔씨++++++++++++++++++++1170/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:56,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:56,832 > 261
[DEBUG|collector_api.py:200] 2021-02-03 15:49:57,065 > ++++++++++++++한국아트라스비엑스++++++++++++++++++++1171/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:57,066 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:57,440 > 262
[DEBUG|collector_api.py:200] 2021-02-03 15:49:57,691 > ++++++++++++++한국알콜++++++++++++++++++++1172/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:57,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:58,048 > 263
[DEBUG|collector_api.py:200] 2021-02-03 15:49:58,287 > ++++++++++++++한국전자금융++++++++++++++++++++1173/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:58,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:58,656 > 264
[DEBUG|collector_api.py:200] 2021-02-03 15:49:58,922 > ++++++++++++++한국정보인증++++++++++++++++++++1174/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:58,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:59,265 > 265
[DEBUG|collector_api.py:200] 2021-02-03 15:49:59,496 > ++++++++++++++한국정보통신++++++++++++++++++++1175/2888
[DEBUG|open_api.py:656] 2021-02-03 15:49:59,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:49:59,872 > 266
[DEBUG|collector_api.py:200] 2021-02-03 15:50:00,126 > ++++++++++++++한국팩키지++++++++++++++++++++1176/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:00,126 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:00,479 > 267
[DEBUG|collector_api.py:200] 2021-02-03 15:50:00,726 > ++++++++++++++한글과컴퓨터++++++++++++++++++++1177/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:00,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:01,085 > 268
[DEBUG|collector_api.py:200] 2021-02-03 15:50:01,350 > ++++++++++++++한일단조++++++++++++++++++++1178/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:01,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:01,693 > 269
[DEBUG|collector_api.py:200] 2021-02-03 15:50:01,951 > ++++++++++++++한컴위드++++++++++++++++++++1179/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:01,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:02,301 > 270
[DEBUG|collector_api.py:200] 2021-02-03 15:50:02,540 > ++++++++++++++한탑++++++++++++++++++++1180/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:02,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:02,908 > 271
[DEBUG|collector_api.py:200] 2021-02-03 15:50:03,158 > ++++++++++++++현진소재++++++++++++++++++++1181/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:03,159 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:03,516 > 272
[DEBUG|collector_api.py:200] 2021-02-03 15:50:03,749 > ++++++++++++++형지I&C++++++++++++++++++++1182/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:03,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:04,125 > 273
[DEBUG|collector_api.py:200] 2021-02-03 15:50:04,374 > ++++++++++++++휴네시온++++++++++++++++++++1183/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:04,374 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:04,732 > 274
[DEBUG|collector_api.py:200] 2021-02-03 15:50:04,999 > ++++++++++++++휴맥스홀딩스++++++++++++++++++++1184/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:04,999 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:05,339 > 275
[DEBUG|collector_api.py:200] 2021-02-03 15:50:05,580 > ++++++++++++++흥국에프엔비++++++++++++++++++++1185/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:05,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:05,946 > 276
[DEBUG|collector_api.py:200] 2021-02-03 15:50:06,189 > ++++++++++++++EMW++++++++++++++++++++1186/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:06,189 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:06,554 > 277
[DEBUG|collector_api.py:200] 2021-02-03 15:50:06,786 > ++++++++++++++JTC++++++++++++++++++++1187/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:06,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:07,161 > 278
[DEBUG|collector_api.py:200] 2021-02-03 15:50:07,394 > ++++++++++++++KCC건설++++++++++++++++++++1188/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:07,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:07,768 > 279
[DEBUG|collector_api.py:200] 2021-02-03 15:50:08,009 > ++++++++++++++KCI++++++++++++++++++++1189/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:08,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:08,375 > 280
[DEBUG|collector_api.py:200] 2021-02-03 15:50:08,612 > ++++++++++++++KD++++++++++++++++++++1190/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:08,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:08,985 > 281
[DEBUG|collector_api.py:200] 2021-02-03 15:50:09,239 > ++++++++++++++KG ETS++++++++++++++++++++1191/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:09,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:09,594 > 282
[DEBUG|collector_api.py:200] 2021-02-03 15:50:09,824 > ++++++++++++++KG모빌리언스++++++++++++++++++++1192/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:09,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:10,201 > 283
[DEBUG|collector_api.py:200] 2021-02-03 15:50:10,426 > ++++++++++++++NEW++++++++++++++++++++1193/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:10,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:10,809 > 284
[DEBUG|collector_api.py:200] 2021-02-03 15:50:11,039 > ++++++++++++++SBI핀테크솔루션즈++++++++++++++++++++1194/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:11,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:11,416 > 285
[DEBUG|collector_api.py:200] 2021-02-03 15:50:11,639 > ++++++++++++++SGA솔루션즈++++++++++++++++++++1195/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:11,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:12,022 > 286
[DEBUG|collector_api.py:200] 2021-02-03 15:50:12,262 > ++++++++++++++SM Life Design++++++++++++++++++++1196/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:12,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:12,630 > 287
[DEBUG|collector_api.py:200] 2021-02-03 15:50:12,873 > ++++++++++++++W홀딩컴퍼니++++++++++++++++++++1197/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:12,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:13,237 > 288
[DEBUG|collector_api.py:200] 2021-02-03 15:50:13,473 > ++++++++++++++교보8호스팩++++++++++++++++++++1198/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:13,474 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:13,844 > 289
[DEBUG|collector_api.py:200] 2021-02-03 15:50:14,096 > ++++++++++++++교보9호스팩++++++++++++++++++++1199/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:14,097 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:14,452 > 290
[DEBUG|collector_api.py:200] 2021-02-03 15:50:14,683 > ++++++++++++++국전약품++++++++++++++++++++1200/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:14,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:15,059 > 291
[DEBUG|collector_api.py:200] 2021-02-03 15:50:15,286 > ++++++++++++++나노신소재++++++++++++++++++++1201/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:15,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:15,667 > 292
[DEBUG|collector_api.py:200] 2021-02-03 15:50:15,915 > ++++++++++++++나인테크++++++++++++++++++++1202/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:15,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:16,274 > 293
[DEBUG|collector_api.py:200] 2021-02-03 15:50:16,495 > ++++++++++++++네패스아크++++++++++++++++++++1203/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:16,496 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:16,881 > 294
[DEBUG|collector_api.py:200] 2021-02-03 15:50:17,040 > ++++++++++++++넥스트아이++++++++++++++++++++1204/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:17,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:17,489 > 295
[DEBUG|collector_api.py:200] 2021-02-03 15:50:17,716 > ++++++++++++++넥슨지티++++++++++++++++++++1205/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:17,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:18,098 > 296
[DEBUG|collector_api.py:200] 2021-02-03 15:50:18,335 > ++++++++++++++노터스++++++++++++++++++++1206/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:18,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:18,704 > 297
[DEBUG|collector_api.py:200] 2021-02-03 15:50:18,903 > ++++++++++++++누리플랜++++++++++++++++++++1207/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:18,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:19,311 > 298
[DEBUG|collector_api.py:200] 2021-02-03 15:50:19,553 > ++++++++++++++뉴로스++++++++++++++++++++1208/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:19,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:19,918 > 299
[DEBUG|collector_api.py:200] 2021-02-03 15:50:20,160 > ++++++++++++++뉴프라이드++++++++++++++++++++1209/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:20,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:20,526 > 300
[DEBUG|collector_api.py:200] 2021-02-03 15:50:20,759 > ++++++++++++++다산네트웍스++++++++++++++++++++1210/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:20,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:21,133 > 301
[DEBUG|collector_api.py:200] 2021-02-03 15:50:21,371 > ++++++++++++++다원시스++++++++++++++++++++1211/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:21,371 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:21,740 > 302
[DEBUG|collector_api.py:200] 2021-02-03 15:50:21,988 > ++++++++++++++대명소노시즌++++++++++++++++++++1212/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:21,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:22,348 > 303
[DEBUG|collector_api.py:200] 2021-02-03 15:50:22,598 > ++++++++++++++대성미생물++++++++++++++++++++1213/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:22,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:22,956 > 304
[DEBUG|collector_api.py:200] 2021-02-03 15:50:23,211 > ++++++++++++++대원산업++++++++++++++++++++1214/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:23,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:23,565 > 305
[DEBUG|collector_api.py:200] 2021-02-03 15:50:23,821 > ++++++++++++++더블유에스아이++++++++++++++++++++1215/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:23,821 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:24,175 > 306
[DEBUG|collector_api.py:200] 2021-02-03 15:50:24,412 > ++++++++++++++덕신하우징++++++++++++++++++++1216/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:24,412 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:24,782 > 307
[DEBUG|collector_api.py:200] 2021-02-03 15:50:25,028 > ++++++++++++++덴티스++++++++++++++++++++1217/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:25,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:25,391 > 308
[DEBUG|collector_api.py:200] 2021-02-03 15:50:25,637 > ++++++++++++++동신건설++++++++++++++++++++1218/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:25,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:25,999 > 309
[DEBUG|collector_api.py:200] 2021-02-03 15:50:26,298 > ++++++++++++++동일기연++++++++++++++++++++1219/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:26,298 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:26,607 > 310
[DEBUG|collector_api.py:200] 2021-02-03 15:50:26,912 > ++++++++++++++드림어스컴퍼니++++++++++++++++++++1220/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:26,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:27,216 > 311
[DEBUG|collector_api.py:200] 2021-02-03 15:50:27,460 > ++++++++++++++디지아이++++++++++++++++++++1221/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:27,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:27,825 > 312
[DEBUG|collector_api.py:200] 2021-02-03 15:50:28,073 > ++++++++++++++디지털대성++++++++++++++++++++1222/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:28,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:28,431 > 313
[DEBUG|collector_api.py:200] 2021-02-03 15:50:28,673 > ++++++++++++++디티앤씨++++++++++++++++++++1223/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:28,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:29,039 > 314
[DEBUG|collector_api.py:200] 2021-02-03 15:50:29,273 > ++++++++++++++라이브플렉스++++++++++++++++++++1224/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:29,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:29,646 > 315
[DEBUG|collector_api.py:200] 2021-02-03 15:50:29,899 > ++++++++++++++램테크놀러지++++++++++++++++++++1225/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:29,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:30,254 > 316
[DEBUG|collector_api.py:200] 2021-02-03 15:50:30,479 > ++++++++++++++레고켐바이오++++++++++++++++++++1226/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:30,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:30,861 > 317
[DEBUG|collector_api.py:200] 2021-02-03 15:50:31,114 > ++++++++++++++레몬++++++++++++++++++++1227/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:31,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:31,469 > 318
[DEBUG|collector_api.py:200] 2021-02-03 15:50:31,705 > ++++++++++++++로보스타++++++++++++++++++++1228/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:31,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:32,077 > 319
[DEBUG|collector_api.py:200] 2021-02-03 15:50:32,311 > ++++++++++++++리드코프++++++++++++++++++++1229/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:32,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:32,683 > 320
[DEBUG|collector_api.py:200] 2021-02-03 15:50:32,918 > ++++++++++++++메디콕스++++++++++++++++++++1230/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:32,919 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:33,290 > 321
[DEBUG|collector_api.py:200] 2021-02-03 15:50:33,534 > ++++++++++++++메디포스트++++++++++++++++++++1231/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:33,535 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:33,897 > 322
[DEBUG|collector_api.py:200] 2021-02-03 15:50:34,164 > ++++++++++++++미래컴퍼니++++++++++++++++++++1232/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:34,165 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:34,504 > 323
[DEBUG|collector_api.py:200] 2021-02-03 15:50:34,740 > ++++++++++++++바이브컴퍼니++++++++++++++++++++1233/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:34,740 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:35,113 > 324
[DEBUG|collector_api.py:200] 2021-02-03 15:50:35,273 > ++++++++++++++바이오니아++++++++++++++++++++1234/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:35,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:35,719 > 325
[DEBUG|collector_api.py:200] 2021-02-03 15:50:35,954 > ++++++++++++++베뉴지++++++++++++++++++++1235/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:35,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:36,326 > 326
[DEBUG|collector_api.py:200] 2021-02-03 15:50:36,576 > ++++++++++++++베셀++++++++++++++++++++1236/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:36,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:36,933 > 327
[DEBUG|collector_api.py:200] 2021-02-03 15:50:37,184 > ++++++++++++++보라티알++++++++++++++++++++1237/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:37,184 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:37,539 > 328
[DEBUG|collector_api.py:200] 2021-02-03 15:50:37,798 > ++++++++++++++부방++++++++++++++++++++1238/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:37,798 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:38,146 > 329
[DEBUG|collector_api.py:200] 2021-02-03 15:50:38,394 > ++++++++++++++브리지텍++++++++++++++++++++1239/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:38,394 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:38,754 > 330
[DEBUG|collector_api.py:200] 2021-02-03 15:50:38,999 > ++++++++++++++삼진엘앤디++++++++++++++++++++1240/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:39,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:39,361 > 331
[DEBUG|collector_api.py:200] 2021-02-03 15:50:39,606 > ++++++++++++++삼천리자전거++++++++++++++++++++1241/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:39,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:39,967 > 332
[DEBUG|collector_api.py:200] 2021-02-03 15:50:40,226 > ++++++++++++++삼현철강++++++++++++++++++++1242/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:40,227 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:40,574 > 333
[DEBUG|collector_api.py:200] 2021-02-03 15:50:40,818 > ++++++++++++++서산++++++++++++++++++++1243/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:40,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:41,180 > 334
[DEBUG|collector_api.py:200] 2021-02-03 15:50:41,410 > ++++++++++++++서진오토모티브++++++++++++++++++++1244/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:41,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:41,787 > 335
[DEBUG|collector_api.py:200] 2021-02-03 15:50:42,031 > ++++++++++++++성우테크론++++++++++++++++++++1245/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:42,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:42,394 > 336
[DEBUG|collector_api.py:200] 2021-02-03 15:50:42,625 > ++++++++++++++성우하이텍++++++++++++++++++++1246/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:42,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:43,001 > 337
[DEBUG|collector_api.py:200] 2021-02-03 15:50:43,257 > ++++++++++++++세운메디칼++++++++++++++++++++1247/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:43,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:43,610 > 338
[DEBUG|collector_api.py:200] 2021-02-03 15:50:43,855 > ++++++++++++++세종텔레콤++++++++++++++++++++1248/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:43,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:44,217 > 339
[DEBUG|collector_api.py:200] 2021-02-03 15:50:44,450 > ++++++++++++++셀리버리++++++++++++++++++++1249/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:44,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:44,825 > 340
[DEBUG|collector_api.py:200] 2021-02-03 15:50:45,063 > ++++++++++++++솔고바이오++++++++++++++++++++1250/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:45,064 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:45,433 > 341
[DEBUG|collector_api.py:200] 2021-02-03 15:50:45,675 > ++++++++++++++솔본++++++++++++++++++++1251/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:45,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:46,041 > 342
[DEBUG|collector_api.py:200] 2021-02-03 15:50:46,264 > ++++++++++++++수산아이앤티++++++++++++++++++++1252/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:46,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:46,649 > 343
[DEBUG|collector_api.py:200] 2021-02-03 15:50:46,907 > ++++++++++++++슈펙스비앤피++++++++++++++++++++1253/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:46,908 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:47,258 > 344
[DEBUG|collector_api.py:200] 2021-02-03 15:50:47,486 > ++++++++++++++슈피겐코리아++++++++++++++++++++1254/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:47,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:47,866 > 345
[DEBUG|collector_api.py:200] 2021-02-03 15:50:48,085 > ++++++++++++++스카이이앤엠++++++++++++++++++++1255/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:48,085 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:48,473 > 346
[DEBUG|collector_api.py:200] 2021-02-03 15:50:48,738 > ++++++++++++++스킨앤스킨++++++++++++++++++++1256/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:48,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:49,080 > 347
[DEBUG|collector_api.py:200] 2021-02-03 15:50:49,309 > ++++++++++++++시공테크++++++++++++++++++++1257/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:49,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:49,687 > 348
[DEBUG|collector_api.py:200] 2021-02-03 15:50:49,930 > ++++++++++++++시그네틱스++++++++++++++++++++1258/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:49,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:50,294 > 349
[DEBUG|collector_api.py:200] 2021-02-03 15:50:50,517 > ++++++++++++++시큐브++++++++++++++++++++1259/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:50,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:50,902 > 350
[DEBUG|collector_api.py:200] 2021-02-03 15:50:51,146 > ++++++++++++++신도기연++++++++++++++++++++1260/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:51,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:51,508 > 351
[DEBUG|collector_api.py:200] 2021-02-03 15:50:51,676 > ++++++++++++++신테카바이오++++++++++++++++++++1261/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:51,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:52,115 > 352
[DEBUG|collector_api.py:200] 2021-02-03 15:50:52,302 > ++++++++++++++실리콘웍스++++++++++++++++++++1262/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:52,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:52,723 > 353
[DEBUG|collector_api.py:200] 2021-02-03 15:50:52,951 > ++++++++++++++쎄노텍++++++++++++++++++++1263/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:52,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:53,330 > 354
[DEBUG|collector_api.py:200] 2021-02-03 15:50:53,551 > ++++++++++++++쎄미시스코++++++++++++++++++++1264/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:53,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:53,937 > 355
[DEBUG|collector_api.py:200] 2021-02-03 15:50:54,163 > ++++++++++++++씨엠에스에듀++++++++++++++++++++1265/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:54,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:54,545 > 356
[DEBUG|collector_api.py:200] 2021-02-03 15:50:54,767 > ++++++++++++++씨큐브++++++++++++++++++++1266/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:54,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:55,153 > 357
[DEBUG|collector_api.py:200] 2021-02-03 15:50:55,386 > ++++++++++++++아비코전자++++++++++++++++++++1267/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:55,386 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:55,761 > 358
[DEBUG|collector_api.py:200] 2021-02-03 15:50:56,004 > ++++++++++++++아이디피++++++++++++++++++++1268/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:56,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:56,368 > 359
[DEBUG|collector_api.py:200] 2021-02-03 15:50:56,537 > ++++++++++++++아이톡시++++++++++++++++++++1269/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:56,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:56,976 > 360
[DEBUG|collector_api.py:200] 2021-02-03 15:50:57,228 > ++++++++++++++아진산업++++++++++++++++++++1270/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:57,228 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:57,584 > 361
[DEBUG|collector_api.py:200] 2021-02-03 15:50:57,818 > ++++++++++++++아프리카TV++++++++++++++++++++1271/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:57,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:58,192 > 362
[DEBUG|collector_api.py:200] 2021-02-03 15:50:58,426 > ++++++++++++++알체라++++++++++++++++++++1272/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:58,427 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:58,800 > 363
[DEBUG|collector_api.py:200] 2021-02-03 15:50:58,968 > ++++++++++++++알티캐스트++++++++++++++++++++1273/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:58,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:50:59,407 > 364
[DEBUG|collector_api.py:200] 2021-02-03 15:50:59,648 > ++++++++++++++애니젠++++++++++++++++++++1274/2888
[DEBUG|open_api.py:656] 2021-02-03 15:50:59,648 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:00,014 > 365
[DEBUG|collector_api.py:200] 2021-02-03 15:51:00,248 > ++++++++++++++액션스퀘어++++++++++++++++++++1275/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:00,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:00,620 > 366
[DEBUG|collector_api.py:200] 2021-02-03 15:51:00,863 > ++++++++++++++앤디포스++++++++++++++++++++1276/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:00,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:01,227 > 367
[DEBUG|collector_api.py:200] 2021-02-03 15:51:01,456 > ++++++++++++++앱클론++++++++++++++++++++1277/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:01,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:01,835 > 368
[DEBUG|collector_api.py:200] 2021-02-03 15:51:02,069 > ++++++++++++++에스앤더블류++++++++++++++++++++1278/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:02,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:02,443 > 369
[DEBUG|collector_api.py:200] 2021-02-03 15:51:02,728 > ++++++++++++++에스와이++++++++++++++++++++1279/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:02,728 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:03,050 > 370
[DEBUG|collector_api.py:200] 2021-02-03 15:51:03,289 > ++++++++++++++에스트래픽++++++++++++++++++++1280/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:03,289 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:03,658 > 371
[DEBUG|collector_api.py:200] 2021-02-03 15:51:03,896 > ++++++++++++++에스퓨얼셀++++++++++++++++++++1281/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:03,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:04,265 > 372
[DEBUG|collector_api.py:200] 2021-02-03 15:51:04,487 > ++++++++++++++에이디칩스++++++++++++++++++++1282/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:04,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:04,873 > 373
[DEBUG|collector_api.py:200] 2021-02-03 15:51:05,112 > ++++++++++++++에이비엘바이오++++++++++++++++++++1283/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:05,112 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:05,481 > 374
[DEBUG|collector_api.py:200] 2021-02-03 15:51:05,709 > ++++++++++++++에이스침대++++++++++++++++++++1284/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:05,710 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:06,089 > 375
[DEBUG|collector_api.py:200] 2021-02-03 15:51:06,340 > ++++++++++++++에이아이비트++++++++++++++++++++1285/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:06,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:06,697 > 376
[DEBUG|collector_api.py:200] 2021-02-03 15:51:06,930 > ++++++++++++++에이치시티++++++++++++++++++++1286/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:06,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:07,306 > 377
[DEBUG|collector_api.py:200] 2021-02-03 15:51:07,541 > ++++++++++++++에이텍티앤++++++++++++++++++++1287/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:07,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:07,913 > 378
[DEBUG|collector_api.py:200] 2021-02-03 15:51:08,163 > ++++++++++++++에이팸++++++++++++++++++++1288/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:08,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:08,520 > 379
[DEBUG|collector_api.py:200] 2021-02-03 15:51:08,766 > ++++++++++++++엑셈++++++++++++++++++++1289/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:08,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:09,127 > 380
[DEBUG|collector_api.py:200] 2021-02-03 15:51:09,383 > ++++++++++++++엔브이에이치코리아++++++++++++++++++++1290/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:09,384 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:09,737 > 381
[DEBUG|collector_api.py:200] 2021-02-03 15:51:09,998 > ++++++++++++++엔지켐생명과학++++++++++++++++++++1291/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:09,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:10,346 > 382
[DEBUG|collector_api.py:200] 2021-02-03 15:51:10,600 > ++++++++++++++엔케이맥스++++++++++++++++++++1292/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:10,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:10,953 > 383
[DEBUG|collector_api.py:200] 2021-02-03 15:51:11,183 > ++++++++++++++엔텔스++++++++++++++++++++1293/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:11,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:11,561 > 384
[DEBUG|collector_api.py:200] 2021-02-03 15:51:11,792 > ++++++++++++++엘디티++++++++++++++++++++1294/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:11,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:12,168 > 385
[DEBUG|collector_api.py:200] 2021-02-03 15:51:12,400 > ++++++++++++++엘컴텍++++++++++++++++++++1295/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:12,400 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:12,775 > 386
[DEBUG|collector_api.py:200] 2021-02-03 15:51:13,023 > ++++++++++++++영림원소프트랩++++++++++++++++++++1296/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:13,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:13,381 > 387
[DEBUG|collector_api.py:200] 2021-02-03 15:51:13,542 > ++++++++++++++예스티++++++++++++++++++++1297/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:13,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:13,988 > 388
[DEBUG|collector_api.py:200] 2021-02-03 15:51:14,225 > ++++++++++++++오스테오닉++++++++++++++++++++1298/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:14,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:14,595 > 389
[DEBUG|collector_api.py:200] 2021-02-03 15:51:14,829 > ++++++++++++++오텍++++++++++++++++++++1299/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:14,829 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:15,203 > 390
[DEBUG|collector_api.py:200] 2021-02-03 15:51:15,443 > ++++++++++++++와이즈버즈++++++++++++++++++++1300/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:15,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:15,812 > 391
[DEBUG|collector_api.py:200] 2021-02-03 15:51:16,051 > ++++++++++++++원익머트리얼즈++++++++++++++++++++1301/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:16,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:16,419 > 392
[DEBUG|collector_api.py:200] 2021-02-03 15:51:16,660 > ++++++++++++++원풍++++++++++++++++++++1302/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:16,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:17,026 > 393
[DEBUG|collector_api.py:200] 2021-02-03 15:51:17,278 > ++++++++++++++웹젠++++++++++++++++++++1303/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:17,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:17,633 > 394
[DEBUG|collector_api.py:200] 2021-02-03 15:51:17,874 > ++++++++++++++위닉스++++++++++++++++++++1304/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:17,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:18,240 > 395
[DEBUG|collector_api.py:200] 2021-02-03 15:51:18,486 > ++++++++++++++위메이드++++++++++++++++++++1305/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:18,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:18,849 > 396
[DEBUG|collector_api.py:200] 2021-02-03 15:51:19,128 > ++++++++++++++유비벨록스++++++++++++++++++++1306/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:19,129 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:19,455 > 397
[DEBUG|collector_api.py:200] 2021-02-03 15:51:19,696 > ++++++++++++++유비쿼스++++++++++++++++++++1307/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:19,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:20,062 > 398
[DEBUG|collector_api.py:200] 2021-02-03 15:51:20,296 > ++++++++++++++유안타제4호스팩++++++++++++++++++++1308/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:20,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:20,670 > 399
[DEBUG|collector_api.py:200] 2021-02-03 15:51:20,882 > ++++++++++++++유진테크++++++++++++++++++++1309/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:20,883 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:21,279 > 400
[DEBUG|collector_api.py:200] 2021-02-03 15:51:21,548 > ++++++++++++++이건홀딩스++++++++++++++++++++1310/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:21,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:21,886 > 401
[DEBUG|collector_api.py:200] 2021-02-03 15:51:22,120 > ++++++++++++++이노와이어리스++++++++++++++++++++1311/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:22,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:22,495 > 402
[DEBUG|collector_api.py:200] 2021-02-03 15:51:22,737 > ++++++++++++++이녹스첨단소재++++++++++++++++++++1312/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:22,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:23,103 > 403
[DEBUG|collector_api.py:200] 2021-02-03 15:51:23,346 > ++++++++++++++이랜텍++++++++++++++++++++1313/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:23,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:23,711 > 404
[DEBUG|collector_api.py:200] 2021-02-03 15:51:23,962 > ++++++++++++++이미지스++++++++++++++++++++1314/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:23,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:24,319 > 405
[DEBUG|collector_api.py:200] 2021-02-03 15:51:24,578 > ++++++++++++++이수앱지스++++++++++++++++++++1315/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:24,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:24,930 > 406
[DEBUG|collector_api.py:200] 2021-02-03 15:51:25,196 > ++++++++++++++인산가++++++++++++++++++++1316/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:25,197 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:25,537 > 407
[DEBUG|collector_api.py:200] 2021-02-03 15:51:25,784 > ++++++++++++++인성정보++++++++++++++++++++1317/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:25,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:26,145 > 408
[DEBUG|collector_api.py:200] 2021-02-03 15:51:26,409 > ++++++++++++++인탑스++++++++++++++++++++1318/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:26,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:26,754 > 409
[DEBUG|collector_api.py:200] 2021-02-03 15:51:27,011 > ++++++++++++++인터파크++++++++++++++++++++1319/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:27,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:27,362 > 410
[DEBUG|collector_api.py:200] 2021-02-03 15:51:27,601 > ++++++++++++++인텔리안테크++++++++++++++++++++1320/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:27,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:27,969 > 411
[DEBUG|collector_api.py:200] 2021-02-03 15:51:28,218 > ++++++++++++++자안++++++++++++++++++++1321/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:28,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:28,576 > 412
[DEBUG|collector_api.py:200] 2021-02-03 15:51:28,811 > ++++++++++++++재영솔루텍++++++++++++++++++++1322/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:28,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:29,183 > 413
[DEBUG|collector_api.py:200] 2021-02-03 15:51:29,417 > ++++++++++++++제낙스++++++++++++++++++++1323/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:29,417 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:29,791 > 414
[DEBUG|collector_api.py:200] 2021-02-03 15:51:30,044 > ++++++++++++++제이앤티씨++++++++++++++++++++1324/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:30,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:30,398 > 415
[DEBUG|collector_api.py:200] 2021-02-03 15:51:30,589 > ++++++++++++++제이티++++++++++++++++++++1325/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:30,589 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:31,005 > 416
[DEBUG|collector_api.py:200] 2021-02-03 15:51:31,255 > ++++++++++++++지더블유바이텍++++++++++++++++++++1326/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:31,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:31,613 > 417
[DEBUG|collector_api.py:200] 2021-02-03 15:51:31,860 > ++++++++++++++진바이오텍++++++++++++++++++++1327/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:31,861 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:32,221 > 418
[DEBUG|collector_api.py:200] 2021-02-03 15:51:32,489 > ++++++++++++++진성티이씨++++++++++++++++++++1328/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:32,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:32,829 > 419
[DEBUG|collector_api.py:200] 2021-02-03 15:51:33,089 > ++++++++++++++카이노스메드++++++++++++++++++++1329/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:33,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:33,438 > 420
[DEBUG|collector_api.py:200] 2021-02-03 15:51:33,689 > ++++++++++++++캐리소프트++++++++++++++++++++1330/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:33,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:34,045 > 421
[DEBUG|collector_api.py:200] 2021-02-03 15:51:34,244 > ++++++++++++++캔서롭++++++++++++++++++++1331/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:34,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:34,652 > 422
[DEBUG|collector_api.py:200] 2021-02-03 15:51:34,896 > ++++++++++++++캠시스++++++++++++++++++++1332/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:34,897 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:35,259 > 423
[DEBUG|collector_api.py:200] 2021-02-03 15:51:35,549 > ++++++++++++++케이비제18호스팩++++++++++++++++++++1333/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:35,549 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:35,866 > 424
[DEBUG|collector_api.py:200] 2021-02-03 15:51:36,085 > ++++++++++++++케이엠더블유++++++++++++++++++++1334/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:36,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:36,474 > 425
[DEBUG|collector_api.py:200] 2021-02-03 15:51:36,732 > ++++++++++++++케이피에프++++++++++++++++++++1335/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:36,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:37,083 > 426
[DEBUG|collector_api.py:200] 2021-02-03 15:51:37,338 > ++++++++++++++코닉글로리++++++++++++++++++++1336/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:37,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:37,692 > 427
[DEBUG|collector_api.py:200] 2021-02-03 15:51:37,977 > ++++++++++++++코드네이처++++++++++++++++++++1337/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:37,977 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:38,299 > 428
[DEBUG|collector_api.py:200] 2021-02-03 15:51:38,567 > ++++++++++++++코디엠++++++++++++++++++++1338/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:38,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:38,906 > 429
[DEBUG|collector_api.py:200] 2021-02-03 15:51:39,157 > ++++++++++++++코리아에셋투자증권++++++++++++++++++++1339/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:39,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:39,515 > 430
[DEBUG|collector_api.py:200] 2021-02-03 15:51:39,705 > ++++++++++++++코미코++++++++++++++++++++1340/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:39,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:40,123 > 431
[DEBUG|collector_api.py:200] 2021-02-03 15:51:40,368 > ++++++++++++++코이즈++++++++++++++++++++1341/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:40,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:40,731 > 432
[DEBUG|collector_api.py:200] 2021-02-03 15:51:40,989 > ++++++++++++++큐브앤컴퍼니++++++++++++++++++++1342/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:40,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:41,339 > 433
[DEBUG|collector_api.py:200] 2021-02-03 15:51:41,591 > ++++++++++++++키이스트++++++++++++++++++++1343/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:41,592 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:41,946 > 434
[DEBUG|collector_api.py:200] 2021-02-03 15:51:42,220 > ++++++++++++++탑엔지니어링++++++++++++++++++++1344/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:42,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:42,554 > 435
[DEBUG|collector_api.py:200] 2021-02-03 15:51:42,806 > ++++++++++++++태웅로직스++++++++++++++++++++1345/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:42,807 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:43,162 > 436
[DEBUG|collector_api.py:200] 2021-02-03 15:51:43,386 > ++++++++++++++텔콘RF제약++++++++++++++++++++1346/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:43,387 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:43,771 > 437
[DEBUG|collector_api.py:200] 2021-02-03 15:51:44,015 > ++++++++++++++토비스++++++++++++++++++++1347/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:44,015 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:44,377 > 438
[DEBUG|collector_api.py:200] 2021-02-03 15:51:44,623 > ++++++++++++++티라유텍++++++++++++++++++++1348/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:44,623 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:44,985 > 439
[DEBUG|collector_api.py:200] 2021-02-03 15:51:45,184 > ++++++++++++++티엘비++++++++++++++++++++1349/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:45,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:45,595 > 440
[DEBUG|collector_api.py:200] 2021-02-03 15:51:45,763 > ++++++++++++++파라다이스++++++++++++++++++++1350/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:45,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:46,202 > 441
[DEBUG|collector_api.py:200] 2021-02-03 15:51:46,452 > ++++++++++++++파버나인++++++++++++++++++++1351/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:46,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:46,810 > 442
[DEBUG|collector_api.py:200] 2021-02-03 15:51:47,051 > ++++++++++++++파워넷++++++++++++++++++++1352/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:47,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:47,416 > 443
[DEBUG|collector_api.py:200] 2021-02-03 15:51:47,643 > ++++++++++++++팍스넷++++++++++++++++++++1353/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:47,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:48,024 > 444
[DEBUG|collector_api.py:200] 2021-02-03 15:51:48,279 > ++++++++++++++프로텍++++++++++++++++++++1354/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:48,279 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:48,632 > 445
[DEBUG|collector_api.py:200] 2021-02-03 15:51:48,899 > ++++++++++++++피에스케이++++++++++++++++++++1355/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:48,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:49,239 > 446
[DEBUG|collector_api.py:200] 2021-02-03 15:51:49,454 > ++++++++++++++픽셀플러스++++++++++++++++++++1356/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:49,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:49,847 > 447
[DEBUG|collector_api.py:200] 2021-02-03 15:51:50,103 > ++++++++++++++필옵틱스++++++++++++++++++++1357/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:50,103 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:50,455 > 448
[DEBUG|collector_api.py:200] 2021-02-03 15:51:50,692 > ++++++++++++++하나금융14호스팩++++++++++++++++++++1358/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:50,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:51,063 > 449
[DEBUG|collector_api.py:200] 2021-02-03 15:51:51,267 > ++++++++++++++하나금융16호스팩++++++++++++++++++++1359/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:51,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:51:51,669 > 450
[DEBUG|collector_api.py:200] 2021-02-03 15:51:51,890 > ++++++++++++++한국캐피탈++++++++++++++++++++1360/2888
[DEBUG|open_api.py:656] 2021-02-03 15:51:51,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:303] 2021-02-03 15:52:03,131 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:52:03,131 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:52:03,132 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:52:03,132 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:52:03,132 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:52:03,132 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:52:03,132 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:52:03,144 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:52:03,168 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:52:03,169 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:52:03,169 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:52:03,189 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:52:03,222 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 15:52:05,592 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-03 15:52:05,594 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 15:52:05,642 > ++++++++++++++한국캐피탈++++++++++++++++++++1360/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:05,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:05,643 > 1
[DEBUG|collector_api.py:200] 2021-02-03 15:52:06,737 > ++++++++++++++한국파마++++++++++++++++++++1361/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:06,738 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:06,739 > 2
[DEBUG|collector_api.py:200] 2021-02-03 15:52:06,911 > ++++++++++++++한류타임즈++++++++++++++++++++1362/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:06,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:07,347 > 3
[DEBUG|collector_api.py:200] 2021-02-03 15:52:07,594 > ++++++++++++++한일네트웍스++++++++++++++++++++1363/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:07,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:07,955 > 4
[DEBUG|collector_api.py:200] 2021-02-03 15:52:08,222 > ++++++++++++++해마로푸드서비스++++++++++++++++++++1364/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:08,223 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:08,562 > 5
[DEBUG|collector_api.py:200] 2021-02-03 15:52:08,803 > ++++++++++++++헬릭스미스++++++++++++++++++++1365/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:08,803 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:09,169 > 6
[DEBUG|collector_api.py:200] 2021-02-03 15:52:09,413 > ++++++++++++++희림++++++++++++++++++++1366/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:09,413 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:09,777 > 7
[DEBUG|collector_api.py:200] 2021-02-03 15:52:10,029 > ++++++++++++++DSC인베스트먼트++++++++++++++++++++1367/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:10,029 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:10,384 > 8
[DEBUG|collector_api.py:200] 2021-02-03 15:52:10,623 > ++++++++++++++KMH++++++++++++++++++++1368/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:10,623 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:10,993 > 9
[DEBUG|collector_api.py:200] 2021-02-03 15:52:11,225 > ++++++++++++++NHN벅스++++++++++++++++++++1369/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:11,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:11,600 > 10
[DEBUG|collector_api.py:200] 2021-02-03 15:52:11,836 > ++++++++++++++SDN++++++++++++++++++++1370/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:11,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:12,207 > 11
[DEBUG|collector_api.py:200] 2021-02-03 15:52:12,448 > ++++++++++++++SK4호스팩++++++++++++++++++++1371/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:12,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:12,814 > 12
[DEBUG|collector_api.py:200] 2021-02-03 15:52:13,038 > ++++++++++++++SK머티리얼즈++++++++++++++++++++1372/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:13,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:13,420 > 13
[DEBUG|collector_api.py:200] 2021-02-03 15:52:13,661 > ++++++++++++++SNK++++++++++++++++++++1373/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:13,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:14,027 > 14
[DEBUG|collector_api.py:200] 2021-02-03 15:52:14,236 > ++++++++++++++WI++++++++++++++++++++1374/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:14,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:14,635 > 15
[DEBUG|collector_api.py:200] 2021-02-03 15:52:14,881 > ++++++++++++++가비아++++++++++++++++++++1375/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:14,881 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:15,242 > 16
[DEBUG|collector_api.py:200] 2021-02-03 15:52:15,475 > ++++++++++++++경남스틸++++++++++++++++++++1376/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:15,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:15,851 > 17
[DEBUG|collector_api.py:200] 2021-02-03 15:52:16,113 > ++++++++++++++국일신동++++++++++++++++++++1377/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:16,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:16,459 > 18
[DEBUG|collector_api.py:200] 2021-02-03 15:52:16,695 > ++++++++++++++글로벌텍스프리++++++++++++++++++++1378/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:16,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:17,066 > 19
[DEBUG|collector_api.py:200] 2021-02-03 15:52:17,295 > ++++++++++++++글로본++++++++++++++++++++1379/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:17,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:17,673 > 20
[DEBUG|collector_api.py:200] 2021-02-03 15:52:17,923 > ++++++++++++++나노++++++++++++++++++++1380/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:17,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:18,282 > 21
[DEBUG|collector_api.py:200] 2021-02-03 15:52:18,514 > ++++++++++++++네오셈++++++++++++++++++++1381/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:18,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:18,890 > 22
[DEBUG|collector_api.py:200] 2021-02-03 15:52:19,151 > ++++++++++++++네오위즈홀딩스++++++++++++++++++++1382/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:19,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:19,497 > 23
[DEBUG|collector_api.py:200] 2021-02-03 15:52:19,798 > ++++++++++++++네이블++++++++++++++++++++1383/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:19,799 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:20,104 > 24
[DEBUG|collector_api.py:200] 2021-02-03 15:52:20,347 > ++++++++++++++넥스트BT++++++++++++++++++++1384/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:20,348 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:20,713 > 25
[DEBUG|collector_api.py:200] 2021-02-03 15:52:20,969 > ++++++++++++++노바렉스++++++++++++++++++++1385/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:20,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:21,320 > 26
[DEBUG|collector_api.py:200] 2021-02-03 15:52:21,545 > ++++++++++++++대신밸런스제7호스팩++++++++++++++++++++1386/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:21,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:21,927 > 27
[DEBUG|collector_api.py:200] 2021-02-03 15:52:22,131 > ++++++++++++++대양전기공업++++++++++++++++++++1387/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:22,132 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:22,533 > 28
[DEBUG|collector_api.py:200] 2021-02-03 15:52:22,763 > ++++++++++++++대원++++++++++++++++++++1388/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:22,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:23,142 > 29
[DEBUG|collector_api.py:200] 2021-02-03 15:52:23,385 > ++++++++++++++대한뉴팜++++++++++++++++++++1389/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:23,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:23,749 > 30
[DEBUG|collector_api.py:200] 2021-02-03 15:52:24,012 > ++++++++++++++더블유에프엠++++++++++++++++++++1390/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:24,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:24,356 > 31
[DEBUG|collector_api.py:200] 2021-02-03 15:52:24,602 > ++++++++++++++덕산테코피아++++++++++++++++++++1391/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:24,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:24,963 > 32
[DEBUG|collector_api.py:200] 2021-02-03 15:52:25,178 > ++++++++++++++덕산하이메탈++++++++++++++++++++1392/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:25,178 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:25,570 > 33
[DEBUG|collector_api.py:200] 2021-02-03 15:52:25,819 > ++++++++++++++동국제약++++++++++++++++++++1393/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:25,820 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:26,177 > 34
[DEBUG|collector_api.py:200] 2021-02-03 15:52:26,413 > ++++++++++++++동진쎄미켐++++++++++++++++++++1394/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:26,413 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:26,785 > 35
[DEBUG|collector_api.py:200] 2021-02-03 15:52:27,040 > ++++++++++++++디바이스이엔지++++++++++++++++++++1395/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:27,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:27,393 > 36
[DEBUG|collector_api.py:200] 2021-02-03 15:52:27,609 > ++++++++++++++디알젬++++++++++++++++++++1396/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:27,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:28,001 > 37
[DEBUG|collector_api.py:200] 2021-02-03 15:52:28,229 > ++++++++++++++디에스티++++++++++++++++++++1397/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:28,229 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:28,608 > 38
[DEBUG|collector_api.py:200] 2021-02-03 15:52:28,857 > ++++++++++++++라이온켐텍++++++++++++++++++++1398/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:28,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:29,215 > 39
[DEBUG|collector_api.py:200] 2021-02-03 15:52:29,441 > ++++++++++++++레이크머티리얼즈++++++++++++++++++++1399/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:29,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:29,821 > 40
[DEBUG|collector_api.py:200] 2021-02-03 15:52:30,069 > ++++++++++++++레인보우로보틱스++++++++++++++++++++1400/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:30,069 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:30,429 > 41
[DEBUG|open_api.py:696] 2021-02-03 15:52:30,444 > 레인보우로보틱스 테이블이 daily_craw db 에 없다. 새로 생성! 
[INFO|collector_api.py:557] 2021-02-03 15:52:30,628 > daily_craw.레인보우로보틱스 업데이트 완료 277810
[INFO|collector_api.py:558] 2021-02-03 15:52:30,629 > daily_buy_list 업데이트 중..
[INFO|collector_api.py:565] 2021-02-03 15:52:30,647 > 277810 레인보우로보틱스 - daily_buy_list.`20190102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,683 > 277810 레인보우로보틱스 - daily_buy_list.`20190103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,704 > 277810 레인보우로보틱스 - daily_buy_list.`20190104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,726 > 277810 레인보우로보틱스 - daily_buy_list.`20190107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,750 > 277810 레인보우로보틱스 - daily_buy_list.`20190108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,771 > 277810 레인보우로보틱스 - daily_buy_list.`20190109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,794 > 277810 레인보우로보틱스 - daily_buy_list.`20190110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,815 > 277810 레인보우로보틱스 - daily_buy_list.`20190111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,836 > 277810 레인보우로보틱스 - daily_buy_list.`20190114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,856 > 277810 레인보우로보틱스 - daily_buy_list.`20190115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,880 > 277810 레인보우로보틱스 - daily_buy_list.`20190116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,900 > 277810 레인보우로보틱스 - daily_buy_list.`20190117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,922 > 277810 레인보우로보틱스 - daily_buy_list.`20190118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,944 > 277810 레인보우로보틱스 - daily_buy_list.`20190121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,965 > 277810 레인보우로보틱스 - daily_buy_list.`20190122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:30,987 > 277810 레인보우로보틱스 - daily_buy_list.`20190123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,007 > 277810 레인보우로보틱스 - daily_buy_list.`20190124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,030 > 277810 레인보우로보틱스 - daily_buy_list.`20190125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,049 > 277810 레인보우로보틱스 - daily_buy_list.`20190128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,073 > 277810 레인보우로보틱스 - daily_buy_list.`20190129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,096 > 277810 레인보우로보틱스 - daily_buy_list.`20190130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,120 > 277810 레인보우로보틱스 - daily_buy_list.`20190131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,141 > 277810 레인보우로보틱스 - daily_buy_list.`20190201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,164 > 277810 레인보우로보틱스 - daily_buy_list.`20190207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,185 > 277810 레인보우로보틱스 - daily_buy_list.`20190208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,207 > 277810 레인보우로보틱스 - daily_buy_list.`20190211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,233 > 277810 레인보우로보틱스 - daily_buy_list.`20190212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,255 > 277810 레인보우로보틱스 - daily_buy_list.`20190213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,276 > 277810 레인보우로보틱스 - daily_buy_list.`20190214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,301 > 277810 레인보우로보틱스 - daily_buy_list.`20190215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,324 > 277810 레인보우로보틱스 - daily_buy_list.`20190218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,345 > 277810 레인보우로보틱스 - daily_buy_list.`20190219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,366 > 277810 레인보우로보틱스 - daily_buy_list.`20190220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,387 > 277810 레인보우로보틱스 - daily_buy_list.`20190221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,410 > 277810 레인보우로보틱스 - daily_buy_list.`20190222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,433 > 277810 레인보우로보틱스 - daily_buy_list.`20190225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,453 > 277810 레인보우로보틱스 - daily_buy_list.`20190226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,475 > 277810 레인보우로보틱스 - daily_buy_list.`20190227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,496 > 277810 레인보우로보틱스 - daily_buy_list.`20190228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,520 > 277810 레인보우로보틱스 - daily_buy_list.`20190304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,541 > 277810 레인보우로보틱스 - daily_buy_list.`20190305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,564 > 277810 레인보우로보틱스 - daily_buy_list.`20190306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,585 > 277810 레인보우로보틱스 - daily_buy_list.`20190307` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,607 > 277810 레인보우로보틱스 - daily_buy_list.`20190308` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,659 > 277810 레인보우로보틱스 - daily_buy_list.`20190311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,688 > 277810 레인보우로보틱스 - daily_buy_list.`20190312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,710 > 277810 레인보우로보틱스 - daily_buy_list.`20190313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,732 > 277810 레인보우로보틱스 - daily_buy_list.`20190314` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,753 > 277810 레인보우로보틱스 - daily_buy_list.`20190315` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,775 > 277810 레인보우로보틱스 - daily_buy_list.`20190318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,797 > 277810 레인보우로보틱스 - daily_buy_list.`20190319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,817 > 277810 레인보우로보틱스 - daily_buy_list.`20190320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,839 > 277810 레인보우로보틱스 - daily_buy_list.`20190321` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,859 > 277810 레인보우로보틱스 - daily_buy_list.`20190322` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,880 > 277810 레인보우로보틱스 - daily_buy_list.`20190325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,901 > 277810 레인보우로보틱스 - daily_buy_list.`20190326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,922 > 277810 레인보우로보틱스 - daily_buy_list.`20190327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,944 > 277810 레인보우로보틱스 - daily_buy_list.`20190328` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,965 > 277810 레인보우로보틱스 - daily_buy_list.`20190329` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:31,988 > 277810 레인보우로보틱스 - daily_buy_list.`20190401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,010 > 277810 레인보우로보틱스 - daily_buy_list.`20190402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,034 > 277810 레인보우로보틱스 - daily_buy_list.`20190403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,054 > 277810 레인보우로보틱스 - daily_buy_list.`20190404` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,076 > 277810 레인보우로보틱스 - daily_buy_list.`20190405` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,098 > 277810 레인보우로보틱스 - daily_buy_list.`20190408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,120 > 277810 레인보우로보틱스 - daily_buy_list.`20190409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,141 > 277810 레인보우로보틱스 - daily_buy_list.`20190410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,163 > 277810 레인보우로보틱스 - daily_buy_list.`20190411` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,185 > 277810 레인보우로보틱스 - daily_buy_list.`20190412` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,208 > 277810 레인보우로보틱스 - daily_buy_list.`20190415` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,232 > 277810 레인보우로보틱스 - daily_buy_list.`20190416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,252 > 277810 레인보우로보틱스 - daily_buy_list.`20190417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,273 > 277810 레인보우로보틱스 - daily_buy_list.`20190418` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,293 > 277810 레인보우로보틱스 - daily_buy_list.`20190419` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,317 > 277810 레인보우로보틱스 - daily_buy_list.`20190422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,340 > 277810 레인보우로보틱스 - daily_buy_list.`20190423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,362 > 277810 레인보우로보틱스 - daily_buy_list.`20190424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,384 > 277810 레인보우로보틱스 - daily_buy_list.`20190425` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,409 > 277810 레인보우로보틱스 - daily_buy_list.`20190426` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,430 > 277810 레인보우로보틱스 - daily_buy_list.`20190429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,451 > 277810 레인보우로보틱스 - daily_buy_list.`20190430` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,471 > 277810 레인보우로보틱스 - daily_buy_list.`20190502` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,492 > 277810 레인보우로보틱스 - daily_buy_list.`20190503` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,514 > 277810 레인보우로보틱스 - daily_buy_list.`20190507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,536 > 277810 레인보우로보틱스 - daily_buy_list.`20190508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,558 > 277810 레인보우로보틱스 - daily_buy_list.`20190509` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,580 > 277810 레인보우로보틱스 - daily_buy_list.`20190510` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,602 > 277810 레인보우로보틱스 - daily_buy_list.`20190513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,623 > 277810 레인보우로보틱스 - daily_buy_list.`20190514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,645 > 277810 레인보우로보틱스 - daily_buy_list.`20190515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,665 > 277810 레인보우로보틱스 - daily_buy_list.`20190516` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,687 > 277810 레인보우로보틱스 - daily_buy_list.`20190517` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,712 > 277810 레인보우로보틱스 - daily_buy_list.`20190520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,736 > 277810 레인보우로보틱스 - daily_buy_list.`20190521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,757 > 277810 레인보우로보틱스 - daily_buy_list.`20190522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,778 > 277810 레인보우로보틱스 - daily_buy_list.`20190523` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,800 > 277810 레인보우로보틱스 - daily_buy_list.`20190524` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,820 > 277810 레인보우로보틱스 - daily_buy_list.`20190527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,842 > 277810 레인보우로보틱스 - daily_buy_list.`20190528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,864 > 277810 레인보우로보틱스 - daily_buy_list.`20190529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,885 > 277810 레인보우로보틱스 - daily_buy_list.`20190530` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,907 > 277810 레인보우로보틱스 - daily_buy_list.`20190531` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,930 > 277810 레인보우로보틱스 - daily_buy_list.`20190603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,951 > 277810 레인보우로보틱스 - daily_buy_list.`20190604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,973 > 277810 레인보우로보틱스 - daily_buy_list.`20190605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:32,995 > 277810 레인보우로보틱스 - daily_buy_list.`20190607` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,018 > 277810 레인보우로보틱스 - daily_buy_list.`20190610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,039 > 277810 레인보우로보틱스 - daily_buy_list.`20190611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,061 > 277810 레인보우로보틱스 - daily_buy_list.`20190612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,086 > 277810 레인보우로보틱스 - daily_buy_list.`20190613` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,110 > 277810 레인보우로보틱스 - daily_buy_list.`20190614` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,134 > 277810 레인보우로보틱스 - daily_buy_list.`20190617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,156 > 277810 레인보우로보틱스 - daily_buy_list.`20190618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,179 > 277810 레인보우로보틱스 - daily_buy_list.`20190619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,202 > 277810 레인보우로보틱스 - daily_buy_list.`20190620` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,224 > 277810 레인보우로보틱스 - daily_buy_list.`20190621` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,247 > 277810 레인보우로보틱스 - daily_buy_list.`20190624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,268 > 277810 레인보우로보틱스 - daily_buy_list.`20190625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,289 > 277810 레인보우로보틱스 - daily_buy_list.`20190626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,311 > 277810 레인보우로보틱스 - daily_buy_list.`20190627` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,333 > 277810 레인보우로보틱스 - daily_buy_list.`20190628` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,354 > 277810 레인보우로보틱스 - daily_buy_list.`20190701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,376 > 277810 레인보우로보틱스 - daily_buy_list.`20190702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,400 > 277810 레인보우로보틱스 - daily_buy_list.`20190703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,421 > 277810 레인보우로보틱스 - daily_buy_list.`20190704` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,443 > 277810 레인보우로보틱스 - daily_buy_list.`20190705` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,464 > 277810 레인보우로보틱스 - daily_buy_list.`20190708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,484 > 277810 레인보우로보틱스 - daily_buy_list.`20190709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,508 > 277810 레인보우로보틱스 - daily_buy_list.`20190710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,529 > 277810 레인보우로보틱스 - daily_buy_list.`20190711` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,550 > 277810 레인보우로보틱스 - daily_buy_list.`20190712` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,572 > 277810 레인보우로보틱스 - daily_buy_list.`20190715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,593 > 277810 레인보우로보틱스 - daily_buy_list.`20190716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,615 > 277810 레인보우로보틱스 - daily_buy_list.`20190717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,636 > 277810 레인보우로보틱스 - daily_buy_list.`20190718` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,657 > 277810 레인보우로보틱스 - daily_buy_list.`20190719` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,678 > 277810 레인보우로보틱스 - daily_buy_list.`20190722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,702 > 277810 레인보우로보틱스 - daily_buy_list.`20190723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,723 > 277810 레인보우로보틱스 - daily_buy_list.`20190724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,745 > 277810 레인보우로보틱스 - daily_buy_list.`20190725` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,767 > 277810 레인보우로보틱스 - daily_buy_list.`20190726` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,789 > 277810 레인보우로보틱스 - daily_buy_list.`20190729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,810 > 277810 레인보우로보틱스 - daily_buy_list.`20190730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,832 > 277810 레인보우로보틱스 - daily_buy_list.`20190731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,852 > 277810 레인보우로보틱스 - daily_buy_list.`20190801` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,875 > 277810 레인보우로보틱스 - daily_buy_list.`20190802` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,897 > 277810 레인보우로보틱스 - daily_buy_list.`20190805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,919 > 277810 레인보우로보틱스 - daily_buy_list.`20190806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,948 > 277810 레인보우로보틱스 - daily_buy_list.`20190807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:33,979 > 277810 레인보우로보틱스 - daily_buy_list.`20190808` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,005 > 277810 레인보우로보틱스 - daily_buy_list.`20190809` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,028 > 277810 레인보우로보틱스 - daily_buy_list.`20190812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,051 > 277810 레인보우로보틱스 - daily_buy_list.`20190813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,069 > 277810 레인보우로보틱스 - daily_buy_list.`20190814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,094 > 277810 레인보우로보틱스 - daily_buy_list.`20190816` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,115 > 277810 레인보우로보틱스 - daily_buy_list.`20190819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,139 > 277810 레인보우로보틱스 - daily_buy_list.`20190820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,162 > 277810 레인보우로보틱스 - daily_buy_list.`20190821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,185 > 277810 레인보우로보틱스 - daily_buy_list.`20190822` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,207 > 277810 레인보우로보틱스 - daily_buy_list.`20190823` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,230 > 277810 레인보우로보틱스 - daily_buy_list.`20190826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,251 > 277810 레인보우로보틱스 - daily_buy_list.`20190827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,272 > 277810 레인보우로보틱스 - daily_buy_list.`20190828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,293 > 277810 레인보우로보틱스 - daily_buy_list.`20190829` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,315 > 277810 레인보우로보틱스 - daily_buy_list.`20190830` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,339 > 277810 레인보우로보틱스 - daily_buy_list.`20190902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,363 > 277810 레인보우로보틱스 - daily_buy_list.`20190903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,387 > 277810 레인보우로보틱스 - daily_buy_list.`20190904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,409 > 277810 레인보우로보틱스 - daily_buy_list.`20190905` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,430 > 277810 레인보우로보틱스 - daily_buy_list.`20190906` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,452 > 277810 레인보우로보틱스 - daily_buy_list.`20190909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,472 > 277810 레인보우로보틱스 - daily_buy_list.`20190910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,493 > 277810 레인보우로보틱스 - daily_buy_list.`20190911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,517 > 277810 레인보우로보틱스 - daily_buy_list.`20190916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,538 > 277810 레인보우로보틱스 - daily_buy_list.`20190917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,561 > 277810 레인보우로보틱스 - daily_buy_list.`20190918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,582 > 277810 레인보우로보틱스 - daily_buy_list.`20190919` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,604 > 277810 레인보우로보틱스 - daily_buy_list.`20190920` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,637 > 277810 레인보우로보틱스 - daily_buy_list.`20190923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,659 > 277810 레인보우로보틱스 - daily_buy_list.`20190924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,682 > 277810 레인보우로보틱스 - daily_buy_list.`20190925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,704 > 277810 레인보우로보틱스 - daily_buy_list.`20190926` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,726 > 277810 레인보우로보틱스 - daily_buy_list.`20190927` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,749 > 277810 레인보우로보틱스 - daily_buy_list.`20190930` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,773 > 277810 레인보우로보틱스 - daily_buy_list.`20191001` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,794 > 277810 레인보우로보틱스 - daily_buy_list.`20191002` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,815 > 277810 레인보우로보틱스 - daily_buy_list.`20191004` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,836 > 277810 레인보우로보틱스 - daily_buy_list.`20191007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,857 > 277810 레인보우로보틱스 - daily_buy_list.`20191008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,878 > 277810 레인보우로보틱스 - daily_buy_list.`20191010` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,902 > 277810 레인보우로보틱스 - daily_buy_list.`20191011` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,925 > 277810 레인보우로보틱스 - daily_buy_list.`20191014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,948 > 277810 레인보우로보틱스 - daily_buy_list.`20191015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,970 > 277810 레인보우로보틱스 - daily_buy_list.`20191016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:34,991 > 277810 레인보우로보틱스 - daily_buy_list.`20191017` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,014 > 277810 레인보우로보틱스 - daily_buy_list.`20191018` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,037 > 277810 레인보우로보틱스 - daily_buy_list.`20191021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,058 > 277810 레인보우로보틱스 - daily_buy_list.`20191022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,080 > 277810 레인보우로보틱스 - daily_buy_list.`20191023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,103 > 277810 레인보우로보틱스 - daily_buy_list.`20191024` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,126 > 277810 레인보우로보틱스 - daily_buy_list.`20191025` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,148 > 277810 레인보우로보틱스 - daily_buy_list.`20191028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,170 > 277810 레인보우로보틱스 - daily_buy_list.`20191029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,190 > 277810 레인보우로보틱스 - daily_buy_list.`20191030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,213 > 277810 레인보우로보틱스 - daily_buy_list.`20191031` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,234 > 277810 레인보우로보틱스 - daily_buy_list.`20191101` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,256 > 277810 레인보우로보틱스 - daily_buy_list.`20191104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,279 > 277810 레인보우로보틱스 - daily_buy_list.`20191105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,303 > 277810 레인보우로보틱스 - daily_buy_list.`20191106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,325 > 277810 레인보우로보틱스 - daily_buy_list.`20191107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,347 > 277810 레인보우로보틱스 - daily_buy_list.`20191108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,369 > 277810 레인보우로보틱스 - daily_buy_list.`20191111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,393 > 277810 레인보우로보틱스 - daily_buy_list.`20191112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,414 > 277810 레인보우로보틱스 - daily_buy_list.`20191113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,435 > 277810 레인보우로보틱스 - daily_buy_list.`20191114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,460 > 277810 레인보우로보틱스 - daily_buy_list.`20191115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,481 > 277810 레인보우로보틱스 - daily_buy_list.`20191118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,504 > 277810 레인보우로보틱스 - daily_buy_list.`20191119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,526 > 277810 레인보우로보틱스 - daily_buy_list.`20191120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,549 > 277810 레인보우로보틱스 - daily_buy_list.`20191121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,572 > 277810 레인보우로보틱스 - daily_buy_list.`20191122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,594 > 277810 레인보우로보틱스 - daily_buy_list.`20191125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,616 > 277810 레인보우로보틱스 - daily_buy_list.`20191126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,636 > 277810 레인보우로보틱스 - daily_buy_list.`20191127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,658 > 277810 레인보우로보틱스 - daily_buy_list.`20191128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,680 > 277810 레인보우로보틱스 - daily_buy_list.`20191129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,705 > 277810 레인보우로보틱스 - daily_buy_list.`20191202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,726 > 277810 레인보우로보틱스 - daily_buy_list.`20191203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,748 > 277810 레인보우로보틱스 - daily_buy_list.`20191204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,771 > 277810 레인보우로보틱스 - daily_buy_list.`20191205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,793 > 277810 레인보우로보틱스 - daily_buy_list.`20191206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,814 > 277810 레인보우로보틱스 - daily_buy_list.`20191209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,836 > 277810 레인보우로보틱스 - daily_buy_list.`20191210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,856 > 277810 레인보우로보틱스 - daily_buy_list.`20191211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,878 > 277810 레인보우로보틱스 - daily_buy_list.`20191212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,902 > 277810 레인보우로보틱스 - daily_buy_list.`20191213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,922 > 277810 레인보우로보틱스 - daily_buy_list.`20191216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,947 > 277810 레인보우로보틱스 - daily_buy_list.`20191217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,969 > 277810 레인보우로보틱스 - daily_buy_list.`20191218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:35,990 > 277810 레인보우로보틱스 - daily_buy_list.`20191219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,013 > 277810 레인보우로보틱스 - daily_buy_list.`20191220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,036 > 277810 레인보우로보틱스 - daily_buy_list.`20191223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,058 > 277810 레인보우로보틱스 - daily_buy_list.`20191224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,080 > 277810 레인보우로보틱스 - daily_buy_list.`20191226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,102 > 277810 레인보우로보틱스 - daily_buy_list.`20191227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,125 > 277810 레인보우로보틱스 - daily_buy_list.`20191230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,146 > 277810 레인보우로보틱스 - daily_buy_list.`20200102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,168 > 277810 레인보우로보틱스 - daily_buy_list.`20200103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,191 > 277810 레인보우로보틱스 - daily_buy_list.`20200106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,213 > 277810 레인보우로보틱스 - daily_buy_list.`20200107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,236 > 277810 레인보우로보틱스 - daily_buy_list.`20200108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,256 > 277810 레인보우로보틱스 - daily_buy_list.`20200109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,280 > 277810 레인보우로보틱스 - daily_buy_list.`20200110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,301 > 277810 레인보우로보틱스 - daily_buy_list.`20200113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,328 > 277810 레인보우로보틱스 - daily_buy_list.`20200114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,350 > 277810 레인보우로보틱스 - daily_buy_list.`20200115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,371 > 277810 레인보우로보틱스 - daily_buy_list.`20200116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,392 > 277810 레인보우로보틱스 - daily_buy_list.`20200117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,414 > 277810 레인보우로보틱스 - daily_buy_list.`20200120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,436 > 277810 레인보우로보틱스 - daily_buy_list.`20200121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,461 > 277810 레인보우로보틱스 - daily_buy_list.`20200122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,482 > 277810 레인보우로보틱스 - daily_buy_list.`20200123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,504 > 277810 레인보우로보틱스 - daily_buy_list.`20200128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,524 > 277810 레인보우로보틱스 - daily_buy_list.`20200129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,547 > 277810 레인보우로보틱스 - daily_buy_list.`20200130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,568 > 277810 레인보우로보틱스 - daily_buy_list.`20200131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,590 > 277810 레인보우로보틱스 - daily_buy_list.`20200203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,614 > 277810 레인보우로보틱스 - daily_buy_list.`20200204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,634 > 277810 레인보우로보틱스 - daily_buy_list.`20200205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,655 > 277810 레인보우로보틱스 - daily_buy_list.`20200206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,676 > 277810 레인보우로보틱스 - daily_buy_list.`20200207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,700 > 277810 레인보우로보틱스 - daily_buy_list.`20200210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,721 > 277810 레인보우로보틱스 - daily_buy_list.`20200211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,745 > 277810 레인보우로보틱스 - daily_buy_list.`20200212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,768 > 277810 레인보우로보틱스 - daily_buy_list.`20200213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,789 > 277810 레인보우로보틱스 - daily_buy_list.`20200214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,810 > 277810 레인보우로보틱스 - daily_buy_list.`20200217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,831 > 277810 레인보우로보틱스 - daily_buy_list.`20200218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,853 > 277810 레인보우로보틱스 - daily_buy_list.`20200219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,878 > 277810 레인보우로보틱스 - daily_buy_list.`20200220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,900 > 277810 레인보우로보틱스 - daily_buy_list.`20200221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,923 > 277810 레인보우로보틱스 - daily_buy_list.`20200224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,944 > 277810 레인보우로보틱스 - daily_buy_list.`20200225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,967 > 277810 레인보우로보틱스 - daily_buy_list.`20200226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:36,988 > 277810 레인보우로보틱스 - daily_buy_list.`20200227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,009 > 277810 레인보우로보틱스 - daily_buy_list.`20200228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,029 > 277810 레인보우로보틱스 - daily_buy_list.`20200302` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,051 > 277810 레인보우로보틱스 - daily_buy_list.`20200303` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,074 > 277810 레인보우로보틱스 - daily_buy_list.`20200304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,095 > 277810 레인보우로보틱스 - daily_buy_list.`20200305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,116 > 277810 레인보우로보틱스 - daily_buy_list.`20200306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,138 > 277810 레인보우로보틱스 - daily_buy_list.`20200309` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,160 > 277810 레인보우로보틱스 - daily_buy_list.`20200310` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,183 > 277810 레인보우로보틱스 - daily_buy_list.`20200311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,206 > 277810 레인보우로보틱스 - daily_buy_list.`20200312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,229 > 277810 레인보우로보틱스 - daily_buy_list.`20200313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,250 > 277810 레인보우로보틱스 - daily_buy_list.`20200316` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,272 > 277810 레인보우로보틱스 - daily_buy_list.`20200317` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,295 > 277810 레인보우로보틱스 - daily_buy_list.`20200318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,318 > 277810 레인보우로보틱스 - daily_buy_list.`20200319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,345 > 277810 레인보우로보틱스 - daily_buy_list.`20200320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,370 > 277810 레인보우로보틱스 - daily_buy_list.`20200323` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,393 > 277810 레인보우로보틱스 - daily_buy_list.`20200324` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,416 > 277810 레인보우로보틱스 - daily_buy_list.`20200325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,442 > 277810 레인보우로보틱스 - daily_buy_list.`20200326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,467 > 277810 레인보우로보틱스 - daily_buy_list.`20200327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,489 > 277810 레인보우로보틱스 - daily_buy_list.`20200330` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,514 > 277810 레인보우로보틱스 - daily_buy_list.`20200331` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,534 > 277810 레인보우로보틱스 - daily_buy_list.`20200401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,559 > 277810 레인보우로보틱스 - daily_buy_list.`20200402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,581 > 277810 레인보우로보틱스 - daily_buy_list.`20200403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,603 > 277810 레인보우로보틱스 - daily_buy_list.`20200406` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,626 > 277810 레인보우로보틱스 - daily_buy_list.`20200407` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,649 > 277810 레인보우로보틱스 - daily_buy_list.`20200408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,670 > 277810 레인보우로보틱스 - daily_buy_list.`20200409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,694 > 277810 레인보우로보틱스 - daily_buy_list.`20200410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,715 > 277810 레인보우로보틱스 - daily_buy_list.`20200413` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,739 > 277810 레인보우로보틱스 - daily_buy_list.`20200414` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,762 > 277810 레인보우로보틱스 - daily_buy_list.`20200416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,785 > 277810 레인보우로보틱스 - daily_buy_list.`20200417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,807 > 277810 레인보우로보틱스 - daily_buy_list.`20200420` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,828 > 277810 레인보우로보틱스 - daily_buy_list.`20200421` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,850 > 277810 레인보우로보틱스 - daily_buy_list.`20200422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,872 > 277810 레인보우로보틱스 - daily_buy_list.`20200423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,897 > 277810 레인보우로보틱스 - daily_buy_list.`20200424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,919 > 277810 레인보우로보틱스 - daily_buy_list.`20200427` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,939 > 277810 레인보우로보틱스 - daily_buy_list.`20200428` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,961 > 277810 레인보우로보틱스 - daily_buy_list.`20200429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:37,983 > 277810 레인보우로보틱스 - daily_buy_list.`20200504` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,004 > 277810 레인보우로보틱스 - daily_buy_list.`20200506` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,027 > 277810 레인보우로보틱스 - daily_buy_list.`20200507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,050 > 277810 레인보우로보틱스 - daily_buy_list.`20200508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,072 > 277810 레인보우로보틱스 - daily_buy_list.`20200511` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,094 > 277810 레인보우로보틱스 - daily_buy_list.`20200512` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,115 > 277810 레인보우로보틱스 - daily_buy_list.`20200513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,138 > 277810 레인보우로보틱스 - daily_buy_list.`20200514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,161 > 277810 레인보우로보틱스 - daily_buy_list.`20200515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,184 > 277810 레인보우로보틱스 - daily_buy_list.`20200518` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,206 > 277810 레인보우로보틱스 - daily_buy_list.`20200519` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,228 > 277810 레인보우로보틱스 - daily_buy_list.`20200520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,249 > 277810 레인보우로보틱스 - daily_buy_list.`20200521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,272 > 277810 레인보우로보틱스 - daily_buy_list.`20200522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,294 > 277810 레인보우로보틱스 - daily_buy_list.`20200525` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,315 > 277810 레인보우로보틱스 - daily_buy_list.`20200526` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,337 > 277810 레인보우로보틱스 - daily_buy_list.`20200527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,362 > 277810 레인보우로보틱스 - daily_buy_list.`20200528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,383 > 277810 레인보우로보틱스 - daily_buy_list.`20200529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,404 > 277810 레인보우로보틱스 - daily_buy_list.`20200601` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,426 > 277810 레인보우로보틱스 - daily_buy_list.`20200602` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,447 > 277810 레인보우로보틱스 - daily_buy_list.`20200603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,471 > 277810 레인보우로보틱스 - daily_buy_list.`20200604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,495 > 277810 레인보우로보틱스 - daily_buy_list.`20200605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,517 > 277810 레인보우로보틱스 - daily_buy_list.`20200608` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,541 > 277810 레인보우로보틱스 - daily_buy_list.`20200609` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,570 > 277810 레인보우로보틱스 - daily_buy_list.`20200610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,592 > 277810 레인보우로보틱스 - daily_buy_list.`20200611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,614 > 277810 레인보우로보틱스 - daily_buy_list.`20200612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,635 > 277810 레인보우로보틱스 - daily_buy_list.`20200615` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,655 > 277810 레인보우로보틱스 - daily_buy_list.`20200616` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,676 > 277810 레인보우로보틱스 - daily_buy_list.`20200617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,698 > 277810 레인보우로보틱스 - daily_buy_list.`20200618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,720 > 277810 레인보우로보틱스 - daily_buy_list.`20200619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,744 > 277810 레인보우로보틱스 - daily_buy_list.`20200622` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,765 > 277810 레인보우로보틱스 - daily_buy_list.`20200623` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,787 > 277810 레인보우로보틱스 - daily_buy_list.`20200624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,808 > 277810 레인보우로보틱스 - daily_buy_list.`20200625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,829 > 277810 레인보우로보틱스 - daily_buy_list.`20200626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,850 > 277810 레인보우로보틱스 - daily_buy_list.`20200629` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,873 > 277810 레인보우로보틱스 - daily_buy_list.`20200630` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,895 > 277810 레인보우로보틱스 - daily_buy_list.`20200701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,918 > 277810 레인보우로보틱스 - daily_buy_list.`20200702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,939 > 277810 레인보우로보틱스 - daily_buy_list.`20200703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,961 > 277810 레인보우로보틱스 - daily_buy_list.`20200706` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:38,982 > 277810 레인보우로보틱스 - daily_buy_list.`20200707` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,003 > 277810 레인보우로보틱스 - daily_buy_list.`20200708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,025 > 277810 레인보우로보틱스 - daily_buy_list.`20200709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,047 > 277810 레인보우로보틱스 - daily_buy_list.`20200710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,071 > 277810 레인보우로보틱스 - daily_buy_list.`20200713` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,093 > 277810 레인보우로보틱스 - daily_buy_list.`20200714` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,114 > 277810 레인보우로보틱스 - daily_buy_list.`20200715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,137 > 277810 레인보우로보틱스 - daily_buy_list.`20200716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,160 > 277810 레인보우로보틱스 - daily_buy_list.`20200717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,181 > 277810 레인보우로보틱스 - daily_buy_list.`20200720` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,204 > 277810 레인보우로보틱스 - daily_buy_list.`20200721` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,225 > 277810 레인보우로보틱스 - daily_buy_list.`20200722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,247 > 277810 레인보우로보틱스 - daily_buy_list.`20200723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,268 > 277810 레인보우로보틱스 - daily_buy_list.`20200724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,292 > 277810 레인보우로보틱스 - daily_buy_list.`20200727` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,312 > 277810 레인보우로보틱스 - daily_buy_list.`20200728` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,334 > 277810 레인보우로보틱스 - daily_buy_list.`20200729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,359 > 277810 레인보우로보틱스 - daily_buy_list.`20200730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,380 > 277810 레인보우로보틱스 - daily_buy_list.`20200731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,401 > 277810 레인보우로보틱스 - daily_buy_list.`20200803` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,422 > 277810 레인보우로보틱스 - daily_buy_list.`20200804` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,444 > 277810 레인보우로보틱스 - daily_buy_list.`20200805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,466 > 277810 레인보우로보틱스 - daily_buy_list.`20200806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,488 > 277810 레인보우로보틱스 - daily_buy_list.`20200807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,510 > 277810 레인보우로보틱스 - daily_buy_list.`20200810` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,532 > 277810 레인보우로보틱스 - daily_buy_list.`20200811` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,554 > 277810 레인보우로보틱스 - daily_buy_list.`20200812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,574 > 277810 레인보우로보틱스 - daily_buy_list.`20200813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,596 > 277810 레인보우로보틱스 - daily_buy_list.`20200814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,622 > 277810 레인보우로보틱스 - daily_buy_list.`20200818` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,644 > 277810 레인보우로보틱스 - daily_buy_list.`20200819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,665 > 277810 레인보우로보틱스 - daily_buy_list.`20200820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,686 > 277810 레인보우로보틱스 - daily_buy_list.`20200821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,708 > 277810 레인보우로보틱스 - daily_buy_list.`20200824` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,731 > 277810 레인보우로보틱스 - daily_buy_list.`20200825` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,752 > 277810 레인보우로보틱스 - daily_buy_list.`20200826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,774 > 277810 레인보우로보틱스 - daily_buy_list.`20200827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,796 > 277810 레인보우로보틱스 - daily_buy_list.`20200828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,816 > 277810 레인보우로보틱스 - daily_buy_list.`20200831` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,839 > 277810 레인보우로보틱스 - daily_buy_list.`20200901` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,861 > 277810 레인보우로보틱스 - daily_buy_list.`20200902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,884 > 277810 레인보우로보틱스 - daily_buy_list.`20200903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,905 > 277810 레인보우로보틱스 - daily_buy_list.`20200904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,928 > 277810 레인보우로보틱스 - daily_buy_list.`20200907` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,948 > 277810 레인보우로보틱스 - daily_buy_list.`20200908` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,971 > 277810 레인보우로보틱스 - daily_buy_list.`20200909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:39,992 > 277810 레인보우로보틱스 - daily_buy_list.`20200910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,013 > 277810 레인보우로보틱스 - daily_buy_list.`20200911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,034 > 277810 레인보우로보틱스 - daily_buy_list.`20200914` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,057 > 277810 레인보우로보틱스 - daily_buy_list.`20200915` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,077 > 277810 레인보우로보틱스 - daily_buy_list.`20200916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,098 > 277810 레인보우로보틱스 - daily_buy_list.`20200917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,120 > 277810 레인보우로보틱스 - daily_buy_list.`20200918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,142 > 277810 레인보우로보틱스 - daily_buy_list.`20200921` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,164 > 277810 레인보우로보틱스 - daily_buy_list.`20200922` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,185 > 277810 레인보우로보틱스 - daily_buy_list.`20200923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,206 > 277810 레인보우로보틱스 - daily_buy_list.`20200924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,229 > 277810 레인보우로보틱스 - daily_buy_list.`20200925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,253 > 277810 레인보우로보틱스 - daily_buy_list.`20200928` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,274 > 277810 레인보우로보틱스 - daily_buy_list.`20200929` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,295 > 277810 레인보우로보틱스 - daily_buy_list.`20201005` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,318 > 277810 레인보우로보틱스 - daily_buy_list.`20201006` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,344 > 277810 레인보우로보틱스 - daily_buy_list.`20201007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,366 > 277810 레인보우로보틱스 - daily_buy_list.`20201008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,388 > 277810 레인보우로보틱스 - daily_buy_list.`20201012` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,410 > 277810 레인보우로보틱스 - daily_buy_list.`20201013` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,431 > 277810 레인보우로보틱스 - daily_buy_list.`20201014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,455 > 277810 레인보우로보틱스 - daily_buy_list.`20201015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,478 > 277810 레인보우로보틱스 - daily_buy_list.`20201016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,501 > 277810 레인보우로보틱스 - daily_buy_list.`20201019` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,521 > 277810 레인보우로보틱스 - daily_buy_list.`20201020` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,545 > 277810 레인보우로보틱스 - daily_buy_list.`20201021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,568 > 277810 레인보우로보틱스 - daily_buy_list.`20201022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,588 > 277810 레인보우로보틱스 - daily_buy_list.`20201023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,612 > 277810 레인보우로보틱스 - daily_buy_list.`20201026` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,634 > 277810 레인보우로보틱스 - daily_buy_list.`20201027` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,656 > 277810 레인보우로보틱스 - daily_buy_list.`20201028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,678 > 277810 레인보우로보틱스 - daily_buy_list.`20201029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,700 > 277810 레인보우로보틱스 - daily_buy_list.`20201030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,723 > 277810 레인보우로보틱스 - daily_buy_list.`20201102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,745 > 277810 레인보우로보틱스 - daily_buy_list.`20201103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,768 > 277810 레인보우로보틱스 - daily_buy_list.`20201104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,788 > 277810 레인보우로보틱스 - daily_buy_list.`20201105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,810 > 277810 레인보우로보틱스 - daily_buy_list.`20201106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,833 > 277810 레인보우로보틱스 - daily_buy_list.`20201109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,856 > 277810 레인보우로보틱스 - daily_buy_list.`20201110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,878 > 277810 레인보우로보틱스 - daily_buy_list.`20201111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,901 > 277810 레인보우로보틱스 - daily_buy_list.`20201112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,923 > 277810 레인보우로보틱스 - daily_buy_list.`20201113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,945 > 277810 레인보우로보틱스 - daily_buy_list.`20201116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,967 > 277810 레인보우로보틱스 - daily_buy_list.`20201117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:40,988 > 277810 레인보우로보틱스 - daily_buy_list.`20201118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,009 > 277810 레인보우로보틱스 - daily_buy_list.`20201119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,032 > 277810 레인보우로보틱스 - daily_buy_list.`20201120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,054 > 277810 레인보우로보틱스 - daily_buy_list.`20201123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,076 > 277810 레인보우로보틱스 - daily_buy_list.`20201124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,099 > 277810 레인보우로보틱스 - daily_buy_list.`20201125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,120 > 277810 레인보우로보틱스 - daily_buy_list.`20201126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,141 > 277810 레인보우로보틱스 - daily_buy_list.`20201127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,163 > 277810 레인보우로보틱스 - daily_buy_list.`20201130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,184 > 277810 레인보우로보틱스 - daily_buy_list.`20201201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,206 > 277810 레인보우로보틱스 - daily_buy_list.`20201202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,230 > 277810 레인보우로보틱스 - daily_buy_list.`20201203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,254 > 277810 레인보우로보틱스 - daily_buy_list.`20201204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,276 > 277810 레인보우로보틱스 - daily_buy_list.`20201207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,297 > 277810 레인보우로보틱스 - daily_buy_list.`20201208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,319 > 277810 레인보우로보틱스 - daily_buy_list.`20201209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,343 > 277810 레인보우로보틱스 - daily_buy_list.`20201210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,363 > 277810 레인보우로보틱스 - daily_buy_list.`20201211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,385 > 277810 레인보우로보틱스 - daily_buy_list.`20201214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,406 > 277810 레인보우로보틱스 - daily_buy_list.`20201215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,429 > 277810 레인보우로보틱스 - daily_buy_list.`20201216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,449 > 277810 레인보우로보틱스 - daily_buy_list.`20201217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,473 > 277810 레인보우로보틱스 - daily_buy_list.`20201218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,494 > 277810 레인보우로보틱스 - daily_buy_list.`20201221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,516 > 277810 레인보우로보틱스 - daily_buy_list.`20201222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,538 > 277810 레인보우로보틱스 - daily_buy_list.`20201223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,558 > 277810 레인보우로보틱스 - daily_buy_list.`20201224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,582 > 277810 레인보우로보틱스 - daily_buy_list.`20201228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,605 > 277810 레인보우로보틱스 - daily_buy_list.`20201229` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,628 > 277810 레인보우로보틱스 - daily_buy_list.`20201230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,649 > 277810 레인보우로보틱스 - daily_buy_list.`20210104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,671 > 277810 레인보우로보틱스 - daily_buy_list.`20210105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,696 > 277810 레인보우로보틱스 - daily_buy_list.`20210106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,720 > 277810 레인보우로보틱스 - daily_buy_list.`20210107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,745 > 277810 레인보우로보틱스 - daily_buy_list.`20210108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,772 > 277810 레인보우로보틱스 - daily_buy_list.`20210111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,795 > 277810 레인보우로보틱스 - daily_buy_list.`20210112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,823 > 277810 레인보우로보틱스 - daily_buy_list.`20210113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,845 > 277810 레인보우로보틱스 - daily_buy_list.`20210114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,866 > 277810 레인보우로보틱스 - daily_buy_list.`20210115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,891 > 277810 레인보우로보틱스 - daily_buy_list.`20210118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,912 > 277810 레인보우로보틱스 - daily_buy_list.`20210119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,933 > 277810 레인보우로보틱스 - daily_buy_list.`20210120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,956 > 277810 레인보우로보틱스 - daily_buy_list.`20210121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,977 > 277810 레인보우로보틱스 - daily_buy_list.`20210122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:41,998 > 277810 레인보우로보틱스 - daily_buy_list.`20210125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:42,021 > 277810 레인보우로보틱스 - daily_buy_list.`20210126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:42,043 > 277810 레인보우로보틱스 - daily_buy_list.`20210127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:42,072 > 277810 레인보우로보틱스 - daily_buy_list.`20210128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:42,099 > 277810 레인보우로보틱스 - daily_buy_list.`20210129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:42,124 > 277810 레인보우로보틱스 - daily_buy_list.`20210201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 15:52:42,151 > 277810 레인보우로보틱스 - daily_buy_list.`20210202` 업데이트
[INFO|collector_api.py:575] 2021-02-03 15:52:42,176 > daily_buy_list 업데이트 완료
[DEBUG|collector_api.py:200] 2021-02-03 15:52:42,187 > ++++++++++++++로지시스++++++++++++++++++++1401/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:42,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:42,188 > 42
[DEBUG|collector_api.py:200] 2021-02-03 15:52:42,444 > ++++++++++++++릭스솔루션++++++++++++++++++++1402/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:42,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:42,797 > 43
[DEBUG|collector_api.py:200] 2021-02-03 15:52:43,038 > ++++++++++++++링네트++++++++++++++++++++1403/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:43,038 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:43,403 > 44
[DEBUG|collector_api.py:200] 2021-02-03 15:52:43,635 > ++++++++++++++마이크로프랜드++++++++++++++++++++1404/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:43,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:44,011 > 45
[DEBUG|collector_api.py:200] 2021-02-03 15:52:44,251 > ++++++++++++++매직마이크로++++++++++++++++++++1405/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:44,251 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:44,618 > 46
[DEBUG|collector_api.py:200] 2021-02-03 15:52:44,843 > ++++++++++++++메가스터디교육++++++++++++++++++++1406/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:44,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:45,224 > 47
[DEBUG|collector_api.py:200] 2021-02-03 15:52:45,470 > ++++++++++++++메드팩토++++++++++++++++++++1407/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:45,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:45,833 > 48
[DEBUG|collector_api.py:200] 2021-02-03 15:52:46,031 > ++++++++++++++모헨즈++++++++++++++++++++1408/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:46,032 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:46,442 > 49
[DEBUG|collector_api.py:200] 2021-02-03 15:52:46,707 > ++++++++++++++미코++++++++++++++++++++1409/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:46,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:47,051 > 50
[DEBUG|collector_api.py:200] 2021-02-03 15:52:47,299 > ++++++++++++++민앤지++++++++++++++++++++1410/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:47,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:47,658 > 51
[DEBUG|collector_api.py:200] 2021-02-03 15:52:47,896 > ++++++++++++++바른손이앤에이++++++++++++++++++++1411/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:47,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:48,265 > 52
[DEBUG|collector_api.py:200] 2021-02-03 15:52:48,513 > ++++++++++++++바이온++++++++++++++++++++1412/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:48,514 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:48,871 > 53
[DEBUG|collector_api.py:200] 2021-02-03 15:52:49,131 > ++++++++++++++베노홀딩스++++++++++++++++++++1413/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:49,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:49,480 > 54
[DEBUG|collector_api.py:200] 2021-02-03 15:52:49,719 > ++++++++++++++비디아이++++++++++++++++++++1414/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:49,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:50,087 > 55
[DEBUG|collector_api.py:200] 2021-02-03 15:52:50,323 > ++++++++++++++비보존 헬스케어++++++++++++++++++++1415/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:50,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:50,694 > 56
[DEBUG|collector_api.py:200] 2021-02-03 15:52:50,945 > ++++++++++++++비에이치아이++++++++++++++++++++1416/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:50,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:51,303 > 57
[DEBUG|collector_api.py:200] 2021-02-03 15:52:51,532 > ++++++++++++++새로닉스++++++++++++++++++++1417/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:51,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:51,911 > 58
[DEBUG|collector_api.py:200] 2021-02-03 15:52:52,168 > ++++++++++++++서연탑메탈++++++++++++++++++++1418/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:52,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:52,518 > 59
[DEBUG|collector_api.py:200] 2021-02-03 15:52:52,757 > ++++++++++++++서울반도체++++++++++++++++++++1419/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:52,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:53,124 > 60
[DEBUG|collector_api.py:200] 2021-02-03 15:52:53,375 > ++++++++++++++서울전자통신++++++++++++++++++++1420/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:53,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:53,731 > 61
[DEBUG|collector_api.py:200] 2021-02-03 15:52:53,980 > ++++++++++++++서원인텍++++++++++++++++++++1421/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:53,980 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:54,339 > 62
[DEBUG|collector_api.py:200] 2021-02-03 15:52:54,566 > ++++++++++++++선데이토즈++++++++++++++++++++1422/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:54,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:54,946 > 63
[DEBUG|collector_api.py:200] 2021-02-03 15:52:55,200 > ++++++++++++++성호전자++++++++++++++++++++1423/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:55,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:55,553 > 64
[DEBUG|collector_api.py:200] 2021-02-03 15:52:55,792 > ++++++++++++++세틀뱅크++++++++++++++++++++1424/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:55,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:56,162 > 65
[DEBUG|collector_api.py:200] 2021-02-03 15:52:56,361 > ++++++++++++++센코++++++++++++++++++++1425/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:56,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:56,768 > 66
[DEBUG|collector_api.py:200] 2021-02-03 15:52:56,940 > ++++++++++++++슈프리마에이치큐++++++++++++++++++++1426/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:56,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:57,376 > 67
[DEBUG|collector_api.py:200] 2021-02-03 15:52:57,621 > ++++++++++++++스타플렉스++++++++++++++++++++1427/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:57,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:57,984 > 68
[DEBUG|collector_api.py:200] 2021-02-03 15:52:58,257 > ++++++++++++++시노펙스++++++++++++++++++++1428/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:58,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:58,590 > 69
[DEBUG|collector_api.py:200] 2021-02-03 15:52:58,840 > ++++++++++++++신라에스지++++++++++++++++++++1429/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:58,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:59,198 > 70
[DEBUG|collector_api.py:200] 2021-02-03 15:52:59,450 > ++++++++++++++신원종합개발++++++++++++++++++++1430/2888
[DEBUG|open_api.py:656] 2021-02-03 15:52:59,451 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:52:59,806 > 71
[DEBUG|collector_api.py:200] 2021-02-03 15:53:00,056 > ++++++++++++++신흥에스이씨++++++++++++++++++++1431/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:00,057 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:00,413 > 72
[DEBUG|collector_api.py:200] 2021-02-03 15:53:00,633 > ++++++++++++++씨앤지하이테크++++++++++++++++++++1432/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:00,634 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:01,022 > 73
[DEBUG|collector_api.py:200] 2021-02-03 15:53:01,245 > ++++++++++++++씨티씨바이오++++++++++++++++++++1433/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:01,246 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:01,630 > 74
[DEBUG|collector_api.py:200] 2021-02-03 15:53:01,861 > ++++++++++++++아스타++++++++++++++++++++1434/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:01,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:02,239 > 75
[DEBUG|collector_api.py:200] 2021-02-03 15:53:02,484 > ++++++++++++++아시아종묘++++++++++++++++++++1435/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:02,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:02,846 > 76
[DEBUG|collector_api.py:200] 2021-02-03 15:53:03,079 > ++++++++++++++아우딘퓨쳐스++++++++++++++++++++1436/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:03,079 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:03,454 > 77
[DEBUG|collector_api.py:200] 2021-02-03 15:53:03,692 > ++++++++++++++아이엘사이언스++++++++++++++++++++1437/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:03,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:04,062 > 78
[DEBUG|collector_api.py:200] 2021-02-03 15:53:04,272 > ++++++++++++++아이진++++++++++++++++++++1438/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:04,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:04,670 > 79
[DEBUG|collector_api.py:200] 2021-02-03 15:53:04,913 > ++++++++++++++아이큐어++++++++++++++++++++1439/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:04,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:05,278 > 80
[DEBUG|collector_api.py:200] 2021-02-03 15:53:05,511 > ++++++++++++++아이크래프트++++++++++++++++++++1440/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:05,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:05,886 > 81
[DEBUG|collector_api.py:200] 2021-02-03 15:53:06,124 > ++++++++++++++안트로젠++++++++++++++++++++1441/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:06,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:06,494 > 82
[DEBUG|collector_api.py:200] 2021-02-03 15:53:06,744 > ++++++++++++++알에스오토메이션++++++++++++++++++++1442/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:06,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:07,101 > 83
[DEBUG|collector_api.py:200] 2021-02-03 15:53:07,340 > ++++++++++++++에스디생명공학++++++++++++++++++++1443/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:07,340 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:07,708 > 84
[DEBUG|collector_api.py:200] 2021-02-03 15:53:07,966 > ++++++++++++++에스씨엠생명과학++++++++++++++++++++1444/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:07,966 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:08,317 > 85
[DEBUG|collector_api.py:200] 2021-02-03 15:53:08,488 > ++++++++++++++에스앤씨엔진그룹++++++++++++++++++++1445/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:08,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:08,925 > 86
[DEBUG|collector_api.py:200] 2021-02-03 15:53:09,157 > ++++++++++++++에스텍파마++++++++++++++++++++1446/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:09,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:09,532 > 87
[DEBUG|collector_api.py:200] 2021-02-03 15:53:09,766 > ++++++++++++++에이비프로바이오++++++++++++++++++++1447/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:09,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:10,141 > 88
[DEBUG|collector_api.py:200] 2021-02-03 15:53:10,360 > ++++++++++++++에이스테크++++++++++++++++++++1448/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:10,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:10,749 > 89
[DEBUG|collector_api.py:200] 2021-02-03 15:53:10,992 > ++++++++++++++에이치엔티++++++++++++++++++++1449/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:10,993 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:11,356 > 90
[DEBUG|collector_api.py:200] 2021-02-03 15:53:11,582 > ++++++++++++++에이치엘사이언스++++++++++++++++++++1450/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:11,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:11,963 > 91
[DEBUG|collector_api.py:200] 2021-02-03 15:53:12,191 > ++++++++++++++에이치엠씨제4호스팩++++++++++++++++++++1451/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:12,192 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:12,570 > 92
[DEBUG|collector_api.py:200] 2021-02-03 15:53:12,736 > ++++++++++++++에이티세미콘++++++++++++++++++++1452/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:12,736 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:13,177 > 93
[DEBUG|collector_api.py:200] 2021-02-03 15:53:13,410 > ++++++++++++++에이팩트++++++++++++++++++++1453/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:13,410 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:13,784 > 94
[DEBUG|collector_api.py:200] 2021-02-03 15:53:14,051 > ++++++++++++++에이프로젠 H&G++++++++++++++++++++1454/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:14,051 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:14,393 > 95
[DEBUG|collector_api.py:200] 2021-02-03 15:53:14,628 > ++++++++++++++에코플라스틱++++++++++++++++++++1455/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:14,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:15,001 > 96
[DEBUG|collector_api.py:200] 2021-02-03 15:53:15,245 > ++++++++++++++엔에스++++++++++++++++++++1456/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:15,246 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:15,608 > 97
[DEBUG|collector_api.py:200] 2021-02-03 15:53:15,848 > ++++++++++++++엔에스엔++++++++++++++++++++1457/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:15,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:16,215 > 98
[DEBUG|collector_api.py:200] 2021-02-03 15:53:16,466 > ++++++++++++++엔지스테크널러지++++++++++++++++++++1458/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:16,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:16,822 > 99
[DEBUG|collector_api.py:200] 2021-02-03 15:53:17,065 > ++++++++++++++엔피디++++++++++++++++++++1459/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:17,065 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:17,430 > 100
[DEBUG|collector_api.py:200] 2021-02-03 15:53:17,600 > ++++++++++++++엘아이에스++++++++++++++++++++1460/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:17,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:18,037 > 101
[DEBUG|collector_api.py:200] 2021-02-03 15:53:18,270 > ++++++++++++++엘앤씨바이오++++++++++++++++++++1461/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:18,270 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:18,644 > 102
[DEBUG|collector_api.py:200] 2021-02-03 15:53:18,887 > ++++++++++++++엘오티베큠++++++++++++++++++++1462/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:18,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:19,253 > 103
[DEBUG|collector_api.py:200] 2021-02-03 15:53:19,486 > ++++++++++++++엠브레인++++++++++++++++++++1463/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:19,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:19,861 > 104
[DEBUG|collector_api.py:200] 2021-02-03 15:53:20,041 > ++++++++++++++엠투아이++++++++++++++++++++1464/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:20,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:20,469 > 105
[DEBUG|collector_api.py:200] 2021-02-03 15:53:20,639 > ++++++++++++++엠플러스++++++++++++++++++++1465/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:20,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:21,077 > 106
[DEBUG|collector_api.py:200] 2021-02-03 15:53:21,302 > ++++++++++++++예스24++++++++++++++++++++1466/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:21,302 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:21,683 > 107
[DEBUG|collector_api.py:200] 2021-02-03 15:53:21,932 > ++++++++++++++오가닉티코스메틱++++++++++++++++++++1467/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:21,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:22,290 > 108
[DEBUG|collector_api.py:200] 2021-02-03 15:53:22,517 > ++++++++++++++오하임아이엔티++++++++++++++++++++1468/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:22,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:22,897 > 109
[DEBUG|collector_api.py:200] 2021-02-03 15:53:23,124 > ++++++++++++++옵트론텍++++++++++++++++++++1469/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:23,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:23,505 > 110
[DEBUG|collector_api.py:200] 2021-02-03 15:53:23,750 > ++++++++++++++옵티팜++++++++++++++++++++1470/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:23,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:24,112 > 111
[DEBUG|collector_api.py:200] 2021-02-03 15:53:24,337 > ++++++++++++++와이솔++++++++++++++++++++1471/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:24,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:24,719 > 112
[DEBUG|collector_api.py:200] 2021-02-03 15:53:24,954 > ++++++++++++++와이아이케이++++++++++++++++++++1472/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:24,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:25,326 > 113
[DEBUG|collector_api.py:200] 2021-02-03 15:53:25,562 > ++++++++++++++우노앤컴퍼니++++++++++++++++++++1473/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:25,563 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:25,934 > 114
[DEBUG|collector_api.py:200] 2021-02-03 15:53:26,164 > ++++++++++++++우리산업홀딩스++++++++++++++++++++1474/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:26,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:26,542 > 115
[DEBUG|collector_api.py:200] 2021-02-03 15:53:26,777 > ++++++++++++++우양++++++++++++++++++++1475/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:26,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:27,148 > 116
[DEBUG|collector_api.py:200] 2021-02-03 15:53:27,360 > ++++++++++++++우진비앤지++++++++++++++++++++1476/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:27,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:27,756 > 117
[DEBUG|collector_api.py:200] 2021-02-03 15:53:28,001 > ++++++++++++++원익++++++++++++++++++++1477/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:28,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:28,364 > 118
[DEBUG|collector_api.py:200] 2021-02-03 15:53:28,604 > ++++++++++++++유성티엔에스++++++++++++++++++++1478/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:28,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:28,970 > 119
[DEBUG|collector_api.py:200] 2021-02-03 15:53:29,222 > ++++++++++++++유에스티++++++++++++++++++++1479/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:29,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:29,578 > 120
[DEBUG|collector_api.py:200] 2021-02-03 15:53:29,865 > ++++++++++++++이루온++++++++++++++++++++1480/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:29,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:30,185 > 121
[DEBUG|collector_api.py:200] 2021-02-03 15:53:30,423 > ++++++++++++++이엔에프테크놀로지++++++++++++++++++++1481/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:30,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:30,795 > 122
[DEBUG|collector_api.py:200] 2021-02-03 15:53:31,033 > ++++++++++++++이엘피++++++++++++++++++++1482/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:31,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:31,402 > 123
[DEBUG|collector_api.py:200] 2021-02-03 15:53:31,623 > ++++++++++++++이지홀딩스++++++++++++++++++++1483/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:31,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:32,010 > 124
[DEBUG|collector_api.py:200] 2021-02-03 15:53:32,249 > ++++++++++++++이트론++++++++++++++++++++1484/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:32,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:32,616 > 125
[DEBUG|collector_api.py:200] 2021-02-03 15:53:32,855 > ++++++++++++++인터엠++++++++++++++++++++1485/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:32,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:33,223 > 126
[DEBUG|collector_api.py:200] 2021-02-03 15:53:33,478 > ++++++++++++++인터플렉스++++++++++++++++++++1486/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:33,478 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:33,831 > 127
[DEBUG|collector_api.py:200] 2021-02-03 15:53:34,082 > ++++++++++++++전파기지국++++++++++++++++++++1487/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:34,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:34,438 > 128
[DEBUG|collector_api.py:200] 2021-02-03 15:53:34,671 > ++++++++++++++제너셈++++++++++++++++++++1488/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:34,672 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:35,045 > 129
[DEBUG|collector_api.py:200] 2021-02-03 15:53:35,269 > ++++++++++++++제넥신++++++++++++++++++++1489/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:35,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:35,653 > 130
[DEBUG|collector_api.py:200] 2021-02-03 15:53:35,873 > ++++++++++++++제넨바이오++++++++++++++++++++1490/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:35,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:36,260 > 131
[DEBUG|collector_api.py:200] 2021-02-03 15:53:36,507 > ++++++++++++++제노레이++++++++++++++++++++1491/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:36,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:36,866 > 132
[DEBUG|collector_api.py:200] 2021-02-03 15:53:37,106 > ++++++++++++++제로투세븐++++++++++++++++++++1492/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:37,106 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:37,473 > 133
[DEBUG|collector_api.py:200] 2021-02-03 15:53:37,709 > ++++++++++++++제룡전기++++++++++++++++++++1493/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:37,710 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:38,081 > 134
[DEBUG|collector_api.py:200] 2021-02-03 15:53:38,319 > ++++++++++++++제이씨현시스템++++++++++++++++++++1494/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:38,319 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:38,689 > 135
[DEBUG|collector_api.py:200] 2021-02-03 15:53:38,947 > ++++++++++++++조광ILI++++++++++++++++++++1495/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:38,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:39,296 > 136
[DEBUG|collector_api.py:200] 2021-02-03 15:53:39,543 > ++++++++++++++칩스앤미디어++++++++++++++++++++1496/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:39,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:39,904 > 137
[DEBUG|collector_api.py:200] 2021-02-03 15:53:40,161 > ++++++++++++++컴퍼니케이++++++++++++++++++++1497/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:40,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:40,512 > 138
[DEBUG|collector_api.py:200] 2021-02-03 15:53:40,738 > ++++++++++++++케이사인++++++++++++++++++++1498/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:40,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:41,120 > 139
[DEBUG|collector_api.py:200] 2021-02-03 15:53:41,354 > ++++++++++++++케이씨에스++++++++++++++++++++1499/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:41,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:41,727 > 140
[DEBUG|collector_api.py:200] 2021-02-03 15:53:41,960 > ++++++++++++++케이아이엔엑스++++++++++++++++++++1500/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:41,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:42,335 > 141
[DEBUG|collector_api.py:200] 2021-02-03 15:53:42,570 > ++++++++++++++켐온++++++++++++++++++++1501/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:42,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:42,941 > 142
[DEBUG|collector_api.py:200] 2021-02-03 15:53:43,188 > ++++++++++++++코맥스++++++++++++++++++++1502/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:43,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:43,548 > 143
[DEBUG|collector_api.py:200] 2021-02-03 15:53:43,789 > ++++++++++++++코세스++++++++++++++++++++1503/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:43,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:44,154 > 144
[DEBUG|collector_api.py:200] 2021-02-03 15:53:44,398 > ++++++++++++++코스메카코리아++++++++++++++++++++1504/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:44,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:44,761 > 145
[DEBUG|collector_api.py:200] 2021-02-03 15:53:45,018 > ++++++++++++++코스온++++++++++++++++++++1505/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:45,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:45,368 > 146
[DEBUG|collector_api.py:200] 2021-02-03 15:53:45,619 > ++++++++++++++코엔텍++++++++++++++++++++1506/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:45,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:45,976 > 147
[DEBUG|collector_api.py:200] 2021-02-03 15:53:46,261 > ++++++++++++++코텍++++++++++++++++++++1507/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:46,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:46,583 > 148
[DEBUG|collector_api.py:200] 2021-02-03 15:53:46,831 > ++++++++++++++콜마비앤에이치++++++++++++++++++++1508/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:46,832 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:47,192 > 149
[DEBUG|collector_api.py:200] 2021-02-03 15:53:47,424 > ++++++++++++++큐캐피탈++++++++++++++++++++1509/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:47,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:47,799 > 150
[DEBUG|collector_api.py:200] 2021-02-03 15:53:48,036 > ++++++++++++++타이거일렉++++++++++++++++++++1510/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:48,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:48,406 > 151
[DEBUG|collector_api.py:200] 2021-02-03 15:53:48,645 > ++++++++++++++태광++++++++++++++++++++1511/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:48,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:49,013 > 152
[DEBUG|collector_api.py:200] 2021-02-03 15:53:49,270 > ++++++++++++++티로보틱스++++++++++++++++++++1512/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:49,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:49,619 > 153
[DEBUG|collector_api.py:200] 2021-02-03 15:53:49,853 > ++++++++++++++티앤엘++++++++++++++++++++1513/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:49,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:50,227 > 154
[DEBUG|collector_api.py:200] 2021-02-03 15:53:50,378 > ++++++++++++++파마리서치프로덕트++++++++++++++++++++1514/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:50,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:50,834 > 155
[DEBUG|collector_api.py:200] 2021-02-03 15:53:51,079 > ++++++++++++++파인디앤씨++++++++++++++++++++1515/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:51,080 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:51,441 > 156
[DEBUG|collector_api.py:200] 2021-02-03 15:53:51,719 > ++++++++++++++파인텍++++++++++++++++++++1516/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:51,720 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:52,048 > 157
[DEBUG|collector_api.py:200] 2021-02-03 15:53:52,284 > ++++++++++++++펩트론++++++++++++++++++++1517/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:52,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:52,655 > 158
[DEBUG|collector_api.py:200] 2021-02-03 15:53:52,889 > ++++++++++++++포스링크++++++++++++++++++++1518/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:52,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:53,263 > 159
[DEBUG|collector_api.py:200] 2021-02-03 15:53:53,513 > ++++++++++++++풍국주정++++++++++++++++++++1519/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:53,513 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:53,870 > 160
[DEBUG|collector_api.py:200] 2021-02-03 15:53:54,142 > ++++++++++++++퓨쳐스트림네트웍스++++++++++++++++++++1520/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:54,142 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:54,478 > 161
[DEBUG|collector_api.py:200] 2021-02-03 15:53:54,717 > ++++++++++++++퓨쳐켐++++++++++++++++++++1521/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:54,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:55,086 > 162
[DEBUG|collector_api.py:200] 2021-02-03 15:53:55,317 > ++++++++++++++피씨디렉트++++++++++++++++++++1522/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:55,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:55,693 > 163
[DEBUG|collector_api.py:200] 2021-02-03 15:53:55,924 > ++++++++++++++피에스케이홀딩스++++++++++++++++++++1523/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:55,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:56,300 > 164
[DEBUG|collector_api.py:200] 2021-02-03 15:53:56,554 > ++++++++++++++피플바이오++++++++++++++++++++1524/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:56,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:56,907 > 165
[DEBUG|collector_api.py:200] 2021-02-03 15:53:57,100 > ++++++++++++++하이로닉++++++++++++++++++++1525/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:57,100 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:57,514 > 166
[DEBUG|collector_api.py:200] 2021-02-03 15:53:57,751 > ++++++++++++++하이소닉++++++++++++++++++++1526/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:57,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:58,120 > 167
[DEBUG|collector_api.py:200] 2021-02-03 15:53:58,351 > ++++++++++++++한국유니온제약++++++++++++++++++++1527/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:58,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:58,728 > 168
[DEBUG|collector_api.py:200] 2021-02-03 15:53:58,954 > ++++++++++++++한국컴퓨터++++++++++++++++++++1528/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:58,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:59,335 > 169
[DEBUG|collector_api.py:200] 2021-02-03 15:53:59,567 > ++++++++++++++한국테크놀로지++++++++++++++++++++1529/2888
[DEBUG|open_api.py:656] 2021-02-03 15:53:59,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:53:59,943 > 170
[DEBUG|collector_api.py:200] 2021-02-03 15:54:00,224 > ++++++++++++++한송네오텍++++++++++++++++++++1530/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:00,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:00,550 > 171
[DEBUG|collector_api.py:200] 2021-02-03 15:54:00,786 > ++++++++++++++한일사료++++++++++++++++++++1531/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:00,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:01,158 > 172
[DEBUG|collector_api.py:200] 2021-02-03 15:54:01,407 > ++++++++++++++헝셩그룹++++++++++++++++++++1532/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:01,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:01,765 > 173
[DEBUG|collector_api.py:200] 2021-02-03 15:54:02,009 > ++++++++++++++화일약품++++++++++++++++++++1533/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:02,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:02,372 > 174
[DEBUG|collector_api.py:200] 2021-02-03 15:54:02,663 > ++++++++++++++효성오앤비++++++++++++++++++++1534/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:02,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:02,980 > 175
[DEBUG|collector_api.py:200] 2021-02-03 15:54:03,232 > ++++++++++++++휴온스++++++++++++++++++++1535/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:03,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:03,587 > 176
[DEBUG|collector_api.py:200] 2021-02-03 15:54:03,830 > ++++++++++++++휴젤++++++++++++++++++++1536/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:03,831 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:04,195 > 177
[DEBUG|collector_api.py:200] 2021-02-03 15:54:04,431 > ++++++++++++++CNH++++++++++++++++++++1537/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:04,432 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:04,803 > 178
[DEBUG|collector_api.py:200] 2021-02-03 15:54:05,055 > ++++++++++++++DMS++++++++++++++++++++1538/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:05,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:05,411 > 179
[DEBUG|collector_api.py:200] 2021-02-03 15:54:05,660 > ++++++++++++++GH신소재++++++++++++++++++++1539/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:05,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:06,019 > 180
[DEBUG|collector_api.py:200] 2021-02-03 15:54:06,281 > ++++++++++++++IBKS제14호스팩++++++++++++++++++++1540/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:06,282 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:06,628 > 181
[DEBUG|collector_api.py:200] 2021-02-03 15:54:06,795 > ++++++++++++++KBI메탈++++++++++++++++++++1541/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:06,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:07,235 > 182
[DEBUG|collector_api.py:200] 2021-02-03 15:54:07,491 > ++++++++++++++KMH하이텍++++++++++++++++++++1542/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:07,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:07,844 > 183
[DEBUG|collector_api.py:200] 2021-02-03 15:54:08,101 > ++++++++++++++KNN++++++++++++++++++++1543/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:08,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:08,452 > 184
[DEBUG|collector_api.py:200] 2021-02-03 15:54:08,680 > ++++++++++++++KPX생명과학++++++++++++++++++++1544/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:08,681 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:09,059 > 185
[DEBUG|collector_api.py:200] 2021-02-03 15:54:09,304 > ++++++++++++++KTH++++++++++++++++++++1545/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:09,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:09,665 > 186
[DEBUG|collector_api.py:200] 2021-02-03 15:54:09,904 > ++++++++++++++KT서브마린++++++++++++++++++++1546/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:09,904 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:10,271 > 187
[DEBUG|collector_api.py:200] 2021-02-03 15:54:10,511 > ++++++++++++++SBS콘텐츠허브++++++++++++++++++++1547/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:10,511 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:10,877 > 188
[DEBUG|collector_api.py:200] 2021-02-03 15:54:11,125 > ++++++++++++++SG&G++++++++++++++++++++1548/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:11,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:11,487 > 189
[DEBUG|collector_api.py:200] 2021-02-03 15:54:11,731 > ++++++++++++++SGA++++++++++++++++++++1549/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:11,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:12,094 > 190
[DEBUG|collector_api.py:200] 2021-02-03 15:54:12,327 > ++++++++++++++SV인베스트먼트++++++++++++++++++++1550/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:12,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:12,702 > 191
[DEBUG|collector_api.py:200] 2021-02-03 15:54:12,938 > ++++++++++++++TPC++++++++++++++++++++1551/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:12,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:13,311 > 192
[DEBUG|collector_api.py:200] 2021-02-03 15:54:13,567 > ++++++++++++++TS인베스트먼트++++++++++++++++++++1552/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:13,567 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:13,918 > 193
[DEBUG|collector_api.py:200] 2021-02-03 15:54:14,150 > ++++++++++++++YBM넷++++++++++++++++++++1553/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:14,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:14,525 > 194
[DEBUG|collector_api.py:200] 2021-02-03 15:54:14,763 > ++++++++++++++iMBC++++++++++++++++++++1554/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:14,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:15,134 > 195
[DEBUG|collector_api.py:200] 2021-02-03 15:54:15,369 > ++++++++++++++가온미디어++++++++++++++++++++1555/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:15,370 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:15,741 > 196
[DEBUG|collector_api.py:200] 2021-02-03 15:54:15,996 > ++++++++++++++경동제약++++++++++++++++++++1556/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:15,996 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:16,349 > 197
[DEBUG|collector_api.py:200] 2021-02-03 15:54:16,601 > ++++++++++++++골든센츄리++++++++++++++++++++1557/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:16,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:16,957 > 198
[DEBUG|collector_api.py:200] 2021-02-03 15:54:17,197 > ++++++++++++++광진윈텍++++++++++++++++++++1558/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:17,198 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:17,566 > 199
[DEBUG|collector_api.py:200] 2021-02-03 15:54:17,799 > ++++++++++++++국보디자인++++++++++++++++++++1559/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:17,799 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:18,173 > 200
[DEBUG|collector_api.py:200] 2021-02-03 15:54:18,408 > ++++++++++++++글로스퍼랩스++++++++++++++++++++1560/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:18,408 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:18,781 > 201
[DEBUG|collector_api.py:200] 2021-02-03 15:54:19,068 > ++++++++++++++나스미디어++++++++++++++++++++1561/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:19,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:19,387 > 202
[DEBUG|collector_api.py:200] 2021-02-03 15:54:19,624 > ++++++++++++++나이스정보통신++++++++++++++++++++1562/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:19,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:19,995 > 203
[DEBUG|collector_api.py:200] 2021-02-03 15:54:20,249 > ++++++++++++++남화산업++++++++++++++++++++1563/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:20,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:20,603 > 204
[DEBUG|collector_api.py:200] 2021-02-03 15:54:20,822 > ++++++++++++++네오오토++++++++++++++++++++1564/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:20,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:21,211 > 205
[DEBUG|collector_api.py:200] 2021-02-03 15:54:21,443 > ++++++++++++++네오위즈++++++++++++++++++++1565/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:21,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:21,818 > 206
[DEBUG|collector_api.py:200] 2021-02-03 15:54:22,042 > ++++++++++++++네오크레마++++++++++++++++++++1566/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:22,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:22,425 > 207
[DEBUG|collector_api.py:200] 2021-02-03 15:54:22,616 > ++++++++++++++넷게임즈++++++++++++++++++++1567/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:22,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:23,032 > 208
[DEBUG|collector_api.py:200] 2021-02-03 15:54:23,264 > ++++++++++++++노랑풍선++++++++++++++++++++1568/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:23,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:23,640 > 209
[DEBUG|collector_api.py:200] 2021-02-03 15:54:23,853 > ++++++++++++++노바텍++++++++++++++++++++1569/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:23,853 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:24,248 > 210
[DEBUG|collector_api.py:200] 2021-02-03 15:54:24,499 > ++++++++++++++뉴보텍++++++++++++++++++++1570/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:24,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:24,856 > 211
[DEBUG|collector_api.py:200] 2021-02-03 15:54:25,099 > ++++++++++++++다날++++++++++++++++++++1571/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:25,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:25,463 > 212
[DEBUG|collector_api.py:200] 2021-02-03 15:54:25,720 > ++++++++++++++대원미디어++++++++++++++++++++1572/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:25,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:26,071 > 213
[DEBUG|collector_api.py:200] 2021-02-03 15:54:26,309 > ++++++++++++++대한과학++++++++++++++++++++1573/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:26,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:26,678 > 214
[DEBUG|collector_api.py:200] 2021-02-03 15:54:26,918 > ++++++++++++++대호피앤씨++++++++++++++++++++1574/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:26,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:27,287 > 215
[DEBUG|collector_api.py:200] 2021-02-03 15:54:27,531 > ++++++++++++++대화제약++++++++++++++++++++1575/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:27,531 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:27,893 > 216
[DEBUG|collector_api.py:200] 2021-02-03 15:54:28,145 > ++++++++++++++동아화성++++++++++++++++++++1576/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:28,145 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:28,503 > 217
[DEBUG|collector_api.py:200] 2021-02-03 15:54:28,754 > ++++++++++++++동양파일++++++++++++++++++++1577/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:28,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:29,111 > 218
[DEBUG|collector_api.py:200] 2021-02-03 15:54:29,364 > ++++++++++++++디앤씨미디어++++++++++++++++++++1578/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:29,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:29,719 > 219
[DEBUG|collector_api.py:200] 2021-02-03 15:54:29,961 > ++++++++++++++디오스텍++++++++++++++++++++1579/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:29,961 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:30,325 > 220
[DEBUG|collector_api.py:200] 2021-02-03 15:54:30,556 > ++++++++++++++디이엔티++++++++++++++++++++1580/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:30,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:30,932 > 221
[DEBUG|collector_api.py:200] 2021-02-03 15:54:31,173 > ++++++++++++++라닉스++++++++++++++++++++1581/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:31,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:31,539 > 222
[DEBUG|collector_api.py:200] 2021-02-03 15:54:31,747 > ++++++++++++++라온피플++++++++++++++++++++1582/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:31,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:32,147 > 223
[DEBUG|collector_api.py:200] 2021-02-03 15:54:32,341 > ++++++++++++++라이트론++++++++++++++++++++1583/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:32,342 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:32,754 > 224
[DEBUG|collector_api.py:200] 2021-02-03 15:54:32,989 > ++++++++++++++랩지노믹스++++++++++++++++++++1584/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:32,989 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:33,362 > 225
[DEBUG|collector_api.py:200] 2021-02-03 15:54:33,598 > ++++++++++++++로스웰++++++++++++++++++++1585/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:33,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:33,969 > 226
[DEBUG|collector_api.py:200] 2021-02-03 15:54:34,225 > ++++++++++++++리더스코스메틱++++++++++++++++++++1586/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:34,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:34,578 > 227
[DEBUG|collector_api.py:200] 2021-02-03 15:54:34,818 > ++++++++++++++리메드++++++++++++++++++++1587/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:34,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:35,184 > 228
[DEBUG|collector_api.py:200] 2021-02-03 15:54:35,471 > ++++++++++++++린드먼아시아++++++++++++++++++++1588/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:35,472 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:35,791 > 229
[DEBUG|collector_api.py:200] 2021-02-03 15:54:36,021 > ++++++++++++++마니커에프앤지++++++++++++++++++++1589/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:36,021 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:36,398 > 230
[DEBUG|collector_api.py:200] 2021-02-03 15:54:36,601 > ++++++++++++++메가엠디++++++++++++++++++++1590/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:36,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:37,005 > 231
[DEBUG|collector_api.py:200] 2021-02-03 15:54:37,231 > ++++++++++++++메카로++++++++++++++++++++1591/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:37,231 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:37,614 > 232
[DEBUG|collector_api.py:200] 2021-02-03 15:54:37,853 > ++++++++++++++모베이스++++++++++++++++++++1592/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:37,854 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:38,221 > 233
[DEBUG|collector_api.py:200] 2021-02-03 15:54:38,457 > ++++++++++++++모아텍++++++++++++++++++++1593/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:38,457 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:38,829 > 234
[DEBUG|collector_api.py:200] 2021-02-03 15:54:39,081 > ++++++++++++++미래에셋대우스팩4호++++++++++++++++++++1594/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:39,082 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:39,437 > 235
[DEBUG|collector_api.py:200] 2021-02-03 15:54:39,616 > ++++++++++++++바이오스마트++++++++++++++++++++1595/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:39,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:40,046 > 236
[DEBUG|collector_api.py:200] 2021-02-03 15:54:40,287 > ++++++++++++++보광산업++++++++++++++++++++1596/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:40,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:40,654 > 237
[DEBUG|collector_api.py:200] 2021-02-03 15:54:40,894 > ++++++++++++++본느++++++++++++++++++++1597/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:40,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:41,260 > 238
[DEBUG|collector_api.py:200] 2021-02-03 15:54:41,495 > ++++++++++++++브릿지바이오테라퓨틱스++++++++++++++++++++1598/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:41,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:41,867 > 239
[DEBUG|collector_api.py:200] 2021-02-03 15:54:42,047 > ++++++++++++++블러썸엠앤씨++++++++++++++++++++1599/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:42,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:42,474 > 240
[DEBUG|collector_api.py:200] 2021-02-03 15:54:42,703 > ++++++++++++++비엠티++++++++++++++++++++1600/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:42,704 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:43,082 > 241
[DEBUG|collector_api.py:200] 2021-02-03 15:54:43,324 > ++++++++++++++비츠로셀++++++++++++++++++++1601/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:43,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:43,689 > 242
[DEBUG|collector_api.py:200] 2021-02-03 15:54:43,917 > ++++++++++++++삼보모터스++++++++++++++++++++1602/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:43,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:44,296 > 243
[DEBUG|collector_api.py:200] 2021-02-03 15:54:44,539 > ++++++++++++++삼영엠텍++++++++++++++++++++1603/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:44,539 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:44,903 > 244
[DEBUG|collector_api.py:200] 2021-02-03 15:54:45,153 > ++++++++++++++삼천당제약++++++++++++++++++++1604/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:45,153 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:45,511 > 245
[DEBUG|collector_api.py:200] 2021-02-03 15:54:45,753 > ++++++++++++++삼화네트웍스++++++++++++++++++++1605/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:45,753 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:46,117 > 246
[DEBUG|collector_api.py:200] 2021-02-03 15:54:46,374 > ++++++++++++++샘코++++++++++++++++++++1606/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:46,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:46,725 > 247
[DEBUG|collector_api.py:200] 2021-02-03 15:54:46,954 > ++++++++++++++서울바이오시스++++++++++++++++++++1607/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:46,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:47,332 > 248
[DEBUG|collector_api.py:200] 2021-02-03 15:54:47,545 > ++++++++++++++서울옥션++++++++++++++++++++1608/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:47,545 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:47,939 > 249
[DEBUG|collector_api.py:200] 2021-02-03 15:54:48,171 > ++++++++++++++서한++++++++++++++++++++1609/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:48,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:48,547 > 250
[DEBUG|collector_api.py:200] 2021-02-03 15:54:48,784 > ++++++++++++++성도이엔지++++++++++++++++++++1610/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:48,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:49,155 > 251
[DEBUG|collector_api.py:200] 2021-02-03 15:54:49,405 > ++++++++++++++성우전자++++++++++++++++++++1611/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:49,406 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:49,764 > 252
[DEBUG|collector_api.py:200] 2021-02-03 15:54:50,037 > ++++++++++++++세동++++++++++++++++++++1612/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:50,037 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:50,371 > 253
[DEBUG|collector_api.py:200] 2021-02-03 15:54:50,614 > ++++++++++++++세미콘라이트++++++++++++++++++++1613/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:50,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:50,978 > 254
[DEBUG|collector_api.py:200] 2021-02-03 15:54:51,211 > ++++++++++++++세원++++++++++++++++++++1614/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:51,211 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:51,585 > 255
[DEBUG|collector_api.py:200] 2021-02-03 15:54:51,812 > ++++++++++++++세원물산++++++++++++++++++++1615/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:51,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:52,193 > 256
[DEBUG|collector_api.py:200] 2021-02-03 15:54:52,444 > ++++++++++++++센트럴바이오++++++++++++++++++++1616/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:52,445 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:52,800 > 257
[DEBUG|collector_api.py:200] 2021-02-03 15:54:53,038 > ++++++++++++++소룩스++++++++++++++++++++1617/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:53,038 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:53,408 > 258
[DEBUG|collector_api.py:200] 2021-02-03 15:54:53,568 > ++++++++++++++소프트캠프++++++++++++++++++++1618/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:53,569 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:54,014 > 259
[DEBUG|collector_api.py:200] 2021-02-03 15:54:54,232 > ++++++++++++++솔브레인++++++++++++++++++++1619/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:54,233 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:54,621 > 260
[DEBUG|collector_api.py:200] 2021-02-03 15:54:54,780 > ++++++++++++++스카이문스테크놀로지++++++++++++++++++++1620/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:54,780 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:55,229 > 261
[DEBUG|collector_api.py:200] 2021-02-03 15:54:55,467 > ++++++++++++++시너지이노베이션++++++++++++++++++++1621/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:55,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:55,839 > 262
[DEBUG|collector_api.py:200] 2021-02-03 15:54:56,092 > ++++++++++++++시티랩스++++++++++++++++++++1622/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:56,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:56,446 > 263
[DEBUG|collector_api.py:200] 2021-02-03 15:54:56,693 > ++++++++++++++신성델타테크++++++++++++++++++++1623/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:56,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:57,054 > 264
[DEBUG|collector_api.py:200] 2021-02-03 15:54:57,316 > ++++++++++++++신화인터텍++++++++++++++++++++1624/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:57,317 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:57,661 > 265
[DEBUG|collector_api.py:200] 2021-02-03 15:54:57,910 > ++++++++++++++싸이토젠++++++++++++++++++++1625/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:57,910 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:58,268 > 266
[DEBUG|collector_api.py:200] 2021-02-03 15:54:58,505 > ++++++++++++++아바텍++++++++++++++++++++1626/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:58,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:58,875 > 267
[DEBUG|collector_api.py:200] 2021-02-03 15:54:59,115 > ++++++++++++++아이컴포넌트++++++++++++++++++++1627/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:59,115 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:54:59,483 > 268
[DEBUG|collector_api.py:200] 2021-02-03 15:54:59,736 > ++++++++++++++아즈텍WB++++++++++++++++++++1628/2888
[DEBUG|open_api.py:656] 2021-02-03 15:54:59,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:00,090 > 269
[DEBUG|collector_api.py:200] 2021-02-03 15:55:00,328 > ++++++++++++++안랩++++++++++++++++++++1629/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:00,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:00,698 > 270
[DEBUG|collector_api.py:200] 2021-02-03 15:55:00,962 > ++++++++++++++알서포트++++++++++++++++++++1630/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:00,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:01,305 > 271
[DEBUG|collector_api.py:200] 2021-02-03 15:55:01,542 > ++++++++++++++액트++++++++++++++++++++1631/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:01,542 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:01,915 > 272
[DEBUG|collector_api.py:200] 2021-02-03 15:55:02,170 > ++++++++++++++에너토크++++++++++++++++++++1632/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:02,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:02,522 > 273
[DEBUG|collector_api.py:200] 2021-02-03 15:55:02,749 > ++++++++++++++에버다임++++++++++++++++++++1633/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:02,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:03,129 > 274
[DEBUG|collector_api.py:200] 2021-02-03 15:55:03,357 > ++++++++++++++에스넷++++++++++++++++++++1634/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:03,357 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:03,737 > 275
[DEBUG|collector_api.py:200] 2021-02-03 15:55:03,993 > ++++++++++++++에스디시스템++++++++++++++++++++1635/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:03,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:04,345 > 276
[DEBUG|collector_api.py:200] 2021-02-03 15:55:04,575 > ++++++++++++++에스에이엠티++++++++++++++++++++1636/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:04,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:04,953 > 277
[DEBUG|collector_api.py:200] 2021-02-03 15:55:05,209 > ++++++++++++++에스티큐브++++++++++++++++++++1637/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:05,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:05,560 > 278
[DEBUG|collector_api.py:200] 2021-02-03 15:55:05,839 > ++++++++++++++에스피지++++++++++++++++++++1638/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:05,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:06,169 > 279
[DEBUG|collector_api.py:200] 2021-02-03 15:55:06,408 > ++++++++++++++에이프로++++++++++++++++++++1639/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:06,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:06,777 > 280
[DEBUG|collector_api.py:200] 2021-02-03 15:55:06,952 > ++++++++++++++에이피티씨++++++++++++++++++++1640/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:06,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:07,385 > 281
[DEBUG|collector_api.py:200] 2021-02-03 15:55:07,617 > ++++++++++++++에코마케팅++++++++++++++++++++1641/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:07,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:07,993 > 282
[DEBUG|collector_api.py:200] 2021-02-03 15:55:08,255 > ++++++++++++++에코바이오++++++++++++++++++++1642/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:08,256 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:08,600 > 283
[DEBUG|collector_api.py:200] 2021-02-03 15:55:08,855 > ++++++++++++++에코캡++++++++++++++++++++1643/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:08,855 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:09,208 > 284
[DEBUG|collector_api.py:200] 2021-02-03 15:55:09,424 > ++++++++++++++에프앤가이드++++++++++++++++++++1644/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:09,425 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:09,816 > 285
[DEBUG|collector_api.py:200] 2021-02-03 15:55:10,061 > ++++++++++++++에프앤리퍼블릭++++++++++++++++++++1645/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:10,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:10,423 > 286
[DEBUG|collector_api.py:200] 2021-02-03 15:55:10,682 > ++++++++++++++에프엔에스테크++++++++++++++++++++1646/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:10,682 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:11,031 > 287
[DEBUG|collector_api.py:200] 2021-02-03 15:55:11,266 > ++++++++++++++엔바이오니아++++++++++++++++++++1647/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:11,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:11,638 > 288
[DEBUG|collector_api.py:200] 2021-02-03 15:55:11,834 > ++++++++++++++엔에이치스팩13호++++++++++++++++++++1648/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:11,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:12,248 > 289
[DEBUG|collector_api.py:200] 2021-02-03 15:55:12,468 > ++++++++++++++엘엠에스++++++++++++++++++++1649/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:12,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:12,855 > 290
[DEBUG|collector_api.py:200] 2021-02-03 15:55:13,100 > ++++++++++++++엠아이텍++++++++++++++++++++1650/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:13,100 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:13,463 > 291
[DEBUG|collector_api.py:200] 2021-02-03 15:55:13,693 > ++++++++++++++엠에스오토텍++++++++++++++++++++1651/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:13,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:14,072 > 292
[DEBUG|collector_api.py:200] 2021-02-03 15:55:14,307 > ++++++++++++++엠케이전자++++++++++++++++++++1652/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:14,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:14,679 > 293
[DEBUG|collector_api.py:200] 2021-02-03 15:55:14,930 > ++++++++++++++오이솔루션++++++++++++++++++++1653/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:14,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:15,287 > 294
[DEBUG|collector_api.py:200] 2021-02-03 15:55:15,520 > ++++++++++++++올리패스++++++++++++++++++++1654/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:15,521 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:15,894 > 295
[DEBUG|collector_api.py:200] 2021-02-03 15:55:16,100 > ++++++++++++++와이엠씨++++++++++++++++++++1655/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:16,101 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:16,501 > 296
[DEBUG|collector_api.py:200] 2021-02-03 15:55:16,726 > ++++++++++++++와이엠티++++++++++++++++++++1656/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:16,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:17,110 > 297
[DEBUG|collector_api.py:200] 2021-02-03 15:55:17,336 > ++++++++++++++와이제이엠게임즈++++++++++++++++++++1657/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:17,337 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:17,716 > 298
[DEBUG|collector_api.py:200] 2021-02-03 15:55:17,943 > ++++++++++++++와이팜++++++++++++++++++++1658/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:17,944 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:18,323 > 299
[DEBUG|collector_api.py:200] 2021-02-03 15:55:18,483 > ++++++++++++++우리넷++++++++++++++++++++1659/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:18,483 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:18,930 > 300
[DEBUG|collector_api.py:200] 2021-02-03 15:55:19,194 > ++++++++++++++우리조명++++++++++++++++++++1660/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:19,194 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:19,538 > 301
[DEBUG|collector_api.py:200] 2021-02-03 15:55:19,795 > ++++++++++++++원익IPS++++++++++++++++++++1661/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:19,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:20,146 > 302
[DEBUG|collector_api.py:200] 2021-02-03 15:55:20,386 > ++++++++++++++위세아이텍++++++++++++++++++++1662/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:20,386 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:20,752 > 303
[DEBUG|collector_api.py:200] 2021-02-03 15:55:20,970 > ++++++++++++++유니슨++++++++++++++++++++1663/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:20,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:21,361 > 304
[DEBUG|collector_api.py:200] 2021-02-03 15:55:21,611 > ++++++++++++++유니크++++++++++++++++++++1664/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:21,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:21,969 > 305
[DEBUG|collector_api.py:200] 2021-02-03 15:55:22,215 > ++++++++++++++유아이디++++++++++++++++++++1665/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:22,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:22,576 > 306
[DEBUG|collector_api.py:200] 2021-02-03 15:55:22,803 > ++++++++++++++유아이엘++++++++++++++++++++1666/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:22,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:23,184 > 307
[DEBUG|collector_api.py:200] 2021-02-03 15:55:23,431 > ++++++++++++++이상네트웍스++++++++++++++++++++1667/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:23,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:23,790 > 308
[DEBUG|collector_api.py:200] 2021-02-03 15:55:24,030 > ++++++++++++++이엠코리아++++++++++++++++++++1668/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:24,030 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:24,399 > 309
[DEBUG|collector_api.py:200] 2021-02-03 15:55:24,636 > ++++++++++++++이오플로우++++++++++++++++++++1669/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:24,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:25,006 > 310
[DEBUG|collector_api.py:200] 2021-02-03 15:55:25,171 > ++++++++++++++이큐셀++++++++++++++++++++1670/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:25,172 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:25,613 > 311
[DEBUG|collector_api.py:200] 2021-02-03 15:55:25,840 > ++++++++++++++이퓨쳐++++++++++++++++++++1671/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:25,841 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:26,221 > 312
[DEBUG|collector_api.py:200] 2021-02-03 15:55:26,452 > ++++++++++++++이화공영++++++++++++++++++++1672/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:26,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:26,829 > 313
[DEBUG|collector_api.py:200] 2021-02-03 15:55:27,074 > ++++++++++++++인피니트헬스케어++++++++++++++++++++1673/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:27,075 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:27,436 > 314
[DEBUG|collector_api.py:200] 2021-02-03 15:55:27,657 > ++++++++++++++일신바이오++++++++++++++++++++1674/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:27,658 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:28,043 > 315
[DEBUG|collector_api.py:200] 2021-02-03 15:55:28,309 > ++++++++++++++잉글우드랩++++++++++++++++++++1675/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:28,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:28,651 > 316
[DEBUG|collector_api.py:200] 2021-02-03 15:55:28,882 > ++++++++++++++정원엔시스++++++++++++++++++++1676/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:28,882 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:29,260 > 317
[DEBUG|collector_api.py:200] 2021-02-03 15:55:29,500 > ++++++++++++++제이씨케미칼++++++++++++++++++++1677/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:29,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:29,866 > 318
[DEBUG|collector_api.py:200] 2021-02-03 15:55:30,120 > ++++++++++++++제이웨이++++++++++++++++++++1678/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:30,121 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:30,474 > 319
[DEBUG|collector_api.py:200] 2021-02-03 15:55:30,732 > ++++++++++++++젬백스링크++++++++++++++++++++1679/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:30,732 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:31,083 > 320
[DEBUG|collector_api.py:200] 2021-02-03 15:55:31,322 > ++++++++++++++좋은사람들++++++++++++++++++++1680/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:31,323 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:31,692 > 321
[DEBUG|collector_api.py:200] 2021-02-03 15:55:31,935 > ++++++++++++++중앙백신++++++++++++++++++++1681/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:31,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:32,298 > 322
[DEBUG|collector_api.py:200] 2021-02-03 15:55:32,534 > ++++++++++++++지놈앤컴퍼니++++++++++++++++++++1682/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:32,534 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:32,905 > 323
[DEBUG|collector_api.py:200] 2021-02-03 15:55:33,120 > ++++++++++++++지트리비앤티++++++++++++++++++++1683/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:33,120 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:33,512 > 324
[DEBUG|collector_api.py:200] 2021-02-03 15:55:33,748 > ++++++++++++++카스++++++++++++++++++++1684/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:33,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:34,119 > 325
[DEBUG|collector_api.py:200] 2021-02-03 15:55:34,364 > ++++++++++++++카카오게임즈++++++++++++++++++++1685/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:34,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:34,726 > 326
[DEBUG|collector_api.py:200] 2021-02-03 15:55:34,898 > ++++++++++++++카페24++++++++++++++++++++1686/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:34,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:35,332 > 327
[DEBUG|collector_api.py:200] 2021-02-03 15:55:35,568 > ++++++++++++++케이비17호스팩++++++++++++++++++++1687/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:35,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:35,940 > 328
[DEBUG|collector_api.py:200] 2021-02-03 15:55:36,150 > ++++++++++++++케이에스피++++++++++++++++++++1688/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:36,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:36,548 > 329
[DEBUG|collector_api.py:200] 2021-02-03 15:55:36,774 > ++++++++++++++큐리언트++++++++++++++++++++1689/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:36,775 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:37,155 > 330
[DEBUG|collector_api.py:200] 2021-02-03 15:55:37,414 > ++++++++++++++크리스탈신소재++++++++++++++++++++1690/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:37,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:37,763 > 331
[DEBUG|collector_api.py:200] 2021-02-03 15:55:37,985 > ++++++++++++++크린앤사이언스++++++++++++++++++++1691/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:37,986 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:38,369 > 332
[DEBUG|collector_api.py:200] 2021-02-03 15:55:38,612 > ++++++++++++++클래시스++++++++++++++++++++1692/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:38,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:38,976 > 333
[DEBUG|collector_api.py:200] 2021-02-03 15:55:39,210 > ++++++++++++++태웅++++++++++++++++++++1693/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:39,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:39,584 > 334
[DEBUG|collector_api.py:200] 2021-02-03 15:55:39,832 > ++++++++++++++테라셈++++++++++++++++++++1694/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:39,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:40,192 > 335
[DEBUG|collector_api.py:200] 2021-02-03 15:55:40,420 > ++++++++++++++토박스코리아++++++++++++++++++++1695/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:40,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:40,799 > 336
[DEBUG|collector_api.py:200] 2021-02-03 15:55:41,061 > ++++++++++++++티사이언티픽++++++++++++++++++++1696/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:41,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:41,407 > 337
[DEBUG|collector_api.py:200] 2021-02-03 15:55:41,645 > ++++++++++++++티씨케이++++++++++++++++++++1697/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:41,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:42,014 > 338
[DEBUG|collector_api.py:200] 2021-02-03 15:55:42,261 > ++++++++++++++티케이케미칼++++++++++++++++++++1698/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:42,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:42,621 > 339
[DEBUG|collector_api.py:200] 2021-02-03 15:55:42,857 > ++++++++++++++팅크웨어++++++++++++++++++++1699/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:42,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:43,228 > 340
[DEBUG|collector_api.py:200] 2021-02-03 15:55:43,466 > ++++++++++++++팜스토리++++++++++++++++++++1700/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:43,466 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:43,836 > 341
[DEBUG|collector_api.py:200] 2021-02-03 15:55:44,098 > ++++++++++++++포인트모바일++++++++++++++++++++1701/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:44,098 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:44,442 > 342
[DEBUG|collector_api.py:200] 2021-02-03 15:55:44,609 > ++++++++++++++푸드나무++++++++++++++++++++1702/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:44,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:45,050 > 343
[DEBUG|collector_api.py:200] 2021-02-03 15:55:45,276 > ++++++++++++++푸른저축은행++++++++++++++++++++1703/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:45,277 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:45,657 > 344
[DEBUG|collector_api.py:200] 2021-02-03 15:55:45,893 > ++++++++++++++프리엠스++++++++++++++++++++1704/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:45,893 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:46,265 > 345
[DEBUG|collector_api.py:200] 2021-02-03 15:55:46,497 > ++++++++++++++플랜티넷++++++++++++++++++++1705/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:46,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:46,872 > 346
[DEBUG|collector_api.py:200] 2021-02-03 15:55:47,133 > ++++++++++++++피제이메탈++++++++++++++++++++1706/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:47,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:47,479 > 347
[DEBUG|collector_api.py:200] 2021-02-03 15:55:47,718 > ++++++++++++++하나머티리얼즈++++++++++++++++++++1707/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:47,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:48,086 > 348
[DEBUG|collector_api.py:200] 2021-02-03 15:55:48,324 > ++++++++++++++한국선재++++++++++++++++++++1708/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:48,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:48,694 > 349
[DEBUG|collector_api.py:200] 2021-02-03 15:55:48,942 > ++++++++++++++한국전자인증++++++++++++++++++++1709/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:48,942 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:49,301 > 350
[DEBUG|collector_api.py:200] 2021-02-03 15:55:49,533 > ++++++++++++++한국큐빅++++++++++++++++++++1710/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:49,533 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:49,908 > 351
[DEBUG|collector_api.py:200] 2021-02-03 15:55:50,173 > ++++++++++++++한독크린텍++++++++++++++++++++1711/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:50,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:50,515 > 352
[DEBUG|collector_api.py:200] 2021-02-03 15:55:50,707 > ++++++++++++++한화플러스제1호스팩++++++++++++++++++++1712/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:50,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:51,123 > 353
[DEBUG|collector_api.py:200] 2021-02-03 15:55:51,304 > ++++++++++++++현대사료++++++++++++++++++++1713/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:51,304 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:51,731 > 354
[DEBUG|collector_api.py:200] 2021-02-03 15:55:51,970 > ++++++++++++++현우산업++++++++++++++++++++1714/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:51,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:52,339 > 355
[DEBUG|collector_api.py:200] 2021-02-03 15:55:52,565 > ++++++++++++++홈캐스트++++++++++++++++++++1715/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:52,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:52,946 > 356
[DEBUG|collector_api.py:200] 2021-02-03 15:55:53,214 > ++++++++++++++휴메딕스++++++++++++++++++++1716/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:53,214 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:53,555 > 357
[DEBUG|collector_api.py:200] 2021-02-03 15:55:53,785 > ++++++++++++++휴온스글로벌++++++++++++++++++++1717/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:53,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:54,163 > 358
[DEBUG|collector_api.py:200] 2021-02-03 15:55:54,402 > ++++++++++++++흥구석유++++++++++++++++++++1718/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:54,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:54,769 > 359
[DEBUG|collector_api.py:200] 2021-02-03 15:55:55,001 > ++++++++++++++3S++++++++++++++++++++1719/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:55,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:55,375 > 360
[DEBUG|collector_api.py:200] 2021-02-03 15:55:55,603 > ++++++++++++++CJ프레시웨이++++++++++++++++++++1720/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:55,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:55,983 > 361
[DEBUG|collector_api.py:200] 2021-02-03 15:55:56,221 > ++++++++++++++JYP Ent.++++++++++++++++++++1721/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:56,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:56,589 > 362
[DEBUG|collector_api.py:200] 2021-02-03 15:55:56,834 > ++++++++++++++RFHIC++++++++++++++++++++1722/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:56,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:57,196 > 363
[DEBUG|collector_api.py:200] 2021-02-03 15:55:57,423 > ++++++++++++++강원++++++++++++++++++++1723/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:57,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:57,803 > 364
[DEBUG|collector_api.py:200] 2021-02-03 15:55:58,044 > ++++++++++++++경남제약++++++++++++++++++++1724/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:58,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:58,409 > 365
[DEBUG|collector_api.py:200] 2021-02-03 15:55:58,652 > ++++++++++++++고려신용정보++++++++++++++++++++1725/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:58,652 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:59,016 > 366
[DEBUG|collector_api.py:200] 2021-02-03 15:55:59,269 > ++++++++++++++고바이오랩++++++++++++++++++++1726/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:59,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:55:59,623 > 367
[DEBUG|collector_api.py:200] 2021-02-03 15:55:59,777 > ++++++++++++++골드퍼시픽++++++++++++++++++++1727/2888
[DEBUG|open_api.py:656] 2021-02-03 15:55:59,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:00,231 > 368
[DEBUG|collector_api.py:200] 2021-02-03 15:56:00,468 > ++++++++++++++광진실업++++++++++++++++++++1728/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:00,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:00,839 > 369
[DEBUG|collector_api.py:200] 2021-02-03 15:56:01,093 > ++++++++++++++그린플러스++++++++++++++++++++1729/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:01,093 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:01,447 > 370
[DEBUG|collector_api.py:200] 2021-02-03 15:56:01,677 > ++++++++++++++글로벌에스엠++++++++++++++++++++1730/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:01,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:02,055 > 371
[DEBUG|collector_api.py:200] 2021-02-03 15:56:02,296 > ++++++++++++++기산텔레콤++++++++++++++++++++1731/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:02,296 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:02,663 > 372
[DEBUG|collector_api.py:200] 2021-02-03 15:56:02,923 > ++++++++++++++나무기술++++++++++++++++++++1732/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:02,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:03,270 > 373
[DEBUG|collector_api.py:200] 2021-02-03 15:56:03,494 > ++++++++++++++나이스디앤비++++++++++++++++++++1733/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:03,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:03,878 > 374
[DEBUG|collector_api.py:200] 2021-02-03 15:56:04,104 > ++++++++++++++네패스++++++++++++++++++++1734/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:04,104 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:04,486 > 375
[DEBUG|collector_api.py:200] 2021-02-03 15:56:04,734 > ++++++++++++++대동금속++++++++++++++++++++1735/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:04,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:05,093 > 376
[DEBUG|collector_api.py:200] 2021-02-03 15:56:05,339 > ++++++++++++++대림제지++++++++++++++++++++1736/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:05,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:05,699 > 377
[DEBUG|collector_api.py:200] 2021-02-03 15:56:05,979 > ++++++++++++++대신정보통신++++++++++++++++++++1737/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:05,980 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:06,305 > 378
[DEBUG|collector_api.py:200] 2021-02-03 15:56:06,550 > ++++++++++++++대한그린파워++++++++++++++++++++1738/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:06,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:06,912 > 379
[DEBUG|collector_api.py:200] 2021-02-03 15:56:07,164 > ++++++++++++++동국알앤에스++++++++++++++++++++1739/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:07,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:07,521 > 380
[DEBUG|collector_api.py:200] 2021-02-03 15:56:07,755 > ++++++++++++++동우팜투테이블++++++++++++++++++++1740/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:07,756 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:08,128 > 381
[DEBUG|collector_api.py:200] 2021-02-03 15:56:08,363 > ++++++++++++++동운아나텍++++++++++++++++++++1741/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:08,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:08,735 > 382
[DEBUG|collector_api.py:200] 2021-02-03 15:56:08,972 > ++++++++++++++드림씨아이에스++++++++++++++++++++1742/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:08,972 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:09,343 > 383
[DEBUG|collector_api.py:200] 2021-02-03 15:56:09,515 > ++++++++++++++디아이티++++++++++++++++++++1743/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:09,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:09,949 > 384
[DEBUG|collector_api.py:200] 2021-02-03 15:56:10,219 > ++++++++++++++디에이치피코리아++++++++++++++++++++1744/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:10,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:10,557 > 385
[DEBUG|collector_api.py:200] 2021-02-03 15:56:10,793 > ++++++++++++++디케이락++++++++++++++++++++1745/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:10,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:11,166 > 386
[DEBUG|collector_api.py:200] 2021-02-03 15:56:11,385 > ++++++++++++++디케이앤디++++++++++++++++++++1746/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:11,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:11,774 > 387
[DEBUG|collector_api.py:200] 2021-02-03 15:56:12,000 > ++++++++++++++디케이티++++++++++++++++++++1747/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:12,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:12,383 > 388
[DEBUG|collector_api.py:200] 2021-02-03 15:56:12,606 > ++++++++++++++라온시큐어++++++++++++++++++++1748/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:12,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:12,990 > 389
[DEBUG|collector_api.py:200] 2021-02-03 15:56:13,263 > ++++++++++++++라파스++++++++++++++++++++1749/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:13,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:13,598 > 390
[DEBUG|collector_api.py:200] 2021-02-03 15:56:13,810 > ++++++++++++++리노스++++++++++++++++++++1750/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:13,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:14,205 > 391
[DEBUG|collector_api.py:200] 2021-02-03 15:56:14,441 > ++++++++++++++리더스 기술투자++++++++++++++++++++1751/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:14,441 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:14,812 > 392
[DEBUG|collector_api.py:200] 2021-02-03 15:56:15,034 > ++++++++++++++마이크로컨텍솔++++++++++++++++++++1752/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:15,034 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:15,419 > 393
[DEBUG|collector_api.py:200] 2021-02-03 15:56:15,654 > ++++++++++++++메지온++++++++++++++++++++1753/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:15,654 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:16,026 > 394
[DEBUG|collector_api.py:200] 2021-02-03 15:56:16,260 > ++++++++++++++모다이노칩++++++++++++++++++++1754/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:16,261 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:16,633 > 395
[DEBUG|collector_api.py:200] 2021-02-03 15:56:16,869 > ++++++++++++++모베이스전자++++++++++++++++++++1755/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:16,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:17,240 > 396
[DEBUG|collector_api.py:200] 2021-02-03 15:56:17,472 > ++++++++++++++모비릭스++++++++++++++++++++1756/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:17,473 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:17,848 > 397
[DEBUG|collector_api.py:200] 2021-02-03 15:56:18,026 > ++++++++++++++미디어젠++++++++++++++++++++1757/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:18,026 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:18,456 > 398
[DEBUG|collector_api.py:200] 2021-02-03 15:56:18,685 > ++++++++++++++미래나노텍++++++++++++++++++++1758/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:18,686 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:19,063 > 399
[DEBUG|collector_api.py:200] 2021-02-03 15:56:19,303 > ++++++++++++++미래에셋대우스팩 5호++++++++++++++++++++1759/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:19,303 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:19,670 > 400
[DEBUG|collector_api.py:200] 2021-02-03 15:56:19,837 > ++++++++++++++미래테크놀로지++++++++++++++++++++1760/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:19,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:20,277 > 401
[DEBUG|collector_api.py:200] 2021-02-03 15:56:20,499 > ++++++++++++++미투젠++++++++++++++++++++1761/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:20,499 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:20,884 > 402
[DEBUG|collector_api.py:200] 2021-02-03 15:56:21,047 > ++++++++++++++바이오리더스++++++++++++++++++++1762/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:21,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:21,491 > 403
[DEBUG|collector_api.py:200] 2021-02-03 15:56:21,726 > ++++++++++++++바텍++++++++++++++++++++1763/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:21,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:22,098 > 404
[DEBUG|collector_api.py:200] 2021-02-03 15:56:22,333 > ++++++++++++++박셀바이오++++++++++++++++++++1764/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:22,334 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:22,705 > 405
[DEBUG|collector_api.py:200] 2021-02-03 15:56:22,874 > ++++++++++++++뷰웍스++++++++++++++++++++1765/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:22,875 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:23,313 > 406
[DEBUG|collector_api.py:200] 2021-02-03 15:56:23,544 > ++++++++++++++브레인콘텐츠++++++++++++++++++++1766/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:23,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:23,920 > 407
[DEBUG|collector_api.py:200] 2021-02-03 15:56:24,181 > ++++++++++++++블루콤++++++++++++++++++++1767/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:24,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:24,529 > 408
[DEBUG|collector_api.py:200] 2021-02-03 15:56:24,769 > ++++++++++++++비덴트++++++++++++++++++++1768/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:24,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:25,136 > 409
[DEBUG|collector_api.py:200] 2021-02-03 15:56:25,376 > ++++++++++++++비에이치++++++++++++++++++++1769/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:25,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:25,744 > 410
[DEBUG|collector_api.py:200] 2021-02-03 15:56:25,977 > ++++++++++++++비올++++++++++++++++++++1770/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:25,978 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:26,352 > 411
[DEBUG|collector_api.py:200] 2021-02-03 15:56:26,578 > ++++++++++++++비츠로테크++++++++++++++++++++1771/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:26,578 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:26,960 > 412
[DEBUG|collector_api.py:200] 2021-02-03 15:56:27,247 > ++++++++++++++비피도++++++++++++++++++++1772/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:27,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:27,569 > 413
[DEBUG|collector_api.py:200] 2021-02-03 15:56:27,795 > ++++++++++++++빅텍++++++++++++++++++++1773/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:27,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:28,177 > 414
[DEBUG|collector_api.py:200] 2021-02-03 15:56:28,409 > ++++++++++++++삼강엠앤티++++++++++++++++++++1774/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:28,409 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:28,785 > 415
[DEBUG|collector_api.py:200] 2021-02-03 15:56:29,019 > ++++++++++++++삼보산업++++++++++++++++++++1775/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:29,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:29,393 > 416
[DEBUG|collector_api.py:200] 2021-02-03 15:56:29,643 > ++++++++++++++삼표시멘트++++++++++++++++++++1776/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:29,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:30,001 > 417
[DEBUG|collector_api.py:200] 2021-02-03 15:56:30,254 > ++++++++++++++상상인이안1호스팩++++++++++++++++++++1777/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:30,255 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:30,608 > 418
[DEBUG|collector_api.py:200] 2021-02-03 15:56:30,847 > ++++++++++++++상아프론테크++++++++++++++++++++1778/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:30,847 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:31,216 > 419
[DEBUG|collector_api.py:200] 2021-02-03 15:56:31,448 > ++++++++++++++서부T&D++++++++++++++++++++1779/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:31,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:31,824 > 420
[DEBUG|collector_api.py:200] 2021-02-03 15:56:32,078 > ++++++++++++++석경에이티++++++++++++++++++++1780/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:32,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:32,431 > 421
[DEBUG|collector_api.py:200] 2021-02-03 15:56:32,599 > ++++++++++++++선광++++++++++++++++++++1781/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:32,599 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:33,039 > 422
[DEBUG|collector_api.py:200] 2021-02-03 15:56:33,323 > ++++++++++++++세진티에스++++++++++++++++++++1782/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:33,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:33,646 > 423
[DEBUG|collector_api.py:200] 2021-02-03 15:56:33,894 > ++++++++++++++세화피앤씨++++++++++++++++++++1783/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:33,895 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:34,255 > 424
[DEBUG|collector_api.py:200] 2021-02-03 15:56:34,490 > ++++++++++++++셀레믹스++++++++++++++++++++1784/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:34,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:34,864 > 425
[DEBUG|collector_api.py:200] 2021-02-03 15:56:35,018 > ++++++++++++++셀리드++++++++++++++++++++1785/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:35,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:35,471 > 426
[DEBUG|collector_api.py:200] 2021-02-03 15:56:35,714 > ++++++++++++++소마젠(Reg.S)++++++++++++++++++++1786/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:35,715 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:36,078 > 427
[DEBUG|collector_api.py:200] 2021-02-03 15:56:36,238 > ++++++++++++++수젠텍++++++++++++++++++++1787/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:36,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:36,685 > 428
[DEBUG|collector_api.py:200] 2021-02-03 15:56:36,912 > ++++++++++++++스맥++++++++++++++++++++1788/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:36,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:37,294 > 429
[DEBUG|collector_api.py:200] 2021-02-03 15:56:37,518 > ++++++++++++++신화콘텍++++++++++++++++++++1789/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:37,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:37,901 > 430
[DEBUG|collector_api.py:200] 2021-02-03 15:56:38,125 > ++++++++++++++쎄니트++++++++++++++++++++1790/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:38,125 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:38,507 > 431
[DEBUG|collector_api.py:200] 2021-02-03 15:56:38,761 > ++++++++++++++씨씨에스++++++++++++++++++++1791/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:38,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:39,114 > 432
[DEBUG|collector_api.py:200] 2021-02-03 15:56:39,351 > ++++++++++++++씨엔플러스++++++++++++++++++++1792/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:39,351 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:39,722 > 433
[DEBUG|collector_api.py:200] 2021-02-03 15:56:41,030 > ++++++++++++++씨젠++++++++++++++++++++1793/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:41,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:41,032 > 434
[DEBUG|collector_api.py:200] 2021-02-03 15:56:41,262 > ++++++++++++++아리온++++++++++++++++++++1794/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:41,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:41,640 > 435
[DEBUG|collector_api.py:200] 2021-02-03 15:56:41,868 > ++++++++++++++아시아경제++++++++++++++++++++1795/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:41,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:42,247 > 436
[DEBUG|collector_api.py:200] 2021-02-03 15:56:42,485 > ++++++++++++++아이디스홀딩스++++++++++++++++++++1796/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:42,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:42,856 > 437
[DEBUG|collector_api.py:200] 2021-02-03 15:56:43,121 > ++++++++++++++아이쓰리시스템++++++++++++++++++++1797/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:43,121 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:43,464 > 438
[DEBUG|collector_api.py:200] 2021-02-03 15:56:43,693 > ++++++++++++++아주IB투자++++++++++++++++++++1798/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:43,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:44,071 > 439
[DEBUG|collector_api.py:200] 2021-02-03 15:56:44,277 > ++++++++++++++안국약품++++++++++++++++++++1799/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:44,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:44,677 > 440
[DEBUG|collector_api.py:200] 2021-02-03 15:56:44,923 > ++++++++++++++알테오젠++++++++++++++++++++1800/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:44,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:303] 2021-02-03 15:56:54,466 > connected
[DEBUG|open_api.py:244] 2021-02-03 15:56:54,466 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 15:56:54,466 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 15:56:54,467 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 15:56:54,467 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 15:56:54,467 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 15:56:54,467 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 15:56:54,481 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 15:56:54,507 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 15:56:54,507 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 15:56:54,508 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 15:56:54,529 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 15:56:54,562 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 15:56:57,092 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-03 15:56:57,094 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 15:56:57,147 > ++++++++++++++알테오젠++++++++++++++++++++1800/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:57,147 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:57,148 > 1
[DEBUG|collector_api.py:200] 2021-02-03 15:56:58,248 > ++++++++++++++알톤스포츠++++++++++++++++++++1801/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:58,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:58,250 > 2
[DEBUG|collector_api.py:200] 2021-02-03 15:56:58,505 > ++++++++++++++알파홀딩스++++++++++++++++++++1802/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:58,505 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:58,859 > 3
[DEBUG|collector_api.py:200] 2021-02-03 15:56:59,095 > ++++++++++++++압타바이오++++++++++++++++++++1803/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:59,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:56:59,467 > 4
[DEBUG|collector_api.py:200] 2021-02-03 15:56:59,670 > ++++++++++++++야스++++++++++++++++++++1804/2888
[DEBUG|open_api.py:656] 2021-02-03 15:56:59,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:00,073 > 5
[DEBUG|collector_api.py:200] 2021-02-03 15:57:00,308 > ++++++++++++++에스맥++++++++++++++++++++1805/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:00,309 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:00,681 > 6
[DEBUG|collector_api.py:200] 2021-02-03 15:57:00,930 > ++++++++++++++에스에이티++++++++++++++++++++1806/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:00,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:01,288 > 7
[DEBUG|collector_api.py:200] 2021-02-03 15:57:01,532 > ++++++++++++++에스엔유++++++++++++++++++++1807/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:01,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:01,896 > 8
[DEBUG|collector_api.py:200] 2021-02-03 15:57:02,157 > ++++++++++++++에스엠코어++++++++++++++++++++1808/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:02,158 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:02,503 > 9
[DEBUG|collector_api.py:200] 2021-02-03 15:57:02,748 > ++++++++++++++에스티오++++++++++++++++++++1809/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:02,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:03,111 > 10
[DEBUG|collector_api.py:200] 2021-02-03 15:57:03,366 > ++++++++++++++에이치엘비++++++++++++++++++++1810/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:03,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:03,719 > 11
[DEBUG|collector_api.py:200] 2021-02-03 15:57:04,005 > ++++++++++++++에이테크솔루션++++++++++++++++++++1811/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:04,005 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:04,326 > 12
[DEBUG|collector_api.py:200] 2021-02-03 15:57:04,572 > ++++++++++++++에코마이스터++++++++++++++++++++1812/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:04,572 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:04,933 > 13
[DEBUG|collector_api.py:200] 2021-02-03 15:57:05,198 > ++++++++++++++에프엔씨엔터++++++++++++++++++++1813/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:05,198 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:05,543 > 14
[DEBUG|collector_api.py:200] 2021-02-03 15:57:05,798 > ++++++++++++++엔시트론++++++++++++++++++++1814/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:05,798 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:06,151 > 15
[DEBUG|collector_api.py:200] 2021-02-03 15:57:06,398 > ++++++++++++++엔에프씨++++++++++++++++++++1815/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:06,398 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:06,759 > 16
[DEBUG|collector_api.py:200] 2021-02-03 15:57:06,926 > ++++++++++++++엘비세미콘++++++++++++++++++++1816/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:06,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:07,367 > 17
[DEBUG|collector_api.py:200] 2021-02-03 15:57:07,615 > ++++++++++++++엘이티++++++++++++++++++++1817/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:07,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:07,974 > 18
[DEBUG|collector_api.py:200] 2021-02-03 15:57:08,164 > ++++++++++++++엠에스씨++++++++++++++++++++1818/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:08,165 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:08,583 > 19
[DEBUG|collector_api.py:200] 2021-02-03 15:57:08,848 > ++++++++++++++엠젠플러스++++++++++++++++++++1819/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:08,849 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:09,191 > 20
[DEBUG|collector_api.py:200] 2021-02-03 15:57:09,463 > ++++++++++++++연우++++++++++++++++++++1820/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:09,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:09,799 > 21
[DEBUG|collector_api.py:200] 2021-02-03 15:57:10,081 > ++++++++++++++오디텍++++++++++++++++++++1821/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:10,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:10,406 > 22
[DEBUG|collector_api.py:200] 2021-02-03 15:57:10,652 > ++++++++++++++오상자이엘++++++++++++++++++++1822/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:10,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:11,014 > 23
[DEBUG|collector_api.py:200] 2021-02-03 15:57:11,265 > ++++++++++++++오킨스전자++++++++++++++++++++1823/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:11,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:11,622 > 24
[DEBUG|collector_api.py:200] 2021-02-03 15:57:11,874 > ++++++++++++++와이엔텍++++++++++++++++++++1824/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:11,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:12,230 > 25
[DEBUG|collector_api.py:200] 2021-02-03 15:57:12,506 > ++++++++++++++와이오엠++++++++++++++++++++1825/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:12,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:12,839 > 26
[DEBUG|collector_api.py:200] 2021-02-03 15:57:13,100 > ++++++++++++++와이지엔터테인먼트++++++++++++++++++++1826/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:13,100 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:13,447 > 27
[DEBUG|collector_api.py:200] 2021-02-03 15:57:13,692 > ++++++++++++++우리기술투자++++++++++++++++++++1827/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:13,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:14,053 > 28
[DEBUG|collector_api.py:200] 2021-02-03 15:57:14,325 > ++++++++++++++우주일렉트로++++++++++++++++++++1828/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:14,326 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:14,661 > 29
[DEBUG|collector_api.py:200] 2021-02-03 15:57:14,932 > ++++++++++++++웹케시++++++++++++++++++++1829/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:14,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:15,268 > 30
[DEBUG|collector_api.py:200] 2021-02-03 15:57:15,508 > ++++++++++++++위니아딤채++++++++++++++++++++1830/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:15,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:15,876 > 31
[DEBUG|collector_api.py:200] 2021-02-03 15:57:16,123 > ++++++++++++++위더스제약++++++++++++++++++++1831/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:16,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:16,483 > 32
[DEBUG|collector_api.py:200] 2021-02-03 15:57:16,653 > ++++++++++++++위드텍++++++++++++++++++++1832/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:16,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:17,092 > 33
[DEBUG|collector_api.py:200] 2021-02-03 15:57:17,250 > ++++++++++++++위지윅스튜디오++++++++++++++++++++1833/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:17,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:17,701 > 34
[DEBUG|collector_api.py:200] 2021-02-03 15:57:17,925 > ++++++++++++++윈스++++++++++++++++++++1834/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:17,925 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:18,311 > 35
[DEBUG|collector_api.py:200] 2021-02-03 15:57:18,544 > ++++++++++++++윈텍++++++++++++++++++++1835/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:18,544 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:18,920 > 36
[DEBUG|collector_api.py:200] 2021-02-03 15:57:19,118 > ++++++++++++++유라테크++++++++++++++++++++1836/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:19,119 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:19,529 > 37
[DEBUG|collector_api.py:200] 2021-02-03 15:57:19,769 > ++++++++++++++유틸렉스++++++++++++++++++++1837/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:19,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:20,137 > 38
[DEBUG|collector_api.py:200] 2021-02-03 15:57:20,364 > ++++++++++++++율호++++++++++++++++++++1838/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:20,365 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:20,747 > 39
[DEBUG|collector_api.py:200] 2021-02-03 15:57:21,004 > ++++++++++++++이그잭스++++++++++++++++++++1839/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:21,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:21,356 > 40
[DEBUG|collector_api.py:200] 2021-02-03 15:57:21,618 > ++++++++++++++이니텍++++++++++++++++++++1840/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:21,620 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:21,963 > 41
[DEBUG|collector_api.py:200] 2021-02-03 15:57:22,225 > ++++++++++++++이더블유케이++++++++++++++++++++1841/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:22,226 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:22,572 > 42
[DEBUG|collector_api.py:200] 2021-02-03 15:57:22,809 > ++++++++++++++인지디스플레++++++++++++++++++++1842/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:22,809 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:23,180 > 43
[DEBUG|collector_api.py:200] 2021-02-03 15:57:23,443 > ++++++++++++++인콘++++++++++++++++++++1843/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:23,443 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:23,788 > 44
[DEBUG|collector_api.py:200] 2021-02-03 15:57:24,034 > ++++++++++++++인크로스++++++++++++++++++++1844/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:24,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:24,396 > 45
[DEBUG|collector_api.py:200] 2021-02-03 15:57:24,643 > ++++++++++++++일지테크++++++++++++++++++++1845/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:24,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:25,003 > 46
[DEBUG|collector_api.py:200] 2021-02-03 15:57:25,267 > ++++++++++++++제이에스티나++++++++++++++++++++1846/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:25,268 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:25,611 > 47
[DEBUG|collector_api.py:200] 2021-02-03 15:57:25,858 > ++++++++++++++제이엠아이++++++++++++++++++++1847/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:25,858 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:26,219 > 48
[DEBUG|collector_api.py:200] 2021-02-03 15:57:26,469 > ++++++++++++++제일전기공업++++++++++++++++++++1848/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:26,469 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:26,826 > 49
[DEBUG|collector_api.py:200] 2021-02-03 15:57:27,024 > ++++++++++++++지니틱스++++++++++++++++++++1849/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:27,024 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:27,433 > 50
[DEBUG|collector_api.py:200] 2021-02-03 15:57:27,678 > ++++++++++++++진로발효++++++++++++++++++++1850/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:27,678 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:28,040 > 51
[DEBUG|collector_api.py:200] 2021-02-03 15:57:28,278 > ++++++++++++++체리부로++++++++++++++++++++1851/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:28,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:28,648 > 52
[DEBUG|collector_api.py:200] 2021-02-03 15:57:28,899 > ++++++++++++++케이디켐++++++++++++++++++++1852/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:28,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:29,257 > 53
[DEBUG|collector_api.py:200] 2021-02-03 15:57:29,483 > ++++++++++++++케이씨티++++++++++++++++++++1853/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:29,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:29,865 > 54
[DEBUG|collector_api.py:200] 2021-02-03 15:57:30,126 > ++++++++++++++케이피에스++++++++++++++++++++1854/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:30,127 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:30,472 > 55
[DEBUG|collector_api.py:200] 2021-02-03 15:57:30,707 > ++++++++++++++코나아이++++++++++++++++++++1855/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:30,708 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:31,080 > 56
[DEBUG|collector_api.py:200] 2021-02-03 15:57:31,324 > ++++++++++++++코디++++++++++++++++++++1856/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:31,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:31,688 > 57
[DEBUG|collector_api.py:200] 2021-02-03 15:57:31,941 > ++++++++++++++코리아에스이++++++++++++++++++++1857/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:31,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:32,297 > 58
[DEBUG|collector_api.py:200] 2021-02-03 15:57:32,545 > ++++++++++++++코스나인++++++++++++++++++++1858/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:32,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:32,905 > 59
[DEBUG|collector_api.py:200] 2021-02-03 15:57:33,167 > ++++++++++++++코아스템++++++++++++++++++++1859/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:33,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:33,514 > 60
[DEBUG|collector_api.py:200] 2021-02-03 15:57:33,758 > ++++++++++++++큐렉소++++++++++++++++++++1860/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:33,759 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:34,122 > 61
[DEBUG|collector_api.py:200] 2021-02-03 15:57:34,369 > ++++++++++++++큐로컴++++++++++++++++++++1861/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:34,369 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:34,730 > 62
[DEBUG|collector_api.py:200] 2021-02-03 15:57:34,973 > ++++++++++++++태양++++++++++++++++++++1862/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:34,974 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:35,336 > 63
[DEBUG|collector_api.py:200] 2021-02-03 15:57:35,570 > ++++++++++++++테크윙++++++++++++++++++++1863/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:35,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:35,945 > 64
[DEBUG|collector_api.py:200] 2021-02-03 15:57:36,201 > ++++++++++++++투비소프트++++++++++++++++++++1864/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:36,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:36,553 > 65
[DEBUG|collector_api.py:200] 2021-02-03 15:57:36,793 > ++++++++++++++티엘아이++++++++++++++++++++1865/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:36,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:37,159 > 66
[DEBUG|collector_api.py:200] 2021-02-03 15:57:37,396 > ++++++++++++++티움바이오++++++++++++++++++++1866/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:37,397 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:37,766 > 67
[DEBUG|collector_api.py:200] 2021-02-03 15:57:37,962 > ++++++++++++++파인테크닉스++++++++++++++++++++1867/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:37,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:38,374 > 68
[DEBUG|collector_api.py:200] 2021-02-03 15:57:38,644 > ++++++++++++++팜스빌++++++++++++++++++++1868/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:38,645 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:38,982 > 69
[DEBUG|collector_api.py:200] 2021-02-03 15:57:39,185 > ++++++++++++++팬스타엔터프라이즈++++++++++++++++++++1869/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:39,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:39,588 > 70
[DEBUG|collector_api.py:200] 2021-02-03 15:57:39,836 > ++++++++++++++평화정공++++++++++++++++++++1870/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:39,836 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:40,195 > 71
[DEBUG|collector_api.py:200] 2021-02-03 15:57:40,457 > ++++++++++++++포메탈++++++++++++++++++++1871/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:40,458 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:40,804 > 72
[DEBUG|collector_api.py:200] 2021-02-03 15:57:41,080 > ++++++++++++++포스코 ICT++++++++++++++++++++1872/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:41,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:41,412 > 73
[DEBUG|collector_api.py:200] 2021-02-03 15:57:41,665 > ++++++++++++++플레이위드++++++++++++++++++++1873/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:41,665 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:42,019 > 74
[DEBUG|collector_api.py:200] 2021-02-03 15:57:42,300 > ++++++++++++++피씨엘++++++++++++++++++++1874/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:42,301 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:42,626 > 75
[DEBUG|collector_api.py:200] 2021-02-03 15:57:42,915 > ++++++++++++++피피아이++++++++++++++++++++1875/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:42,916 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:43,232 > 76
[DEBUG|collector_api.py:200] 2021-02-03 15:57:43,436 > ++++++++++++++한국제8호스팩++++++++++++++++++++1876/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:43,436 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:43,838 > 77
[DEBUG|collector_api.py:200] 2021-02-03 15:57:44,080 > ++++++++++++++한솔인티큐브++++++++++++++++++++1877/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:44,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:44,447 > 78
[DEBUG|collector_api.py:200] 2021-02-03 15:57:44,692 > ++++++++++++++한창산업++++++++++++++++++++1878/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:44,693 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:45,055 > 79
[DEBUG|collector_api.py:200] 2021-02-03 15:57:45,307 > ++++++++++++++한컴MDS++++++++++++++++++++1879/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:45,308 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:45,665 > 80
[DEBUG|collector_api.py:200] 2021-02-03 15:57:45,913 > ++++++++++++++한화에스비아이스팩++++++++++++++++++++1880/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:45,913 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:46,273 > 81
[DEBUG|collector_api.py:200] 2021-02-03 15:57:46,492 > ++++++++++++++핸디소프트++++++++++++++++++++1881/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:46,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:46,881 > 82
[DEBUG|collector_api.py:200] 2021-02-03 15:57:47,124 > ++++++++++++++현대공업++++++++++++++++++++1882/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:47,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:47,488 > 83
[DEBUG|collector_api.py:200] 2021-02-03 15:57:47,751 > ++++++++++++++화신정공++++++++++++++++++++1883/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:47,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:48,096 > 84
[DEBUG|collector_api.py:200] 2021-02-03 15:57:48,327 > ++++++++++++++휴마시스++++++++++++++++++++1884/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:48,328 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:48,703 > 85
[DEBUG|collector_api.py:200] 2021-02-03 15:57:48,949 > ++++++++++++++휴비츠++++++++++++++++++++1885/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:48,949 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:49,310 > 86
[DEBUG|collector_api.py:200] 2021-02-03 15:57:49,576 > ++++++++++++++흥국++++++++++++++++++++1886/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:49,577 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:49,918 > 87
[DEBUG|collector_api.py:200] 2021-02-03 15:57:50,155 > ++++++++++++++GV++++++++++++++++++++1887/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:50,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:50,526 > 88
[DEBUG|collector_api.py:200] 2021-02-03 15:57:50,768 > ++++++++++++++HB테크놀러지++++++++++++++++++++1888/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:50,769 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:51,134 > 89
[DEBUG|collector_api.py:200] 2021-02-03 15:57:51,396 > ++++++++++++++IBKS제12호스팩++++++++++++++++++++1889/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:51,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:51,742 > 90
[DEBUG|collector_api.py:200] 2021-02-03 15:57:51,972 > ++++++++++++++ISC++++++++++++++++++++1890/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:51,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:52,349 > 91
[DEBUG|collector_api.py:200] 2021-02-03 15:57:52,593 > ++++++++++++++KG이니시스++++++++++++++++++++1891/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:52,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:52,957 > 92
[DEBUG|collector_api.py:200] 2021-02-03 15:57:53,209 > ++++++++++++++MP한강++++++++++++++++++++1892/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:53,209 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:53,564 > 93
[DEBUG|collector_api.py:200] 2021-02-03 15:57:53,794 > ++++++++++++++NE능률++++++++++++++++++++1893/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:53,795 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:54,172 > 94
[DEBUG|collector_api.py:200] 2021-02-03 15:57:54,395 > ++++++++++++++NHN한국사이버결제++++++++++++++++++++1894/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:54,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:54,779 > 95
[DEBUG|collector_api.py:200] 2021-02-03 15:57:55,020 > ++++++++++++++SBI인베스트먼트++++++++++++++++++++1895/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:55,020 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:55,385 > 96
[DEBUG|collector_api.py:200] 2021-02-03 15:57:55,622 > ++++++++++++++SG++++++++++++++++++++1896/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:55,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:55,993 > 97
[DEBUG|collector_api.py:200] 2021-02-03 15:57:56,242 > ++++++++++++++갤럭시아머니트리++++++++++++++++++++1897/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:56,243 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:56,601 > 98
[DEBUG|collector_api.py:200] 2021-02-03 15:57:56,840 > ++++++++++++++고려제약++++++++++++++++++++1898/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:56,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:57,209 > 99
[DEBUG|collector_api.py:200] 2021-02-03 15:57:57,448 > ++++++++++++++구영테크++++++++++++++++++++1899/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:57,448 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:57,817 > 100
[DEBUG|collector_api.py:200] 2021-02-03 15:57:58,077 > ++++++++++++++국일제지++++++++++++++++++++1900/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:58,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:58,424 > 101
[DEBUG|collector_api.py:200] 2021-02-03 15:57:58,694 > ++++++++++++++금강철강++++++++++++++++++++1901/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:58,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:59,033 > 102
[DEBUG|collector_api.py:200] 2021-02-03 15:57:59,275 > ++++++++++++++기가레인++++++++++++++++++++1902/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:59,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:57:59,640 > 103
[DEBUG|collector_api.py:200] 2021-02-03 15:57:59,869 > ++++++++++++++나노스++++++++++++++++++++1903/2888
[DEBUG|open_api.py:656] 2021-02-03 15:57:59,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:00,248 > 104
[DEBUG|collector_api.py:200] 2021-02-03 15:58:00,480 > ++++++++++++++나노캠텍++++++++++++++++++++1904/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:00,481 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:00,857 > 105
[DEBUG|collector_api.py:200] 2021-02-03 15:58:01,098 > ++++++++++++++나라엠앤디++++++++++++++++++++1905/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:01,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:01,465 > 106
[DEBUG|collector_api.py:200] 2021-02-03 15:58:01,705 > ++++++++++++++나우IB++++++++++++++++++++1906/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:01,705 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:02,074 > 107
[DEBUG|collector_api.py:200] 2021-02-03 15:58:02,307 > ++++++++++++++내츄럴엔도텍++++++++++++++++++++1907/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:02,307 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:02,682 > 108
[DEBUG|collector_api.py:200] 2021-02-03 15:58:02,907 > ++++++++++++++네오펙트++++++++++++++++++++1908/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:02,907 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:03,290 > 109
[DEBUG|collector_api.py:200] 2021-02-03 15:58:03,507 > ++++++++++++++녹십자엠에스++++++++++++++++++++1909/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:03,507 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:03,899 > 110
[DEBUG|collector_api.py:200] 2021-02-03 15:58:04,131 > ++++++++++++++뉴지랩++++++++++++++++++++1910/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:04,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:04,507 > 111
[DEBUG|collector_api.py:200] 2021-02-03 15:58:04,758 > ++++++++++++++대동기어++++++++++++++++++++1911/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:04,758 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:05,115 > 112
[DEBUG|collector_api.py:200] 2021-02-03 15:58:05,366 > ++++++++++++++대륙제관++++++++++++++++++++1912/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:05,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:05,722 > 113
[DEBUG|collector_api.py:200] 2021-02-03 15:58:05,980 > ++++++++++++++대모++++++++++++++++++++1913/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:05,981 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:06,330 > 114
[DEBUG|collector_api.py:200] 2021-02-03 15:58:06,522 > ++++++++++++++대보마그네틱++++++++++++++++++++1914/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:06,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:06,937 > 115
[DEBUG|collector_api.py:200] 2021-02-03 15:58:07,161 > ++++++++++++++대성엘텍++++++++++++++++++++1915/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:07,161 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:07,545 > 116
[DEBUG|collector_api.py:200] 2021-02-03 15:58:07,787 > ++++++++++++++대성창투++++++++++++++++++++1916/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:07,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:08,153 > 117
[DEBUG|collector_api.py:200] 2021-02-03 15:58:08,388 > ++++++++++++++대양제지++++++++++++++++++++1917/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:08,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:08,761 > 118
[DEBUG|collector_api.py:200] 2021-02-03 15:58:09,038 > ++++++++++++++대정화금++++++++++++++++++++1918/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:09,039 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:09,368 > 119
[DEBUG|collector_api.py:200] 2021-02-03 15:58:09,608 > ++++++++++++++대창스틸++++++++++++++++++++1919/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:09,608 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:09,975 > 120
[DEBUG|collector_api.py:200] 2021-02-03 15:58:10,222 > ++++++++++++++덕우전자++++++++++++++++++++1920/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:10,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:10,582 > 121
[DEBUG|collector_api.py:200] 2021-02-03 15:58:10,816 > ++++++++++++++데브시스터즈++++++++++++++++++++1921/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:10,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:11,190 > 122
[DEBUG|collector_api.py:200] 2021-02-03 15:58:11,422 > ++++++++++++++동성화인텍++++++++++++++++++++1922/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:11,422 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:11,798 > 123
[DEBUG|collector_api.py:200] 2021-02-03 15:58:12,051 > ++++++++++++++동양에스텍++++++++++++++++++++1923/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:12,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:12,406 > 124
[DEBUG|collector_api.py:200] 2021-02-03 15:58:12,642 > ++++++++++++++동양이엔피++++++++++++++++++++1924/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:12,642 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:13,014 > 125
[DEBUG|collector_api.py:200] 2021-02-03 15:58:13,266 > ++++++++++++++동일철강++++++++++++++++++++1925/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:13,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:13,621 > 126
[DEBUG|collector_api.py:200] 2021-02-03 15:58:13,900 > ++++++++++++++디스플레이텍++++++++++++++++++++1926/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:13,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:14,230 > 127
[DEBUG|collector_api.py:200] 2021-02-03 15:58:14,471 > ++++++++++++++디에스케이++++++++++++++++++++1927/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:14,471 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:14,837 > 128
[DEBUG|collector_api.py:200] 2021-02-03 15:58:15,124 > ++++++++++++++디자인++++++++++++++++++++1928/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:15,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:15,444 > 129
[DEBUG|collector_api.py:200] 2021-02-03 15:58:15,683 > ++++++++++++++디젠스++++++++++++++++++++1929/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:15,683 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:16,051 > 130
[DEBUG|collector_api.py:200] 2021-02-03 15:58:16,279 > ++++++++++++++러셀++++++++++++++++++++1930/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:16,280 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:16,659 > 131
[DEBUG|collector_api.py:200] 2021-02-03 15:58:16,903 > ++++++++++++++레이++++++++++++++++++++1931/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:16,903 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:17,268 > 132
[DEBUG|collector_api.py:200] 2021-02-03 15:58:17,462 > ++++++++++++++매일유업++++++++++++++++++++1932/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:17,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:17,875 > 133
[DEBUG|collector_api.py:200] 2021-02-03 15:58:18,124 > ++++++++++++++맥스로텍++++++++++++++++++++1933/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:18,124 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:18,483 > 134
[DEBUG|collector_api.py:200] 2021-02-03 15:58:18,725 > ++++++++++++++멀티캠퍼스++++++++++++++++++++1934/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:18,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:19,091 > 135
[DEBUG|collector_api.py:200] 2021-02-03 15:58:19,332 > ++++++++++++++메가스터디++++++++++++++++++++1935/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:19,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:19,699 > 136
[DEBUG|collector_api.py:200] 2021-02-03 15:58:19,957 > ++++++++++++++메디프론++++++++++++++++++++1936/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:19,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:20,307 > 137
[DEBUG|collector_api.py:200] 2021-02-03 15:58:20,549 > ++++++++++++++모바일어플라이언스++++++++++++++++++++1937/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:20,550 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:20,913 > 138
[DEBUG|collector_api.py:200] 2021-02-03 15:58:21,162 > ++++++++++++++미투온++++++++++++++++++++1938/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:21,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:21,520 > 139
[DEBUG|collector_api.py:200] 2021-02-03 15:58:21,751 > ++++++++++++++바른손++++++++++++++++++++1939/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:21,751 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:22,127 > 140
[DEBUG|collector_api.py:200] 2021-02-03 15:58:22,403 > ++++++++++++++바이오로그디바이스++++++++++++++++++++1940/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:22,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:22,734 > 141
[DEBUG|collector_api.py:200] 2021-02-03 15:58:22,991 > ++++++++++++++바이오솔루션++++++++++++++++++++1941/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:22,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:23,342 > 142
[DEBUG|collector_api.py:200] 2021-02-03 15:58:23,573 > ++++++++++++++바이오톡스텍++++++++++++++++++++1942/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:23,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:23,950 > 143
[DEBUG|collector_api.py:200] 2021-02-03 15:58:24,200 > ++++++++++++++버추얼텍++++++++++++++++++++1943/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:24,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:24,558 > 144
[DEBUG|collector_api.py:200] 2021-02-03 15:58:24,796 > ++++++++++++++베스파++++++++++++++++++++1944/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:24,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:25,165 > 145
[DEBUG|collector_api.py:200] 2021-02-03 15:58:25,384 > ++++++++++++++비나텍++++++++++++++++++++1945/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:25,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:25,773 > 146
[DEBUG|collector_api.py:200] 2021-02-03 15:58:26,017 > ++++++++++++++빅솔론++++++++++++++++++++1946/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:26,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:26,379 > 147
[DEBUG|collector_api.py:200] 2021-02-03 15:58:26,619 > ++++++++++++++삼목에스폼++++++++++++++++++++1947/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:26,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:26,987 > 148
[DEBUG|collector_api.py:200] 2021-02-03 15:58:27,217 > ++++++++++++++삼성스팩2호++++++++++++++++++++1948/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:27,217 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:27,595 > 149
[DEBUG|collector_api.py:200] 2021-02-03 15:58:27,818 > ++++++++++++++상상인++++++++++++++++++++1949/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:27,818 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:28,203 > 150
[DEBUG|collector_api.py:200] 2021-02-03 15:58:28,443 > ++++++++++++++상신전자++++++++++++++++++++1950/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:28,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:28,812 > 151
[DEBUG|collector_api.py:200] 2021-02-03 15:58:29,041 > ++++++++++++++서진시스템++++++++++++++++++++1951/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:29,042 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:29,420 > 152
[DEBUG|collector_api.py:200] 2021-02-03 15:58:29,673 > ++++++++++++++서플러스글로벌++++++++++++++++++++1952/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:29,673 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:30,029 > 153
[DEBUG|collector_api.py:200] 2021-02-03 15:58:30,270 > ++++++++++++++선익시스템++++++++++++++++++++1953/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:30,271 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:30,635 > 154
[DEBUG|collector_api.py:200] 2021-02-03 15:58:30,898 > ++++++++++++++성광벤드++++++++++++++++++++1954/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:30,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:31,245 > 155
[DEBUG|collector_api.py:200] 2021-02-03 15:58:31,524 > ++++++++++++++소프트센++++++++++++++++++++1955/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:31,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:31,853 > 156
[DEBUG|collector_api.py:200] 2021-02-03 15:58:32,122 > ++++++++++++++스타모빌리티++++++++++++++++++++1956/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:32,122 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:32,463 > 157
[DEBUG|collector_api.py:200] 2021-02-03 15:58:32,694 > ++++++++++++++신라섬유++++++++++++++++++++1957/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:32,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:33,071 > 158
[DEBUG|collector_api.py:200] 2021-02-03 15:58:33,327 > ++++++++++++++신진에스엠++++++++++++++++++++1958/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:33,327 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:33,680 > 159
[DEBUG|collector_api.py:200] 2021-02-03 15:58:33,918 > ++++++++++++++심텍홀딩스++++++++++++++++++++1959/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:33,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:34,289 > 160
[DEBUG|collector_api.py:200] 2021-02-03 15:58:34,531 > ++++++++++++++쎌바이오텍++++++++++++++++++++1960/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:34,531 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:34,897 > 161
[DEBUG|collector_api.py:200] 2021-02-03 15:58:35,154 > ++++++++++++++씨티케이코스메틱스++++++++++++++++++++1961/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:35,154 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:35,505 > 162
[DEBUG|collector_api.py:200] 2021-02-03 15:58:35,759 > ++++++++++++++아모그린텍++++++++++++++++++++1962/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:35,760 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:36,113 > 163
[DEBUG|collector_api.py:200] 2021-02-03 15:58:36,331 > ++++++++++++++아미노로직스++++++++++++++++++++1963/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:36,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:36,721 > 164
[DEBUG|collector_api.py:200] 2021-02-03 15:58:36,963 > ++++++++++++++아이디스++++++++++++++++++++1964/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:36,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:37,328 > 165
[DEBUG|collector_api.py:200] 2021-02-03 15:58:37,579 > ++++++++++++++아이비김영++++++++++++++++++++1965/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:37,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:37,936 > 166
[DEBUG|collector_api.py:200] 2021-02-03 15:58:38,135 > ++++++++++++++아이앤씨++++++++++++++++++++1966/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:38,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:38,543 > 167
[DEBUG|collector_api.py:200] 2021-02-03 15:58:38,782 > ++++++++++++++아이에스이커머스++++++++++++++++++++1967/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:38,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:39,149 > 168
[DEBUG|collector_api.py:200] 2021-02-03 15:58:39,387 > ++++++++++++++아이엠++++++++++++++++++++1968/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:39,387 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:39,757 > 169
[DEBUG|collector_api.py:200] 2021-02-03 15:58:40,019 > ++++++++++++++아이엠텍++++++++++++++++++++1969/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:40,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:40,365 > 170
[DEBUG|collector_api.py:200] 2021-02-03 15:58:40,602 > ++++++++++++++아진엑스텍++++++++++++++++++++1970/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:40,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:40,973 > 171
[DEBUG|collector_api.py:200] 2021-02-03 15:58:41,219 > ++++++++++++++아톤++++++++++++++++++++1971/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:41,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:41,582 > 172
[DEBUG|collector_api.py:200] 2021-02-03 15:58:41,781 > ++++++++++++++알엔투테크놀로지++++++++++++++++++++1972/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:41,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:42,192 > 173
[DEBUG|collector_api.py:200] 2021-02-03 15:58:42,452 > ++++++++++++++압타머사이언스++++++++++++++++++++1973/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:42,452 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:42,801 > 174
[DEBUG|collector_api.py:200] 2021-02-03 15:58:42,959 > ++++++++++++++액토즈소프트++++++++++++++++++++1974/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:42,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:43,409 > 175
[DEBUG|collector_api.py:200] 2021-02-03 15:58:43,644 > ++++++++++++++앤씨앤++++++++++++++++++++1975/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:43,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:44,015 > 176
[DEBUG|collector_api.py:200] 2021-02-03 15:58:44,272 > ++++++++++++++에스엠++++++++++++++++++++1976/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:44,272 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:44,623 > 177
[DEBUG|collector_api.py:200] 2021-02-03 15:58:44,877 > ++++++++++++++에스티아이++++++++++++++++++++1977/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:44,877 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:45,231 > 178
[DEBUG|collector_api.py:200] 2021-02-03 15:58:45,478 > ++++++++++++++에이치엘비제약++++++++++++++++++++1978/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:45,479 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:45,838 > 179
[DEBUG|collector_api.py:200] 2021-02-03 15:58:46,131 > ++++++++++++++에이치케이++++++++++++++++++++1979/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:46,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:46,446 > 180
[DEBUG|collector_api.py:200] 2021-02-03 15:58:46,694 > ++++++++++++++에이텍++++++++++++++++++++1980/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:46,694 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:47,053 > 181
[DEBUG|collector_api.py:200] 2021-02-03 15:58:47,313 > ++++++++++++++에코프로++++++++++++++++++++1981/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:47,313 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:47,661 > 182
[DEBUG|collector_api.py:200] 2021-02-03 15:58:47,915 > ++++++++++++++에코프로비엠++++++++++++++++++++1982/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:47,915 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:48,269 > 183
[DEBUG|collector_api.py:200] 2021-02-03 15:58:48,517 > ++++++++++++++엔비티++++++++++++++++++++1983/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:48,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:48,877 > 184
[DEBUG|collector_api.py:200] 2021-02-03 15:58:49,034 > ++++++++++++++엔에이치스팩17호++++++++++++++++++++1984/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:49,034 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:49,485 > 185
[DEBUG|collector_api.py:200] 2021-02-03 15:58:49,650 > ++++++++++++++엔에이치스팩18호++++++++++++++++++++1985/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:49,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:50,093 > 186
[DEBUG|collector_api.py:200] 2021-02-03 15:58:50,249 > ++++++++++++++엘앤케이바이오++++++++++++++++++++1986/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:50,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:50,699 > 187
[DEBUG|collector_api.py:200] 2021-02-03 15:58:50,939 > ++++++++++++++오리엔탈정공++++++++++++++++++++1987/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:50,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:51,305 > 188
[DEBUG|collector_api.py:200] 2021-02-03 15:58:51,553 > ++++++++++++++오리콤++++++++++++++++++++1988/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:51,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:51,912 > 189
[DEBUG|collector_api.py:200] 2021-02-03 15:58:52,188 > ++++++++++++++오션브릿지++++++++++++++++++++1989/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:52,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:52,520 > 190
[DEBUG|collector_api.py:200] 2021-02-03 15:58:52,761 > ++++++++++++++오스템++++++++++++++++++++1990/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:52,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:53,127 > 191
[DEBUG|collector_api.py:200] 2021-02-03 15:58:53,389 > ++++++++++++++우리기술++++++++++++++++++++1991/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:53,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:53,735 > 192
[DEBUG|collector_api.py:200] 2021-02-03 15:58:54,000 > ++++++++++++++우리로++++++++++++++++++++1992/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:54,000 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:54,343 > 193
[DEBUG|collector_api.py:200] 2021-02-03 15:58:54,582 > ++++++++++++++우정바이오++++++++++++++++++++1993/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:54,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:54,952 > 194
[DEBUG|collector_api.py:200] 2021-02-03 15:58:55,210 > ++++++++++++++원방테크++++++++++++++++++++1994/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:55,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:55,561 > 195
[DEBUG|collector_api.py:200] 2021-02-03 15:58:55,742 > ++++++++++++++원익홀딩스++++++++++++++++++++1995/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:55,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:56,169 > 196
[DEBUG|collector_api.py:200] 2021-02-03 15:58:56,413 > ++++++++++++++월덱스++++++++++++++++++++1996/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:56,413 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:56,776 > 197
[DEBUG|collector_api.py:200] 2021-02-03 15:58:57,061 > ++++++++++++++웰크론한텍++++++++++++++++++++1997/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:57,062 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:57,382 > 198
[DEBUG|collector_api.py:200] 2021-02-03 15:58:57,630 > ++++++++++++++웹스++++++++++++++++++++1998/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:57,631 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:57,992 > 199
[DEBUG|collector_api.py:200] 2021-02-03 15:58:58,248 > ++++++++++++++윙입푸드++++++++++++++++++++1999/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:58,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:58,601 > 200
[DEBUG|collector_api.py:200] 2021-02-03 15:58:58,836 > ++++++++++++++유니셈++++++++++++++++++++2000/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:58,837 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:59,210 > 201
[DEBUG|collector_api.py:200] 2021-02-03 15:58:59,467 > ++++++++++++++유니트론텍++++++++++++++++++++2001/2888
[DEBUG|open_api.py:656] 2021-02-03 15:58:59,467 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:58:59,818 > 202
[DEBUG|collector_api.py:200] 2021-02-03 15:59:00,068 > ++++++++++++++유진기업++++++++++++++++++++2002/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:00,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:00,426 > 203
[DEBUG|collector_api.py:200] 2021-02-03 15:59:00,691 > ++++++++++++++유진로봇++++++++++++++++++++2003/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:00,692 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:01,033 > 204
[DEBUG|collector_api.py:200] 2021-02-03 15:59:01,288 > ++++++++++++++이노와이즈++++++++++++++++++++2004/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:01,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:01,641 > 205
[DEBUG|collector_api.py:200] 2021-02-03 15:59:01,891 > ++++++++++++++이노인스트루먼트++++++++++++++++++++2005/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:01,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:02,249 > 206
[DEBUG|collector_api.py:200] 2021-02-03 15:59:02,512 > ++++++++++++++이라이콤++++++++++++++++++++2006/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:02,513 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:02,857 > 207
[DEBUG|collector_api.py:200] 2021-02-03 15:59:03,096 > ++++++++++++++이베스트투자증권++++++++++++++++++++2007/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:03,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:03,464 > 208
[DEBUG|collector_api.py:200] 2021-02-03 15:59:03,716 > ++++++++++++++이엑스티++++++++++++++++++++2008/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:03,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:04,072 > 209
[DEBUG|collector_api.py:200] 2021-02-03 15:59:04,311 > ++++++++++++++이원컴포텍++++++++++++++++++++2009/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:04,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:04,680 > 210
[DEBUG|collector_api.py:200] 2021-02-03 15:59:04,935 > ++++++++++++++이지웰++++++++++++++++++++2010/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:04,935 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:05,290 > 211
[DEBUG|collector_api.py:200] 2021-02-03 15:59:05,536 > ++++++++++++++이크레더블++++++++++++++++++++2011/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:05,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:05,896 > 212
[DEBUG|collector_api.py:200] 2021-02-03 15:59:06,181 > ++++++++++++++이화전기++++++++++++++++++++2012/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:06,182 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:06,503 > 213
[DEBUG|collector_api.py:200] 2021-02-03 15:59:06,766 > ++++++++++++++인트로메딕++++++++++++++++++++2013/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:06,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:07,111 > 214
[DEBUG|collector_api.py:200] 2021-02-03 15:59:07,359 > ++++++++++++++인트론바이오++++++++++++++++++++2014/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:07,359 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:07,717 > 215
[DEBUG|collector_api.py:200] 2021-02-03 15:59:07,973 > ++++++++++++++인프라웨어++++++++++++++++++++2015/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:07,973 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:08,326 > 216
[DEBUG|collector_api.py:200] 2021-02-03 15:59:08,580 > ++++++++++++++일야++++++++++++++++++++2016/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:08,581 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:08,934 > 217
[DEBUG|collector_api.py:200] 2021-02-03 15:59:09,180 > ++++++++++++++일진파워++++++++++++++++++++2017/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:09,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:09,545 > 218
[DEBUG|collector_api.py:200] 2021-02-03 15:59:09,795 > ++++++++++++++제노포커스++++++++++++++++++++2018/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:09,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:10,153 > 219
[DEBUG|collector_api.py:200] 2021-02-03 15:59:10,390 > ++++++++++++++제닉++++++++++++++++++++2019/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:10,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:10,761 > 220
[DEBUG|collector_api.py:200] 2021-02-03 15:59:11,004 > ++++++++++++++제룡산업++++++++++++++++++++2020/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:11,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:11,367 > 221
[DEBUG|collector_api.py:200] 2021-02-03 15:59:11,605 > ++++++++++++++젠큐릭스++++++++++++++++++++2021/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:11,605 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:11,974 > 222
[DEBUG|collector_api.py:200] 2021-02-03 15:59:12,222 > ++++++++++++++중앙에너비스++++++++++++++++++++2022/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:12,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:12,582 > 223
[DEBUG|collector_api.py:200] 2021-02-03 15:59:12,833 > ++++++++++++++지엘팜텍++++++++++++++++++++2023/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:12,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:13,190 > 224
[DEBUG|collector_api.py:200] 2021-02-03 15:59:13,444 > ++++++++++++++진매트릭스++++++++++++++++++++2024/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:13,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:13,798 > 225
[DEBUG|collector_api.py:200] 2021-02-03 15:59:14,071 > ++++++++++++++창해에탄올++++++++++++++++++++2025/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:14,071 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:14,405 > 226
[DEBUG|collector_api.py:200] 2021-02-03 15:59:14,647 > ++++++++++++++청담러닝++++++++++++++++++++2026/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:14,648 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:15,012 > 227
[DEBUG|collector_api.py:200] 2021-02-03 15:59:15,259 > ++++++++++++++청보산업++++++++++++++++++++2027/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:15,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:15,621 > 228
[DEBUG|collector_api.py:200] 2021-02-03 15:59:15,904 > ++++++++++++++컬러레이++++++++++++++++++++2028/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:15,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:16,230 > 229
[DEBUG|collector_api.py:200] 2021-02-03 15:59:16,471 > ++++++++++++++케어랩스++++++++++++++++++++2029/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:16,472 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:16,839 > 230
[DEBUG|collector_api.py:200] 2021-02-03 15:59:17,067 > ++++++++++++++케어젠++++++++++++++++++++2030/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:17,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:17,448 > 231
[DEBUG|collector_api.py:200] 2021-02-03 15:59:17,678 > ++++++++++++++케이엔제이++++++++++++++++++++2031/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:17,679 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:18,058 > 232
[DEBUG|collector_api.py:200] 2021-02-03 15:59:18,294 > ++++++++++++++케이엠++++++++++++++++++++2032/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:18,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:18,666 > 233
[DEBUG|collector_api.py:200] 2021-02-03 15:59:18,926 > ++++++++++++++케이엠제약++++++++++++++++++++2033/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:18,927 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:19,274 > 234
[DEBUG|collector_api.py:200] 2021-02-03 15:59:19,517 > ++++++++++++++케이프++++++++++++++++++++2034/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:19,518 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:19,881 > 235
[DEBUG|collector_api.py:200] 2021-02-03 15:59:20,128 > ++++++++++++++켐트로닉스++++++++++++++++++++2035/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:20,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:20,489 > 236
[DEBUG|collector_api.py:200] 2021-02-03 15:59:20,741 > ++++++++++++++켐트로스++++++++++++++++++++2036/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:20,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:21,096 > 237
[DEBUG|collector_api.py:200] 2021-02-03 15:59:21,350 > ++++++++++++++코다코++++++++++++++++++++2037/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:21,351 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:21,705 > 238
[DEBUG|collector_api.py:200] 2021-02-03 15:59:21,952 > ++++++++++++++코리아에프티++++++++++++++++++++2038/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:21,952 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:22,313 > 239
[DEBUG|collector_api.py:200] 2021-02-03 15:59:22,560 > ++++++++++++++코센++++++++++++++++++++2039/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:22,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:22,920 > 240
[DEBUG|collector_api.py:200] 2021-02-03 15:59:23,236 > ++++++++++++++코퍼스코리아++++++++++++++++++++2040/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:23,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:23,528 > 241
[DEBUG|collector_api.py:200] 2021-02-03 15:59:23,741 > ++++++++++++++큐로홀딩스++++++++++++++++++++2041/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:23,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:24,136 > 242
[DEBUG|collector_api.py:200] 2021-02-03 15:59:24,389 > ++++++++++++++티피씨글로벌++++++++++++++++++++2042/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:24,390 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:24,745 > 243
[DEBUG|collector_api.py:200] 2021-02-03 15:59:25,002 > ++++++++++++++파크시스템스++++++++++++++++++++2043/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:25,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:25,355 > 244
[DEBUG|collector_api.py:200] 2021-02-03 15:59:25,603 > ++++++++++++++파트론++++++++++++++++++++2044/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:25,603 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:25,963 > 245
[DEBUG|collector_api.py:200] 2021-02-03 15:59:26,214 > ++++++++++++++판타지오++++++++++++++++++++2045/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:26,215 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:26,571 > 246
[DEBUG|collector_api.py:200] 2021-02-03 15:59:26,824 > ++++++++++++++팬젠++++++++++++++++++++2046/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:26,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:27,179 > 247
[DEBUG|collector_api.py:200] 2021-02-03 15:59:27,423 > ++++++++++++++포스코엠텍++++++++++++++++++++2047/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:27,423 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:27,787 > 248
[DEBUG|collector_api.py:200] 2021-02-03 15:59:28,061 > ++++++++++++++포인트엔지니어링++++++++++++++++++++2048/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:28,061 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:28,396 > 249
[DEBUG|collector_api.py:200] 2021-02-03 15:59:28,627 > ++++++++++++++포티스++++++++++++++++++++2049/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:28,627 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:29,004 > 250
[DEBUG|collector_api.py:200] 2021-02-03 15:59:29,245 > ++++++++++++++피앤씨테크++++++++++++++++++++2050/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:29,245 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:29,613 > 251
[DEBUG|collector_api.py:200] 2021-02-03 15:59:29,868 > ++++++++++++++필로시스헬스케어++++++++++++++++++++2051/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:29,868 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:30,221 > 252
[DEBUG|collector_api.py:200] 2021-02-03 15:59:30,463 > ++++++++++++++하나머스트제6호스팩++++++++++++++++++++2052/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:30,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:30,828 > 253
[DEBUG|collector_api.py:200] 2021-02-03 15:59:31,062 > ++++++++++++++하림지주++++++++++++++++++++2053/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:31,062 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:31,436 > 254
[DEBUG|collector_api.py:200] 2021-02-03 15:59:31,663 > ++++++++++++++하이제5호스팩++++++++++++++++++++2054/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:31,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:32,045 > 255
[DEBUG|collector_api.py:200] 2021-02-03 15:59:32,256 > ++++++++++++++하이텍팜++++++++++++++++++++2055/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:32,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:32,654 > 256
[DEBUG|collector_api.py:200] 2021-02-03 15:59:32,898 > ++++++++++++++한국가구++++++++++++++++++++2056/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:32,899 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:33,260 > 257
[DEBUG|collector_api.py:200] 2021-02-03 15:59:33,514 > ++++++++++++++한국정밀기계++++++++++++++++++++2057/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:33,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:33,868 > 258
[DEBUG|collector_api.py:200] 2021-02-03 15:59:34,151 > ++++++++++++++한빛소프트++++++++++++++++++++2058/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:34,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:34,474 > 259
[DEBUG|collector_api.py:200] 2021-02-03 15:59:34,717 > ++++++++++++++한스바이오메드++++++++++++++++++++2059/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:34,717 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:35,081 > 260
[DEBUG|collector_api.py:200] 2021-02-03 15:59:35,337 > ++++++++++++++현대바이오랜드++++++++++++++++++++2060/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:35,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:35,689 > 261
[DEBUG|collector_api.py:200] 2021-02-03 15:59:35,976 > ++++++++++++++현대통신++++++++++++++++++++2061/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:35,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:36,298 > 262
[DEBUG|collector_api.py:200] 2021-02-03 15:59:36,557 > ++++++++++++++휘닉스소재++++++++++++++++++++2062/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:36,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:36,907 > 263
[DEBUG|collector_api.py:200] 2021-02-03 15:59:37,172 > ++++++++++++++휴림로봇++++++++++++++++++++2063/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:37,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:37,513 > 264
[DEBUG|collector_api.py:200] 2021-02-03 15:59:37,753 > ++++++++++++++AP시스템++++++++++++++++++++2064/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:37,754 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:38,120 > 265
[DEBUG|collector_api.py:200] 2021-02-03 15:59:38,364 > ++++++++++++++AP위성++++++++++++++++++++2065/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:38,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:38,728 > 266
[DEBUG|collector_api.py:200] 2021-02-03 15:59:38,960 > ++++++++++++++GRT++++++++++++++++++++2066/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:38,960 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:39,335 > 267
[DEBUG|collector_api.py:200] 2021-02-03 15:59:39,560 > ++++++++++++++MP그룹++++++++++++++++++++2067/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:39,561 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:39,942 > 268
[DEBUG|collector_api.py:200] 2021-02-03 15:59:40,170 > ++++++++++++++OQP++++++++++++++++++++2068/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:40,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:40,551 > 269
[DEBUG|collector_api.py:200] 2021-02-03 15:59:40,812 > ++++++++++++++PI첨단소재++++++++++++++++++++2069/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:40,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:41,159 > 270
[DEBUG|collector_api.py:200] 2021-02-03 15:59:41,403 > ++++++++++++++S&K폴리텍++++++++++++++++++++2070/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:41,403 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:41,765 > 271
[DEBUG|collector_api.py:200] 2021-02-03 15:59:42,008 > ++++++++++++++SFA반도체++++++++++++++++++++2071/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:42,008 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:42,371 > 272
[DEBUG|collector_api.py:200] 2021-02-03 15:59:42,616 > ++++++++++++++SGC이테크건설++++++++++++++++++++2072/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:42,617 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:42,977 > 273
[DEBUG|collector_api.py:200] 2021-02-03 15:59:43,239 > ++++++++++++++THE E&M++++++++++++++++++++2073/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:43,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:43,585 > 274
[DEBUG|collector_api.py:200] 2021-02-03 15:59:43,829 > ++++++++++++++THE MIDONG++++++++++++++++++++2074/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:43,830 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:44,193 > 275
[DEBUG|collector_api.py:200] 2021-02-03 15:59:44,426 > ++++++++++++++TJ미디어++++++++++++++++++++2075/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:44,426 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:44,801 > 276
[DEBUG|collector_api.py:200] 2021-02-03 15:59:45,062 > ++++++++++++++YTN++++++++++++++++++++2076/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:45,062 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:45,410 > 277
[DEBUG|collector_api.py:200] 2021-02-03 15:59:45,663 > ++++++++++++++골프존뉴딘홀딩스++++++++++++++++++++2077/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:45,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:46,019 > 278
[DEBUG|collector_api.py:200] 2021-02-03 15:59:46,276 > ++++++++++++++교보10호스팩++++++++++++++++++++2078/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:46,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:46,627 > 279
[DEBUG|collector_api.py:200] 2021-02-03 15:59:46,786 > ++++++++++++++금화피에스시++++++++++++++++++++2079/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:46,786 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:47,233 > 280
[DEBUG|collector_api.py:200] 2021-02-03 15:59:47,475 > ++++++++++++++까스텔바작++++++++++++++++++++2080/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:47,475 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:47,840 > 281
[DEBUG|collector_api.py:200] 2021-02-03 15:59:48,046 > ++++++++++++++나무가++++++++++++++++++++2081/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:48,046 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:48,448 > 282
[DEBUG|collector_api.py:200] 2021-02-03 15:59:48,680 > ++++++++++++++네온테크++++++++++++++++++++2082/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:48,680 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:49,055 > 283
[DEBUG|collector_api.py:200] 2021-02-03 15:59:49,299 > ++++++++++++++녹십자랩셀++++++++++++++++++++2083/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:49,299 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:49,663 > 284
[DEBUG|collector_api.py:200] 2021-02-03 15:59:49,893 > ++++++++++++++녹십자웰빙++++++++++++++++++++2084/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:49,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:50,270 > 285
[DEBUG|collector_api.py:200] 2021-02-03 15:59:50,496 > ++++++++++++++농우바이오++++++++++++++++++++2085/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:50,497 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:50,879 > 286
[DEBUG|collector_api.py:200] 2021-02-03 15:59:51,121 > ++++++++++++++뉴트리++++++++++++++++++++2086/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:51,121 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:51,486 > 287
[DEBUG|collector_api.py:200] 2021-02-03 15:59:51,717 > ++++++++++++++다나와++++++++++++++++++++2087/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:51,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:52,094 > 288
[DEBUG|collector_api.py:200] 2021-02-03 15:59:52,330 > ++++++++++++++다믈멀티미디어++++++++++++++++++++2088/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:52,331 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:52,702 > 289
[DEBUG|collector_api.py:200] 2021-02-03 15:59:52,949 > ++++++++++++++다우데이타++++++++++++++++++++2089/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:52,949 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:53,309 > 290
[DEBUG|collector_api.py:200] 2021-02-03 15:59:53,557 > ++++++++++++++대동스틸++++++++++++++++++++2090/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:53,558 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:53,917 > 291
[DEBUG|collector_api.py:200] 2021-02-03 15:59:54,199 > ++++++++++++++대신밸런스제8호스팩++++++++++++++++++++2091/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:54,199 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:54,525 > 292
[DEBUG|collector_api.py:200] 2021-02-03 15:59:54,713 > ++++++++++++++대한광통신++++++++++++++++++++2092/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:54,713 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:55,132 > 293
[DEBUG|collector_api.py:200] 2021-02-03 15:59:55,383 > ++++++++++++++더네이쳐홀딩스++++++++++++++++++++2093/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:55,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:55,740 > 294
[DEBUG|collector_api.py:200] 2021-02-03 15:59:55,918 > ++++++++++++++데이타솔루션++++++++++++++++++++2094/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:55,918 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:56,346 > 295
[DEBUG|collector_api.py:200] 2021-02-03 15:59:56,578 > ++++++++++++++덱스터++++++++++++++++++++2095/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:56,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:56,954 > 296
[DEBUG|collector_api.py:200] 2021-02-03 15:59:57,188 > ++++++++++++++도이치모터스++++++++++++++++++++2096/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:57,188 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:57,562 > 297
[DEBUG|collector_api.py:200] 2021-02-03 15:59:57,802 > ++++++++++++++동국산업++++++++++++++++++++2097/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:57,802 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:58,168 > 298
[DEBUG|collector_api.py:200] 2021-02-03 15:59:58,429 > ++++++++++++++동원개발++++++++++++++++++++2098/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:58,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:58,777 > 299
[DEBUG|collector_api.py:200] 2021-02-03 15:59:59,073 > ++++++++++++++동일금속++++++++++++++++++++2099/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:59,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:59,385 > 300
[DEBUG|collector_api.py:200] 2021-02-03 15:59:59,637 > ++++++++++++++동화기업++++++++++++++++++++2100/2888
[DEBUG|open_api.py:656] 2021-02-03 15:59:59,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 15:59:59,994 > 301
[DEBUG|collector_api.py:200] 2021-02-03 16:00:00,272 > ++++++++++++++드래곤플라이++++++++++++++++++++2101/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:00,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:00,602 > 302
[DEBUG|collector_api.py:200] 2021-02-03 16:00:00,856 > ++++++++++++++드림시큐리티++++++++++++++++++++2102/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:00,856 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:01,209 > 303
[DEBUG|collector_api.py:200] 2021-02-03 16:00:01,454 > ++++++++++++++디딤++++++++++++++++++++2103/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:01,455 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:01,817 > 304
[DEBUG|collector_api.py:200] 2021-02-03 16:00:02,078 > ++++++++++++++디와이피엔에프++++++++++++++++++++2104/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:02,078 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:02,424 > 305
[DEBUG|collector_api.py:200] 2021-02-03 16:00:02,668 > ++++++++++++++디지캡++++++++++++++++++++2105/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:02,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:03,031 > 306
[DEBUG|collector_api.py:200] 2021-02-03 16:00:03,277 > ++++++++++++++디지탈옵틱++++++++++++++++++++2106/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:03,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:03,639 > 307
[DEBUG|collector_api.py:200] 2021-02-03 16:00:03,884 > ++++++++++++++레드로버++++++++++++++++++++2107/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:03,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:04,247 > 308
[DEBUG|collector_api.py:200] 2021-02-03 16:00:04,493 > ++++++++++++++로보티즈++++++++++++++++++++2108/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:04,494 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:04,854 > 309
[DEBUG|collector_api.py:200] 2021-02-03 16:00:05,114 > ++++++++++++++로체시스템즈++++++++++++++++++++2109/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:05,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:05,463 > 310
[DEBUG|collector_api.py:200] 2021-02-03 16:00:05,760 > ++++++++++++++루멘스++++++++++++++++++++2110/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:05,761 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:06,070 > 311
[DEBUG|collector_api.py:200] 2021-02-03 16:00:06,315 > ++++++++++++++루트로닉++++++++++++++++++++2111/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:06,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:06,677 > 312
[DEBUG|collector_api.py:200] 2021-02-03 16:00:06,933 > ++++++++++++++리노공업++++++++++++++++++++2112/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:06,933 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:07,287 > 313
[DEBUG|collector_api.py:200] 2021-02-03 16:00:07,548 > ++++++++++++++마이더스AI++++++++++++++++++++2113/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:07,548 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:07,895 > 314
[DEBUG|collector_api.py:200] 2021-02-03 16:00:08,149 > ++++++++++++++마이크로디지탈++++++++++++++++++++2114/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:08,149 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:08,503 > 315
[DEBUG|collector_api.py:200] 2021-02-03 16:00:08,713 > ++++++++++++++마크로젠++++++++++++++++++++2115/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:08,713 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:09,111 > 316
[DEBUG|collector_api.py:200] 2021-02-03 16:00:09,361 > ++++++++++++++매커스++++++++++++++++++++2116/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:09,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:09,718 > 317
[DEBUG|collector_api.py:200] 2021-02-03 16:00:09,961 > ++++++++++++++메디아나++++++++++++++++++++2117/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:09,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:10,326 > 318
[DEBUG|collector_api.py:200] 2021-02-03 16:00:10,554 > ++++++++++++++멜파스++++++++++++++++++++2118/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:10,555 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:10,934 > 319
[DEBUG|collector_api.py:200] 2021-02-03 16:00:11,186 > ++++++++++++++모바일리더++++++++++++++++++++2119/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:11,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:11,541 > 320
[DEBUG|collector_api.py:200] 2021-02-03 16:00:11,784 > ++++++++++++++미래생명자원++++++++++++++++++++2120/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:11,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:12,148 > 321
[DEBUG|collector_api.py:200] 2021-02-03 16:00:12,393 > ++++++++++++++바른전자++++++++++++++++++++2121/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:12,393 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:12,754 > 322
[DEBUG|collector_api.py:200] 2021-02-03 16:00:13,000 > ++++++++++++++배럴++++++++++++++++++++2122/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:13,001 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:13,362 > 323
[DEBUG|collector_api.py:200] 2021-02-03 16:00:13,604 > ++++++++++++++백금T&A++++++++++++++++++++2123/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:13,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:13,970 > 324
[DEBUG|collector_api.py:200] 2021-02-03 16:00:14,219 > ++++++++++++++버킷스튜디오++++++++++++++++++++2124/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:14,219 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:14,578 > 325
[DEBUG|collector_api.py:200] 2021-02-03 16:00:14,819 > ++++++++++++++보성파워텍++++++++++++++++++++2125/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:14,819 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:15,185 > 326
[DEBUG|collector_api.py:200] 2021-02-03 16:00:15,459 > ++++++++++++++브이원텍++++++++++++++++++++2126/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:15,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:15,793 > 327
[DEBUG|collector_api.py:200] 2021-02-03 16:00:16,023 > ++++++++++++++브이티지엠피++++++++++++++++++++2127/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:16,023 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:16,401 > 328
[DEBUG|collector_api.py:200] 2021-02-03 16:00:16,634 > ++++++++++++++비비씨++++++++++++++++++++2128/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:16,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:17,009 > 329
[DEBUG|collector_api.py:200] 2021-02-03 16:00:17,168 > ++++++++++++++비씨월드제약++++++++++++++++++++2129/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:17,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:17,616 > 330
[DEBUG|collector_api.py:200] 2021-02-03 16:00:17,832 > ++++++++++++++비아트론++++++++++++++++++++2130/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:17,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:18,225 > 331
[DEBUG|collector_api.py:200] 2021-02-03 16:00:18,462 > ++++++++++++++비츠로시스++++++++++++++++++++2131/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:18,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:18,833 > 332
[DEBUG|collector_api.py:200] 2021-02-03 16:00:19,073 > ++++++++++++++빛샘전자++++++++++++++++++++2132/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:19,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:19,441 > 333
[DEBUG|collector_api.py:200] 2021-02-03 16:00:19,688 > ++++++++++++++삼기++++++++++++++++++++2133/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:19,688 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:20,050 > 334
[DEBUG|collector_api.py:200] 2021-02-03 16:00:20,305 > ++++++++++++++삼영이엔씨++++++++++++++++++++2134/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:20,305 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:20,659 > 335
[DEBUG|collector_api.py:200] 2021-02-03 16:00:20,916 > ++++++++++++++상상인이안제2호스팩++++++++++++++++++++2135/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:20,917 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:21,267 > 336
[DEBUG|collector_api.py:200] 2021-02-03 16:00:21,506 > ++++++++++++++상상인인더스트리++++++++++++++++++++2136/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:21,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:21,875 > 337
[DEBUG|collector_api.py:200] 2021-02-03 16:00:22,126 > ++++++++++++++서남++++++++++++++++++++2137/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:22,127 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:22,483 > 338
[DEBUG|collector_api.py:200] 2021-02-03 16:00:22,668 > ++++++++++++++서울리거++++++++++++++++++++2138/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:22,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:23,090 > 339
[DEBUG|collector_api.py:200] 2021-02-03 16:00:23,332 > ++++++++++++++서울제약++++++++++++++++++++2139/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:23,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:23,697 > 340
[DEBUG|collector_api.py:200] 2021-02-03 16:00:23,970 > ++++++++++++++서전기전++++++++++++++++++++2140/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:23,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:24,304 > 341
[DEBUG|collector_api.py:200] 2021-02-03 16:00:24,553 > ++++++++++++++서희건설++++++++++++++++++++2141/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:24,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:24,913 > 342
[DEBUG|collector_api.py:200] 2021-02-03 16:00:25,170 > ++++++++++++++세중++++++++++++++++++++2142/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:25,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:25,521 > 343
[DEBUG|collector_api.py:200] 2021-02-03 16:00:25,783 > ++++++++++++++셀트리온헬스케어++++++++++++++++++++2143/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:25,783 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:26,130 > 344
[DEBUG|collector_api.py:200] 2021-02-03 16:00:26,380 > ++++++++++++++솔브레인홀딩스++++++++++++++++++++2144/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:26,380 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:26,738 > 345
[DEBUG|collector_api.py:200] 2021-02-03 16:00:26,984 > ++++++++++++++솔트룩스++++++++++++++++++++2145/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:26,984 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:27,346 > 346
[DEBUG|collector_api.py:200] 2021-02-03 16:00:27,510 > ++++++++++++++쇼박스++++++++++++++++++++2146/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:27,510 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:27,953 > 347
[DEBUG|collector_api.py:200] 2021-02-03 16:00:28,201 > ++++++++++++++슈프리마아이디++++++++++++++++++++2147/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:28,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:28,560 > 348
[DEBUG|collector_api.py:200] 2021-02-03 16:00:28,764 > ++++++++++++++신신제약++++++++++++++++++++2148/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:28,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:29,166 > 349
[DEBUG|collector_api.py:200] 2021-02-03 16:00:29,410 > ++++++++++++++신영스팩6호++++++++++++++++++++2149/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:29,411 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:29,774 > 350
[DEBUG|collector_api.py:200] 2021-02-03 16:00:29,962 > ++++++++++++++신일제약++++++++++++++++++++2150/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:29,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:30,382 > 351
[DEBUG|collector_api.py:200] 2021-02-03 16:00:30,643 > ++++++++++++++싸이맥스++++++++++++++++++++2151/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:30,644 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:30,990 > 352
[DEBUG|collector_api.py:200] 2021-02-03 16:00:31,238 > ++++++++++++++썸에이지++++++++++++++++++++2152/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:31,239 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:31,598 > 353
[DEBUG|collector_api.py:200] 2021-02-03 16:00:31,859 > ++++++++++++++쏠리드++++++++++++++++++++2153/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:31,859 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:32,207 > 354
[DEBUG|collector_api.py:200] 2021-02-03 16:00:32,467 > ++++++++++++++씨아이에스++++++++++++++++++++2154/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:32,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:32,814 > 355
[DEBUG|collector_api.py:200] 2021-02-03 16:00:33,090 > ++++++++++++++씨에스베어링++++++++++++++++++++2155/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:33,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:33,422 > 356
[DEBUG|collector_api.py:200] 2021-02-03 16:00:33,618 > ++++++++++++++아난티++++++++++++++++++++2156/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:33,618 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:34,031 > 357
[DEBUG|collector_api.py:200] 2021-02-03 16:00:34,292 > ++++++++++++++아바코++++++++++++++++++++2157/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:34,293 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:34,639 > 358
[DEBUG|collector_api.py:200] 2021-02-03 16:00:34,899 > ++++++++++++++아세아텍++++++++++++++++++++2158/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:34,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:35,247 > 359
[DEBUG|collector_api.py:200] 2021-02-03 16:00:35,514 > ++++++++++++++아스트++++++++++++++++++++2159/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:35,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:35,854 > 360
[DEBUG|collector_api.py:200] 2021-02-03 16:00:36,114 > ++++++++++++++아이스크림에듀++++++++++++++++++++2160/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:36,115 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:36,463 > 361
[DEBUG|collector_api.py:200] 2021-02-03 16:00:36,668 > ++++++++++++++아이엠이연이++++++++++++++++++++2161/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:36,668 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:37,072 > 362
[DEBUG|collector_api.py:200] 2021-02-03 16:00:37,367 > ++++++++++++++아이텍++++++++++++++++++++2162/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:37,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:37,679 > 363
[DEBUG|collector_api.py:200] 2021-02-03 16:00:37,927 > ++++++++++++++아이티엠반도체++++++++++++++++++++2163/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:37,928 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:38,286 > 364
[DEBUG|collector_api.py:200] 2021-02-03 16:00:38,484 > ++++++++++++++알로이스++++++++++++++++++++2164/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:38,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:38,895 > 365
[DEBUG|collector_api.py:200] 2021-02-03 16:00:39,136 > ++++++++++++++양지사++++++++++++++++++++2165/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:39,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:39,502 > 366
[DEBUG|collector_api.py:200] 2021-02-03 16:00:39,764 > ++++++++++++++얼라인드++++++++++++++++++++2166/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:39,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:40,111 > 367
[DEBUG|collector_api.py:200] 2021-02-03 16:00:40,359 > ++++++++++++++에스씨디++++++++++++++++++++2167/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:40,360 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:40,719 > 368
[DEBUG|collector_api.py:200] 2021-02-03 16:00:40,980 > ++++++++++++++에스에프에이++++++++++++++++++++2168/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:40,980 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:41,328 > 369
[DEBUG|collector_api.py:200] 2021-02-03 16:00:41,607 > ++++++++++++++에스텍++++++++++++++++++++2169/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:41,607 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:41,936 > 370
[DEBUG|collector_api.py:200] 2021-02-03 16:00:42,196 > ++++++++++++++에스폴리텍++++++++++++++++++++2170/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:42,196 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:42,545 > 371
[DEBUG|collector_api.py:200] 2021-02-03 16:00:42,799 > ++++++++++++++에스피시스템스++++++++++++++++++++2171/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:42,800 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:43,153 > 372
[DEBUG|collector_api.py:200] 2021-02-03 16:00:43,362 > ++++++++++++++에이디테크놀로지++++++++++++++++++++2172/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:43,362 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:43,761 > 373
[DEBUG|collector_api.py:200] 2021-02-03 16:00:43,994 > ++++++++++++++에이에프더블류++++++++++++++++++++2173/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:43,995 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:44,367 > 374
[DEBUG|collector_api.py:200] 2021-02-03 16:00:44,592 > ++++++++++++++에이치엘비생명과학++++++++++++++++++++2174/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:44,593 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:44,975 > 375
[DEBUG|collector_api.py:200] 2021-02-03 16:00:45,230 > ++++++++++++++에이치엘비파워++++++++++++++++++++2175/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:45,230 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:45,583 > 376
[DEBUG|collector_api.py:200] 2021-02-03 16:00:45,832 > ++++++++++++++에이치엠씨제5호스팩++++++++++++++++++++2176/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:45,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:46,190 > 377
[DEBUG|collector_api.py:200] 2021-02-03 16:00:46,354 > ++++++++++++++에이트원++++++++++++++++++++2177/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:46,354 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:46,798 > 378
[DEBUG|collector_api.py:200] 2021-02-03 16:00:47,052 > ++++++++++++++에치에프알++++++++++++++++++++2178/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:47,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:47,406 > 379
[DEBUG|collector_api.py:200] 2021-02-03 16:00:47,659 > ++++++++++++++엔에이치스팩14호++++++++++++++++++++2179/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:47,659 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:48,015 > 380
[DEBUG|collector_api.py:200] 2021-02-03 16:00:48,233 > ++++++++++++++엔에이치스팩16호++++++++++++++++++++2180/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:48,234 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:48,624 > 381
[DEBUG|collector_api.py:200] 2021-02-03 16:00:48,796 > ++++++++++++++엔젠바이오++++++++++++++++++++2181/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:48,797 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:49,231 > 382
[DEBUG|collector_api.py:200] 2021-02-03 16:00:49,393 > ++++++++++++++엔투텍++++++++++++++++++++2182/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:49,393 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:49,838 > 383
[DEBUG|collector_api.py:200] 2021-02-03 16:00:50,091 > ++++++++++++++엘앤에프++++++++++++++++++++2183/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:50,092 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:50,446 > 384
[DEBUG|collector_api.py:200] 2021-02-03 16:00:50,731 > ++++++++++++++엘티씨++++++++++++++++++++2184/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:50,731 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:51,054 > 385
[DEBUG|collector_api.py:200] 2021-02-03 16:00:51,332 > ++++++++++++++엠투엔++++++++++++++++++++2185/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:51,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:51,662 > 386
[DEBUG|collector_api.py:200] 2021-02-03 16:00:51,924 > ++++++++++++++영우디에스피++++++++++++++++++++2186/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:51,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:52,270 > 387
[DEBUG|collector_api.py:200] 2021-02-03 16:00:52,517 > ++++++++++++++영풍정밀++++++++++++++++++++2187/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:52,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:52,879 > 388
[DEBUG|collector_api.py:200] 2021-02-03 16:00:53,171 > ++++++++++++++예선테크++++++++++++++++++++2188/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:53,171 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:53,487 > 389
[DEBUG|collector_api.py:200] 2021-02-03 16:00:53,718 > ++++++++++++++오로라++++++++++++++++++++2189/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:53,719 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:54,096 > 390
[DEBUG|collector_api.py:200] 2021-02-03 16:00:54,366 > ++++++++++++++오리엔트정공++++++++++++++++++++2190/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:54,367 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:54,705 > 391
[DEBUG|collector_api.py:200] 2021-02-03 16:00:54,944 > ++++++++++++++오스코텍++++++++++++++++++++2191/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:54,945 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:55,313 > 392
[DEBUG|collector_api.py:200] 2021-02-03 16:00:55,546 > ++++++++++++++오파스넷++++++++++++++++++++2192/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:55,546 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:55,920 > 393
[DEBUG|collector_api.py:200] 2021-02-03 16:00:56,187 > ++++++++++++++올릭스++++++++++++++++++++2193/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:56,187 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:56,528 > 394
[DEBUG|collector_api.py:200] 2021-02-03 16:00:56,769 > ++++++++++++++옴니시스템++++++++++++++++++++2194/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:56,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:57,136 > 395
[DEBUG|collector_api.py:200] 2021-02-03 16:00:57,389 > ++++++++++++++와토스코리아++++++++++++++++++++2195/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:57,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:57,744 > 396
[DEBUG|collector_api.py:200] 2021-02-03 16:00:57,992 > ++++++++++++++우리산업++++++++++++++++++++2196/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:57,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:58,352 > 397
[DEBUG|collector_api.py:200] 2021-02-03 16:00:58,601 > ++++++++++++++우리이앤엘++++++++++++++++++++2197/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:58,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:58,961 > 398
[DEBUG|collector_api.py:200] 2021-02-03 16:00:59,228 > ++++++++++++++우원개발++++++++++++++++++++2198/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:59,229 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:00:59,569 > 399
[DEBUG|collector_api.py:200] 2021-02-03 16:00:59,834 > ++++++++++++++위즈코프++++++++++++++++++++2199/2888
[DEBUG|open_api.py:656] 2021-02-03 16:00:59,835 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:00,177 > 400
[DEBUG|collector_api.py:200] 2021-02-03 16:01:00,437 > ++++++++++++++윈팩++++++++++++++++++++2200/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:00,438 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:00,784 > 401
[DEBUG|collector_api.py:200] 2021-02-03 16:01:01,060 > ++++++++++++++유비케어++++++++++++++++++++2201/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:01,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:01,391 > 402
[DEBUG|collector_api.py:200] 2021-02-03 16:01:01,639 > ++++++++++++++유안타제3호스팩++++++++++++++++++++2202/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:01,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:01,999 > 403
[DEBUG|collector_api.py:200] 2021-02-03 16:01:02,241 > ++++++++++++++유앤아이++++++++++++++++++++2203/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:02,241 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:02,605 > 404
[DEBUG|collector_api.py:200] 2021-02-03 16:01:02,842 > ++++++++++++++유진스팩4호++++++++++++++++++++2204/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:02,842 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:03,213 > 405
[DEBUG|collector_api.py:200] 2021-02-03 16:01:03,420 > ++++++++++++++이노메트리++++++++++++++++++++2205/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:03,421 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:03,822 > 406
[DEBUG|collector_api.py:200] 2021-02-03 16:01:04,045 > ++++++++++++++이노테라피++++++++++++++++++++2206/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:04,045 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:04,428 > 407
[DEBUG|collector_api.py:200] 2021-02-03 16:01:04,649 > ++++++++++++++이디티++++++++++++++++++++2207/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:04,649 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:05,037 > 408
[DEBUG|collector_api.py:200] 2021-02-03 16:01:05,283 > ++++++++++++++이루다++++++++++++++++++++2208/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:05,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:05,645 > 409
[DEBUG|collector_api.py:200] 2021-02-03 16:01:05,811 > ++++++++++++++이매진아시아++++++++++++++++++++2209/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:05,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:06,255 > 410
[DEBUG|collector_api.py:200] 2021-02-03 16:01:06,508 > ++++++++++++++이베스트이안스팩1호++++++++++++++++++++2210/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:06,509 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:06,862 > 411
[DEBUG|collector_api.py:200] 2021-02-03 16:01:07,090 > ++++++++++++++이씨에스++++++++++++++++++++2211/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:07,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:07,472 > 412
[DEBUG|collector_api.py:200] 2021-02-03 16:01:07,742 > ++++++++++++++이엔드디++++++++++++++++++++2212/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:07,742 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:08,081 > 413
[DEBUG|collector_api.py:200] 2021-02-03 16:01:08,323 > ++++++++++++++이오테크닉스++++++++++++++++++++2213/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:08,324 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:08,688 > 414
[DEBUG|collector_api.py:200] 2021-02-03 16:01:08,969 > ++++++++++++++인바이오++++++++++++++++++++2214/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:08,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:09,296 > 415
[DEBUG|collector_api.py:200] 2021-02-03 16:01:09,465 > ++++++++++++++인터로조++++++++++++++++++++2215/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:09,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:09,904 > 416
[DEBUG|collector_api.py:200] 2021-02-03 16:01:10,154 > ++++++++++++++인화정공++++++++++++++++++++2216/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:10,155 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:10,513 > 417
[DEBUG|collector_api.py:200] 2021-02-03 16:01:10,771 > ++++++++++++++자연과환경++++++++++++++++++++2217/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:10,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:11,119 > 418
[DEBUG|collector_api.py:200] 2021-02-03 16:01:11,386 > ++++++++++++++정산애강++++++++++++++++++++2218/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:11,386 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:11,727 > 419
[DEBUG|collector_api.py:200] 2021-02-03 16:01:11,996 > ++++++++++++++제이브이엠++++++++++++++++++++2219/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:11,997 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:12,336 > 420
[DEBUG|collector_api.py:200] 2021-02-03 16:01:12,582 > ++++++++++++++제이엔케이히터++++++++++++++++++++2220/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:12,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:12,944 > 421
[DEBUG|collector_api.py:200] 2021-02-03 16:01:13,203 > ++++++++++++++제일테크노스++++++++++++++++++++2221/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:13,203 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:13,553 > 422
[DEBUG|collector_api.py:200] 2021-02-03 16:01:13,804 > ++++++++++++++제테마++++++++++++++++++++2222/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:13,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:14,161 > 423
[DEBUG|collector_api.py:200] 2021-02-03 16:01:14,376 > ++++++++++++++지노믹트리++++++++++++++++++++2223/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:14,376 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:14,769 > 424
[DEBUG|collector_api.py:200] 2021-02-03 16:01:15,017 > ++++++++++++++지어소프트++++++++++++++++++++2224/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:15,017 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:15,376 > 425
[DEBUG|collector_api.py:200] 2021-02-03 16:01:15,622 > ++++++++++++++지에스이++++++++++++++++++++2225/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:15,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:15,985 > 426
[DEBUG|collector_api.py:200] 2021-02-03 16:01:16,241 > ++++++++++++++지엔원에너지++++++++++++++++++++2226/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:16,242 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:16,593 > 427
[DEBUG|collector_api.py:200] 2021-02-03 16:01:16,840 > ++++++++++++++지와이커머스++++++++++++++++++++2227/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:16,840 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:17,199 > 428
[INFO|collector_api.py:445] 2021-02-03 16:01:17,344 > 111820 지와이커머스의 액면분할/증자 등의 이유로 수정주가가 달라져서 처음부터 다시 콜렉팅
[INFO|collector_api.py:447] 2021-02-03 16:01:17,344 > daily_craw와 min_craw 삭제 중..
[INFO|collector_api.py:455] 2021-02-03 16:01:17,380 > 삭제 완료
[DEBUG|open_api.py:656] 2021-02-03 16:01:17,381 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:17,807 > 429
[DEBUG|open_api.py:696] 2021-02-03 16:01:17,924 > 지와이커머스 테이블이 daily_craw db 에 없다. 새로 생성! 
[DEBUG|open_api.py:1124] 2021-02-03 16:01:18,415 > 430
[DEBUG|open_api.py:1124] 2021-02-03 16:01:19,022 > 431
[DEBUG|open_api.py:1124] 2021-02-03 16:01:19,630 > 432
[DEBUG|open_api.py:1124] 2021-02-03 16:01:20,238 > 433
[INFO|collector_api.py:557] 2021-02-03 16:01:20,977 > daily_craw.지와이커머스 업데이트 완료 111820
[INFO|collector_api.py:558] 2021-02-03 16:01:20,977 > daily_buy_list 업데이트 중..
[INFO|collector_api.py:565] 2021-02-03 16:01:20,994 > 111820 지와이커머스 - daily_buy_list.`20190102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,042 > 111820 지와이커머스 - daily_buy_list.`20190103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,075 > 111820 지와이커머스 - daily_buy_list.`20190104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,106 > 111820 지와이커머스 - daily_buy_list.`20190107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,139 > 111820 지와이커머스 - daily_buy_list.`20190108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,171 > 111820 지와이커머스 - daily_buy_list.`20190109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,201 > 111820 지와이커머스 - daily_buy_list.`20190110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,234 > 111820 지와이커머스 - daily_buy_list.`20190111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,268 > 111820 지와이커머스 - daily_buy_list.`20190114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,300 > 111820 지와이커머스 - daily_buy_list.`20190115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,333 > 111820 지와이커머스 - daily_buy_list.`20190116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,366 > 111820 지와이커머스 - daily_buy_list.`20190117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,399 > 111820 지와이커머스 - daily_buy_list.`20190118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,430 > 111820 지와이커머스 - daily_buy_list.`20190121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,463 > 111820 지와이커머스 - daily_buy_list.`20190122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,496 > 111820 지와이커머스 - daily_buy_list.`20190123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,526 > 111820 지와이커머스 - daily_buy_list.`20190124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,559 > 111820 지와이커머스 - daily_buy_list.`20190125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,591 > 111820 지와이커머스 - daily_buy_list.`20190128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,623 > 111820 지와이커머스 - daily_buy_list.`20190129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,656 > 111820 지와이커머스 - daily_buy_list.`20190130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,725 > 111820 지와이커머스 - daily_buy_list.`20190131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,793 > 111820 지와이커머스 - daily_buy_list.`20190201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,863 > 111820 지와이커머스 - daily_buy_list.`20190207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,909 > 111820 지와이커머스 - daily_buy_list.`20190208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:21,959 > 111820 지와이커머스 - daily_buy_list.`20190211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,017 > 111820 지와이커머스 - daily_buy_list.`20190212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,056 > 111820 지와이커머스 - daily_buy_list.`20190213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,094 > 111820 지와이커머스 - daily_buy_list.`20190214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,131 > 111820 지와이커머스 - daily_buy_list.`20190215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,161 > 111820 지와이커머스 - daily_buy_list.`20190218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,194 > 111820 지와이커머스 - daily_buy_list.`20190219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,226 > 111820 지와이커머스 - daily_buy_list.`20190220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,256 > 111820 지와이커머스 - daily_buy_list.`20190221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,289 > 111820 지와이커머스 - daily_buy_list.`20190222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,324 > 111820 지와이커머스 - daily_buy_list.`20190225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,356 > 111820 지와이커머스 - daily_buy_list.`20190226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,388 > 111820 지와이커머스 - daily_buy_list.`20190227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,420 > 111820 지와이커머스 - daily_buy_list.`20190228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,453 > 111820 지와이커머스 - daily_buy_list.`20190304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,483 > 111820 지와이커머스 - daily_buy_list.`20190305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,516 > 111820 지와이커머스 - daily_buy_list.`20190306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,546 > 111820 지와이커머스 - daily_buy_list.`20190307` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,579 > 111820 지와이커머스 - daily_buy_list.`20190308` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,614 > 111820 지와이커머스 - daily_buy_list.`20190311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,645 > 111820 지와이커머스 - daily_buy_list.`20190312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,697 > 111820 지와이커머스 - daily_buy_list.`20190313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,752 > 111820 지와이커머스 - daily_buy_list.`20190314` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,804 > 111820 지와이커머스 - daily_buy_list.`20190315` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,853 > 111820 지와이커머스 - daily_buy_list.`20190318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,906 > 111820 지와이커머스 - daily_buy_list.`20190319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,942 > 111820 지와이커머스 - daily_buy_list.`20190320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:22,972 > 111820 지와이커머스 - daily_buy_list.`20190321` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,004 > 111820 지와이커머스 - daily_buy_list.`20190322` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,038 > 111820 지와이커머스 - daily_buy_list.`20190325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,068 > 111820 지와이커머스 - daily_buy_list.`20190326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,097 > 111820 지와이커머스 - daily_buy_list.`20190327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,132 > 111820 지와이커머스 - daily_buy_list.`20190328` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,165 > 111820 지와이커머스 - daily_buy_list.`20190329` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,199 > 111820 지와이커머스 - daily_buy_list.`20190401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,230 > 111820 지와이커머스 - daily_buy_list.`20190402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,268 > 111820 지와이커머스 - daily_buy_list.`20190403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,303 > 111820 지와이커머스 - daily_buy_list.`20190404` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,337 > 111820 지와이커머스 - daily_buy_list.`20190405` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,371 > 111820 지와이커머스 - daily_buy_list.`20190408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,408 > 111820 지와이커머스 - daily_buy_list.`20190409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,443 > 111820 지와이커머스 - daily_buy_list.`20190410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,476 > 111820 지와이커머스 - daily_buy_list.`20190411` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,507 > 111820 지와이커머스 - daily_buy_list.`20190412` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,537 > 111820 지와이커머스 - daily_buy_list.`20190415` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,568 > 111820 지와이커머스 - daily_buy_list.`20190416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,603 > 111820 지와이커머스 - daily_buy_list.`20190417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,634 > 111820 지와이커머스 - daily_buy_list.`20190418` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,696 > 111820 지와이커머스 - daily_buy_list.`20190419` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,756 > 111820 지와이커머스 - daily_buy_list.`20190422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,809 > 111820 지와이커머스 - daily_buy_list.`20190423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,859 > 111820 지와이커머스 - daily_buy_list.`20190424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,914 > 111820 지와이커머스 - daily_buy_list.`20190425` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:23,967 > 111820 지와이커머스 - daily_buy_list.`20190426` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,006 > 111820 지와이커머스 - daily_buy_list.`20190429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,046 > 111820 지와이커머스 - daily_buy_list.`20190430` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,076 > 111820 지와이커머스 - daily_buy_list.`20190502` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,113 > 111820 지와이커머스 - daily_buy_list.`20190503` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,144 > 111820 지와이커머스 - daily_buy_list.`20190507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,174 > 111820 지와이커머스 - daily_buy_list.`20190508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,205 > 111820 지와이커머스 - daily_buy_list.`20190509` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,234 > 111820 지와이커머스 - daily_buy_list.`20190510` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,267 > 111820 지와이커머스 - daily_buy_list.`20190513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,300 > 111820 지와이커머스 - daily_buy_list.`20190514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,335 > 111820 지와이커머스 - daily_buy_list.`20190515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,368 > 111820 지와이커머스 - daily_buy_list.`20190516` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,399 > 111820 지와이커머스 - daily_buy_list.`20190517` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,431 > 111820 지와이커머스 - daily_buy_list.`20190520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,468 > 111820 지와이커머스 - daily_buy_list.`20190521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,500 > 111820 지와이커머스 - daily_buy_list.`20190522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,534 > 111820 지와이커머스 - daily_buy_list.`20190523` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,565 > 111820 지와이커머스 - daily_buy_list.`20190524` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,607 > 111820 지와이커머스 - daily_buy_list.`20190527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,665 > 111820 지와이커머스 - daily_buy_list.`20190528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,726 > 111820 지와이커머스 - daily_buy_list.`20190529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,775 > 111820 지와이커머스 - daily_buy_list.`20190530` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,829 > 111820 지와이커머스 - daily_buy_list.`20190531` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,874 > 111820 지와이커머스 - daily_buy_list.`20190603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,938 > 111820 지와이커머스 - daily_buy_list.`20190604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:24,987 > 111820 지와이커머스 - daily_buy_list.`20190605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,023 > 111820 지와이커머스 - daily_buy_list.`20190607` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,058 > 111820 지와이커머스 - daily_buy_list.`20190610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,090 > 111820 지와이커머스 - daily_buy_list.`20190611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,124 > 111820 지와이커머스 - daily_buy_list.`20190612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,161 > 111820 지와이커머스 - daily_buy_list.`20190613` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,196 > 111820 지와이커머스 - daily_buy_list.`20190614` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,228 > 111820 지와이커머스 - daily_buy_list.`20190617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,258 > 111820 지와이커머스 - daily_buy_list.`20190618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,290 > 111820 지와이커머스 - daily_buy_list.`20190619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,324 > 111820 지와이커머스 - daily_buy_list.`20190620` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,358 > 111820 지와이커머스 - daily_buy_list.`20190621` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,392 > 111820 지와이커머스 - daily_buy_list.`20190624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,425 > 111820 지와이커머스 - daily_buy_list.`20190625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,455 > 111820 지와이커머스 - daily_buy_list.`20190626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,488 > 111820 지와이커머스 - daily_buy_list.`20190627` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,521 > 111820 지와이커머스 - daily_buy_list.`20190628` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,554 > 111820 지와이커머스 - daily_buy_list.`20190701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,584 > 111820 지와이커머스 - daily_buy_list.`20190702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,617 > 111820 지와이커머스 - daily_buy_list.`20190703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,651 > 111820 지와이커머스 - daily_buy_list.`20190704` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,741 > 111820 지와이커머스 - daily_buy_list.`20190705` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,785 > 111820 지와이커머스 - daily_buy_list.`20190708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,843 > 111820 지와이커머스 - daily_buy_list.`20190709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,884 > 111820 지와이커머스 - daily_buy_list.`20190710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,922 > 111820 지와이커머스 - daily_buy_list.`20190711` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:25,962 > 111820 지와이커머스 - daily_buy_list.`20190712` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,017 > 111820 지와이커머스 - daily_buy_list.`20190715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,051 > 111820 지와이커머스 - daily_buy_list.`20190716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,083 > 111820 지와이커머스 - daily_buy_list.`20190717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,113 > 111820 지와이커머스 - daily_buy_list.`20190718` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,144 > 111820 지와이커머스 - daily_buy_list.`20190719` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,177 > 111820 지와이커머스 - daily_buy_list.`20190722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,211 > 111820 지와이커머스 - daily_buy_list.`20190723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,242 > 111820 지와이커머스 - daily_buy_list.`20190724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,275 > 111820 지와이커머스 - daily_buy_list.`20190725` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,306 > 111820 지와이커머스 - daily_buy_list.`20190726` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,339 > 111820 지와이커머스 - daily_buy_list.`20190729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,373 > 111820 지와이커머스 - daily_buy_list.`20190730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,407 > 111820 지와이커머스 - daily_buy_list.`20190731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,438 > 111820 지와이커머스 - daily_buy_list.`20190801` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,473 > 111820 지와이커머스 - daily_buy_list.`20190802` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,505 > 111820 지와이커머스 - daily_buy_list.`20190805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,536 > 111820 지와이커머스 - daily_buy_list.`20190806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,568 > 111820 지와이커머스 - daily_buy_list.`20190807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,602 > 111820 지와이커머스 - daily_buy_list.`20190808` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,632 > 111820 지와이커머스 - daily_buy_list.`20190809` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,669 > 111820 지와이커머스 - daily_buy_list.`20190812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,716 > 111820 지와이커머스 - daily_buy_list.`20190813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,760 > 111820 지와이커머스 - daily_buy_list.`20190814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,809 > 111820 지와이커머스 - daily_buy_list.`20190816` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,858 > 111820 지와이커머스 - daily_buy_list.`20190819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,907 > 111820 지와이커머스 - daily_buy_list.`20190820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:26,962 > 111820 지와이커머스 - daily_buy_list.`20190821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,002 > 111820 지와이커머스 - daily_buy_list.`20190822` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,041 > 111820 지와이커머스 - daily_buy_list.`20190823` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,079 > 111820 지와이커머스 - daily_buy_list.`20190826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,116 > 111820 지와이커머스 - daily_buy_list.`20190827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,146 > 111820 지와이커머스 - daily_buy_list.`20190828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,178 > 111820 지와이커머스 - daily_buy_list.`20190829` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,209 > 111820 지와이커머스 - daily_buy_list.`20190830` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,242 > 111820 지와이커머스 - daily_buy_list.`20190902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,277 > 111820 지와이커머스 - daily_buy_list.`20190903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,313 > 111820 지와이커머스 - daily_buy_list.`20190904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,345 > 111820 지와이커머스 - daily_buy_list.`20190905` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,379 > 111820 지와이커머스 - daily_buy_list.`20190906` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,425 > 111820 지와이커머스 - daily_buy_list.`20190909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,465 > 111820 지와이커머스 - daily_buy_list.`20190910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,505 > 111820 지와이커머스 - daily_buy_list.`20190911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,536 > 111820 지와이커머스 - daily_buy_list.`20190916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,568 > 111820 지와이커머스 - daily_buy_list.`20190917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,601 > 111820 지와이커머스 - daily_buy_list.`20190918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,632 > 111820 지와이커머스 - daily_buy_list.`20190919` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,704 > 111820 지와이커머스 - daily_buy_list.`20190920` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,777 > 111820 지와이커머스 - daily_buy_list.`20190923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,842 > 111820 지와이커머스 - daily_buy_list.`20190924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,886 > 111820 지와이커머스 - daily_buy_list.`20190925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,926 > 111820 지와이커머스 - daily_buy_list.`20190926` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:27,969 > 111820 지와이커머스 - daily_buy_list.`20190927` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,002 > 111820 지와이커머스 - daily_buy_list.`20190930` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,033 > 111820 지와이커머스 - daily_buy_list.`20191001` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,068 > 111820 지와이커머스 - daily_buy_list.`20191002` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,099 > 111820 지와이커머스 - daily_buy_list.`20191004` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,134 > 111820 지와이커머스 - daily_buy_list.`20191007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,168 > 111820 지와이커머스 - daily_buy_list.`20191008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,198 > 111820 지와이커머스 - daily_buy_list.`20191010` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,230 > 111820 지와이커머스 - daily_buy_list.`20191011` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,263 > 111820 지와이커머스 - daily_buy_list.`20191014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,297 > 111820 지와이커머스 - daily_buy_list.`20191015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,330 > 111820 지와이커머스 - daily_buy_list.`20191016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,362 > 111820 지와이커머스 - daily_buy_list.`20191017` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,396 > 111820 지와이커머스 - daily_buy_list.`20191018` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,429 > 111820 지와이커머스 - daily_buy_list.`20191021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,465 > 111820 지와이커머스 - daily_buy_list.`20191022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,498 > 111820 지와이커머스 - daily_buy_list.`20191023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,529 > 111820 지와이커머스 - daily_buy_list.`20191024` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,561 > 111820 지와이커머스 - daily_buy_list.`20191025` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,592 > 111820 지와이커머스 - daily_buy_list.`20191028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,625 > 111820 지와이커머스 - daily_buy_list.`20191029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,666 > 111820 지와이커머스 - daily_buy_list.`20191030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,714 > 111820 지와이커머스 - daily_buy_list.`20191031` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,769 > 111820 지와이커머스 - daily_buy_list.`20191101` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,813 > 111820 지와이커머스 - daily_buy_list.`20191104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,860 > 111820 지와이커머스 - daily_buy_list.`20191105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,906 > 111820 지와이커머스 - daily_buy_list.`20191106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:28,956 > 111820 지와이커머스 - daily_buy_list.`20191107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,000 > 111820 지와이커머스 - daily_buy_list.`20191108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,035 > 111820 지와이커머스 - daily_buy_list.`20191111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,068 > 111820 지와이커머스 - daily_buy_list.`20191112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,100 > 111820 지와이커머스 - daily_buy_list.`20191113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,132 > 111820 지와이커머스 - daily_buy_list.`20191114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,167 > 111820 지와이커머스 - daily_buy_list.`20191115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,198 > 111820 지와이커머스 - daily_buy_list.`20191118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,229 > 111820 지와이커머스 - daily_buy_list.`20191119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,261 > 111820 지와이커머스 - daily_buy_list.`20191120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,295 > 111820 지와이커머스 - daily_buy_list.`20191121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,325 > 111820 지와이커머스 - daily_buy_list.`20191122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,356 > 111820 지와이커머스 - daily_buy_list.`20191125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,393 > 111820 지와이커머스 - daily_buy_list.`20191126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,424 > 111820 지와이커머스 - daily_buy_list.`20191127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,456 > 111820 지와이커머스 - daily_buy_list.`20191128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,490 > 111820 지와이커머스 - daily_buy_list.`20191129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,520 > 111820 지와이커머스 - daily_buy_list.`20191202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,552 > 111820 지와이커머스 - daily_buy_list.`20191203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,583 > 111820 지와이커머스 - daily_buy_list.`20191204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,616 > 111820 지와이커머스 - daily_buy_list.`20191205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,649 > 111820 지와이커머스 - daily_buy_list.`20191206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,722 > 111820 지와이커머스 - daily_buy_list.`20191209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,779 > 111820 지와이커머스 - daily_buy_list.`20191210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,859 > 111820 지와이커머스 - daily_buy_list.`20191211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,900 > 111820 지와이커머스 - daily_buy_list.`20191212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,934 > 111820 지와이커머스 - daily_buy_list.`20191213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:29,966 > 111820 지와이커머스 - daily_buy_list.`20191216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,005 > 111820 지와이커머스 - daily_buy_list.`20191217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,037 > 111820 지와이커머스 - daily_buy_list.`20191218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,068 > 111820 지와이커머스 - daily_buy_list.`20191219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,106 > 111820 지와이커머스 - daily_buy_list.`20191220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,153 > 111820 지와이커머스 - daily_buy_list.`20191223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,201 > 111820 지와이커머스 - daily_buy_list.`20191224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,231 > 111820 지와이커머스 - daily_buy_list.`20191226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,263 > 111820 지와이커머스 - daily_buy_list.`20191227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,295 > 111820 지와이커머스 - daily_buy_list.`20191230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,325 > 111820 지와이커머스 - daily_buy_list.`20200102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,355 > 111820 지와이커머스 - daily_buy_list.`20200103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,385 > 111820 지와이커머스 - daily_buy_list.`20200106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,418 > 111820 지와이커머스 - daily_buy_list.`20200107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,451 > 111820 지와이커머스 - daily_buy_list.`20200108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,482 > 111820 지와이커머스 - daily_buy_list.`20200109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,516 > 111820 지와이커머스 - daily_buy_list.`20200110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,548 > 111820 지와이커머스 - daily_buy_list.`20200113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,583 > 111820 지와이커머스 - daily_buy_list.`20200114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,618 > 111820 지와이커머스 - daily_buy_list.`20200115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,651 > 111820 지와이커머스 - daily_buy_list.`20200116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,710 > 111820 지와이커머스 - daily_buy_list.`20200117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,765 > 111820 지와이커머스 - daily_buy_list.`20200120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,809 > 111820 지와이커머스 - daily_buy_list.`20200121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,862 > 111820 지와이커머스 - daily_buy_list.`20200122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,912 > 111820 지와이커머스 - daily_buy_list.`20200123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:30,966 > 111820 지와이커머스 - daily_buy_list.`20200128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,019 > 111820 지와이커머스 - daily_buy_list.`20200129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,059 > 111820 지와이커머스 - daily_buy_list.`20200130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,095 > 111820 지와이커머스 - daily_buy_list.`20200131` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,128 > 111820 지와이커머스 - daily_buy_list.`20200203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,161 > 111820 지와이커머스 - daily_buy_list.`20200204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,191 > 111820 지와이커머스 - daily_buy_list.`20200205` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,222 > 111820 지와이커머스 - daily_buy_list.`20200206` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,253 > 111820 지와이커머스 - daily_buy_list.`20200207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,286 > 111820 지와이커머스 - daily_buy_list.`20200210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,318 > 111820 지와이커머스 - daily_buy_list.`20200211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,348 > 111820 지와이커머스 - daily_buy_list.`20200212` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,379 > 111820 지와이커머스 - daily_buy_list.`20200213` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,411 > 111820 지와이커머스 - daily_buy_list.`20200214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,444 > 111820 지와이커머스 - daily_buy_list.`20200217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,477 > 111820 지와이커머스 - daily_buy_list.`20200218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,509 > 111820 지와이커머스 - daily_buy_list.`20200219` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,544 > 111820 지와이커머스 - daily_buy_list.`20200220` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,576 > 111820 지와이커머스 - daily_buy_list.`20200221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,608 > 111820 지와이커머스 - daily_buy_list.`20200224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,638 > 111820 지와이커머스 - daily_buy_list.`20200225` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,688 > 111820 지와이커머스 - daily_buy_list.`20200226` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,730 > 111820 지와이커머스 - daily_buy_list.`20200227` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,774 > 111820 지와이커머스 - daily_buy_list.`20200228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,817 > 111820 지와이커머스 - daily_buy_list.`20200302` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,854 > 111820 지와이커머스 - daily_buy_list.`20200303` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,906 > 111820 지와이커머스 - daily_buy_list.`20200304` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,941 > 111820 지와이커머스 - daily_buy_list.`20200305` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:31,975 > 111820 지와이커머스 - daily_buy_list.`20200306` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,009 > 111820 지와이커머스 - daily_buy_list.`20200309` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,041 > 111820 지와이커머스 - daily_buy_list.`20200310` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,073 > 111820 지와이커머스 - daily_buy_list.`20200311` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,112 > 111820 지와이커머스 - daily_buy_list.`20200312` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,161 > 111820 지와이커머스 - daily_buy_list.`20200313` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,193 > 111820 지와이커머스 - daily_buy_list.`20200316` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,225 > 111820 지와이커머스 - daily_buy_list.`20200317` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,256 > 111820 지와이커머스 - daily_buy_list.`20200318` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,286 > 111820 지와이커머스 - daily_buy_list.`20200319` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,322 > 111820 지와이커머스 - daily_buy_list.`20200320` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,353 > 111820 지와이커머스 - daily_buy_list.`20200323` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,386 > 111820 지와이커머스 - daily_buy_list.`20200324` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,420 > 111820 지와이커머스 - daily_buy_list.`20200325` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,453 > 111820 지와이커머스 - daily_buy_list.`20200326` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,484 > 111820 지와이커머스 - daily_buy_list.`20200327` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,516 > 111820 지와이커머스 - daily_buy_list.`20200330` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,550 > 111820 지와이커머스 - daily_buy_list.`20200331` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,582 > 111820 지와이커머스 - daily_buy_list.`20200401` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,613 > 111820 지와이커머스 - daily_buy_list.`20200402` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,649 > 111820 지와이커머스 - daily_buy_list.`20200403` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,711 > 111820 지와이커머스 - daily_buy_list.`20200406` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,761 > 111820 지와이커머스 - daily_buy_list.`20200407` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,800 > 111820 지와이커머스 - daily_buy_list.`20200408` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,857 > 111820 지와이커머스 - daily_buy_list.`20200409` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,902 > 111820 지와이커머스 - daily_buy_list.`20200410` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,950 > 111820 지와이커머스 - daily_buy_list.`20200413` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:32,998 > 111820 지와이커머스 - daily_buy_list.`20200414` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,036 > 111820 지와이커머스 - daily_buy_list.`20200416` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,072 > 111820 지와이커머스 - daily_buy_list.`20200417` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,104 > 111820 지와이커머스 - daily_buy_list.`20200420` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,135 > 111820 지와이커머스 - daily_buy_list.`20200421` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,168 > 111820 지와이커머스 - daily_buy_list.`20200422` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,204 > 111820 지와이커머스 - daily_buy_list.`20200423` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,249 > 111820 지와이커머스 - daily_buy_list.`20200424` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,293 > 111820 지와이커머스 - daily_buy_list.`20200427` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,336 > 111820 지와이커머스 - daily_buy_list.`20200428` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,369 > 111820 지와이커머스 - daily_buy_list.`20200429` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,401 > 111820 지와이커머스 - daily_buy_list.`20200504` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,432 > 111820 지와이커머스 - daily_buy_list.`20200506` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,463 > 111820 지와이커머스 - daily_buy_list.`20200507` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,497 > 111820 지와이커머스 - daily_buy_list.`20200508` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,528 > 111820 지와이커머스 - daily_buy_list.`20200511` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,559 > 111820 지와이커머스 - daily_buy_list.`20200512` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,592 > 111820 지와이커머스 - daily_buy_list.`20200513` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,629 > 111820 지와이커머스 - daily_buy_list.`20200514` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,666 > 111820 지와이커머스 - daily_buy_list.`20200515` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,721 > 111820 지와이커머스 - daily_buy_list.`20200518` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,789 > 111820 지와이커머스 - daily_buy_list.`20200519` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,836 > 111820 지와이커머스 - daily_buy_list.`20200520` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,883 > 111820 지와이커머스 - daily_buy_list.`20200521` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,932 > 111820 지와이커머스 - daily_buy_list.`20200522` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:33,979 > 111820 지와이커머스 - daily_buy_list.`20200525` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,018 > 111820 지와이커머스 - daily_buy_list.`20200526` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,051 > 111820 지와이커머스 - daily_buy_list.`20200527` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,082 > 111820 지와이커머스 - daily_buy_list.`20200528` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,116 > 111820 지와이커머스 - daily_buy_list.`20200529` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,155 > 111820 지와이커머스 - daily_buy_list.`20200601` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,185 > 111820 지와이커머스 - daily_buy_list.`20200602` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,218 > 111820 지와이커머스 - daily_buy_list.`20200603` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,251 > 111820 지와이커머스 - daily_buy_list.`20200604` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,285 > 111820 지와이커머스 - daily_buy_list.`20200605` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,317 > 111820 지와이커머스 - daily_buy_list.`20200608` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,351 > 111820 지와이커머스 - daily_buy_list.`20200609` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,383 > 111820 지와이커머스 - daily_buy_list.`20200610` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,416 > 111820 지와이커머스 - daily_buy_list.`20200611` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,448 > 111820 지와이커머스 - daily_buy_list.`20200612` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,485 > 111820 지와이커머스 - daily_buy_list.`20200615` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,515 > 111820 지와이커머스 - daily_buy_list.`20200616` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,549 > 111820 지와이커머스 - daily_buy_list.`20200617` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,579 > 111820 지와이커머스 - daily_buy_list.`20200618` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,613 > 111820 지와이커머스 - daily_buy_list.`20200619` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,648 > 111820 지와이커머스 - daily_buy_list.`20200622` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,704 > 111820 지와이커머스 - daily_buy_list.`20200623` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,753 > 111820 지와이커머스 - daily_buy_list.`20200624` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,801 > 111820 지와이커머스 - daily_buy_list.`20200625` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,849 > 111820 지와이커머스 - daily_buy_list.`20200626` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,901 > 111820 지와이커머스 - daily_buy_list.`20200629` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,951 > 111820 지와이커머스 - daily_buy_list.`20200630` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:34,988 > 111820 지와이커머스 - daily_buy_list.`20200701` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,024 > 111820 지와이커머스 - daily_buy_list.`20200702` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,053 > 111820 지와이커머스 - daily_buy_list.`20200703` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,086 > 111820 지와이커머스 - daily_buy_list.`20200706` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,122 > 111820 지와이커머스 - daily_buy_list.`20200707` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,154 > 111820 지와이커머스 - daily_buy_list.`20200708` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,186 > 111820 지와이커머스 - daily_buy_list.`20200709` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,216 > 111820 지와이커머스 - daily_buy_list.`20200710` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,249 > 111820 지와이커머스 - daily_buy_list.`20200713` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,281 > 111820 지와이커머스 - daily_buy_list.`20200714` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,312 > 111820 지와이커머스 - daily_buy_list.`20200715` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,344 > 111820 지와이커머스 - daily_buy_list.`20200716` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,375 > 111820 지와이커머스 - daily_buy_list.`20200717` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,409 > 111820 지와이커머스 - daily_buy_list.`20200720` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,439 > 111820 지와이커머스 - daily_buy_list.`20200721` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,471 > 111820 지와이커머스 - daily_buy_list.`20200722` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,506 > 111820 지와이커머스 - daily_buy_list.`20200723` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,542 > 111820 지와이커머스 - daily_buy_list.`20200724` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,575 > 111820 지와이커머스 - daily_buy_list.`20200727` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,606 > 111820 지와이커머스 - daily_buy_list.`20200728` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,639 > 111820 지와이커머스 - daily_buy_list.`20200729` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,695 > 111820 지와이커머스 - daily_buy_list.`20200730` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,744 > 111820 지와이커머스 - daily_buy_list.`20200731` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,786 > 111820 지와이커머스 - daily_buy_list.`20200803` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,824 > 111820 지와이커머스 - daily_buy_list.`20200804` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,863 > 111820 지와이커머스 - daily_buy_list.`20200805` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,913 > 111820 지와이커머스 - daily_buy_list.`20200806` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,943 > 111820 지와이커머스 - daily_buy_list.`20200807` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:35,981 > 111820 지와이커머스 - daily_buy_list.`20200810` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,016 > 111820 지와이커머스 - daily_buy_list.`20200811` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,047 > 111820 지와이커머스 - daily_buy_list.`20200812` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,080 > 111820 지와이커머스 - daily_buy_list.`20200813` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,114 > 111820 지와이커머스 - daily_buy_list.`20200814` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,152 > 111820 지와이커머스 - daily_buy_list.`20200818` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,185 > 111820 지와이커머스 - daily_buy_list.`20200819` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,216 > 111820 지와이커머스 - daily_buy_list.`20200820` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,247 > 111820 지와이커머스 - daily_buy_list.`20200821` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,283 > 111820 지와이커머스 - daily_buy_list.`20200824` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,314 > 111820 지와이커머스 - daily_buy_list.`20200825` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,347 > 111820 지와이커머스 - daily_buy_list.`20200826` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,381 > 111820 지와이커머스 - daily_buy_list.`20200827` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,416 > 111820 지와이커머스 - daily_buy_list.`20200828` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,460 > 111820 지와이커머스 - daily_buy_list.`20200831` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,501 > 111820 지와이커머스 - daily_buy_list.`20200901` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,547 > 111820 지와이커머스 - daily_buy_list.`20200902` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,582 > 111820 지와이커머스 - daily_buy_list.`20200903` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,610 > 111820 지와이커머스 - daily_buy_list.`20200904` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,644 > 111820 지와이커머스 - daily_buy_list.`20200907` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,688 > 111820 지와이커머스 - daily_buy_list.`20200908` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,735 > 111820 지와이커머스 - daily_buy_list.`20200909` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,777 > 111820 지와이커머스 - daily_buy_list.`20200910` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,827 > 111820 지와이커머스 - daily_buy_list.`20200911` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,887 > 111820 지와이커머스 - daily_buy_list.`20200914` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,928 > 111820 지와이커머스 - daily_buy_list.`20200915` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:36,976 > 111820 지와이커머스 - daily_buy_list.`20200916` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,022 > 111820 지와이커머스 - daily_buy_list.`20200917` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,057 > 111820 지와이커머스 - daily_buy_list.`20200918` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,101 > 111820 지와이커머스 - daily_buy_list.`20200921` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,130 > 111820 지와이커머스 - daily_buy_list.`20200922` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,160 > 111820 지와이커머스 - daily_buy_list.`20200923` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,190 > 111820 지와이커머스 - daily_buy_list.`20200924` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,219 > 111820 지와이커머스 - daily_buy_list.`20200925` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,249 > 111820 지와이커머스 - daily_buy_list.`20200928` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,280 > 111820 지와이커머스 - daily_buy_list.`20200929` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,310 > 111820 지와이커머스 - daily_buy_list.`20201005` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,339 > 111820 지와이커머스 - daily_buy_list.`20201006` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,371 > 111820 지와이커머스 - daily_buy_list.`20201007` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,401 > 111820 지와이커머스 - daily_buy_list.`20201008` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,433 > 111820 지와이커머스 - daily_buy_list.`20201012` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,461 > 111820 지와이커머스 - daily_buy_list.`20201013` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,492 > 111820 지와이커머스 - daily_buy_list.`20201014` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,525 > 111820 지와이커머스 - daily_buy_list.`20201015` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,555 > 111820 지와이커머스 - daily_buy_list.`20201016` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,587 > 111820 지와이커머스 - daily_buy_list.`20201019` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,618 > 111820 지와이커머스 - daily_buy_list.`20201020` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,649 > 111820 지와이커머스 - daily_buy_list.`20201021` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,690 > 111820 지와이커머스 - daily_buy_list.`20201022` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,731 > 111820 지와이커머스 - daily_buy_list.`20201023` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,787 > 111820 지와이커머스 - daily_buy_list.`20201026` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,834 > 111820 지와이커머스 - daily_buy_list.`20201027` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,885 > 111820 지와이커머스 - daily_buy_list.`20201028` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,927 > 111820 지와이커머스 - daily_buy_list.`20201029` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,957 > 111820 지와이커머스 - daily_buy_list.`20201030` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:37,986 > 111820 지와이커머스 - daily_buy_list.`20201102` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,015 > 111820 지와이커머스 - daily_buy_list.`20201103` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,046 > 111820 지와이커머스 - daily_buy_list.`20201104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,082 > 111820 지와이커머스 - daily_buy_list.`20201105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,109 > 111820 지와이커머스 - daily_buy_list.`20201106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,139 > 111820 지와이커머스 - daily_buy_list.`20201109` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,177 > 111820 지와이커머스 - daily_buy_list.`20201110` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,210 > 111820 지와이커머스 - daily_buy_list.`20201111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,241 > 111820 지와이커머스 - daily_buy_list.`20201112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,272 > 111820 지와이커머스 - daily_buy_list.`20201113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,301 > 111820 지와이커머스 - daily_buy_list.`20201116` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,333 > 111820 지와이커머스 - daily_buy_list.`20201117` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,364 > 111820 지와이커머스 - daily_buy_list.`20201118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,395 > 111820 지와이커머스 - daily_buy_list.`20201119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,425 > 111820 지와이커머스 - daily_buy_list.`20201120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,456 > 111820 지와이커머스 - daily_buy_list.`20201123` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,487 > 111820 지와이커머스 - daily_buy_list.`20201124` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,517 > 111820 지와이커머스 - daily_buy_list.`20201125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,548 > 111820 지와이커머스 - daily_buy_list.`20201126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,577 > 111820 지와이커머스 - daily_buy_list.`20201127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,609 > 111820 지와이커머스 - daily_buy_list.`20201130` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,641 > 111820 지와이커머스 - daily_buy_list.`20201201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,700 > 111820 지와이커머스 - daily_buy_list.`20201202` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,761 > 111820 지와이커머스 - daily_buy_list.`20201203` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,801 > 111820 지와이커머스 - daily_buy_list.`20201204` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,854 > 111820 지와이커머스 - daily_buy_list.`20201207` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,901 > 111820 지와이커머스 - daily_buy_list.`20201208` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,947 > 111820 지와이커머스 - daily_buy_list.`20201209` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:38,997 > 111820 지와이커머스 - daily_buy_list.`20201210` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,040 > 111820 지와이커머스 - daily_buy_list.`20201211` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,076 > 111820 지와이커머스 - daily_buy_list.`20201214` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,115 > 111820 지와이커머스 - daily_buy_list.`20201215` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,146 > 111820 지와이커머스 - daily_buy_list.`20201216` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,177 > 111820 지와이커머스 - daily_buy_list.`20201217` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,206 > 111820 지와이커머스 - daily_buy_list.`20201218` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,241 > 111820 지와이커머스 - daily_buy_list.`20201221` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,285 > 111820 지와이커머스 - daily_buy_list.`20201222` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,329 > 111820 지와이커머스 - daily_buy_list.`20201223` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,367 > 111820 지와이커머스 - daily_buy_list.`20201224` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,397 > 111820 지와이커머스 - daily_buy_list.`20201228` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,429 > 111820 지와이커머스 - daily_buy_list.`20201229` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,458 > 111820 지와이커머스 - daily_buy_list.`20201230` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,489 > 111820 지와이커머스 - daily_buy_list.`20210104` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,523 > 111820 지와이커머스 - daily_buy_list.`20210105` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,557 > 111820 지와이커머스 - daily_buy_list.`20210106` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,590 > 111820 지와이커머스 - daily_buy_list.`20210107` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,624 > 111820 지와이커머스 - daily_buy_list.`20210108` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,659 > 111820 지와이커머스 - daily_buy_list.`20210111` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,716 > 111820 지와이커머스 - daily_buy_list.`20210112` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,783 > 111820 지와이커머스 - daily_buy_list.`20210113` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,841 > 111820 지와이커머스 - daily_buy_list.`20210114` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,894 > 111820 지와이커머스 - daily_buy_list.`20210115` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,935 > 111820 지와이커머스 - daily_buy_list.`20210118` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,965 > 111820 지와이커머스 - daily_buy_list.`20210119` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:39,995 > 111820 지와이커머스 - daily_buy_list.`20210120` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,028 > 111820 지와이커머스 - daily_buy_list.`20210121` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,056 > 111820 지와이커머스 - daily_buy_list.`20210122` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,089 > 111820 지와이커머스 - daily_buy_list.`20210125` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,127 > 111820 지와이커머스 - daily_buy_list.`20210126` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,159 > 111820 지와이커머스 - daily_buy_list.`20210127` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,195 > 111820 지와이커머스 - daily_buy_list.`20210128` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,231 > 111820 지와이커머스 - daily_buy_list.`20210129` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,266 > 111820 지와이커머스 - daily_buy_list.`20210201` 업데이트
[INFO|collector_api.py:565] 2021-02-03 16:01:40,301 > 111820 지와이커머스 - daily_buy_list.`20210202` 업데이트
[INFO|collector_api.py:575] 2021-02-03 16:01:40,338 > daily_buy_list 업데이트 완료
[DEBUG|collector_api.py:200] 2021-02-03 16:01:40,347 > ++++++++++++++진양제약++++++++++++++++++++2228/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:40,348 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:40,349 > 434
[DEBUG|collector_api.py:200] 2021-02-03 16:01:40,625 > ++++++++++++++차바이오텍++++++++++++++++++++2229/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:40,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:40,956 > 435
[DEBUG|collector_api.py:200] 2021-02-03 16:01:41,232 > ++++++++++++++천랩++++++++++++++++++++2230/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:41,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:41,564 > 436
[DEBUG|collector_api.py:200] 2021-02-03 16:01:41,771 > ++++++++++++++케이맥++++++++++++++++++++2231/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:41,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:42,172 > 437
[DEBUG|collector_api.py:200] 2021-02-03 16:01:42,430 > ++++++++++++++케이엘넷++++++++++++++++++++2232/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:42,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:42,780 > 438
[DEBUG|collector_api.py:200] 2021-02-03 16:01:43,047 > ++++++++++++++케이프이에스제4호++++++++++++++++++++2233/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:43,047 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:43,388 > 439
[DEBUG|collector_api.py:200] 2021-02-03 16:01:43,591 > ++++++++++++++코너스톤네트웍스++++++++++++++++++++2234/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:43,592 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:43,996 > 440
[DEBUG|collector_api.py:200] 2021-02-03 16:01:44,263 > ++++++++++++++코렌텍++++++++++++++++++++2235/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:44,263 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:44,604 > 441
[DEBUG|collector_api.py:200] 2021-02-03 16:01:44,864 > ++++++++++++++코리아나++++++++++++++++++++2236/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:44,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:45,213 > 442
[DEBUG|collector_api.py:200] 2021-02-03 16:01:45,470 > ++++++++++++++코스맥스엔비티++++++++++++++++++++2237/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:45,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:45,822 > 443
[DEBUG|collector_api.py:200] 2021-02-03 16:01:46,076 > ++++++++++++++코오롱티슈진++++++++++++++++++++2238/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:46,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:46,429 > 444
[DEBUG|collector_api.py:200] 2021-02-03 16:01:46,669 > ++++++++++++++코윈테크++++++++++++++++++++2239/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:46,669 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:47,036 > 445
[DEBUG|collector_api.py:200] 2021-02-03 16:01:47,273 > ++++++++++++++코콤++++++++++++++++++++2240/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:47,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:47,645 > 446
[DEBUG|collector_api.py:200] 2021-02-03 16:01:47,911 > ++++++++++++++퀀타매트릭스++++++++++++++++++++2241/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:47,911 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:48,254 > 447
[DEBUG|collector_api.py:200] 2021-02-03 16:01:48,415 > ++++++++++++++큐에스아이++++++++++++++++++++2242/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:48,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:48,863 > 448
[DEBUG|collector_api.py:200] 2021-02-03 16:01:49,115 > ++++++++++++++크루셜텍++++++++++++++++++++2243/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:49,116 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:49,470 > 449
[DEBUG|collector_api.py:200] 2021-02-03 16:01:49,721 > ++++++++++++++크리스에프앤씨++++++++++++++++++++2244/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:49,721 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:50,078 > 450
[DEBUG|collector_api.py:200] 2021-02-03 16:01:50,366 > ++++++++++++++클라우드에어++++++++++++++++++++2245/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:50,366 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:50,684 > 451
[DEBUG|collector_api.py:200] 2021-02-03 16:01:50,954 > ++++++++++++++테스++++++++++++++++++++2246/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:50,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:51,292 > 452
[DEBUG|collector_api.py:200] 2021-02-03 16:01:51,537 > ++++++++++++++텔레칩스++++++++++++++++++++2247/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:51,537 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:51,898 > 453
[DEBUG|collector_api.py:200] 2021-02-03 16:01:52,163 > ++++++++++++++텔레필드++++++++++++++++++++2248/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:52,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:52,506 > 454
[DEBUG|collector_api.py:200] 2021-02-03 16:01:52,767 > ++++++++++++++톱텍++++++++++++++++++++2249/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:52,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:01:53,115 > 455
[DEBUG|collector_api.py:200] 2021-02-03 16:01:53,364 > ++++++++++++++티비씨++++++++++++++++++++2250/2888
[DEBUG|open_api.py:656] 2021-02-03 16:01:53,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:303] 2021-02-03 16:02:03,125 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:02:03,126 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:02:03,126 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:02:03,126 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:02:03,126 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:02:03,126 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:02:03,126 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:02:03,145 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:02:03,173 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:02:03,173 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:02:03,173 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:02:03,191 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:02:03,231 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:02:05,772 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-03 16:02:05,774 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 16:02:05,822 > ++++++++++++++티비씨++++++++++++++++++++2250/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:05,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:05,824 > 1
[DEBUG|collector_api.py:200] 2021-02-03 16:02:06,932 > ++++++++++++++티플랙스++++++++++++++++++++2251/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:06,932 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:06,934 > 2
[DEBUG|collector_api.py:200] 2021-02-03 16:02:07,176 > ++++++++++++++파나진++++++++++++++++++++2252/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:07,177 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:07,542 > 3
[DEBUG|collector_api.py:200] 2021-02-03 16:02:07,788 > ++++++++++++++파워로직스++++++++++++++++++++2253/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:07,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:08,151 > 4
[DEBUG|collector_api.py:200] 2021-02-03 16:02:08,401 > ++++++++++++++파이오링크++++++++++++++++++++2254/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:08,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:08,759 > 5
[DEBUG|collector_api.py:200] 2021-02-03 16:02:09,010 > ++++++++++++++포비스티앤씨++++++++++++++++++++2255/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:09,010 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:09,366 > 6
[DEBUG|collector_api.py:200] 2021-02-03 16:02:09,623 > ++++++++++++++포시에스++++++++++++++++++++2256/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:09,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:09,974 > 7
[DEBUG|collector_api.py:200] 2021-02-03 16:02:10,236 > ++++++++++++++푸른기술++++++++++++++++++++2257/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:10,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:10,581 > 8
[DEBUG|collector_api.py:200] 2021-02-03 16:02:10,841 > ++++++++++++++퓨전++++++++++++++++++++2258/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:10,841 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:11,189 > 9
[DEBUG|collector_api.py:200] 2021-02-03 16:02:11,416 > ++++++++++++++프럼파스트++++++++++++++++++++2259/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:11,416 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:11,798 > 10
[DEBUG|collector_api.py:200] 2021-02-03 16:02:12,046 > ++++++++++++++플리토++++++++++++++++++++2260/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:12,046 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:12,407 > 11
[DEBUG|collector_api.py:200] 2021-02-03 16:02:12,636 > ++++++++++++++피엔케이피부임상연구센타++++++++++++++++++++2261/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:12,636 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:13,015 > 12
[DEBUG|collector_api.py:200] 2021-02-03 16:02:13,195 > ++++++++++++++피제이전자++++++++++++++++++++2262/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:13,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:13,625 > 13
[DEBUG|collector_api.py:200] 2021-02-03 16:02:13,868 > ++++++++++++++하림++++++++++++++++++++2263/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:13,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:14,232 > 14
[DEBUG|collector_api.py:200] 2021-02-03 16:02:14,490 > ++++++++++++++하이록코리아++++++++++++++++++++2264/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:14,490 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:14,841 > 15
[DEBUG|collector_api.py:200] 2021-02-03 16:02:15,095 > ++++++++++++++하이비젼시스템++++++++++++++++++++2265/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:15,095 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:15,449 > 16
[DEBUG|collector_api.py:200] 2021-02-03 16:02:15,688 > ++++++++++++++하츠++++++++++++++++++++2266/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:15,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:16,055 > 17
[DEBUG|collector_api.py:200] 2021-02-03 16:02:16,321 > ++++++++++++++한국9호스팩++++++++++++++++++++2267/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:16,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:16,664 > 18
[DEBUG|collector_api.py:200] 2021-02-03 16:02:16,810 > ++++++++++++++한국정보공학++++++++++++++++++++2268/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:16,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:17,271 > 19
[DEBUG|collector_api.py:200] 2021-02-03 16:02:17,565 > ++++++++++++++한네트++++++++++++++++++++2269/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:17,565 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:17,879 > 20
[DEBUG|collector_api.py:200] 2021-02-03 16:02:18,143 > ++++++++++++++한라IMS++++++++++++++++++++2270/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:18,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:18,487 > 21
[DEBUG|collector_api.py:200] 2021-02-03 16:02:18,739 > ++++++++++++++한양이엔지++++++++++++++++++++2271/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:18,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:19,095 > 22
[DEBUG|collector_api.py:200] 2021-02-03 16:02:19,352 > ++++++++++++++한프++++++++++++++++++++2272/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:19,353 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:19,703 > 23
[DEBUG|collector_api.py:200] 2021-02-03 16:02:19,952 > ++++++++++++++해덕파워웨이++++++++++++++++++++2273/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:19,953 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:20,310 > 24
[DEBUG|collector_api.py:200] 2021-02-03 16:02:20,550 > ++++++++++++++해성옵틱스++++++++++++++++++++2274/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:20,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:20,917 > 25
[DEBUG|collector_api.py:200] 2021-02-03 16:02:21,194 > ++++++++++++++행남사++++++++++++++++++++2275/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:21,195 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:21,524 > 26
[DEBUG|collector_api.py:200] 2021-02-03 16:02:21,779 > ++++++++++++++홈센타홀딩스++++++++++++++++++++2276/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:21,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:22,133 > 27
[DEBUG|collector_api.py:200] 2021-02-03 16:02:22,391 > ++++++++++++++힘스++++++++++++++++++++2277/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:22,392 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:22,741 > 28
[DEBUG|collector_api.py:200] 2021-02-03 16:02:22,997 > ++++++++++++++노브메타파마++++++++++++++++++++2278/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:22,998 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:23,351 > 29
[DEBUG|collector_api.py:200] 2021-02-03 16:02:23,588 > ++++++++++++++대동고려삼++++++++++++++++++++2279/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:23,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:23,959 > 30
[DEBUG|collector_api.py:200] 2021-02-03 16:02:24,193 > ++++++++++++++라이프사이언스테크놀로지++++++++++++++++++++2280/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:24,194 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:24,565 > 31
[DEBUG|collector_api.py:200] 2021-02-03 16:02:24,796 > ++++++++++++++로보쓰리++++++++++++++++++++2281/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:24,796 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:25,173 > 32
[DEBUG|collector_api.py:200] 2021-02-03 16:02:25,404 > ++++++++++++++루트락++++++++++++++++++++2282/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:25,405 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:25,781 > 33
[DEBUG|collector_api.py:200] 2021-02-03 16:02:25,954 > ++++++++++++++메디안디노스틱++++++++++++++++++++2283/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:25,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:26,388 > 34
[DEBUG|collector_api.py:200] 2021-02-03 16:02:27,248 > ++++++++++++++바이오프로테크++++++++++++++++++++2284/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:27,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:27,249 > 35
[DEBUG|collector_api.py:200] 2021-02-03 16:02:27,475 > ++++++++++++++선바이오++++++++++++++++++++2285/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:27,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:27,858 > 36
[DEBUG|collector_api.py:200] 2021-02-03 16:02:28,096 > ++++++++++++++시큐센++++++++++++++++++++2286/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:28,096 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:28,466 > 37
[DEBUG|collector_api.py:200] 2021-02-03 16:02:28,699 > ++++++++++++++씨알푸드++++++++++++++++++++2287/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:28,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:29,073 > 38
[DEBUG|collector_api.py:200] 2021-02-03 16:02:29,314 > ++++++++++++++애드바이오텍++++++++++++++++++++2288/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:29,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:29,680 > 39
[DEBUG|collector_api.py:200] 2021-02-03 16:02:29,873 > ++++++++++++++에스알바이오텍++++++++++++++++++++2289/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:29,873 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:30,290 > 40
[DEBUG|collector_api.py:200] 2021-02-03 16:02:30,562 > ++++++++++++++에이펙스인텍++++++++++++++++++++2290/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:30,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:30,899 > 41
[DEBUG|collector_api.py:200] 2021-02-03 16:02:31,122 > ++++++++++++++엔솔바이오사이언스++++++++++++++++++++2291/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:31,122 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:31,509 > 42
[DEBUG|collector_api.py:200] 2021-02-03 16:02:31,774 > ++++++++++++++엔에스엠++++++++++++++++++++2292/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:31,774 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:32,117 > 43
[DEBUG|collector_api.py:200] 2021-02-03 16:02:32,309 > ++++++++++++++엘에이티++++++++++++++++++++2293/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:32,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:32,726 > 44
[DEBUG|collector_api.py:200] 2021-02-03 16:02:32,956 > ++++++++++++++엠로++++++++++++++++++++2294/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:32,956 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:33,334 > 45
[DEBUG|collector_api.py:200] 2021-02-03 16:02:33,572 > ++++++++++++++인터코스++++++++++++++++++++2295/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:33,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:33,941 > 46
[DEBUG|collector_api.py:200] 2021-02-03 16:02:34,207 > ++++++++++++++전우정밀++++++++++++++++++++2296/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:34,208 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:34,549 > 47
[DEBUG|collector_api.py:200] 2021-02-03 16:02:34,788 > ++++++++++++++질경이++++++++++++++++++++2297/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:34,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:35,156 > 48
[DEBUG|collector_api.py:200] 2021-02-03 16:02:35,382 > ++++++++++++++테크트랜스++++++++++++++++++++2298/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:35,382 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:35,763 > 49
[DEBUG|collector_api.py:200] 2021-02-03 16:02:36,009 > ++++++++++++++파인이엠텍++++++++++++++++++++2299/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:36,009 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:36,370 > 50
[DEBUG|collector_api.py:200] 2021-02-03 16:02:36,615 > ++++++++++++++휴벡셀++++++++++++++++++++2300/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:36,615 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:36,977 > 51
[DEBUG|collector_api.py:200] 2021-02-03 16:02:37,234 > ++++++++++++++구스앤홈++++++++++++++++++++2301/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:37,235 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:37,586 > 52
[DEBUG|collector_api.py:200] 2021-02-03 16:02:37,793 > ++++++++++++++굿센++++++++++++++++++++2302/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:37,794 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:38,194 > 53
[DEBUG|collector_api.py:200] 2021-02-03 16:02:38,426 > ++++++++++++++나눔테크++++++++++++++++++++2303/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:38,426 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:38,804 > 54
[DEBUG|collector_api.py:200] 2021-02-03 16:02:39,068 > ++++++++++++++바이오시네틱스++++++++++++++++++++2304/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:39,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:39,411 > 55
[DEBUG|collector_api.py:200] 2021-02-03 16:02:39,651 > ++++++++++++++아이피몬스터++++++++++++++++++++2305/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:39,651 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:40,018 > 56
[DEBUG|collector_api.py:200] 2021-02-03 16:02:40,260 > ++++++++++++++앙츠++++++++++++++++++++2306/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:40,260 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:40,625 > 57
[DEBUG|collector_api.py:200] 2021-02-03 16:02:40,873 > ++++++++++++++에스에이티이엔지++++++++++++++++++++2307/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:40,874 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:41,233 > 58
[DEBUG|collector_api.py:200] 2021-02-03 16:02:41,468 > ++++++++++++++에스엘에스바이오++++++++++++++++++++2308/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:41,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:41,841 > 59
[DEBUG|collector_api.py:200] 2021-02-03 16:02:42,072 > ++++++++++++++원바이오젠++++++++++++++++++++2309/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:42,072 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:42,449 > 60
[DEBUG|collector_api.py:200] 2021-02-03 16:02:42,639 > ++++++++++++++유니포인트++++++++++++++++++++2310/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:42,640 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:43,057 > 61
[DEBUG|collector_api.py:200] 2021-02-03 16:02:43,294 > ++++++++++++++유투바이오++++++++++++++++++++2311/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:43,295 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:43,665 > 62
[DEBUG|collector_api.py:200] 2021-02-03 16:02:43,914 > ++++++++++++++이노벡스++++++++++++++++++++2312/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:43,914 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:44,273 > 63
[DEBUG|collector_api.py:200] 2021-02-03 16:02:44,501 > ++++++++++++++청광건설++++++++++++++++++++2313/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:44,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:44,882 > 64
[DEBUG|collector_api.py:200] 2021-02-03 16:02:45,128 > ++++++++++++++케어룸의료산업++++++++++++++++++++2314/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:45,128 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:45,490 > 65
[DEBUG|collector_api.py:200] 2021-02-03 16:02:45,701 > ++++++++++++++탑선++++++++++++++++++++2315/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:45,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:46,099 > 66
[DEBUG|collector_api.py:200] 2021-02-03 16:02:46,351 > ++++++++++++++틸론++++++++++++++++++++2316/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:46,352 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:46,706 > 67
[DEBUG|collector_api.py:200] 2021-02-03 16:02:46,958 > ++++++++++++++판도라티비++++++++++++++++++++2317/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:46,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:47,314 > 68
[DEBUG|collector_api.py:200] 2021-02-03 16:02:47,574 > ++++++++++++++플럼라인생명과학++++++++++++++++++++2318/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:47,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:47,923 > 69
[DEBUG|collector_api.py:200] 2021-02-03 16:02:48,167 > ++++++++++++++한국미라클피플사++++++++++++++++++++2319/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:48,167 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:48,531 > 70
[DEBUG|collector_api.py:200] 2021-02-03 16:02:48,747 > ++++++++++++++다이오진++++++++++++++++++++2320/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:48,748 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:49,139 > 71
[DEBUG|collector_api.py:200] 2021-02-03 16:02:49,379 > ++++++++++++++더콘텐츠온++++++++++++++++++++2321/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:49,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:49,746 > 72
[DEBUG|collector_api.py:200] 2021-02-03 16:02:49,993 > ++++++++++++++데이드림엔터++++++++++++++++++++2322/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:49,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:50,354 > 73
[DEBUG|collector_api.py:200] 2021-02-03 16:02:50,555 > ++++++++++++++도부마스크++++++++++++++++++++2323/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:50,556 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:50,963 > 74
[DEBUG|collector_api.py:200] 2021-02-03 16:02:51,205 > ++++++++++++++메디젠휴먼케어++++++++++++++++++++2324/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:51,205 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:51,571 > 75
[DEBUG|collector_api.py:200] 2021-02-03 16:02:51,804 > ++++++++++++++무진메디++++++++++++++++++++2325/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:51,805 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:52,179 > 76
[DEBUG|collector_api.py:200] 2021-02-03 16:02:52,350 > ++++++++++++++바이옵트로++++++++++++++++++++2326/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:52,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:52,787 > 77
[DEBUG|collector_api.py:200] 2021-02-03 16:02:53,027 > ++++++++++++++비엔디생활건강++++++++++++++++++++2327/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:53,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:53,394 > 78
[DEBUG|collector_api.py:200] 2021-02-03 16:02:53,625 > ++++++++++++++비플라이소프트++++++++++++++++++++2328/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:53,626 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:54,002 > 79
[DEBUG|collector_api.py:200] 2021-02-03 16:02:54,243 > ++++++++++++++수프로++++++++++++++++++++2329/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:54,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:54,610 > 80
[DEBUG|collector_api.py:200] 2021-02-03 16:02:54,840 > ++++++++++++++씨앤에스링크++++++++++++++++++++2330/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:54,841 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:55,217 > 81
[DEBUG|collector_api.py:200] 2021-02-03 16:02:55,450 > ++++++++++++++씨엔티드림++++++++++++++++++++2331/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:55,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:55,826 > 82
[DEBUG|collector_api.py:200] 2021-02-03 16:02:55,998 > ++++++++++++++엄지하우스++++++++++++++++++++2332/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:55,999 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:56,435 > 83
[DEBUG|collector_api.py:200] 2021-02-03 16:02:56,678 > ++++++++++++++에브리봇++++++++++++++++++++2333/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:56,679 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:57,042 > 84
[DEBUG|collector_api.py:200] 2021-02-03 16:02:57,277 > ++++++++++++++에이스캠퍼++++++++++++++++++++2334/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:57,278 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:57,651 > 85
[DEBUG|collector_api.py:200] 2021-02-03 16:02:57,811 > ++++++++++++++엔지브이아이++++++++++++++++++++2335/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:57,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:58,259 > 86
[DEBUG|collector_api.py:200] 2021-02-03 16:02:58,450 > ++++++++++++++엘리비젼++++++++++++++++++++2336/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:58,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:58,868 > 87
[DEBUG|collector_api.py:200] 2021-02-03 16:02:59,107 > ++++++++++++++원텍++++++++++++++++++++2337/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:59,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:02:59,474 > 88
[DEBUG|collector_api.py:200] 2021-02-03 16:02:59,716 > ++++++++++++++이비테크++++++++++++++++++++2338/2888
[DEBUG|open_api.py:656] 2021-02-03 16:02:59,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:00,081 > 89
[DEBUG|collector_api.py:200] 2021-02-03 16:03:00,315 > ++++++++++++++진코스텍++++++++++++++++++++2339/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:00,316 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:00,688 > 90
[DEBUG|collector_api.py:200] 2021-02-03 16:03:00,889 > ++++++++++++++코셋++++++++++++++++++++2340/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:00,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:01,295 > 91
[DEBUG|collector_api.py:200] 2021-02-03 16:03:01,531 > ++++++++++++++한중엔시에스++++++++++++++++++++2341/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:01,531 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:01,904 > 92
[DEBUG|collector_api.py:200] 2021-02-03 16:03:02,141 > ++++++++++++++휴럼++++++++++++++++++++2342/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:02,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:02,514 > 93
[DEBUG|collector_api.py:200] 2021-02-03 16:03:02,749 > ++++++++++++++네추럴FNP++++++++++++++++++++2343/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:02,749 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:03,122 > 94
[DEBUG|collector_api.py:200] 2021-02-03 16:03:03,364 > ++++++++++++++다원넥스뷰++++++++++++++++++++2344/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:03,364 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:03,729 > 95
[DEBUG|collector_api.py:200] 2021-02-03 16:03:03,953 > ++++++++++++++다이노나++++++++++++++++++++2345/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:03,954 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:04,337 > 96
[DEBUG|collector_api.py:200] 2021-02-03 16:03:04,591 > ++++++++++++++데이터스트림즈++++++++++++++++++++2346/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:04,591 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:04,945 > 97
[DEBUG|collector_api.py:200] 2021-02-03 16:03:05,201 > ++++++++++++++래몽래인++++++++++++++++++++2347/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:05,202 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:05,554 > 98
[DEBUG|collector_api.py:200] 2021-02-03 16:03:05,789 > ++++++++++++++럭스피아++++++++++++++++++++2348/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:05,789 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:06,163 > 99
[DEBUG|collector_api.py:200] 2021-02-03 16:03:06,395 > ++++++++++++++바이오코아++++++++++++++++++++2349/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:06,395 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:06,770 > 100
[DEBUG|collector_api.py:200] 2021-02-03 16:03:07,032 > ++++++++++++++볼빅++++++++++++++++++++2350/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:07,033 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:07,378 > 101
[DEBUG|collector_api.py:200] 2021-02-03 16:03:07,654 > ++++++++++++++빅텐츠++++++++++++++++++++2351/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:07,655 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:07,987 > 102
[DEBUG|collector_api.py:200] 2021-02-03 16:03:08,235 > ++++++++++++++스템랩++++++++++++++++++++2352/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:08,236 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:08,596 > 103
[DEBUG|collector_api.py:200] 2021-02-03 16:03:08,834 > ++++++++++++++아퓨어스++++++++++++++++++++2353/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:08,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:09,204 > 104
[DEBUG|collector_api.py:200] 2021-02-03 16:03:09,400 > ++++++++++++++엔에스컴퍼니++++++++++++++++++++2354/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:09,401 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:09,813 > 105
[DEBUG|collector_api.py:200] 2021-02-03 16:03:10,050 > ++++++++++++++위월드++++++++++++++++++++2355/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:10,050 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:10,422 > 106
[DEBUG|collector_api.py:200] 2021-02-03 16:03:10,650 > ++++++++++++++이십일스토어++++++++++++++++++++2356/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:10,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:11,029 > 107
[DEBUG|collector_api.py:200] 2021-02-03 16:03:11,263 > ++++++++++++++테크엔++++++++++++++++++++2357/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:11,264 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:11,636 > 108
[DEBUG|collector_api.py:200] 2021-02-03 16:03:11,862 > ++++++++++++++툴젠++++++++++++++++++++2358/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:11,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:12,244 > 109
[DEBUG|collector_api.py:200] 2021-02-03 16:03:12,471 > ++++++++++++++티티씨디펜스++++++++++++++++++++2359/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:12,472 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:12,852 > 110
[DEBUG|collector_api.py:200] 2021-02-03 16:03:13,059 > ++++++++++++++피엔아이컴퍼니++++++++++++++++++++2360/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:13,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:13,460 > 111
[DEBUG|collector_api.py:200] 2021-02-03 16:03:13,706 > ++++++++++++++관악산업++++++++++++++++++++2361/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:13,706 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:14,066 > 112
[DEBUG|collector_api.py:200] 2021-02-03 16:03:14,285 > ++++++++++++++나라소프트++++++++++++++++++++2362/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:14,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:14,674 > 113
[DEBUG|collector_api.py:200] 2021-02-03 16:03:14,898 > ++++++++++++++단디바이오++++++++++++++++++++2363/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:14,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:15,282 > 114
[DEBUG|collector_api.py:200] 2021-02-03 16:03:15,456 > ++++++++++++++디피코++++++++++++++++++++2364/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:15,456 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:15,889 > 115
[DEBUG|collector_api.py:200] 2021-02-03 16:03:16,113 > ++++++++++++++루켄테크놀러지스++++++++++++++++++++2365/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:16,113 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:16,497 > 116
[DEBUG|collector_api.py:200] 2021-02-03 16:03:16,726 > ++++++++++++++미애부++++++++++++++++++++2366/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:16,727 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:17,105 > 117
[DEBUG|collector_api.py:200] 2021-02-03 16:03:17,321 > ++++++++++++++썬테크++++++++++++++++++++2367/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:17,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:17,713 > 118
[DEBUG|collector_api.py:200] 2021-02-03 16:03:17,926 > ++++++++++++++씨이랩++++++++++++++++++++2368/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:17,926 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:18,320 > 119
[DEBUG|collector_api.py:200] 2021-02-03 16:03:18,550 > ++++++++++++++아이케이세미콘++++++++++++++++++++2369/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:18,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:18,927 > 120
[DEBUG|collector_api.py:200] 2021-02-03 16:03:19,150 > ++++++++++++++이노진++++++++++++++++++++2370/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:19,150 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:19,535 > 121
[DEBUG|collector_api.py:200] 2021-02-03 16:03:19,709 > ++++++++++++++인카금융서비스++++++++++++++++++++2371/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:19,709 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:20,143 > 122
[DEBUG|collector_api.py:200] 2021-02-03 16:03:20,378 > ++++++++++++++지앤이헬스케어++++++++++++++++++++2372/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:20,379 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:20,752 > 123
[DEBUG|collector_api.py:200] 2021-02-03 16:03:20,975 > ++++++++++++++지오씨++++++++++++++++++++2373/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:20,975 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:21,360 > 124
[DEBUG|collector_api.py:200] 2021-02-03 16:03:21,580 > ++++++++++++++펨토바이오메드++++++++++++++++++++2374/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:21,580 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:21,968 > 125
[DEBUG|collector_api.py:200] 2021-02-03 16:03:22,165 > ++++++++++++++KC산업++++++++++++++++++++2375/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:22,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:22,575 > 126
[DEBUG|collector_api.py:200] 2021-02-03 16:03:22,822 > ++++++++++++++SGA클라우드서비스++++++++++++++++++++2376/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:22,822 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:23,182 > 127
[DEBUG|collector_api.py:200] 2021-02-03 16:03:23,436 > ++++++++++++++노드메이슨++++++++++++++++++++2377/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:23,436 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:23,790 > 128
[DEBUG|collector_api.py:200] 2021-02-03 16:03:23,990 > ++++++++++++++명진홀딩스++++++++++++++++++++2378/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:23,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:24,397 > 129
[DEBUG|collector_api.py:200] 2021-02-03 16:03:24,622 > ++++++++++++++바이오인프라생명과학++++++++++++++++++++2379/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:24,622 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:25,003 > 130
[DEBUG|collector_api.py:200] 2021-02-03 16:03:25,170 > ++++++++++++++뿌리깊은나무들++++++++++++++++++++2380/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:25,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:25,611 > 131
[DEBUG|collector_api.py:200] 2021-02-03 16:03:25,838 > ++++++++++++++시그넷이브이++++++++++++++++++++2381/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:25,839 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:26,218 > 132
[DEBUG|collector_api.py:200] 2021-02-03 16:03:26,437 > ++++++++++++++씨앗++++++++++++++++++++2382/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:26,437 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:26,825 > 133
[DEBUG|collector_api.py:200] 2021-02-03 16:03:27,052 > ++++++++++++++에스제이켐++++++++++++++++++++2383/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:27,052 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:27,433 > 134
[DEBUG|collector_api.py:200] 2021-02-03 16:03:27,661 > ++++++++++++++에이비온++++++++++++++++++++2384/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:27,661 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:28,041 > 135
[DEBUG|collector_api.py:200] 2021-02-03 16:03:28,269 > ++++++++++++++에이원알폼++++++++++++++++++++2385/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:28,269 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:28,648 > 136
[DEBUG|collector_api.py:200] 2021-02-03 16:03:28,900 > ++++++++++++++오션스톤++++++++++++++++++++2386/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:28,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:29,257 > 137
[DEBUG|collector_api.py:200] 2021-02-03 16:03:29,444 > ++++++++++++++이도바이오++++++++++++++++++++2387/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:29,444 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:29,865 > 138
[DEBUG|collector_api.py:200] 2021-02-03 16:03:30,055 > ++++++++++++++제노텍++++++++++++++++++++2388/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:30,055 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:30,473 > 139
[DEBUG|collector_api.py:200] 2021-02-03 16:03:30,689 > ++++++++++++++파마리서치바이오++++++++++++++++++++2389/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:30,689 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:31,082 > 140
[DEBUG|collector_api.py:200] 2021-02-03 16:03:31,329 > ++++++++++++++폭스소프트++++++++++++++++++++2390/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:31,330 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:31,690 > 141
[DEBUG|collector_api.py:200] 2021-02-03 16:03:31,868 > ++++++++++++++피노텍++++++++++++++++++++2391/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:31,869 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:32,298 > 142
[DEBUG|collector_api.py:200] 2021-02-03 16:03:32,521 > ++++++++++++++피엔에이치테크++++++++++++++++++++2392/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:32,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:32,905 > 143
[DEBUG|collector_api.py:200] 2021-02-03 16:03:33,131 > ++++++++++++++나우코스++++++++++++++++++++2393/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:33,131 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:33,512 > 144
[DEBUG|collector_api.py:200] 2021-02-03 16:03:33,660 > ++++++++++++++대주이엔티++++++++++++++++++++2394/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:33,660 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:34,119 > 145
[DEBUG|collector_api.py:200] 2021-02-03 16:03:34,342 > ++++++++++++++듀켐바이오++++++++++++++++++++2395/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:34,342 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:34,727 > 146
[DEBUG|collector_api.py:200] 2021-02-03 16:03:34,954 > ++++++++++++++라온테크++++++++++++++++++++2396/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:34,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:35,335 > 147
[DEBUG|collector_api.py:200] 2021-02-03 16:03:35,551 > ++++++++++++++메디쎄이++++++++++++++++++++2397/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:35,551 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:35,942 > 148
[DEBUG|collector_api.py:200] 2021-02-03 16:03:36,162 > ++++++++++++++미래엔에듀파트너++++++++++++++++++++2398/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:36,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:36,548 > 149
[DEBUG|collector_api.py:200] 2021-02-03 16:03:36,767 > ++++++++++++++셀젠텍++++++++++++++++++++2399/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:36,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:37,155 > 150
[DEBUG|collector_api.py:200] 2021-02-03 16:03:37,382 > ++++++++++++++안지오랩++++++++++++++++++++2400/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:37,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:37,762 > 151
[DEBUG|collector_api.py:200] 2021-02-03 16:03:37,992 > ++++++++++++++에스앤디++++++++++++++++++++2401/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:37,992 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:38,369 > 152
[DEBUG|collector_api.py:200] 2021-02-03 16:03:38,602 > ++++++++++++++에스케이씨에스++++++++++++++++++++2402/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:38,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:38,977 > 153
[DEBUG|collector_api.py:200] 2021-02-03 16:03:39,212 > ++++++++++++++엠앤씨생명과학++++++++++++++++++++2403/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:39,212 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:39,584 > 154
[DEBUG|collector_api.py:200] 2021-02-03 16:03:39,863 > ++++++++++++++원포유++++++++++++++++++++2404/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:39,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:40,192 > 155
[DEBUG|collector_api.py:200] 2021-02-03 16:03:40,344 > ++++++++++++++유비온++++++++++++++++++++2405/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:40,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:40,800 > 156
[DEBUG|collector_api.py:200] 2021-02-03 16:03:41,031 > ++++++++++++++유엑스엔++++++++++++++++++++2406/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:41,031 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:41,407 > 157
[DEBUG|collector_api.py:200] 2021-02-03 16:03:41,598 > ++++++++++++++이엠티++++++++++++++++++++2407/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:41,598 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:42,015 > 158
[DEBUG|collector_api.py:200] 2021-02-03 16:03:42,237 > ++++++++++++++큐엠씨++++++++++++++++++++2408/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:42,237 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:42,623 > 159
[DEBUG|collector_api.py:200] 2021-02-03 16:03:42,845 > ++++++++++++++크로넥스++++++++++++++++++++2409/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:42,845 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:43,231 > 160
[DEBUG|collector_api.py:200] 2021-02-03 16:03:43,463 > ++++++++++++++티케이씨++++++++++++++++++++2410/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:43,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:43,838 > 161
[DEBUG|collector_api.py:200] 2021-02-03 16:03:44,072 > ++++++++++++++골프존데카++++++++++++++++++++2411/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:44,073 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:44,447 > 162
[DEBUG|collector_api.py:200] 2021-02-03 16:03:44,670 > ++++++++++++++에스엔피제네틱스++++++++++++++++++++2412/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:44,670 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:45,054 > 163
[DEBUG|collector_api.py:200] 2021-02-03 16:03:45,284 > ++++++++++++++에스엠비나++++++++++++++++++++2413/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:45,285 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:45,661 > 164
[DEBUG|collector_api.py:200] 2021-02-03 16:03:45,891 > ++++++++++++++에이치엔에스하이텍++++++++++++++++++++2414/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:45,892 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:46,268 > 165
[DEBUG|collector_api.py:200] 2021-02-03 16:03:46,498 > ++++++++++++++옐로페이++++++++++++++++++++2415/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:46,498 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:46,875 > 166
[DEBUG|collector_api.py:200] 2021-02-03 16:03:47,117 > ++++++++++++++이앤에치++++++++++++++++++++2416/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:47,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:47,482 > 167
[DEBUG|collector_api.py:200] 2021-02-03 16:03:47,671 > ++++++++++++++태양기계++++++++++++++++++++2417/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:47,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:48,089 > 168
[DEBUG|collector_api.py:200] 2021-02-03 16:03:48,321 > ++++++++++++++파워풀엑스++++++++++++++++++++2418/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:48,321 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:48,697 > 169
[DEBUG|collector_api.py:200] 2021-02-03 16:03:48,941 > ++++++++++++++프로테옴텍++++++++++++++++++++2419/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:48,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:49,306 > 170
[DEBUG|collector_api.py:200] 2021-02-03 16:03:49,513 > ++++++++++++++KODEX 200++++++++++++++++++++2420/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:49,514 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:49,914 > 171
[DEBUG|collector_api.py:200] 2021-02-03 16:03:50,173 > ++++++++++++++KOSEF 200++++++++++++++++++++2421/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:50,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:50,522 > 172
[DEBUG|collector_api.py:200] 2021-02-03 16:03:50,811 > ++++++++++++++KODEX 반도체++++++++++++++++++++2422/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:50,811 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:51,130 > 173
[DEBUG|collector_api.py:200] 2021-02-03 16:03:51,361 > ++++++++++++++KODEX 은행++++++++++++++++++++2423/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:51,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:51,737 > 174
[DEBUG|collector_api.py:200] 2021-02-03 16:03:51,957 > ++++++++++++++KODEX 자동차++++++++++++++++++++2424/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:51,957 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:52,344 > 175
[DEBUG|collector_api.py:200] 2021-02-03 16:03:52,587 > ++++++++++++++TIGER 은행++++++++++++++++++++2425/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:52,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:52,950 > 176
[DEBUG|collector_api.py:200] 2021-02-03 16:03:53,210 > ++++++++++++++TIGER 반도체++++++++++++++++++++2426/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:53,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:53,557 > 177
[DEBUG|collector_api.py:200] 2021-02-03 16:03:53,788 > ++++++++++++++TIGER 방송통신++++++++++++++++++++2427/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:53,788 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:54,164 > 178
[DEBUG|collector_api.py:200] 2021-02-03 16:03:54,404 > ++++++++++++++KODEX China H++++++++++++++++++++2428/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:54,404 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:54,773 > 179
[DEBUG|collector_api.py:200] 2021-02-03 16:03:55,024 > ++++++++++++++KOSEF KRX100++++++++++++++++++++2429/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:55,025 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:55,380 > 180
[DEBUG|collector_api.py:200] 2021-02-03 16:03:55,610 > ++++++++++++++KODEX 일본TOPIX100++++++++++++++++++++2430/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:55,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:55,987 > 181
[DEBUG|collector_api.py:200] 2021-02-03 16:03:56,251 > ++++++++++++++TIGER 200++++++++++++++++++++2431/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:56,252 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:56,597 > 182
[DEBUG|collector_api.py:200] 2021-02-03 16:03:56,848 > ++++++++++++++KODEX 삼성그룹++++++++++++++++++++2432/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:56,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:57,206 > 183
[DEBUG|collector_api.py:200] 2021-02-03 16:03:57,463 > ++++++++++++++KODEX 기계장비++++++++++++++++++++2433/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:57,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:57,813 > 184
[DEBUG|collector_api.py:200] 2021-02-03 16:03:58,052 > ++++++++++++++KODEX 증권++++++++++++++++++++2434/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:58,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:58,419 > 185
[DEBUG|collector_api.py:200] 2021-02-03 16:03:58,653 > ++++++++++++++KOSEF 블루칩++++++++++++++++++++2435/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:58,653 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:59,027 > 186
[DEBUG|collector_api.py:200] 2021-02-03 16:03:59,273 > ++++++++++++++KOSEF 고배당++++++++++++++++++++2436/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:59,274 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:03:59,633 > 187
[DEBUG|collector_api.py:200] 2021-02-03 16:03:59,864 > ++++++++++++++TIGER 라틴35++++++++++++++++++++2437/2888
[DEBUG|open_api.py:656] 2021-02-03 16:03:59,865 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:00,240 > 188
[DEBUG|collector_api.py:200] 2021-02-03 16:04:00,475 > ++++++++++++++KINDEX 200++++++++++++++++++++2438/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:00,476 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:00,848 > 189
[DEBUG|collector_api.py:200] 2021-02-03 16:04:01,094 > ++++++++++++++KBSTAR 5대그룹주++++++++++++++++++++2439/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:01,094 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:01,456 > 190
[DEBUG|collector_api.py:200] 2021-02-03 16:04:01,715 > ++++++++++++++KINDEX 삼성그룹섹터가중++++++++++++++++++++2440/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:01,716 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:02,064 > 191
[DEBUG|collector_api.py:200] 2021-02-03 16:04:02,311 > ++++++++++++++TREX 200++++++++++++++++++++2441/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:02,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:02,672 > 192
[DEBUG|collector_api.py:200] 2021-02-03 16:04:02,905 > ++++++++++++++KBSTAR 국고채3년++++++++++++++++++++2442/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:02,905 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:03,280 > 193
[DEBUG|collector_api.py:200] 2021-02-03 16:04:03,522 > ++++++++++++++KODEX 국고채3년++++++++++++++++++++2443/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:03,522 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:03,887 > 194
[DEBUG|collector_api.py:200] 2021-02-03 16:04:04,139 > ++++++++++++++KINDEX 국고채3년++++++++++++++++++++2444/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:04,140 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:04,496 > 195
[DEBUG|collector_api.py:200] 2021-02-03 16:04:04,746 > ++++++++++++++KOSEF 국고채3년++++++++++++++++++++2445/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:04,747 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:05,104 > 196
[DEBUG|collector_api.py:200] 2021-02-03 16:04:05,338 > ++++++++++++++KODEX 인버스++++++++++++++++++++2446/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:05,338 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:05,712 > 197
[DEBUG|collector_api.py:200] 2021-02-03 16:04:05,979 > ++++++++++++++TIGER 국채3년++++++++++++++++++++2447/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:05,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:06,320 > 198
[DEBUG|collector_api.py:200] 2021-02-03 16:04:06,551 > ++++++++++++++KODEX 에너지화학++++++++++++++++++++2448/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:06,552 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:06,928 > 199
[DEBUG|collector_api.py:200] 2021-02-03 16:04:07,167 > ++++++++++++++KODEX 철강++++++++++++++++++++2449/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:07,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:07,534 > 200
[DEBUG|collector_api.py:200] 2021-02-03 16:04:07,767 > ++++++++++++++TIGER 차이나항셍25++++++++++++++++++++2450/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:07,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:08,142 > 201
[DEBUG|collector_api.py:200] 2021-02-03 16:04:08,384 > ++++++++++++++KODEX 건설++++++++++++++++++++2451/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:08,385 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:08,749 > 202
[DEBUG|collector_api.py:200] 2021-02-03 16:04:09,002 > ++++++++++++++ARIRANG 코스피50++++++++++++++++++++2452/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:09,002 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:09,358 > 203
[DEBUG|collector_api.py:200] 2021-02-03 16:04:09,587 > ++++++++++++++KOSEF 통안채1년++++++++++++++++++++2453/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:09,587 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:09,965 > 204
[DEBUG|collector_api.py:200] 2021-02-03 16:04:10,209 > ++++++++++++++KODEX 레버리지++++++++++++++++++++2454/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:10,210 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:10,572 > 205
[DEBUG|collector_api.py:200] 2021-02-03 16:04:10,812 > ++++++++++++++TIGER 인버스++++++++++++++++++++2455/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:10,812 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:11,179 > 206
[DEBUG|collector_api.py:200] 2021-02-03 16:04:11,428 > ++++++++++++++TIGER 레버리지++++++++++++++++++++2456/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:11,429 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:11,786 > 207
[DEBUG|collector_api.py:200] 2021-02-03 16:04:12,025 > ++++++++++++++TIGER 원유선물Enhanced(H)++++++++++++++++++++2457/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:12,026 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:12,394 > 208
[DEBUG|collector_api.py:200] 2021-02-03 16:04:12,678 > ++++++++++++++KOSEF 단기자금++++++++++++++++++++2458/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:12,679 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:13,001 > 209
[DEBUG|collector_api.py:200] 2021-02-03 16:04:13,231 > ++++++++++++++KINDEX 삼성그룹동일가중++++++++++++++++++++2459/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:13,231 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:13,609 > 210
[DEBUG|collector_api.py:200] 2021-02-03 16:04:13,844 > ++++++++++++++KODEX 골드선물(H)++++++++++++++++++++2460/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:13,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:14,217 > 211
[DEBUG|collector_api.py:200] 2021-02-03 16:04:14,453 > ++++++++++++++TIGER 미국나스닥100++++++++++++++++++++2461/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:14,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:14,825 > 212
[DEBUG|collector_api.py:200] 2021-02-03 16:04:15,087 > ++++++++++++++KBSTAR 중기우량회사채++++++++++++++++++++2462/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:15,087 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:15,433 > 213
[DEBUG|collector_api.py:200] 2021-02-03 16:04:15,663 > ++++++++++++++TIGER 농산물선물Enhanced(H)++++++++++++++++++++2463/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:15,664 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:16,042 > 214
[DEBUG|collector_api.py:200] 2021-02-03 16:04:16,280 > ++++++++++++++마이다스 200커버드콜5%OTM++++++++++++++++++++2464/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:16,280 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:16,649 > 215
[DEBUG|collector_api.py:200] 2021-02-03 16:04:16,881 > ++++++++++++++KOSEF 미국달러선물++++++++++++++++++++2465/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:16,881 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:17,257 > 216
[DEBUG|collector_api.py:200] 2021-02-03 16:04:17,493 > ++++++++++++++TIGER 삼성그룹펀더멘털++++++++++++++++++++2466/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:17,493 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:17,865 > 217
[DEBUG|collector_api.py:200] 2021-02-03 16:04:18,117 > ++++++++++++++TIGER LG그룹+펀더멘털++++++++++++++++++++2467/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:18,117 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:18,471 > 218
[DEBUG|collector_api.py:200] 2021-02-03 16:04:18,698 > ++++++++++++++TIGER 현대차그룹+펀더멘털++++++++++++++++++++2468/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:18,699 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:19,080 > 219
[DEBUG|collector_api.py:200] 2021-02-03 16:04:19,309 > ++++++++++++++KODEX 구리선물(H)++++++++++++++++++++2469/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:19,310 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:19,687 > 220
[DEBUG|collector_api.py:200] 2021-02-03 16:04:19,929 > ++++++++++++++KODEX 콩선물(H)++++++++++++++++++++2470/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:19,929 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:20,293 > 221
[DEBUG|collector_api.py:200] 2021-02-03 16:04:20,528 > ++++++++++++++TIGER 200 건설++++++++++++++++++++2471/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:20,528 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:20,901 > 222
[DEBUG|collector_api.py:200] 2021-02-03 16:04:21,151 > ++++++++++++++TIGER 200 중공업++++++++++++++++++++2472/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:21,151 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:21,507 > 223
[DEBUG|collector_api.py:200] 2021-02-03 16:04:21,739 > ++++++++++++++TIGER 200 철강소재++++++++++++++++++++2473/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:21,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:22,116 > 224
[DEBUG|collector_api.py:200] 2021-02-03 16:04:22,341 > ++++++++++++++TIGER 200 에너지화학++++++++++++++++++++2474/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:22,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:22,723 > 225
[DEBUG|collector_api.py:200] 2021-02-03 16:04:22,959 > ++++++++++++++TIGER 200 IT++++++++++++++++++++2475/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:22,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:23,332 > 226
[DEBUG|collector_api.py:200] 2021-02-03 16:04:23,588 > ++++++++++++++TIGER 200 금융++++++++++++++++++++2476/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:23,588 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:23,940 > 227
[DEBUG|collector_api.py:200] 2021-02-03 16:04:24,179 > ++++++++++++++TIGER 경기방어++++++++++++++++++++2477/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:24,179 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:24,548 > 228
[DEBUG|collector_api.py:200] 2021-02-03 16:04:24,781 > ++++++++++++++TIGER 200 경기소비재++++++++++++++++++++2478/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:24,781 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:25,155 > 229
[DEBUG|collector_api.py:200] 2021-02-03 16:04:25,387 > ++++++++++++++TIGER 금속선물(H)++++++++++++++++++++2479/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:25,388 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:25,763 > 230
[DEBUG|collector_api.py:200] 2021-02-03 16:04:25,997 > ++++++++++++++TIGER 금은선물(H)++++++++++++++++++++2480/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:25,997 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:26,371 > 231
[DEBUG|collector_api.py:200] 2021-02-03 16:04:26,596 > ++++++++++++++KOSEF 미국달러선물인버스++++++++++++++++++++2481/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:26,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:26,979 > 232
[DEBUG|collector_api.py:200] 2021-02-03 16:04:27,200 > ++++++++++++++KBSTAR 수출주++++++++++++++++++++2482/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:27,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:27,586 > 233
[DEBUG|collector_api.py:200] 2021-02-03 16:04:27,802 > ++++++++++++++KBSTAR 우량업종++++++++++++++++++++2483/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:27,802 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:28,193 > 234
[DEBUG|collector_api.py:200] 2021-02-03 16:04:28,424 > ++++++++++++++KODEX 보험++++++++++++++++++++2484/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:28,424 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:28,801 > 235
[DEBUG|collector_api.py:200] 2021-02-03 16:04:29,060 > ++++++++++++++KODEX 운송++++++++++++++++++++2485/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:29,060 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:29,409 > 236
[DEBUG|collector_api.py:200] 2021-02-03 16:04:29,636 > ++++++++++++++파워 코스피100++++++++++++++++++++2486/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:29,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:30,017 > 237
[DEBUG|collector_api.py:200] 2021-02-03 16:04:30,253 > ++++++++++++++KINDEX 밸류대형++++++++++++++++++++2487/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:30,253 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:30,624 > 238
[DEBUG|collector_api.py:200] 2021-02-03 16:04:30,861 > ++++++++++++++TIGER 미국S&P500선물(H)++++++++++++++++++++2488/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:30,862 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:31,231 > 239
[DEBUG|collector_api.py:200] 2021-02-03 16:04:31,463 > ++++++++++++++TIGER 헬스케어++++++++++++++++++++2489/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:31,463 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:31,838 > 240
[DEBUG|collector_api.py:200] 2021-02-03 16:04:32,098 > ++++++++++++++KODEX 은선물(H)++++++++++++++++++++2490/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:32,098 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:32,446 > 241
[DEBUG|collector_api.py:200] 2021-02-03 16:04:32,676 > ++++++++++++++KINDEX 인버스++++++++++++++++++++2491/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:32,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:33,054 > 242
[DEBUG|collector_api.py:200] 2021-02-03 16:04:33,290 > ++++++++++++++TREX 펀더멘탈 200++++++++++++++++++++2492/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:33,291 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:33,661 > 243
[DEBUG|collector_api.py:200] 2021-02-03 16:04:33,898 > ++++++++++++++TIGER 모멘텀++++++++++++++++++++2493/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:33,898 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:34,268 > 244
[DEBUG|collector_api.py:200] 2021-02-03 16:04:34,505 > ++++++++++++++KBSTAR 200++++++++++++++++++++2494/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:34,506 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:34,874 > 245
[DEBUG|collector_api.py:200] 2021-02-03 16:04:35,133 > ++++++++++++++KOSEF 국고채10년++++++++++++++++++++2495/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:35,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:35,482 > 246
[DEBUG|collector_api.py:200] 2021-02-03 16:04:35,725 > ++++++++++++++TIGER 중국소비테마++++++++++++++++++++2496/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:35,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:36,089 > 247
[DEBUG|collector_api.py:200] 2021-02-03 16:04:36,329 > ++++++++++++++ARIRANG 200++++++++++++++++++++2497/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:36,329 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:36,696 > 248
[DEBUG|collector_api.py:200] 2021-02-03 16:04:36,940 > ++++++++++++++KOSEF 200 선물++++++++++++++++++++2498/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:36,941 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:37,302 > 249
[DEBUG|collector_api.py:200] 2021-02-03 16:04:37,529 > ++++++++++++++KODEX 국채선물10년++++++++++++++++++++2499/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:37,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:37,910 > 250
[DEBUG|collector_api.py:200] 2021-02-03 16:04:38,159 > ++++++++++++++KINDEX 레버리지++++++++++++++++++++2500/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:38,160 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:38,518 > 251
[DEBUG|collector_api.py:200] 2021-02-03 16:04:38,768 > ++++++++++++++파워 200++++++++++++++++++++2501/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:38,768 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:39,127 > 252
[DEBUG|collector_api.py:200] 2021-02-03 16:04:39,360 > ++++++++++++++KODEX 단기채권++++++++++++++++++++2502/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:39,361 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:39,735 > 253
[DEBUG|collector_api.py:200] 2021-02-03 16:04:39,967 > ++++++++++++++KOSEF 코스피100++++++++++++++++++++2503/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:39,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:40,343 > 254
[DEBUG|collector_api.py:200] 2021-02-03 16:04:40,561 > ++++++++++++++KODEX MSCI Korea++++++++++++++++++++2504/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:40,562 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:40,949 > 255
[DEBUG|collector_api.py:200] 2021-02-03 16:04:41,201 > ++++++++++++++TIGER 단기통안채++++++++++++++++++++2505/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:41,201 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:41,557 > 256
[DEBUG|collector_api.py:200] 2021-02-03 16:04:41,785 > ++++++++++++++TIGER 소프트웨어++++++++++++++++++++2506/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:41,786 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:42,164 > 257
[DEBUG|collector_api.py:200] 2021-02-03 16:04:42,390 > ++++++++++++++TIGER 증권++++++++++++++++++++2507/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:42,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:42,771 > 258
[DEBUG|collector_api.py:200] 2021-02-03 16:04:42,996 > ++++++++++++++마이티 코스피100++++++++++++++++++++2508/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:42,996 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:43,378 > 259
[DEBUG|collector_api.py:200] 2021-02-03 16:04:43,603 > ++++++++++++++TIGER 구리실물++++++++++++++++++++2509/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:43,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:43,984 > 260
[DEBUG|collector_api.py:200] 2021-02-03 16:04:44,212 > ++++++++++++++ARIRANG 고배당주++++++++++++++++++++2510/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:44,213 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:44,591 > 261
[DEBUG|collector_api.py:200] 2021-02-03 16:04:44,863 > ++++++++++++++TIGER 200커버드콜5%OTM++++++++++++++++++++2511/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:44,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:45,200 > 262
[DEBUG|collector_api.py:200] 2021-02-03 16:04:45,430 > ++++++++++++++KOSEF 국고채10년레버리지++++++++++++++++++++2512/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:45,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:45,807 > 263
[DEBUG|collector_api.py:200] 2021-02-03 16:04:46,054 > ++++++++++++++KTOP 코스피50++++++++++++++++++++2513/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:46,054 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:46,414 > 264
[DEBUG|collector_api.py:200] 2021-02-03 16:04:46,643 > ++++++++++++++KINDEX 중국본토CSI300++++++++++++++++++++2514/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:46,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:47,022 > 265
[DEBUG|collector_api.py:200] 2021-02-03 16:04:47,259 > ++++++++++++++KODEX 중국본토 A50++++++++++++++++++++2515/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:47,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:47,629 > 266
[DEBUG|collector_api.py:200] 2021-02-03 16:04:47,870 > ++++++++++++++TIGER 베타플러스++++++++++++++++++++2516/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:47,870 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:48,235 > 267
[DEBUG|collector_api.py:200] 2021-02-03 16:04:48,469 > ++++++++++++++TIGER 로우볼++++++++++++++++++++2517/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:48,470 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:48,843 > 268
[DEBUG|collector_api.py:200] 2021-02-03 16:04:49,085 > ++++++++++++++KBSTAR 중국본토대형주CSI100++++++++++++++++++++2518/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:49,086 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:49,449 > 269
[DEBUG|collector_api.py:200] 2021-02-03 16:04:49,709 > ++++++++++++++파워 중기국고채++++++++++++++++++++2519/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:49,710 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:50,058 > 270
[DEBUG|collector_api.py:200] 2021-02-03 16:04:50,292 > ++++++++++++++KODEX 국채선물10년인버스++++++++++++++++++++2520/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:50,292 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:50,665 > 271
[DEBUG|collector_api.py:200] 2021-02-03 16:04:50,894 > ++++++++++++++KINDEX 미국다우존스리츠(합성 H)++++++++++++++++++++2521/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:50,894 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:51,273 > 272
[DEBUG|collector_api.py:200] 2021-02-03 16:04:51,502 > ++++++++++++++TIGER 미국MSCI리츠(합성 H)++++++++++++++++++++2522/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:51,503 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:51,881 > 273
[DEBUG|collector_api.py:200] 2021-02-03 16:04:52,162 > ++++++++++++++TIGER 단기선진하이일드(합성 H)++++++++++++++++++++2523/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:52,162 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:52,487 > 274
[DEBUG|collector_api.py:200] 2021-02-03 16:04:52,744 > ++++++++++++++KBSTAR 채권혼합++++++++++++++++++++2524/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:52,744 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:53,096 > 275
[DEBUG|collector_api.py:200] 2021-02-03 16:04:53,325 > ++++++++++++++KBSTAR 주식혼합++++++++++++++++++++2525/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:53,325 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:53,705 > 276
[DEBUG|collector_api.py:200] 2021-02-03 16:04:53,933 > ++++++++++++++KODEX 미국S&P바이오(합성)++++++++++++++++++++2526/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:53,933 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:54,313 > 277
[DEBUG|collector_api.py:200] 2021-02-03 16:04:54,541 > ++++++++++++++ARIRANG 글로벌MSCI(합성 H)++++++++++++++++++++2527/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:54,541 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:54,920 > 278
[DEBUG|collector_api.py:200] 2021-02-03 16:04:55,164 > ++++++++++++++KINDEX 단기통안채++++++++++++++++++++2528/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:55,164 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:55,526 > 279
[DEBUG|collector_api.py:200] 2021-02-03 16:04:55,765 > ++++++++++++++TIGER 차이나CSI300++++++++++++++++++++2529/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:55,765 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:56,132 > 280
[DEBUG|collector_api.py:200] 2021-02-03 16:04:56,362 > ++++++++++++++파워 고배당저변동성++++++++++++++++++++2530/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:56,362 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:56,740 > 281
[DEBUG|collector_api.py:200] 2021-02-03 16:04:56,969 > ++++++++++++++TIGER 일본TOPIX(합성 H)++++++++++++++++++++2531/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:56,969 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:57,348 > 282
[DEBUG|collector_api.py:200] 2021-02-03 16:04:57,573 > ++++++++++++++TIGER 유로스탁스50(합성 H)++++++++++++++++++++2532/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:57,573 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:57,956 > 283
[DEBUG|collector_api.py:200] 2021-02-03 16:04:58,205 > ++++++++++++++ARIRANG 선진국MSCI(합성 H)++++++++++++++++++++2533/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:58,206 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:58,563 > 284
[DEBUG|collector_api.py:200] 2021-02-03 16:04:58,790 > ++++++++++++++ARIRANG 신흥국MSCI(합성 H)++++++++++++++++++++2534/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:58,791 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:59,172 > 285
[DEBUG|collector_api.py:200] 2021-02-03 16:04:59,395 > ++++++++++++++KINDEX 일본TOPIX레버리지(H)++++++++++++++++++++2535/2888
[DEBUG|open_api.py:656] 2021-02-03 16:04:59,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:04:59,779 > 286
[DEBUG|collector_api.py:200] 2021-02-03 16:05:00,004 > ++++++++++++++KBSTAR 단기통안채++++++++++++++++++++2536/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:00,004 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:00,387 > 287
[DEBUG|collector_api.py:200] 2021-02-03 16:05:00,611 > ++++++++++++++KODEX 미국S&P산업재(합성)++++++++++++++++++++2537/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:00,611 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:00,994 > 288
[DEBUG|collector_api.py:200] 2021-02-03 16:05:01,262 > ++++++++++++++KOSEF 인도Nifty50(합성)++++++++++++++++++++2538/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:01,262 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:01,601 > 289
[DEBUG|collector_api.py:200] 2021-02-03 16:05:01,833 > ++++++++++++++TIGER 미국나스닥바이오++++++++++++++++++++2539/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:01,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:02,209 > 290
[DEBUG|collector_api.py:200] 2021-02-03 16:05:02,439 > ++++++++++++++KODEX China H 레버리지(H)++++++++++++++++++++2540/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:02,439 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:02,816 > 291
[DEBUG|collector_api.py:200] 2021-02-03 16:05:03,058 > ++++++++++++++TIGER 차이나CSI300레버리지(합성)++++++++++++++++++++2541/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:03,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:03,423 > 292
[DEBUG|collector_api.py:200] 2021-02-03 16:05:03,649 > ++++++++++++++KINDEX 일본TOPIX인버스(합성 H)++++++++++++++++++++2542/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:03,650 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:04,032 > 293
[DEBUG|collector_api.py:200] 2021-02-03 16:05:04,244 > ++++++++++++++SMART 선진국MSCI World(합성 H)++++++++++++++++++++2543/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:04,244 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:04,639 > 294
[DEBUG|collector_api.py:200] 2021-02-03 16:05:04,885 > ++++++++++++++TIGER 코스피고배당++++++++++++++++++++2544/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:04,885 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:05,247 > 295
[DEBUG|collector_api.py:200] 2021-02-03 16:05:05,487 > ++++++++++++++KINDEX 배당성장++++++++++++++++++++2545/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:05,487 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:05,857 > 296
[DEBUG|collector_api.py:200] 2021-02-03 16:05:06,083 > ++++++++++++++TIGER 배당성장++++++++++++++++++++2546/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:06,083 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:06,465 > 297
[DEBUG|collector_api.py:200] 2021-02-03 16:05:06,695 > ++++++++++++++KODEX 배당성장++++++++++++++++++++2547/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:06,696 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:07,073 > 298
[DEBUG|collector_api.py:200] 2021-02-03 16:05:07,312 > ++++++++++++++KODEX 삼성그룹밸류++++++++++++++++++++2548/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:07,312 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:07,680 > 299
[DEBUG|collector_api.py:200] 2021-02-03 16:05:07,899 > ++++++++++++++ARIRANG 미국다우존스고배당주(합성 H)++++++++++++++++++++2549/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:07,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:08,287 > 300
[DEBUG|collector_api.py:200] 2021-02-03 16:05:08,514 > ++++++++++++++KODEX 단기채권PLUS++++++++++++++++++++2550/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:08,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:08,896 > 301
[DEBUG|collector_api.py:200] 2021-02-03 16:05:09,133 > ++++++++++++++흥국 S&P코리아로우볼++++++++++++++++++++2551/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:09,134 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:09,504 > 302
[DEBUG|collector_api.py:200] 2021-02-03 16:05:09,738 > ++++++++++++++TIGER 원유선물인버스(H)++++++++++++++++++++2552/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:09,739 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:10,113 > 303
[DEBUG|collector_api.py:200] 2021-02-03 16:05:10,345 > ++++++++++++++TIGER 차이나CSI300인버스(합성)++++++++++++++++++++2553/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:10,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:10,719 > 304
[DEBUG|collector_api.py:200] 2021-02-03 16:05:10,962 > ++++++++++++++TIGER 가격조정++++++++++++++++++++2554/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:10,962 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:11,327 > 305
[DEBUG|collector_api.py:200] 2021-02-03 16:05:11,553 > ++++++++++++++KODEX 미국S&P에너지(합성)++++++++++++++++++++2555/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:11,553 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:11,934 > 306
[DEBUG|collector_api.py:200] 2021-02-03 16:05:12,169 > ++++++++++++++KBSTAR 미국S&P원유생산기업(합성 H)++++++++++++++++++++2556/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:12,170 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:12,542 > 307
[DEBUG|collector_api.py:200] 2021-02-03 16:05:12,765 > ++++++++++++++KODEX 미국S&P500선물(H)++++++++++++++++++++2557/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:12,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:13,150 > 308
[DEBUG|collector_api.py:200] 2021-02-03 16:05:13,390 > ++++++++++++++KINDEX 중국본토CSI300레버리지(합성)++++++++++++++++++++2558/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:13,391 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:13,757 > 309
[DEBUG|collector_api.py:200] 2021-02-03 16:05:13,988 > ++++++++++++++SMART 중국본토 중소형 CSI500(합성 H)++++++++++++++++++++2559/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:13,988 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:14,364 > 310
[DEBUG|collector_api.py:200] 2021-02-03 16:05:14,584 > ++++++++++++++KODEX 200가치저변동++++++++++++++++++++2560/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:14,584 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:14,971 > 311
[DEBUG|collector_api.py:200] 2021-02-03 16:05:15,202 > ++++++++++++++TIGER 미국S&P500선물인버스(H)++++++++++++++++++++2561/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:15,203 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:15,580 > 312
[DEBUG|collector_api.py:200] 2021-02-03 16:05:15,826 > ++++++++++++++TIGER 미국S&P500레버리지(합성 H)++++++++++++++++++++2562/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:15,827 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:16,187 > 313
[DEBUG|collector_api.py:200] 2021-02-03 16:05:16,413 > ++++++++++++++TIGER 유로스탁스레버리지(합성 H)++++++++++++++++++++2563/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:16,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:16,795 > 314
[DEBUG|collector_api.py:200] 2021-02-03 16:05:17,040 > ++++++++++++++TIGER 이머징마켓MSCI레버리지(합성 H)++++++++++++++++++++2564/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:17,040 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:17,402 > 315
[DEBUG|collector_api.py:200] 2021-02-03 16:05:17,628 > ++++++++++++++KINDEX 골드선물 레버리지(합성 H)++++++++++++++++++++2565/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:17,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:18,009 > 316
[DEBUG|collector_api.py:200] 2021-02-03 16:05:18,275 > ++++++++++++++KOSEF 미국달러선물레버리지++++++++++++++++++++2566/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:18,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:18,615 > 317
[DEBUG|collector_api.py:200] 2021-02-03 16:05:18,843 > ++++++++++++++KINDEX Fn성장소비주도주++++++++++++++++++++2567/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:18,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:19,223 > 318
[DEBUG|collector_api.py:200] 2021-02-03 16:05:19,449 > ++++++++++++++KODEX 코스피++++++++++++++++++++2568/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:19,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:19,830 > 319
[DEBUG|collector_api.py:200] 2021-02-03 16:05:20,057 > ++++++++++++++KODEX 200 중소형++++++++++++++++++++2569/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:20,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:20,438 > 320
[DEBUG|collector_api.py:200] 2021-02-03 16:05:20,662 > ++++++++++++++TIGER 200 헬스케어++++++++++++++++++++2570/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:20,663 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:21,045 > 321
[DEBUG|collector_api.py:200] 2021-02-03 16:05:21,275 > ++++++++++++++TIGER 200 산업재++++++++++++++++++++2571/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:21,276 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:21,653 > 322
[DEBUG|collector_api.py:200] 2021-02-03 16:05:21,884 > ++++++++++++++TIGER 200 생활소비재++++++++++++++++++++2572/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:21,884 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:22,261 > 323
[DEBUG|collector_api.py:200] 2021-02-03 16:05:22,482 > ++++++++++++++TIGER 우량가치++++++++++++++++++++2573/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:22,482 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:22,868 > 324
[DEBUG|collector_api.py:200] 2021-02-03 16:05:23,097 > ++++++++++++++ARIRANG 코스피++++++++++++++++++++2574/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:23,097 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:23,477 > 325
[DEBUG|collector_api.py:200] 2021-02-03 16:05:23,703 > ++++++++++++++TIGER 화장품++++++++++++++++++++2575/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:23,703 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:24,086 > 326
[DEBUG|collector_api.py:200] 2021-02-03 16:05:24,332 > ++++++++++++++TIGER 여행레저++++++++++++++++++++2576/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:24,332 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:24,693 > 327
[DEBUG|collector_api.py:200] 2021-02-03 16:05:24,923 > ++++++++++++++TIGER 미디어컨텐츠++++++++++++++++++++2577/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:24,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:25,301 > 328
[DEBUG|collector_api.py:200] 2021-02-03 16:05:25,525 > ++++++++++++++TIGER KTOP30++++++++++++++++++++2578/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:25,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:25,909 > 329
[DEBUG|collector_api.py:200] 2021-02-03 16:05:26,140 > ++++++++++++++KODEX 코스닥 150++++++++++++++++++++2579/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:26,141 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:26,518 > 330
[DEBUG|collector_api.py:200] 2021-02-03 16:05:26,751 > ++++++++++++++KODEX KTOP30++++++++++++++++++++2580/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:26,752 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:27,126 > 331
[DEBUG|collector_api.py:200] 2021-02-03 16:05:27,354 > ++++++++++++++KOSEF 미국달러선물인버스2X++++++++++++++++++++2581/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:27,355 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:27,735 > 332
[DEBUG|collector_api.py:200] 2021-02-03 16:05:27,967 > ++++++++++++++TIGER 코스닥150++++++++++++++++++++2582/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:27,968 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:28,342 > 333
[DEBUG|collector_api.py:200] 2021-02-03 16:05:28,579 > ++++++++++++++TIGER 코스닥150 레버리지++++++++++++++++++++2583/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:28,579 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:28,950 > 334
[DEBUG|collector_api.py:200] 2021-02-03 16:05:29,174 > ++++++++++++++KODEX 코스닥150 레버리지++++++++++++++++++++2584/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:29,174 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:29,557 > 335
[DEBUG|collector_api.py:200] 2021-02-03 16:05:29,778 > ++++++++++++++KBSTAR V&S셀렉트밸류++++++++++++++++++++2585/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:29,778 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:30,164 > 336
[DEBUG|collector_api.py:200] 2021-02-03 16:05:30,392 > ++++++++++++++TIGER 인도니프티50레버리지(합성)++++++++++++++++++++2586/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:30,392 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:30,771 > 337
[DEBUG|collector_api.py:200] 2021-02-03 16:05:31,011 > ++++++++++++++KODEX 코스피100++++++++++++++++++++2587/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:31,012 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:31,377 > 338
[DEBUG|collector_api.py:200] 2021-02-03 16:05:31,601 > ++++++++++++++KODEX 배당성장채권혼합++++++++++++++++++++2588/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:31,601 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:31,984 > 339
[DEBUG|collector_api.py:200] 2021-02-03 16:05:32,220 > ++++++++++++++TIGER 경기방어채권혼합++++++++++++++++++++2589/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:32,221 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:32,592 > 340
[DEBUG|collector_api.py:200] 2021-02-03 16:05:32,810 > ++++++++++++++ARIRANG 스마트베타Quality채권혼합++++++++++++++++++++2590/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:32,810 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:33,198 > 341
[DEBUG|collector_api.py:200] 2021-02-03 16:05:33,447 > ++++++++++++++KINDEX 일본Nikkei225(H)++++++++++++++++++++2591/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:33,447 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:33,806 > 342
[DEBUG|collector_api.py:200] 2021-02-03 16:05:34,044 > ++++++++++++++ARIRANG 우량회사채50 1년++++++++++++++++++++2592/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:34,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:34,414 > 343
[DEBUG|collector_api.py:200] 2021-02-03 16:05:34,687 > ++++++++++++++TIGER 일본니케이225++++++++++++++++++++2593/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:34,687 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:35,021 > 344
[DEBUG|collector_api.py:200] 2021-02-03 16:05:35,256 > ++++++++++++++KBSTAR V&S셀렉트밸류채권혼합++++++++++++++++++++2594/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:35,257 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:35,630 > 345
[DEBUG|collector_api.py:200] 2021-02-03 16:05:35,857 > ++++++++++++++TIGER 200IT레버리지++++++++++++++++++++2595/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:35,857 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:36,237 > 346
[DEBUG|collector_api.py:200] 2021-02-03 16:05:36,465 > ++++++++++++++TIGER 200에너지화학레버리지++++++++++++++++++++2596/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:36,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:36,845 > 347
[DEBUG|collector_api.py:200] 2021-02-03 16:05:37,066 > ++++++++++++++KODEX 바이오++++++++++++++++++++2597/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:37,067 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:37,451 > 348
[DEBUG|collector_api.py:200] 2021-02-03 16:05:37,675 > ++++++++++++++KODEX 모멘텀Plus++++++++++++++++++++2598/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:37,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:38,058 > 349
[DEBUG|collector_api.py:200] 2021-02-03 16:05:38,280 > ++++++++++++++KODEX 퀄리티Plus++++++++++++++++++++2599/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:38,280 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:38,666 > 350
[DEBUG|collector_api.py:200] 2021-02-03 16:05:38,879 > ++++++++++++++KODEX 밸류Plus++++++++++++++++++++2600/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:38,880 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:39,274 > 351
[DEBUG|collector_api.py:200] 2021-02-03 16:05:39,494 > ++++++++++++++TIGER 미국다우존스30++++++++++++++++++++2601/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:39,495 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:39,883 > 352
[DEBUG|collector_api.py:200] 2021-02-03 16:05:40,114 > ++++++++++++++TIGER 유로스탁스배당30++++++++++++++++++++2602/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:40,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:40,490 > 353
[DEBUG|collector_api.py:200] 2021-02-03 16:05:40,725 > ++++++++++++++TIGER 차이나HSCEI++++++++++++++++++++2603/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:40,726 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:41,098 > 354
[DEBUG|collector_api.py:200] 2021-02-03 16:05:41,335 > ++++++++++++++KINDEX 베트남VN30(합성)++++++++++++++++++++2604/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:41,336 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:41,707 > 355
[DEBUG|collector_api.py:200] 2021-02-03 16:05:41,959 > ++++++++++++++TIGER 일본TOPIX헬스케어(합성)++++++++++++++++++++2605/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:41,959 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:42,314 > 356
[DEBUG|collector_api.py:200] 2021-02-03 16:05:42,532 > ++++++++++++++TIGER S&P글로벌헬스케어(합성)++++++++++++++++++++2606/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:42,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:42,922 > 357
[DEBUG|collector_api.py:200] 2021-02-03 16:05:43,151 > ++++++++++++++KBSTAR 차이나HSCEI(H)++++++++++++++++++++2607/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:43,152 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:43,528 > 358
[DEBUG|collector_api.py:200] 2021-02-03 16:05:43,765 > ++++++++++++++TIGER 코스닥150선물인버스++++++++++++++++++++2608/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:43,765 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:44,136 > 359
[DEBUG|collector_api.py:200] 2021-02-03 16:05:44,362 > ++++++++++++++KODEX 코스닥150선물인버스++++++++++++++++++++2609/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:44,363 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:44,744 > 360
[DEBUG|collector_api.py:200] 2021-02-03 16:05:44,976 > ++++++++++++++KODEX 선진국MSCI World++++++++++++++++++++2610/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:44,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:45,351 > 361
[DEBUG|collector_api.py:200] 2021-02-03 16:05:45,569 > ++++++++++++++ARIRANG 고배당저변동50++++++++++++++++++++2611/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:45,570 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:45,959 > 362
[DEBUG|collector_api.py:200] 2021-02-03 16:05:46,184 > ++++++++++++++ARIRANG 고배당주채권혼합++++++++++++++++++++2612/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:46,185 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:46,567 > 363
[DEBUG|collector_api.py:200] 2021-02-03 16:05:46,796 > ++++++++++++++KINDEX 코스닥(합성)++++++++++++++++++++2613/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:46,797 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:47,174 > 364
[DEBUG|collector_api.py:200] 2021-02-03 16:05:47,402 > ++++++++++++++TIGER 200동일가중++++++++++++++++++++2614/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:47,402 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:47,782 > 365
[DEBUG|collector_api.py:200] 2021-02-03 16:05:48,018 > ++++++++++++++KBSTAR 200선물레버리지++++++++++++++++++++2615/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:48,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:48,390 > 366
[DEBUG|collector_api.py:200] 2021-02-03 16:05:48,619 > ++++++++++++++KBSTAR 200선물인버스++++++++++++++++++++2616/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:48,619 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:48,999 > 367
[DEBUG|collector_api.py:200] 2021-02-03 16:05:49,232 > ++++++++++++++KBSTAR 200선물인버스2X++++++++++++++++++++2617/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:49,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:49,607 > 368
[DEBUG|collector_api.py:200] 2021-02-03 16:05:49,838 > ++++++++++++++KODEX 200동일가중++++++++++++++++++++2618/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:49,838 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:50,214 > 369
[DEBUG|collector_api.py:200] 2021-02-03 16:05:50,452 > ++++++++++++++KODEX 200선물인버스2X++++++++++++++++++++2619/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:50,453 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:50,822 > 370
[DEBUG|collector_api.py:200] 2021-02-03 16:05:51,059 > ++++++++++++++TIGER 200선물인버스2X++++++++++++++++++++2620/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:51,059 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:51,429 > 371
[DEBUG|collector_api.py:200] 2021-02-03 16:05:51,701 > ++++++++++++++KBSTAR 모멘텀밸류++++++++++++++++++++2621/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:51,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:52,037 > 372
[DEBUG|collector_api.py:200] 2021-02-03 16:05:52,273 > ++++++++++++++KBSTAR 모멘텀로우볼++++++++++++++++++++2622/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:52,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:52,645 > 373
[DEBUG|collector_api.py:200] 2021-02-03 16:05:52,878 > ++++++++++++++ARIRANG 200선물레버리지++++++++++++++++++++2623/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:52,879 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:53,252 > 374
[DEBUG|collector_api.py:200] 2021-02-03 16:05:53,488 > ++++++++++++++ARIRANG 200선물인버스2X++++++++++++++++++++2624/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:53,488 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:53,859 > 375
[DEBUG|collector_api.py:200] 2021-02-03 16:05:54,099 > ++++++++++++++KOSEF 200선물인버스2X++++++++++++++++++++2625/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:54,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:54,468 > 376
[DEBUG|collector_api.py:200] 2021-02-03 16:05:54,699 > ++++++++++++++KOSEF 200선물인버스++++++++++++++++++++2626/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:54,699 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:55,076 > 377
[DEBUG|collector_api.py:200] 2021-02-03 16:05:55,311 > ++++++++++++++KOSEF 200선물레버리지++++++++++++++++++++2627/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:55,311 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:55,684 > 378
[DEBUG|collector_api.py:200] 2021-02-03 16:05:55,921 > ++++++++++++++KBSTAR 헬스케어++++++++++++++++++++2628/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:55,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:56,292 > 379
[DEBUG|collector_api.py:200] 2021-02-03 16:05:56,523 > ++++++++++++++KBSTAR 헬스케어채권혼합++++++++++++++++++++2629/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:56,523 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:56,899 > 380
[DEBUG|collector_api.py:200] 2021-02-03 16:05:57,142 > ++++++++++++++KINDEX 인도네시아MSCI(합성)++++++++++++++++++++2630/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:57,143 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:57,505 > 381
[DEBUG|collector_api.py:200] 2021-02-03 16:05:57,743 > ++++++++++++++ARIRANG 심천차이넥스트(합성)++++++++++++++++++++2631/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:57,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:58,114 > 382
[DEBUG|collector_api.py:200] 2021-02-03 16:05:58,345 > ++++++++++++++KODEX 심천ChiNext(합성)++++++++++++++++++++2632/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:58,346 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:58,722 > 383
[DEBUG|collector_api.py:200] 2021-02-03 16:05:58,954 > ++++++++++++++KOSEF 배당바이백Plus++++++++++++++++++++2633/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:58,955 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:59,330 > 384
[DEBUG|collector_api.py:200] 2021-02-03 16:05:59,575 > ++++++++++++++KOSEF 저PBR가중++++++++++++++++++++2634/2888
[DEBUG|open_api.py:656] 2021-02-03 16:05:59,575 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:05:59,937 > 385
[DEBUG|collector_api.py:200] 2021-02-03 16:06:00,173 > ++++++++++++++TIGER 코스닥150IT++++++++++++++++++++2635/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:00,173 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:00,543 > 386
[DEBUG|collector_api.py:200] 2021-02-03 16:06:00,765 > ++++++++++++++TIGER 코스닥150바이오테크++++++++++++++++++++2636/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:00,766 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:01,150 > 387
[DEBUG|collector_api.py:200] 2021-02-03 16:06:01,384 > ++++++++++++++TIGER 미국달러선물레버리지++++++++++++++++++++2637/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:01,384 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:01,759 > 388
[DEBUG|collector_api.py:200] 2021-02-03 16:06:01,994 > ++++++++++++++TIGER 미국달러선물인버스2X++++++++++++++++++++2638/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:01,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:02,367 > 389
[DEBUG|collector_api.py:200] 2021-02-03 16:06:02,604 > ++++++++++++++TIGER 우선주++++++++++++++++++++2639/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:02,604 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:02,974 > 390
[DEBUG|collector_api.py:200] 2021-02-03 16:06:03,216 > ++++++++++++++KODEX WTI원유선물(H)++++++++++++++++++++2640/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:03,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:03,580 > 391
[DEBUG|collector_api.py:200] 2021-02-03 16:06:03,815 > ++++++++++++++KODEX 미국달러선물++++++++++++++++++++2641/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:03,816 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:04,189 > 392
[DEBUG|collector_api.py:200] 2021-02-03 16:06:04,428 > ++++++++++++++KODEX 미국달러선물레버리지++++++++++++++++++++2642/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:04,430 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:04,797 > 393
[DEBUG|collector_api.py:200] 2021-02-03 16:06:05,034 > ++++++++++++++KODEX 미국달러선물인버스2X++++++++++++++++++++2643/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:05,035 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:05,405 > 394
[DEBUG|collector_api.py:200] 2021-02-03 16:06:05,636 > ++++++++++++++KODEX 미국달러선물인버스++++++++++++++++++++2644/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:05,637 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:06,014 > 395
[DEBUG|collector_api.py:200] 2021-02-03 16:06:06,259 > ++++++++++++++KINDEX 필리핀MSCI(합성)++++++++++++++++++++2645/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:06,259 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:06,621 > 396
[DEBUG|collector_api.py:200] 2021-02-03 16:06:06,889 > ++++++++++++++KINDEX 러시아MSCI(합성)++++++++++++++++++++2646/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:06,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:07,229 > 397
[DEBUG|collector_api.py:200] 2021-02-03 16:06:07,450 > ++++++++++++++KBSTAR 고배당++++++++++++++++++++2647/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:07,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:07,835 > 398
[DEBUG|collector_api.py:200] 2021-02-03 16:06:08,089 > ++++++++++++++KODEX 미디어&엔터테인먼트++++++++++++++++++++2648/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:08,090 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:08,443 > 399
[DEBUG|collector_api.py:200] 2021-02-03 16:06:08,684 > ++++++++++++++KODEX IT++++++++++++++++++++2649/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:08,684 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:09,052 > 400
[DEBUG|collector_api.py:200] 2021-02-03 16:06:09,284 > ++++++++++++++KODEX 경기소비재++++++++++++++++++++2650/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:09,284 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:09,659 > 401
[DEBUG|collector_api.py:200] 2021-02-03 16:06:09,899 > ++++++++++++++KODEX 필수소비재++++++++++++++++++++2651/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:09,900 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:10,268 > 402
[DEBUG|collector_api.py:200] 2021-02-03 16:06:10,507 > ++++++++++++++KODEX 헬스케어++++++++++++++++++++2652/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:10,508 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:10,877 > 403
[DEBUG|collector_api.py:200] 2021-02-03 16:06:11,114 > ++++++++++++++ARIRANG 중형주저변동50++++++++++++++++++++2653/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:11,114 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:11,485 > 404
[DEBUG|collector_api.py:200] 2021-02-03 16:06:11,718 > ++++++++++++++KBSTAR 미국장기국채선물(H)++++++++++++++++++++2654/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:11,718 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:12,093 > 405
[DEBUG|collector_api.py:200] 2021-02-03 16:06:12,320 > ++++++++++++++KBSTAR 미국장기국채선물인버스(H)++++++++++++++++++++2655/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:12,320 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:12,700 > 406
[DEBUG|collector_api.py:200] 2021-02-03 16:06:12,921 > ++++++++++++++KBSTAR 미국장기국채선물레버리지(합성 H)++++++++++++++++++++2656/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:12,922 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:13,307 > 407
[DEBUG|collector_api.py:200] 2021-02-03 16:06:13,524 > ++++++++++++++KBSTAR 미국장기국채선물인버스2X(합성 H)++++++++++++++++++++2657/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:13,525 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:13,914 > 408
[DEBUG|collector_api.py:200] 2021-02-03 16:06:14,135 > ++++++++++++++TIGER 200선물레버리지++++++++++++++++++++2658/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:14,135 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:14,521 > 409
[DEBUG|collector_api.py:200] 2021-02-03 16:06:14,743 > ++++++++++++++TIGER S&P글로벌인프라(합성)++++++++++++++++++++2659/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:14,743 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:15,129 > 410
[DEBUG|collector_api.py:200] 2021-02-03 16:06:15,368 > ++++++++++++++KODEX S&P글로벌인프라(합성)++++++++++++++++++++2660/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:15,368 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:15,738 > 411
[DEBUG|collector_api.py:200] 2021-02-03 16:06:15,960 > ++++++++++++++ARIRANG S&P글로벌인프라++++++++++++++++++++2661/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:15,961 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:16,347 > 412
[DEBUG|collector_api.py:200] 2021-02-03 16:06:16,597 > ++++++++++++++ARIRANG 미국S&P500(H)++++++++++++++++++++2662/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:16,597 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:16,955 > 413
[DEBUG|collector_api.py:200] 2021-02-03 16:06:17,180 > ++++++++++++++KBSTAR KQ고배당++++++++++++++++++++2663/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:17,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:17,563 > 414
[DEBUG|collector_api.py:200] 2021-02-03 16:06:17,784 > ++++++++++++++KBSTAR 코스닥150++++++++++++++++++++2664/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:17,784 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:18,171 > 415
[DEBUG|collector_api.py:200] 2021-02-03 16:06:18,396 > ++++++++++++++KODEX WTI원유선물인버스(H)++++++++++++++++++++2665/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:18,396 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:18,778 > 416
[DEBUG|collector_api.py:200] 2021-02-03 16:06:19,010 > ++++++++++++++KODEX 3대농산물선물(H)++++++++++++++++++++2666/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:19,011 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:19,386 > 417
[DEBUG|collector_api.py:200] 2021-02-03 16:06:19,609 > ++++++++++++++KINDEX 스마트모멘텀++++++++++++++++++++2667/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:19,609 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:19,993 > 418
[DEBUG|collector_api.py:200] 2021-02-03 16:06:20,230 > ++++++++++++++KINDEX 스마트밸류++++++++++++++++++++2668/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:20,231 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:20,600 > 419
[DEBUG|collector_api.py:200] 2021-02-03 16:06:20,823 > ++++++++++++++KBSTAR 단기국공채액티브++++++++++++++++++++2669/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:20,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:21,207 > 420
[DEBUG|collector_api.py:200] 2021-02-03 16:06:21,433 > ++++++++++++++KBSTAR 중장기국공채액티브++++++++++++++++++++2670/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:21,434 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:21,815 > 421
[DEBUG|collector_api.py:200] 2021-02-03 16:06:22,044 > ++++++++++++++TIGER 단기채권액티브++++++++++++++++++++2671/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:22,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:22,423 > 422
[DEBUG|collector_api.py:200] 2021-02-03 16:06:22,695 > ++++++++++++++KINDEX 중장기국공채액티브++++++++++++++++++++2672/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:22,695 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:23,031 > 423
[DEBUG|collector_api.py:200] 2021-02-03 16:06:23,264 > ++++++++++++++KODEX 종합채권(AA-이상)액티브++++++++++++++++++++2673/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:23,265 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:23,638 > 424
[DEBUG|collector_api.py:200] 2021-02-03 16:06:23,871 > ++++++++++++++KODEX 단기변동금리부채권액티브++++++++++++++++++++2674/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:23,871 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:24,245 > 425
[DEBUG|collector_api.py:200] 2021-02-03 16:06:24,464 > ++++++++++++++KODEX MSCI모멘텀++++++++++++++++++++2675/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:24,465 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:24,852 > 426
[DEBUG|collector_api.py:200] 2021-02-03 16:06:25,077 > ++++++++++++++KODEX MSCI밸류++++++++++++++++++++2676/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:25,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:25,461 > 427
[DEBUG|collector_api.py:200] 2021-02-03 16:06:25,701 > ++++++++++++++KODEX MSCI퀄리티++++++++++++++++++++2677/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:25,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:26,066 > 428
[DEBUG|collector_api.py:200] 2021-02-03 16:06:26,287 > ++++++++++++++KBSTAR 코스닥150선물인버스++++++++++++++++++++2678/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:26,288 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:26,675 > 429
[DEBUG|collector_api.py:200] 2021-02-03 16:06:26,901 > ++++++++++++++TIGER 글로벌4차산업혁신기술(합성 H)++++++++++++++++++++2679/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:26,901 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:27,282 > 430
[DEBUG|collector_api.py:200] 2021-02-03 16:06:27,500 > ++++++++++++++TIGER 글로벌자원생산기업(합성 H)++++++++++++++++++++2680/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:27,500 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:27,889 > 431
[DEBUG|collector_api.py:200] 2021-02-03 16:06:28,116 > ++++++++++++++KBSTAR 글로벌4차산업IT(합성 H)++++++++++++++++++++2681/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:28,116 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:28,497 > 432
[DEBUG|collector_api.py:200] 2021-02-03 16:06:28,724 > ++++++++++++++KODEX 미국S&P고배당커버드콜(합성 H)++++++++++++++++++++2682/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:28,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:29,105 > 433
[DEBUG|collector_api.py:200] 2021-02-03 16:06:29,340 > ++++++++++++++KODEX 글로벌4차산업로보틱스(합성)++++++++++++++++++++2683/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:29,341 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:29,714 > 434
[DEBUG|collector_api.py:200] 2021-02-03 16:06:29,951 > ++++++++++++++KINDEX S&P아시아TOP50++++++++++++++++++++2684/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:29,951 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:30,321 > 435
[DEBUG|collector_api.py:200] 2021-02-03 16:06:30,557 > ++++++++++++++TIGER 코스피++++++++++++++++++++2685/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:30,557 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:30,929 > 436
[DEBUG|collector_api.py:200] 2021-02-03 16:06:31,182 > ++++++++++++++TIGER 코스피대형주++++++++++++++++++++2686/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:31,183 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:31,536 > 437
[DEBUG|collector_api.py:200] 2021-02-03 16:06:31,766 > ++++++++++++++TIGER 코스피중형주++++++++++++++++++++2687/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:31,767 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:32,144 > 438
[DEBUG|collector_api.py:200] 2021-02-03 16:06:32,377 > ++++++++++++++KBSTAR 코스닥150선물레버리지++++++++++++++++++++2688/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:32,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:32,752 > 439
[DEBUG|collector_api.py:200] 2021-02-03 16:06:32,979 > ++++++++++++++ARIRANG ESG우수기업++++++++++++++++++++2689/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:32,979 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:33,359 > 440
[DEBUG|collector_api.py:200] 2021-02-03 16:06:33,595 > ++++++++++++++KODEX 200TR++++++++++++++++++++2690/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:33,596 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:33,968 > 441
[DEBUG|collector_api.py:200] 2021-02-03 16:06:34,216 > ++++++++++++++KODEX MSCI Korea TR++++++++++++++++++++2691/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:34,216 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:34,575 > 442
[DEBUG|collector_api.py:200] 2021-02-03 16:06:34,804 > ++++++++++++++ARIRANG 단기채권액티브++++++++++++++++++++2692/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:34,804 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:35,184 > 443
[DEBUG|collector_api.py:200] 2021-02-03 16:06:35,415 > ++++++++++++++KODEX 고배당++++++++++++++++++++2693/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:35,415 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:35,792 > 444
[DEBUG|collector_api.py:200] 2021-02-03 16:06:36,028 > ++++++++++++++KODEX 최소변동성++++++++++++++++++++2694/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:36,028 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:36,399 > 445
[DEBUG|collector_api.py:200] 2021-02-03 16:06:36,627 > ++++++++++++++KINDEX 미국IT인터넷S&P(합성 H)++++++++++++++++++++2695/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:36,628 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:37,007 > 446
[DEBUG|collector_api.py:200] 2021-02-03 16:06:37,247 > ++++++++++++++ARIRANG 주도업종++++++++++++++++++++2696/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:37,248 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:37,614 > 447
[DEBUG|collector_api.py:200] 2021-02-03 16:06:37,834 > ++++++++++++++KODEX 미국러셀2000(H)++++++++++++++++++++2697/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:37,834 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:38,222 > 448
[DEBUG|collector_api.py:200] 2021-02-03 16:06:38,454 > ++++++++++++++KODEX 골드선물인버스(H)++++++++++++++++++++2698/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:38,454 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:38,830 > 449
[DEBUG|collector_api.py:200] 2021-02-03 16:06:39,098 > ++++++++++++++KBSTAR 중소형고배당++++++++++++++++++++2699/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:39,099 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:39,437 > 450
[DEBUG|collector_api.py:200] 2021-02-03 16:06:39,661 > ++++++++++++++KBSTAR 국고채3년선물인버스++++++++++++++++++++2700/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:39,662 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:40,045 > 451
[DEBUG|collector_api.py:200] 2021-02-03 16:06:40,273 > ++++++++++++++KODEX 중국본토CSI300++++++++++++++++++++2701/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:40,273 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:40,653 > 452
[DEBUG|collector_api.py:200] 2021-02-03 16:06:40,888 > ++++++++++++++KODEX 200미국채혼합++++++++++++++++++++2702/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:40,889 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:41,262 > 453
[DEBUG|collector_api.py:200] 2021-02-03 16:06:41,483 > ++++++++++++++KBSTAR 200금융++++++++++++++++++++2703/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:41,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:41,870 > 454
[DEBUG|collector_api.py:200] 2021-02-03 16:06:42,109 > ++++++++++++++KBSTAR 200에너지화학++++++++++++++++++++2704/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:42,109 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:42,478 > 455
[DEBUG|collector_api.py:200] 2021-02-03 16:06:42,725 > ++++++++++++++KBSTAR 200IT++++++++++++++++++++2705/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:42,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:43,084 > 456
[DEBUG|collector_api.py:200] 2021-02-03 16:06:43,314 > ++++++++++++++KBSTAR 200중공업++++++++++++++++++++2706/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:43,315 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:43,692 > 457
[DEBUG|collector_api.py:200] 2021-02-03 16:06:43,921 > ++++++++++++++KBSTAR 200철강소재++++++++++++++++++++2707/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:43,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:44,299 > 458
[DEBUG|collector_api.py:200] 2021-02-03 16:06:44,532 > ++++++++++++++FOCUS ESG리더스++++++++++++++++++++2708/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:44,532 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:44,907 > 459
[DEBUG|collector_api.py:200] 2021-02-03 16:06:45,136 > ++++++++++++++ARIRANG 미국나스닥기술주++++++++++++++++++++2709/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:45,137 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:45,514 > 460
[DEBUG|collector_api.py:200] 2021-02-03 16:06:45,745 > ++++++++++++++KBSTAR 200건설++++++++++++++++++++2710/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:45,745 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:46,122 > 461
[DEBUG|collector_api.py:200] 2021-02-03 16:06:46,341 > ++++++++++++++KBSTAR 200경기소비재++++++++++++++++++++2711/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:46,342 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:46,730 > 462
[DEBUG|collector_api.py:200] 2021-02-03 16:06:46,965 > ++++++++++++++KBSTAR 200산업재++++++++++++++++++++2712/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:46,965 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:47,338 > 463
[DEBUG|collector_api.py:200] 2021-02-03 16:06:47,574 > ++++++++++++++KBSTAR 200생활소비재++++++++++++++++++++2713/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:47,574 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:47,945 > 464
[DEBUG|collector_api.py:200] 2021-02-03 16:06:48,175 > ++++++++++++++KODEX MSCI KOREA ESG유니버설++++++++++++++++++++2714/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:48,175 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:48,553 > 465
[DEBUG|collector_api.py:200] 2021-02-03 16:06:48,771 > ++++++++++++++TIGER MSCI KOREA ESG유니버설++++++++++++++++++++2715/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:48,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:49,160 > 466
[DEBUG|collector_api.py:200] 2021-02-03 16:06:49,389 > ++++++++++++++TIGER MSCI KOREA ESG리더스++++++++++++++++++++2716/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:49,389 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:49,768 > 467
[DEBUG|collector_api.py:200] 2021-02-03 16:06:49,982 > ++++++++++++++TIGER 200커버드콜ATM++++++++++++++++++++2717/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:49,983 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:06:50,377 > 468
[DEBUG|collector_api.py:200] 2021-02-03 16:06:50,600 > ++++++++++++++ARIRANG 국채선물10년++++++++++++++++++++2718/2888
[DEBUG|open_api.py:656] 2021-02-03 16:06:50,600 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:303] 2021-02-03 16:06:59,943 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:06:59,944 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:06:59,944 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:06:59,944 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:06:59,944 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:06:59,944 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:06:59,944 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:06:59,955 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:06:59,980 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:06:59,981 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:06:59,981 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:06:59,996 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:07:00,032 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:07:02,546 > code_update_check 함수에 들어왔습니다.
[DEBUG|collector_api.py:180] 2021-02-03 16:07:02,548 > db_to_daily_craw 함수에 들어왔습니다!
[DEBUG|collector_api.py:200] 2021-02-03 16:07:02,593 > ++++++++++++++ARIRANG 국채선물10년++++++++++++++++++++2718/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:02,594 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:02,595 > 1
[DEBUG|collector_api.py:200] 2021-02-03 16:07:03,625 > ++++++++++++++KBSTAR 200고배당커버드콜ATM++++++++++++++++++++2719/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:03,625 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:03,627 > 2
[DEBUG|collector_api.py:200] 2021-02-03 16:07:03,866 > ++++++++++++++KBSTAR ESG사회책임투자++++++++++++++++++++2720/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:03,866 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:04,233 > 3
[DEBUG|collector_api.py:200] 2021-02-03 16:07:04,464 > ++++++++++++++KINDEX 멕시코MSCI(합성)++++++++++++++++++++2721/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:04,464 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:04,839 > 4
[DEBUG|collector_api.py:200] 2021-02-03 16:07:05,069 > ++++++++++++++KOSEF 코스닥150선물++++++++++++++++++++2722/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:05,070 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:05,446 > 5
[DEBUG|collector_api.py:200] 2021-02-03 16:07:05,722 > ++++++++++++++KOSEF 코스닥150선물인버스++++++++++++++++++++2723/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:05,722 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:06,053 > 6
[DEBUG|collector_api.py:200] 2021-02-03 16:07:06,281 > ++++++++++++++KOSEF 코스닥150선물레버리지++++++++++++++++++++2724/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:06,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:06,661 > 7
[DEBUG|collector_api.py:200] 2021-02-03 16:07:06,890 > ++++++++++++++KODEX China H선물인버스(H)++++++++++++++++++++2725/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:06,890 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:07,268 > 8
[DEBUG|collector_api.py:200] 2021-02-03 16:07:07,502 > ++++++++++++++KBSTAR 차이나H선물인버스(H)++++++++++++++++++++2726/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:07,502 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:07,875 > 9
[DEBUG|collector_api.py:200] 2021-02-03 16:07:08,102 > ++++++++++++++KODEX MSCI EM선물(H)++++++++++++++++++++2727/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:08,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:08,483 > 10
[DEBUG|collector_api.py:200] 2021-02-03 16:07:08,702 > ++++++++++++++KBSTAR KRX300++++++++++++++++++++2728/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:08,702 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:09,089 > 11
[DEBUG|collector_api.py:200] 2021-02-03 16:07:09,346 > ++++++++++++++TIGER 대형성장++++++++++++++++++++2729/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:09,347 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:09,695 > 12
[DEBUG|collector_api.py:200] 2021-02-03 16:07:09,923 > ++++++++++++++TIGER 대형가치++++++++++++++++++++2730/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:09,923 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:10,303 > 13
[DEBUG|collector_api.py:200] 2021-02-03 16:07:10,528 > ++++++++++++++TIGER 중소형성장++++++++++++++++++++2731/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:10,529 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:10,909 > 14
[DEBUG|collector_api.py:200] 2021-02-03 16:07:11,139 > ++++++++++++++TIGER 중소형가치++++++++++++++++++++2732/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:11,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:11,516 > 15
[DEBUG|collector_api.py:200] 2021-02-03 16:07:11,741 > ++++++++++++++TIGER TOP10++++++++++++++++++++2733/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:11,741 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:12,124 > 16
[DEBUG|collector_api.py:200] 2021-02-03 16:07:12,350 > ++++++++++++++TIGER KRX300++++++++++++++++++++2734/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:12,350 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:12,730 > 17
[DEBUG|collector_api.py:200] 2021-02-03 16:07:12,962 > ++++++++++++++KODEX KRX300++++++++++++++++++++2735/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:12,963 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:13,337 > 18
[DEBUG|collector_api.py:200] 2021-02-03 16:07:13,567 > ++++++++++++++마이티 200커버드콜ATM레버리지++++++++++++++++++++2736/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:13,568 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:13,944 > 19
[DEBUG|collector_api.py:200] 2021-02-03 16:07:14,185 > ++++++++++++++SMART KRX300++++++++++++++++++++2737/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:14,186 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:14,549 > 20
[DEBUG|collector_api.py:200] 2021-02-03 16:07:14,785 > ++++++++++++++TIGER 일본엔선물++++++++++++++++++++2738/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:14,785 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:15,156 > 21
[DEBUG|collector_api.py:200] 2021-02-03 16:07:15,376 > ++++++++++++++TIGER 일본엔선물레버리지++++++++++++++++++++2739/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:15,377 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:15,763 > 22
[DEBUG|collector_api.py:200] 2021-02-03 16:07:16,002 > ++++++++++++++TIGER 일본엔선물인버스++++++++++++++++++++2740/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:16,003 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:16,368 > 23
[DEBUG|collector_api.py:200] 2021-02-03 16:07:16,602 > ++++++++++++++TIGER 일본엔선물인버스2X++++++++++++++++++++2741/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:16,602 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:16,976 > 24
[DEBUG|collector_api.py:200] 2021-02-03 16:07:17,204 > ++++++++++++++FOCUS KRX300++++++++++++++++++++2742/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:17,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:17,583 > 25
[DEBUG|collector_api.py:200] 2021-02-03 16:07:17,828 > ++++++++++++++ARIRANG KRX300++++++++++++++++++++2743/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:17,828 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:18,189 > 26
[DEBUG|collector_api.py:200] 2021-02-03 16:07:18,414 > ++++++++++++++KODEX 국채선물3년인버스++++++++++++++++++++2744/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:18,414 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:18,796 > 27
[DEBUG|collector_api.py:200] 2021-02-03 16:07:19,025 > ++++++++++++++HANARO 200++++++++++++++++++++2745/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:19,025 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:19,403 > 28
[DEBUG|collector_api.py:200] 2021-02-03 16:07:19,642 > ++++++++++++++KOSEF 200TR++++++++++++++++++++2746/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:19,643 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:20,009 > 29
[DEBUG|collector_api.py:200] 2021-02-03 16:07:20,239 > ++++++++++++++KBSTAR 국채선물10년++++++++++++++++++++2747/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:20,240 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:20,616 > 30
[DEBUG|collector_api.py:200] 2021-02-03 16:07:20,844 > ++++++++++++++KBSTAR 국채선물10년인버스++++++++++++++++++++2748/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:20,844 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:21,223 > 31
[DEBUG|collector_api.py:200] 2021-02-03 16:07:21,479 > ++++++++++++++SMART 200TR++++++++++++++++++++2749/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:21,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:21,832 > 32
[DEBUG|collector_api.py:200] 2021-02-03 16:07:22,073 > ++++++++++++++ARIRANG 200동일가중++++++++++++++++++++2750/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:22,074 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:22,437 > 33
[DEBUG|collector_api.py:200] 2021-02-03 16:07:22,676 > ++++++++++++++KODEX FnKorea50++++++++++++++++++++2751/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:22,676 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:23,044 > 34
[DEBUG|collector_api.py:200] 2021-02-03 16:07:23,275 > ++++++++++++++ARIRANG 국채선물3년++++++++++++++++++++2752/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:23,275 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:23,652 > 35
[DEBUG|collector_api.py:200] 2021-02-03 16:07:23,886 > ++++++++++++++KODEX 한국대만IT프리미어++++++++++++++++++++2753/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:23,887 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:24,258 > 36
[DEBUG|collector_api.py:200] 2021-02-03 16:07:24,485 > ++++++++++++++KINDEX 국채선물10년인버스++++++++++++++++++++2754/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:24,486 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:24,866 > 37
[DEBUG|collector_api.py:200] 2021-02-03 16:07:25,101 > ++++++++++++++KINDEX 국채선물3년인버스++++++++++++++++++++2755/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:25,102 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:25,473 > 38
[DEBUG|collector_api.py:200] 2021-02-03 16:07:25,699 > ++++++++++++++KBSTAR 중소형모멘텀로우볼++++++++++++++++++++2756/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:25,700 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:26,079 > 39
[DEBUG|collector_api.py:200] 2021-02-03 16:07:26,305 > ++++++++++++++KBSTAR 중소형모멘텀밸류++++++++++++++++++++2757/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:26,306 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:26,687 > 40
[DEBUG|collector_api.py:200] 2021-02-03 16:07:26,921 > ++++++++++++++TIGER K게임++++++++++++++++++++2758/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:26,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:27,293 > 41
[DEBUG|collector_api.py:200] 2021-02-03 16:07:27,515 > ++++++++++++++KBSTAR 게임테마++++++++++++++++++++2759/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:27,515 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:27,900 > 42
[DEBUG|collector_api.py:200] 2021-02-03 16:07:28,135 > ++++++++++++++KODEX 게임산업++++++++++++++++++++2760/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:28,136 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:28,507 > 43
[DEBUG|collector_api.py:200] 2021-02-03 16:07:28,737 > ++++++++++++++ARIRANG 코스닥150++++++++++++++++++++2761/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:28,737 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:29,113 > 44
[DEBUG|collector_api.py:200] 2021-02-03 16:07:29,343 > ++++++++++++++ARIRANG 코스닥150선물인버스++++++++++++++++++++2762/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:29,344 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:29,721 > 45
[DEBUG|collector_api.py:200] 2021-02-03 16:07:29,945 > ++++++++++++++ARIRANG 코스피중형주++++++++++++++++++++2763/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:29,946 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:30,328 > 46
[DEBUG|collector_api.py:200] 2021-02-03 16:07:30,559 > ++++++++++++++TIGER 국채선물3년인버스++++++++++++++++++++2764/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:30,560 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:30,934 > 47
[DEBUG|collector_api.py:200] 2021-02-03 16:07:31,163 > ++++++++++++++TIGER 국채선물10년인버스++++++++++++++++++++2765/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:31,163 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:31,541 > 48
[DEBUG|collector_api.py:200] 2021-02-03 16:07:31,769 > ++++++++++++++TIGER 중장기국채++++++++++++++++++++2766/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:31,770 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:32,148 > 49
[DEBUG|collector_api.py:200] 2021-02-03 16:07:32,377 > ++++++++++++++KBSTAR 코스피++++++++++++++++++++2767/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:32,378 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:32,754 > 50
[DEBUG|collector_api.py:200] 2021-02-03 16:07:32,989 > ++++++++++++++KODEX 미국채울트라30년선물(H)++++++++++++++++++++2768/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:32,990 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:33,361 > 51
[DEBUG|collector_api.py:200] 2021-02-03 16:07:33,582 > ++++++++++++++KODEX 미국채울트라30년선물인버스(H)++++++++++++++++++++2769/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:33,583 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:33,967 > 52
[DEBUG|collector_api.py:200] 2021-02-03 16:07:34,181 > ++++++++++++++HANARO KRX300++++++++++++++++++++2770/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:34,181 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:34,573 > 53
[DEBUG|collector_api.py:200] 2021-02-03 16:07:34,790 > ++++++++++++++HANARO 코스닥150++++++++++++++++++++2771/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:34,790 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:35,180 > 54
[DEBUG|collector_api.py:200] 2021-02-03 16:07:35,419 > ++++++++++++++HANARO 200선물레버리지++++++++++++++++++++2772/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:35,419 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:35,786 > 55
[DEBUG|collector_api.py:200] 2021-02-03 16:07:36,020 > ++++++++++++++KODEX 미국나스닥100선물(H)++++++++++++++++++++2773/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:36,021 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:36,392 > 56
[DEBUG|collector_api.py:200] 2021-02-03 16:07:36,623 > ++++++++++++++KINDEX 코스피++++++++++++++++++++2774/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:36,624 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:36,998 > 57
[DEBUG|collector_api.py:200] 2021-02-03 16:07:37,225 > ++++++++++++++TIGER 미국채10년선물++++++++++++++++++++2775/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:37,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:37,605 > 58
[DEBUG|collector_api.py:200] 2021-02-03 16:07:37,863 > ++++++++++++++TIGER 2차전지테마++++++++++++++++++++2776/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:37,863 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:38,211 > 59
[DEBUG|collector_api.py:200] 2021-02-03 16:07:38,436 > ++++++++++++++KODEX 2차전지산업++++++++++++++++++++2777/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:38,436 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:38,818 > 60
[DEBUG|collector_api.py:200] 2021-02-03 16:07:39,044 > ++++++++++++++HANARO 200선물인버스++++++++++++++++++++2778/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:39,044 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:39,424 > 61
[DEBUG|collector_api.py:200] 2021-02-03 16:07:39,639 > ++++++++++++++HANARO 코스닥150선물레버리지++++++++++++++++++++2779/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:39,639 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:40,030 > 62
[DEBUG|collector_api.py:200] 2021-02-03 16:07:40,247 > ++++++++++++++HANARO 단기통안채++++++++++++++++++++2780/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:40,247 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:40,636 > 63
[DEBUG|collector_api.py:200] 2021-02-03 16:07:40,861 > ++++++++++++++KODEX KRX300레버리지++++++++++++++++++++2781/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:40,861 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:41,243 > 64
[DEBUG|collector_api.py:200] 2021-02-03 16:07:41,461 > ++++++++++++++KBSTAR KRX300레버리지++++++++++++++++++++2782/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:41,462 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:41,850 > 65
[DEBUG|collector_api.py:200] 2021-02-03 16:07:42,076 > ++++++++++++++TIGER 의료기기++++++++++++++++++++2783/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:42,076 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:42,457 > 66
[DEBUG|collector_api.py:200] 2021-02-03 16:07:42,687 > ++++++++++++++TIGER 지주회사++++++++++++++++++++2784/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:42,687 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:43,063 > 67
[DEBUG|collector_api.py:200] 2021-02-03 16:07:43,294 > ++++++++++++++KODEX 미국채10년선물++++++++++++++++++++2785/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:43,294 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:43,670 > 68
[DEBUG|collector_api.py:200] 2021-02-03 16:07:43,921 > ++++++++++++++ARIRANG KRX300IT++++++++++++++++++++2786/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:43,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:44,276 > 69
[DEBUG|collector_api.py:200] 2021-02-03 16:07:44,501 > ++++++++++++++ARIRANG KRX300헬스케어++++++++++++++++++++2787/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:44,501 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:44,882 > 70
[DEBUG|collector_api.py:200] 2021-02-03 16:07:45,105 > ++++++++++++++KINDEX 미국WideMoat가치주++++++++++++++++++++2788/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:45,106 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:45,490 > 71
[DEBUG|collector_api.py:200] 2021-02-03 16:07:45,730 > ++++++++++++++KBSTAR 중국MSCI China선물(H)++++++++++++++++++++2789/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:45,730 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:46,096 > 72
[DEBUG|collector_api.py:200] 2021-02-03 16:07:46,318 > ++++++++++++++TIGER 200TR++++++++++++++++++++2790/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:46,318 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:46,701 > 73
[DEBUG|collector_api.py:200] 2021-02-03 16:07:46,929 > ++++++++++++++TIGER MSCI Korea TR++++++++++++++++++++2791/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:46,930 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:47,308 > 74
[DEBUG|collector_api.py:200] 2021-02-03 16:07:47,527 > ++++++++++++++KODEX 미국FANG플러스(H)++++++++++++++++++++2792/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:47,527 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:47,914 > 75
[DEBUG|collector_api.py:200] 2021-02-03 16:07:48,139 > ++++++++++++++HANARO 농업융복합산업++++++++++++++++++++2793/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:48,139 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:48,521 > 76
[DEBUG|collector_api.py:200] 2021-02-03 16:07:48,732 > ++++++++++++++TIGER 200커뮤니케이션서비스++++++++++++++++++++2794/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:48,733 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:49,129 > 77
[DEBUG|collector_api.py:200] 2021-02-03 16:07:49,339 > ++++++++++++++KBSTAR 200커뮤니케이션서비스++++++++++++++++++++2795/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:49,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:49,735 > 78
[DEBUG|collector_api.py:200] 2021-02-03 16:07:49,947 > ++++++++++++++KODEX Top5PlusTR++++++++++++++++++++2796/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:49,948 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:50,342 > 79
[DEBUG|collector_api.py:200] 2021-02-03 16:07:50,543 > ++++++++++++++KBSTAR 대형고배당10TR++++++++++++++++++++2797/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:50,543 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:50,949 > 80
[DEBUG|collector_api.py:200] 2021-02-03 16:07:51,167 > ++++++++++++++KINDEX 싱가포르리츠++++++++++++++++++++2798/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:51,168 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:51,557 > 81
[DEBUG|collector_api.py:200] 2021-02-03 16:07:51,770 > ++++++++++++++KOSEF 코스닥150++++++++++++++++++++2799/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:51,771 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:52,164 > 82
[DEBUG|collector_api.py:200] 2021-02-03 16:07:52,383 > ++++++++++++++TIGER 골드선물(H)++++++++++++++++++++2800/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:52,383 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:52,770 > 83
[DEBUG|collector_api.py:200] 2021-02-03 16:07:52,994 > ++++++++++++++KBSTAR KRX300미국달러선물혼합++++++++++++++++++++2801/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:52,994 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:53,375 > 84
[DEBUG|collector_api.py:200] 2021-02-03 16:07:53,583 > ++++++++++++++KODEX 멀티에셋하이인컴(H)++++++++++++++++++++2802/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:53,584 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:53,982 > 85
[DEBUG|collector_api.py:200] 2021-02-03 16:07:54,180 > ++++++++++++++KINDEX 스마트퀄리티++++++++++++++++++++2803/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:54,180 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:54,589 > 86
[DEBUG|collector_api.py:200] 2021-02-03 16:07:54,786 > ++++++++++++++KINDEX 스마트로우볼++++++++++++++++++++2804/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:54,787 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:55,196 > 87
[DEBUG|collector_api.py:200] 2021-02-03 16:07:55,398 > ++++++++++++++KINDEX 스마트하이베타++++++++++++++++++++2805/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:55,399 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:55,803 > 88
[DEBUG|collector_api.py:200] 2021-02-03 16:07:56,050 > ++++++++++++++HANARO e커머스++++++++++++++++++++2806/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:56,050 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:56,412 > 89
[DEBUG|collector_api.py:200] 2021-02-03 16:07:56,614 > ++++++++++++++HANARO 고배당++++++++++++++++++++2807/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:56,614 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:57,017 > 90
[DEBUG|collector_api.py:200] 2021-02-03 16:07:57,224 > ++++++++++++++KODEX Fn성장++++++++++++++++++++2808/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:57,225 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:57,624 > 91
[DEBUG|collector_api.py:200] 2021-02-03 16:07:57,826 > ++++++++++++++KODEX 배당가치++++++++++++++++++++2809/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:57,827 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:58,231 > 92
[DEBUG|collector_api.py:200] 2021-02-03 16:07:58,430 > ++++++++++++++KBSTAR 내수주플러스++++++++++++++++++++2810/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:58,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:58,836 > 93
[DEBUG|collector_api.py:200] 2021-02-03 16:07:59,041 > ++++++++++++++KBSTAR IT플러스++++++++++++++++++++2811/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:59,041 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:07:59,442 > 94
[DEBUG|collector_api.py:200] 2021-02-03 16:07:59,634 > ++++++++++++++ARIRANG 코스피TR++++++++++++++++++++2812/2888
[DEBUG|open_api.py:656] 2021-02-03 16:07:59,635 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:00,050 > 95
[DEBUG|collector_api.py:200] 2021-02-03 16:08:00,285 > ++++++++++++++TIGER 부동산인프라고배당++++++++++++++++++++2813/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:00,286 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:00,657 > 96
[DEBUG|collector_api.py:200] 2021-02-03 16:08:00,847 > ++++++++++++++KODEX TRF3070++++++++++++++++++++2814/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:00,848 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:01,264 > 97
[DEBUG|collector_api.py:200] 2021-02-03 16:08:01,468 > ++++++++++++++KODEX TRF5050++++++++++++++++++++2815/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:01,468 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:01,870 > 98
[DEBUG|collector_api.py:200] 2021-02-03 16:08:02,076 > ++++++++++++++KODEX TRF7030++++++++++++++++++++2816/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:02,077 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:02,477 > 99
[DEBUG|collector_api.py:200] 2021-02-03 16:08:02,685 > ++++++++++++++TIGER 미국달러단기채권액티브++++++++++++++++++++2817/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:02,685 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:03,084 > 100
[DEBUG|collector_api.py:200] 2021-02-03 16:08:03,288 > ++++++++++++++KOSEF Fn중소형++++++++++++++++++++2818/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:03,289 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:03,692 > 101
[DEBUG|collector_api.py:200] 2021-02-03 16:08:03,896 > ++++++++++++++KINDEX 200TR++++++++++++++++++++2819/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:03,896 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:04,299 > 102
[DEBUG|collector_api.py:200] 2021-02-03 16:08:04,491 > ++++++++++++++ARIRANG 미국단기우량회사채++++++++++++++++++++2820/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:04,492 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:04,906 > 103
[DEBUG|collector_api.py:200] 2021-02-03 16:08:05,107 > ++++++++++++++ARIRANG 미국장기우량회사채++++++++++++++++++++2821/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:05,108 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:05,512 > 104
[DEBUG|collector_api.py:200] 2021-02-03 16:08:05,701 > ++++++++++++++HANARO 200TR++++++++++++++++++++2822/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:05,701 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:06,119 > 105
[DEBUG|collector_api.py:200] 2021-02-03 16:08:06,322 > ++++++++++++++HANARO MSCI Korea TR++++++++++++++++++++2823/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:06,322 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:06,726 > 106
[DEBUG|collector_api.py:200] 2021-02-03 16:08:06,921 > ++++++++++++++ARIRANG KS로우볼가중TR++++++++++++++++++++2824/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:06,921 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:07,333 > 107
[DEBUG|collector_api.py:200] 2021-02-03 16:08:07,516 > ++++++++++++++ARIRANG KS로우사이즈가중TR++++++++++++++++++++2825/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:07,517 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:07,940 > 108
[DEBUG|collector_api.py:200] 2021-02-03 16:08:08,123 > ++++++++++++++ARIRANG KS모멘텀가중TR++++++++++++++++++++2826/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:08,123 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:08,548 > 109
[DEBUG|collector_api.py:200] 2021-02-03 16:08:08,734 > ++++++++++++++ARIRANG KS밸류가중TR++++++++++++++++++++2827/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:08,734 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:09,154 > 110
[DEBUG|collector_api.py:200] 2021-02-03 16:08:09,335 > ++++++++++++++ARIRANG KS퀄리티가중TR++++++++++++++++++++2828/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:09,335 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:09,761 > 111
[DEBUG|collector_api.py:200] 2021-02-03 16:08:09,981 > ++++++++++++++KBSTAR 팔라듐선물(H)++++++++++++++++++++2829/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:09,982 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:10,368 > 112
[DEBUG|collector_api.py:200] 2021-02-03 16:08:10,554 > ++++++++++++++KBSTAR 팔라듐선물인버스(H)++++++++++++++++++++2830/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:10,554 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:10,975 > 113
[DEBUG|collector_api.py:200] 2021-02-03 16:08:11,165 > ++++++++++++++KBSTAR 금융채액티브++++++++++++++++++++2831/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:11,166 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:11,583 > 114
[DEBUG|collector_api.py:200] 2021-02-03 16:08:11,764 > ++++++++++++++KODEX Fn멀티팩터++++++++++++++++++++2832/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:11,764 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:12,190 > 115
[DEBUG|collector_api.py:200] 2021-02-03 16:08:12,380 > ++++++++++++++KODEX 코스피대형주++++++++++++++++++++2833/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:12,380 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:12,797 > 116
[DEBUG|collector_api.py:200] 2021-02-03 16:08:12,976 > ++++++++++++++KODEX 200exTOP++++++++++++++++++++2834/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:12,976 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:13,404 > 117
[DEBUG|collector_api.py:200] 2021-02-03 16:08:13,613 > ++++++++++++++KODEX 200ESG++++++++++++++++++++2835/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:13,613 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:14,010 > 118
[DEBUG|collector_api.py:200] 2021-02-03 16:08:14,204 > ++++++++++++++TIGER KIS부동산인프라채권TR++++++++++++++++++++2836/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:14,204 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:14,617 > 119
[DEBUG|collector_api.py:200] 2021-02-03 16:08:14,778 > ++++++++++++++KINDEX 모닝스타싱가포르리츠채권혼합++++++++++++++++++++2837/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:14,779 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:15,223 > 120
[DEBUG|collector_api.py:200] 2021-02-03 16:08:15,400 > ++++++++++++++KBSTAR KRX국채선물3년10년스티프너++++++++++++++++++++2838/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:15,400 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:15,831 > 121
[DEBUG|collector_api.py:200] 2021-02-03 16:08:16,019 > ++++++++++++++KBSTAR KRX국채선물3년10년스티프너2X++++++++++++++++++++2839/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:16,019 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:16,437 > 122
[DEBUG|collector_api.py:200] 2021-02-03 16:08:16,615 > ++++++++++++++KBSTAR KRX국채선물3년10년플래트너++++++++++++++++++++2840/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:16,616 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:17,044 > 123
[DEBUG|collector_api.py:200] 2021-02-03 16:08:17,232 > ++++++++++++++KBSTAR KRX국채선물3년10년플래트너2X++++++++++++++++++++2841/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:17,232 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:17,652 > 124
[DEBUG|collector_api.py:200] 2021-02-03 16:08:17,832 > ++++++++++++++HANARO KAP초장기국고채++++++++++++++++++++2842/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:17,833 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:18,259 > 125
[DEBUG|collector_api.py:200] 2021-02-03 16:08:18,431 > ++++++++++++++KODEX TSE일본리츠(H)++++++++++++++++++++2843/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:18,431 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:18,865 > 126
[DEBUG|collector_api.py:200] 2021-02-03 16:08:19,053 > ++++++++++++++KODEX 다우존스미국리츠(H)++++++++++++++++++++2844/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:19,053 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:19,472 > 127
[DEBUG|collector_api.py:200] 2021-02-03 16:08:19,645 > ++++++++++++++KBSTAR 미국고정배당우선증권ICE TR++++++++++++++++++++2845/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:19,646 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:20,081 > 128
[DEBUG|collector_api.py:200] 2021-02-03 16:08:20,249 > ++++++++++++++HANARO 글로벌럭셔리S&P(합성)++++++++++++++++++++2846/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:20,249 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:20,686 > 129
[DEBUG|collector_api.py:200] 2021-02-03 16:08:20,864 > ++++++++++++++KINDEX 코스닥150++++++++++++++++++++2847/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:20,864 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:21,293 > 130
[DEBUG|collector_api.py:200] 2021-02-03 16:08:21,460 > ++++++++++++++KINDEX KIS종합채권(AA-이상)액티브++++++++++++++++++++2848/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:21,460 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:21,899 > 131
[DEBUG|collector_api.py:200] 2021-02-03 16:08:22,068 > ++++++++++++++TIGER CD금리투자KIS(합성)++++++++++++++++++++2849/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:22,068 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:22,506 > 132
[DEBUG|collector_api.py:200] 2021-02-03 16:08:22,671 > ++++++++++++++KODEX 코스피TR++++++++++++++++++++2850/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:22,671 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:23,112 > 133
[DEBUG|collector_api.py:200] 2021-02-03 16:08:23,281 > ++++++++++++++KODEX 200롱코스닥150숏선물++++++++++++++++++++2851/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:23,281 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:23,718 > 134
[DEBUG|collector_api.py:200] 2021-02-03 16:08:23,886 > ++++++++++++++KODEX 코스닥150롱코스피200숏선물++++++++++++++++++++2852/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:23,886 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:24,324 > 135
[DEBUG|collector_api.py:200] 2021-02-03 16:08:24,483 > ++++++++++++++KINDEX 미국S&P500++++++++++++++++++++2853/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:24,484 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:24,931 > 136
[DEBUG|collector_api.py:200] 2021-02-03 16:08:25,081 > ++++++++++++++TIGER 미국S&P500++++++++++++++++++++2854/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:25,081 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:25,538 > 137
[DEBUG|collector_api.py:200] 2021-02-03 16:08:25,707 > ++++++++++++++KBSTAR 200TR++++++++++++++++++++2855/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:25,707 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:26,145 > 138
[DEBUG|collector_api.py:200] 2021-02-03 16:08:26,313 > ++++++++++++++KBSTAR 코스피ex200++++++++++++++++++++2856/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:26,314 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:26,752 > 139
[DEBUG|collector_api.py:200] 2021-02-03 16:08:26,924 > ++++++++++++++SMART KIS단기통안채++++++++++++++++++++2857/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:26,924 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:27,359 > 140
[DEBUG|collector_api.py:200] 2021-02-03 16:08:27,523 > ++++++++++++++KODEX 장기종합채권(AA-이상)액티브KAP++++++++++++++++++++2858/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:27,524 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:27,965 > 141
[DEBUG|collector_api.py:200] 2021-02-03 16:08:28,132 > ++++++++++++++KODEX 200IT TR++++++++++++++++++++2859/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:28,132 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:28,571 > 142
[DEBUG|collector_api.py:200] 2021-02-03 16:08:28,725 > ++++++++++++++KODEX 혁신기술테마액티브++++++++++++++++++++2860/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:28,725 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:29,178 > 143
[DEBUG|collector_api.py:200] 2021-02-03 16:08:29,338 > ++++++++++++++TIGER KRX BBIG K-뉴딜++++++++++++++++++++2861/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:29,339 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:29,784 > 144
[DEBUG|collector_api.py:200] 2021-02-03 16:08:29,939 > ++++++++++++++TIGER KRX바이오K-뉴딜++++++++++++++++++++2862/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:29,939 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:30,391 > 145
[DEBUG|collector_api.py:200] 2021-02-03 16:08:30,545 > ++++++++++++++TIGER KRX2차전지K-뉴딜++++++++++++++++++++2863/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:30,545 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:30,997 > 146
[DEBUG|collector_api.py:200] 2021-02-03 16:08:31,156 > ++++++++++++++TIGER KRX게임K-뉴딜++++++++++++++++++++2864/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:31,157 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:31,604 > 147
[DEBUG|collector_api.py:200] 2021-02-03 16:08:31,816 > ++++++++++++++TIGER KRX인터넷K-뉴딜++++++++++++++++++++2865/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:31,817 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:32,211 > 148
[DEBUG|collector_api.py:200] 2021-02-03 16:08:32,375 > ++++++++++++++TIGER AI코리아그로스액티브++++++++++++++++++++2866/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:32,375 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:32,816 > 149
[DEBUG|collector_api.py:200] 2021-02-03 16:08:32,969 > ++++++++++++++KINDEX 국고채10년++++++++++++++++++++2867/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:32,970 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:33,423 > 150
[DEBUG|collector_api.py:200] 2021-02-03 16:08:33,585 > ++++++++++++++KINDEX 미국나스닥100++++++++++++++++++++2868/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:33,585 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:34,029 > 151
[DEBUG|collector_api.py:200] 2021-02-03 16:08:34,190 > ++++++++++++++HANARO Fn5G산업++++++++++++++++++++2869/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:34,190 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:34,635 > 152
[DEBUG|collector_api.py:200] 2021-02-03 16:08:34,792 > ++++++++++++++KBSTAR Fn5G테크++++++++++++++++++++2870/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:34,793 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:35,242 > 153
[DEBUG|collector_api.py:200] 2021-02-03 16:08:35,401 > ++++++++++++++KBSTAR Fn수소경제테마++++++++++++++++++++2871/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:35,401 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:35,848 > 154
[DEBUG|collector_api.py:200] 2021-02-03 16:08:36,018 > ++++++++++++++HANARO Fn K-뉴딜디지털플러스++++++++++++++++++++2872/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:36,018 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:36,454 > 155
[DEBUG|collector_api.py:200] 2021-02-03 16:08:36,610 > ++++++++++++++KBSTAR Fn K-뉴딜디지털플러스++++++++++++++++++++2873/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:36,610 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:37,060 > 156
[DEBUG|collector_api.py:200] 2021-02-03 16:08:37,222 > ++++++++++++++KINDEX Fn K-뉴딜디지털플러스++++++++++++++++++++2874/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:37,222 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:37,666 > 157
[DEBUG|collector_api.py:200] 2021-02-03 16:08:37,824 > ++++++++++++++KBSTAR 미국나스닥100++++++++++++++++++++2875/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:37,824 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:38,272 > 158
[DEBUG|collector_api.py:200] 2021-02-03 16:08:38,417 > ++++++++++++++KODEX Fn K-뉴딜디지털플러스++++++++++++++++++++2876/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:38,418 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:38,878 > 159
[DEBUG|collector_api.py:200] 2021-02-03 16:08:39,048 > ++++++++++++++KINDEX 블룸버그베트남VN30선물레버리지(H)++++++++++++++++++++2877/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:39,048 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:39,484 > 160
[DEBUG|collector_api.py:200] 2021-02-03 16:08:39,638 > ++++++++++++++KBSTAR 차이나항셍테크++++++++++++++++++++2878/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:39,638 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:40,091 > 161
[DEBUG|collector_api.py:200] 2021-02-03 16:08:40,250 > ++++++++++++++TIGER 차이나항셍테크++++++++++++++++++++2879/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:40,250 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:40,697 > 162
[DEBUG|collector_api.py:200] 2021-02-03 16:08:40,851 > ++++++++++++++TIGER 글로벌클라우드컴퓨팅INDXX++++++++++++++++++++2880/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:40,851 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:41,305 > 163
[DEBUG|collector_api.py:200] 2021-02-03 16:08:41,450 > ++++++++++++++TIGER 차이나전기차SOLACTIVE++++++++++++++++++++2881/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:41,450 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:41,912 > 164
[DEBUG|collector_api.py:200] 2021-02-03 16:08:42,057 > ++++++++++++++TIGER 차이나바이오테크SOLACTIVE++++++++++++++++++++2882/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:42,058 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:42,519 > 165
[DEBUG|collector_api.py:200] 2021-02-03 16:08:42,657 > ++++++++++++++KINDEX 차이나항셍테크++++++++++++++++++++2883/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:42,657 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:43,124 > 166
[DEBUG|collector_api.py:200] 2021-02-03 16:08:43,267 > ++++++++++++++KODEX 차이나항셍테크++++++++++++++++++++2884/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:43,267 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:43,731 > 167
[DEBUG|collector_api.py:200] 2021-02-03 16:08:43,877 > ++++++++++++++KODEX K-이노베이션액티브++++++++++++++++++++2885/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:43,878 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:44,338 > 168
[DEBUG|collector_api.py:200] 2021-02-03 16:08:44,479 > ++++++++++++++ARIRANG 신흥국MSCI인버스(합성 H)++++++++++++++++++++2886/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:44,480 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:44,946 > 169
[DEBUG|collector_api.py:200] 2021-02-03 16:08:45,107 > ++++++++++++++KOSEF 미국방어배당성장나스닥++++++++++++++++++++2887/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:45,107 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:45,551 > 170
[DEBUG|collector_api.py:200] 2021-02-03 16:08:45,699 > ++++++++++++++KBSTAR 글로벌데이터센터리츠나스닥(합성)++++++++++++++++++++2888/2888
[DEBUG|open_api.py:656] 2021-02-03 16:08:45,699 > get_total_data 함수에 들어왔다!
[DEBUG|open_api.py:1124] 2021-02-03 16:08:46,156 > 171
[DEBUG|collector_api.py:215] 2021-02-03 16:08:46,312 > daily_crawler success !!!
[DEBUG|collector_api.py:151] 2021-02-03 16:09:31,067 > daily_buy_list success !!!
[DEBUG|open_api.py:303] 2021-02-03 16:09:45,718 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:09:45,718 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:09:45,718 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:09:45,718 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:09:45,719 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:09:45,719 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:09:45,719 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:09:45,744 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:09:45,772 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:09:45,773 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:09:45,773 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:09:45,790 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:09:45,821 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:09:48,247 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:10:05,937 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:10:05,938 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:10:05,938 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:10:05,938 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:10:05,938 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:10:05,938 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:10:05,938 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:10:05,950 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:10:05,978 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:10:05,978 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:10:05,978 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:10:05,992 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:10:06,019 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:10:08,566 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:10:26,388 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:10:26,389 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:10:26,389 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:10:26,389 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:10:26,390 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:10:26,390 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:10:26,390 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:10:26,401 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:10:26,430 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:10:26,430 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:10:26,430 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:10:26,444 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:10:26,467 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:10:28,868 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:10:46,596 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:10:46,597 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:10:46,597 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:10:46,597 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:10:46,597 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:10:46,597 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:10:46,598 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:10:46,610 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:10:46,639 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:10:46,640 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:10:46,640 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:10:46,660 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:10:46,684 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:10:49,267 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:11:06,822 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:11:06,822 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:11:06,822 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:11:06,822 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:11:06,823 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:11:06,823 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:11:06,823 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:11:06,835 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:11:06,861 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:11:06,862 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:11:06,862 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:11:06,888 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:11:06,913 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:11:09,259 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:11:29,703 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:11:29,703 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:11:29,704 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:11:29,704 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:11:29,704 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:11:29,704 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:11:29,704 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:11:29,718 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:11:29,742 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:11:29,742 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:11:29,742 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:11:29,757 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:11:29,781 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:11:32,214 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:11:49,434 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:11:49,434 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:11:49,434 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:11:49,435 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:11:49,435 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:11:49,435 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:11:49,435 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:11:49,453 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:11:49,479 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:11:49,480 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:11:49,480 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:11:49,493 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:11:49,515 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:11:51,951 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:12:14,531 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:12:14,531 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:12:14,531 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:12:14,532 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:12:14,532 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:12:14,532 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:12:14,532 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:12:14,545 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:12:14,568 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:12:14,569 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:12:14,569 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:12:14,583 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:12:14,607 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:12:17,094 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:12:34,439 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:12:34,440 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:12:34,440 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:12:34,440 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:12:34,440 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:12:34,440 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:12:34,441 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:12:34,452 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:12:34,476 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:12:34,476 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:12:34,477 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:12:34,490 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:12:34,523 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:12:37,071 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:13:05,370 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:13:05,371 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:13:05,371 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:13:05,371 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:13:05,371 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:13:05,371 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:13:05,372 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:13:05,384 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:13:05,409 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:13:05,410 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:13:05,410 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:13:05,422 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:13:05,449 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:13:09,608 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:13:26,708 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:13:26,708 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:13:26,708 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:13:26,709 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:13:26,709 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:13:26,709 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:13:26,709 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:13:26,722 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:13:26,750 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:13:26,751 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:13:26,751 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:13:26,764 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:13:26,785 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:13:29,412 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:13:46,755 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:13:46,756 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:13:46,756 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:13:46,756 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:13:46,756 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:13:46,756 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:13:46,756 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:13:46,768 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:13:46,792 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:13:46,792 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:13:46,793 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:13:46,804 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:13:46,832 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:13:49,138 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:14:07,043 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:14:07,043 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:14:07,043 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:14:07,044 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:14:07,044 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:14:07,044 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:14:07,044 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:14:07,056 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:14:07,081 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:14:07,081 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:14:07,081 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:14:07,095 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:14:07,121 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:14:09,754 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:14:26,900 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:14:26,901 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:14:26,901 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:14:26,901 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:14:26,902 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:14:26,902 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:14:26,902 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:14:26,913 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:14:26,938 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:14:26,939 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:14:26,939 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:14:26,952 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:14:26,975 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:14:29,495 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:14:46,720 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:14:46,721 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:14:46,721 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:14:46,721 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:14:46,721 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:14:46,721 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:14:46,722 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:14:46,734 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:14:46,758 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:14:46,758 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:14:46,758 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:14:46,771 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:14:46,792 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:14:49,122 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:15:06,345 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:15:06,345 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:15:06,345 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:15:06,346 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:15:06,346 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:15:06,346 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:15:06,346 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:15:06,359 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:15:06,387 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:15:06,387 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:15:06,387 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:15:06,403 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:15:06,428 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:15:08,992 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:15:26,360 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:15:26,361 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:15:26,361 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:15:26,361 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:15:26,361 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:15:26,362 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:15:26,362 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:15:26,374 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:15:26,398 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:15:26,398 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:15:26,399 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:15:26,412 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:15:26,438 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:15:28,809 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:15:45,796 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:15:45,796 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:15:45,797 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:15:45,797 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:15:45,797 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:15:45,797 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:15:45,797 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:15:45,809 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:15:45,833 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:15:45,834 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:15:45,834 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:15:45,847 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:15:45,868 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:15:48,315 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:16:05,458 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:16:05,459 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:16:05,459 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:16:05,459 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:16:05,459 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:16:05,460 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:16:05,460 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:16:05,472 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:16:05,497 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:16:05,497 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:16:05,497 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:16:05,511 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:16:05,533 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:16:08,244 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:16:25,494 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:16:25,495 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:16:25,495 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:16:25,495 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:16:25,495 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:16:25,495 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:16:25,495 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:16:25,508 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:16:25,531 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:16:25,532 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:16:25,532 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:16:25,544 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:16:25,566 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:16:28,137 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:16:45,110 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:16:45,110 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:16:45,111 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:16:45,111 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:16:45,111 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:16:45,111 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:16:45,111 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:16:45,122 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:16:45,147 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:16:45,148 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:16:45,148 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:16:45,161 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:16:45,189 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:16:47,674 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:17:04,799 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:17:04,799 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:17:04,799 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:17:04,800 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:17:04,800 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:17:04,800 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:17:04,800 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:17:04,812 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:17:04,835 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:17:04,836 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:17:04,836 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:17:04,855 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:17:04,877 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:17:07,412 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:17:24,658 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:17:24,658 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:17:24,659 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:17:24,659 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:17:24,659 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:17:24,659 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:17:24,659 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:17:24,670 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:17:24,705 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:17:24,706 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:17:24,706 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:17:24,720 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:17:24,742 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:17:27,088 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:17:44,271 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:17:44,271 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:17:44,271 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:17:44,272 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:17:44,272 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:17:44,272 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:17:44,272 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:17:44,283 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:17:44,307 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:17:44,308 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:17:44,308 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:17:44,322 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:17:44,345 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:17:46,693 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:18:03,745 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:18:03,746 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:18:03,746 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:18:03,746 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:18:03,746 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:18:03,747 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:18:03,747 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:18:03,759 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:18:03,784 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:18:03,784 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:18:03,785 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:18:03,798 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:18:03,820 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:18:06,298 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:18:23,329 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:18:23,329 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:18:23,330 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:18:23,330 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:18:23,330 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:18:23,330 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:18:23,330 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:18:23,342 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:18:23,367 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:18:23,368 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:18:23,368 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:18:23,382 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:18:23,411 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:18:25,771 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:18:42,990 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:18:42,991 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:18:42,991 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:18:42,991 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:18:42,992 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:18:42,992 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:18:42,992 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:18:43,003 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:18:43,029 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:18:43,030 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:18:43,030 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:18:43,041 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:18:43,064 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:18:45,535 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:19:02,802 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:19:02,802 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:19:02,802 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:19:02,803 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:19:02,803 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:19:02,803 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:19:02,803 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:19:02,814 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:19:02,839 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:19:02,839 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:19:02,839 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:19:02,852 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:19:02,879 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:19:05,409 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:19:26,151 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:19:26,152 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:19:26,152 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:19:26,153 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:19:26,153 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:19:26,153 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:19:26,153 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:19:26,166 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:19:26,192 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:19:26,193 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:19:26,193 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:19:26,207 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:19:26,231 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:19:28,682 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:19:45,745 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:19:45,745 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:19:45,745 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:19:45,746 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:19:45,746 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:19:45,746 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:19:45,746 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:19:45,758 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:19:45,784 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:19:45,785 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:19:45,785 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:19:45,796 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:19:45,828 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:19:48,251 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:20:05,434 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:20:05,435 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:20:05,435 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:20:05,435 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:20:05,435 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:20:05,435 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:20:05,435 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:20:05,450 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:20:05,478 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:20:05,479 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:20:05,479 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:20:05,493 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:20:05,516 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:20:08,026 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:20:25,356 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:20:25,356 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:20:25,356 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:20:25,357 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:20:25,357 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:20:25,357 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:20:25,357 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:20:25,369 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:20:25,396 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:20:25,397 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:20:25,397 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:20:25,410 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:20:25,434 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:20:27,884 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:20:46,894 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:20:46,895 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:20:46,895 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:20:46,895 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:20:46,895 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:20:46,895 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:20:46,896 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:20:46,908 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:20:46,934 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:20:46,935 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:20:46,935 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:20:46,948 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:20:46,974 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:20:49,370 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:21:06,524 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:21:06,525 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:21:06,525 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:21:06,525 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:21:06,525 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:21:06,526 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:21:06,526 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:21:06,538 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:21:06,562 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:21:06,563 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:21:06,563 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:21:06,576 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:21:06,600 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:21:08,944 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:21:26,126 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:21:26,127 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:21:26,127 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:21:26,127 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:21:26,128 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:21:26,128 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:21:26,128 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:21:26,139 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:21:26,164 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:21:26,165 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:21:26,165 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:21:26,180 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:21:26,211 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:21:28,776 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:21:45,950 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:21:45,950 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:21:45,951 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:21:45,951 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:21:45,951 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:21:45,951 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:21:45,951 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:21:45,963 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:21:45,989 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:21:45,990 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:21:45,990 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:21:46,003 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:21:46,030 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:21:49,194 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:22:06,634 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:22:06,634 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:22:06,634 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:22:06,635 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:22:06,635 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:22:06,635 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:22:06,635 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:22:06,648 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:22:06,674 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:22:06,675 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:22:06,675 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:22:06,687 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:22:06,711 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:22:09,175 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:22:26,347 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:22:26,348 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:22:26,348 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:22:26,348 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:22:26,348 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:22:26,348 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:22:26,348 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:22:26,360 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:22:26,388 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:22:26,389 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:22:26,389 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:22:26,402 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:22:26,430 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:22:28,862 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:22:46,065 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:22:46,065 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:22:46,065 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:22:46,066 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:22:46,066 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:22:46,066 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:22:46,066 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:22:46,077 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:22:46,104 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:22:46,105 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:22:46,105 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:22:46,117 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:22:46,148 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:22:48,561 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:23:05,695 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:23:05,695 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:23:05,695 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:23:05,695 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:23:05,696 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:23:05,696 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:23:05,696 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:23:05,707 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:23:05,734 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:23:05,734 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:23:05,734 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:23:05,749 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:23:05,773 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:23:08,326 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:23:25,483 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:23:25,483 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:23:25,483 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:23:25,483 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:23:25,483 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:23:25,483 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:23:25,483 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:23:25,495 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:23:25,522 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:23:25,523 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:23:25,523 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:23:25,537 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:23:25,559 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:23:27,922 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:23:45,389 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:23:45,390 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:23:45,390 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:23:45,390 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:23:45,391 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:23:45,391 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:23:45,391 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:23:45,401 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:23:45,427 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:23:45,427 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:23:45,427 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:23:45,442 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:23:45,465 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:23:48,025 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:24:05,849 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:24:05,849 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:24:05,849 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:24:05,850 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:24:05,850 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:24:05,850 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:24:05,850 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:24:05,861 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:24:05,887 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:24:05,888 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:24:05,888 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:24:05,900 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:24:05,925 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:24:08,617 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:24:25,966 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:24:25,967 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:24:25,967 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:24:25,967 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:24:25,967 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:24:25,967 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:24:25,967 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:24:25,980 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:24:26,012 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:24:26,013 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:24:26,013 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:24:26,027 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:24:26,051 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:24:28,523 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:24:45,871 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:24:45,871 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:24:45,871 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:24:45,872 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:24:45,872 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:24:45,872 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:24:45,872 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:24:45,885 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:24:45,910 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:24:45,910 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:24:45,910 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:24:45,931 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:24:45,956 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:24:48,326 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:25:06,107 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:25:06,107 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:25:06,107 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:25:06,107 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:25:06,108 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:25:06,108 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:25:06,108 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:25:06,120 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:25:06,147 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:25:06,148 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:25:06,148 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:25:06,162 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:25:06,186 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:25:08,579 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:25:25,915 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:25:25,915 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:25:25,915 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:25:25,915 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:25:25,916 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:25:25,916 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:25:25,916 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:25:25,928 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:25:25,953 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:25:25,954 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:25:25,954 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:25:25,967 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:25:25,990 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:25:29,171 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:25:46,538 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:25:46,538 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:25:46,538 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:25:46,539 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:25:46,539 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:25:46,539 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:25:46,539 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:25:46,550 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:25:46,577 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:25:46,578 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:25:46,578 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:25:46,592 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:25:46,617 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:25:48,984 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:26:06,566 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:26:06,566 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:26:06,566 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:26:06,566 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:26:06,567 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:26:06,567 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:26:06,567 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:26:06,578 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:26:06,611 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:26:06,611 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:26:06,612 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:26:06,628 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:26:06,667 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:26:09,170 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:26:26,454 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:26:26,454 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:26:26,454 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:26:26,455 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:26:26,455 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:26:26,455 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:26:26,455 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:26:26,467 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:26:26,493 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:26:26,493 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:26:26,493 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:26:26,518 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:26:26,540 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:26:28,948 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:26:46,374 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:26:46,375 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:26:46,375 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:26:46,375 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:26:46,375 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:26:46,375 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:26:46,375 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:26:46,389 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:26:46,415 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:26:46,416 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:26:46,416 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:26:46,431 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:26:46,453 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:26:48,954 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:27:06,924 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:27:06,925 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:27:06,925 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:27:06,926 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:27:06,926 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:27:06,926 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:27:06,926 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:27:06,938 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:27:06,964 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:27:06,964 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:27:06,965 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:27:06,979 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:27:07,002 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:27:09,454 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:27:27,078 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:27:27,078 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:27:27,079 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:27:27,079 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:27:27,079 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:27:27,079 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:27:27,080 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:27:27,090 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:27:27,117 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:27:27,117 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:27:27,118 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:27:27,132 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:27:27,157 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:27:29,561 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:27:47,795 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:27:47,796 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:27:47,796 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:27:47,796 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:27:47,796 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:27:47,797 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:27:47,797 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:27:47,808 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:27:47,834 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:27:47,835 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:27:47,835 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:27:47,849 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:27:47,872 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:27:50,202 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:28:07,759 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:28:07,759 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:28:07,759 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:28:07,759 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:28:07,760 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:28:07,760 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:28:07,760 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:28:07,772 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:28:07,797 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:28:07,798 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:28:07,798 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:28:07,812 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:28:07,838 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:28:10,177 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:28:27,404 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:28:27,404 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:28:27,404 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:28:27,404 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:28:27,405 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:28:27,405 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:28:27,405 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:28:27,417 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:28:27,442 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:28:27,442 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:28:27,443 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:28:27,457 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:28:27,479 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:28:29,857 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:28:47,039 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:28:47,039 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:28:47,040 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:28:47,040 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:28:47,040 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:28:47,040 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:28:47,040 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:28:47,052 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:28:47,078 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:28:47,078 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:28:47,079 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:28:47,091 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:28:47,114 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:28:49,491 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:29:06,774 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:29:06,775 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:29:06,775 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:29:06,775 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:29:06,775 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:29:06,775 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:29:06,775 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:29:06,787 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:29:06,814 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:29:06,814 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:29:06,814 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:29:06,828 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:29:06,860 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:29:09,343 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:29:26,900 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:29:26,901 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:29:26,901 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:29:26,901 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:29:26,901 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:29:26,901 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:29:26,902 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:29:26,913 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:29:26,938 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:29:26,939 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:29:26,939 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:29:26,962 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:29:26,984 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:29:29,345 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:29:46,748 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:29:46,749 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:29:46,749 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:29:46,749 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:29:46,749 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:29:46,750 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:29:46,750 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:29:46,762 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:29:46,788 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:29:46,788 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:29:46,789 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:29:46,802 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:29:46,829 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:29:49,164 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:30:06,535 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:30:06,535 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:30:06,535 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:30:06,535 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:30:06,536 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:30:06,536 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:30:06,536 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:30:06,548 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:30:06,573 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:30:06,574 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:30:06,574 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:30:06,588 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:30:06,611 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:30:09,453 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:30:26,751 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:30:26,752 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:30:26,752 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:30:26,752 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:30:26,752 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:30:26,753 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:30:26,753 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:30:26,764 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:30:26,789 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:30:26,790 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:30:26,790 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:30:26,802 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:30:26,829 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:30:29,657 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:30:47,117 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:30:47,118 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:30:47,118 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:30:47,118 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:30:47,118 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:30:47,119 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:30:47,119 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:30:47,131 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:30:47,156 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:30:47,156 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:30:47,157 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:30:47,171 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:30:47,194 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:30:49,540 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:31:06,884 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:31:06,884 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:31:06,885 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:31:06,885 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:31:06,885 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:31:06,885 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:31:06,885 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:31:06,897 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:31:06,923 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:31:06,923 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:31:06,923 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:31:06,937 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:31:06,961 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:31:09,363 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:31:26,474 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:31:26,474 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:31:26,474 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:31:26,474 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:31:26,474 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:31:26,474 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:31:26,474 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:31:26,486 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:31:26,510 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:31:26,511 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:31:26,511 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:31:26,541 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:31:26,568 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:31:29,068 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:31:46,417 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:31:46,417 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:31:46,417 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:31:46,417 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:31:46,417 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:31:46,418 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:31:46,418 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:31:46,429 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:31:46,456 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:31:46,456 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:31:46,456 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:31:46,468 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:31:46,501 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:31:48,989 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:32:10,972 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:32:10,973 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:32:10,973 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:32:10,973 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:32:10,973 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:32:10,973 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:32:10,973 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:32:10,985 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:32:11,009 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:32:11,009 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:32:11,010 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:32:11,024 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:32:11,046 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:32:13,655 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:32:30,900 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:32:30,901 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:32:30,901 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:32:30,901 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:32:30,902 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:32:30,902 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:32:30,902 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:32:30,914 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:32:30,938 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:32:30,939 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:32:30,939 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:32:30,952 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:32:30,974 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:32:36,351 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:32:53,850 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:32:53,851 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:32:53,851 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:32:53,851 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:32:53,851 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:32:53,852 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:32:53,852 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:32:53,863 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:32:53,888 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:32:53,888 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:32:53,888 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:32:53,902 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:32:53,930 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:32:56,345 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:33:13,820 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:33:13,821 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:33:13,821 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:33:13,821 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:33:13,822 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:33:13,822 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:33:13,822 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:33:13,834 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:33:13,858 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:33:13,858 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:33:13,859 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:33:13,872 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:33:13,894 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:33:16,353 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:33:33,677 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:33:33,677 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:33:33,678 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:33:33,678 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:33:33,678 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:33:33,678 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:33:33,678 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:33:33,690 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:33:33,718 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:33:33,718 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:33:33,718 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:33:33,732 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:33:33,758 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:33:36,261 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:33:53,704 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:33:53,704 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:33:53,704 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:33:53,704 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:33:53,705 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:33:53,705 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:33:53,705 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:33:53,715 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:33:53,741 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:33:53,742 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:33:53,742 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:33:53,768 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:33:53,792 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:33:56,133 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:34:13,818 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:34:13,818 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:34:13,819 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:34:13,819 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:34:13,819 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:34:13,819 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:34:13,819 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:34:13,832 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:34:13,858 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:34:13,859 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:34:13,859 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:34:13,873 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:34:13,895 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:34:16,799 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:34:33,977 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:34:33,977 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:34:33,977 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:34:33,978 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:34:33,978 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:34:33,978 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:34:33,978 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:34:33,990 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:34:34,017 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:34:34,017 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:34:34,018 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:34:34,031 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:34:34,064 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:34:36,685 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:34:54,212 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:34:54,213 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:34:54,213 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:34:54,213 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:34:54,213 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:34:54,214 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:34:54,214 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:34:54,226 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:34:54,251 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:34:54,252 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:34:54,252 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:34:54,266 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:34:54,291 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:34:56,844 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:35:14,254 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:35:14,255 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:35:14,255 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:35:14,256 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:35:14,256 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:35:14,256 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:35:14,256 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:35:14,268 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:35:14,294 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:35:14,294 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:35:14,294 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:35:14,309 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:35:14,332 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:35:17,156 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:35:34,307 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:35:34,307 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:35:34,307 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:35:34,308 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:35:34,308 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:35:34,308 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:35:34,308 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:35:34,319 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:35:34,347 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:35:34,347 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:35:34,347 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:35:34,360 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:35:34,384 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:35:37,441 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:35:54,894 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:35:54,894 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:35:54,894 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:35:54,894 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:35:54,895 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:35:54,895 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:35:54,895 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:35:54,906 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:35:54,932 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:35:54,932 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:35:54,933 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:35:54,947 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:35:54,970 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:35:57,403 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:36:14,610 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:36:14,611 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:36:14,611 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:36:14,611 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:36:14,611 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:36:14,611 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:36:14,612 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:36:14,623 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:36:14,650 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:36:14,652 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:36:14,652 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:36:14,666 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:36:14,692 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:36:17,080 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:36:34,325 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:36:34,326 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:36:34,326 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:36:34,326 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:36:34,326 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:36:34,326 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:36:34,327 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:36:34,340 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:36:34,367 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:36:34,367 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:36:34,367 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:36:34,387 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:36:34,414 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:36:37,115 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:36:54,298 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:36:54,298 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:36:54,298 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:36:54,298 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:36:54,298 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:36:54,299 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:36:54,299 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:36:54,310 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:36:54,339 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:36:54,339 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:36:54,339 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:36:54,355 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:36:54,382 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:36:56,887 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:37:14,285 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:37:14,285 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:37:14,285 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:37:14,286 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:37:14,286 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:37:14,286 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:37:14,286 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:37:14,299 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:37:14,325 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:37:14,325 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:37:14,325 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:37:14,339 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:37:14,362 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:37:16,756 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:37:33,875 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:37:33,875 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:37:33,875 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:37:33,876 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:37:33,876 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:37:33,876 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:37:33,876 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:37:33,889 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:37:33,914 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:37:33,914 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:37:33,915 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:37:33,930 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:37:33,955 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:37:36,475 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:37:53,588 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:37:53,588 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:37:53,589 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:37:53,589 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:37:53,589 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:37:53,589 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:37:53,589 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:37:53,602 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:37:53,628 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:37:53,628 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:37:53,628 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:37:53,642 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:37:53,665 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:37:56,072 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:38:13,417 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:38:13,417 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:38:13,418 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:38:13,418 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:38:13,418 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:38:13,418 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:38:13,418 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:38:13,429 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:38:13,455 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:38:13,456 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:38:13,456 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:38:13,469 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:38:13,493 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:38:15,867 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:38:33,090 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:38:33,091 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:38:33,091 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:38:33,091 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:38:33,091 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:38:33,091 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:38:33,092 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:38:33,103 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:38:33,131 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:38:33,132 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:38:33,132 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:38:33,144 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:38:33,168 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:38:35,575 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:38:52,753 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:38:52,754 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:38:52,754 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:38:52,754 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:38:52,754 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:38:52,754 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:38:52,754 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:38:52,766 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:38:52,789 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:38:52,790 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:38:52,790 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:38:52,805 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:38:52,833 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:38:55,273 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:39:12,786 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:39:12,787 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:39:12,787 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:39:12,787 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:39:12,787 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:39:12,787 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:39:12,787 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:39:12,800 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:39:12,826 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:39:12,827 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:39:12,827 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:39:12,840 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:39:12,863 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:39:15,451 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:39:32,673 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:39:32,674 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:39:32,674 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:39:32,674 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:39:32,674 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:39:32,674 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:39:32,675 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:39:32,686 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:39:32,712 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:39:32,713 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:39:32,713 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:39:32,726 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:39:32,753 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:39:35,084 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:39:52,275 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:39:52,276 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:39:52,276 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:39:52,276 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:39:52,276 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:39:52,276 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:39:52,277 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:39:52,288 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:39:52,314 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:39:52,314 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:39:52,315 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:39:52,328 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:39:52,357 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:39:54,740 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:40:11,837 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:40:11,837 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:40:11,837 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:40:11,837 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:40:11,838 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:40:11,838 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:40:11,838 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:40:11,850 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:40:11,874 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:40:11,875 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:40:11,875 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:40:11,889 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:40:11,918 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:40:14,279 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:40:31,646 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:40:31,646 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:40:31,646 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:40:31,646 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:40:31,647 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:40:31,647 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:40:31,647 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:40:31,658 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:40:31,684 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:40:31,685 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:40:31,685 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:40:31,697 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:40:31,721 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:40:36,975 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:40:54,079 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:40:54,080 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:40:54,080 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:40:54,080 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:40:54,080 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:40:54,080 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:40:54,081 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:40:54,092 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:40:54,116 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:40:54,116 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:40:54,116 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:40:54,131 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:40:54,152 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:40:56,486 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:41:29,328 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:41:29,329 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:41:29,329 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:41:29,329 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:41:29,330 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:41:29,330 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:41:29,330 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:41:29,341 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:41:29,365 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:41:29,366 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:41:29,366 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:41:29,382 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:41:29,409 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:41:31,827 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:41:49,196 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:41:49,196 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:41:49,196 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:41:49,197 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:41:49,197 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:41:49,197 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:41:49,197 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:41:49,209 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:41:49,241 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:41:49,241 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:41:49,241 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:41:49,261 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:41:49,289 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:41:51,877 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:42:09,292 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:42:09,292 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:42:09,292 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:42:09,292 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:42:09,293 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:42:09,293 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:42:09,293 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:42:09,304 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:42:09,332 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:42:09,332 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:42:09,332 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:42:09,345 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:42:09,381 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:42:11,919 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:42:29,777 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:42:29,777 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:42:29,777 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:42:29,778 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:42:29,778 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:42:29,778 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:42:29,778 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:42:29,791 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:42:29,816 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:42:29,817 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:42:29,817 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:42:29,841 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:42:29,868 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:42:32,243 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:42:49,647 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:42:49,647 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:42:49,647 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:42:49,647 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:42:49,648 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:42:49,648 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:42:49,648 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:42:49,659 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:42:49,685 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:42:49,686 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:42:49,686 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:42:49,697 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:42:49,727 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:42:52,273 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:43:09,840 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:43:09,841 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:43:09,841 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:43:09,841 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:43:09,841 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:43:09,842 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:43:09,842 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:43:09,853 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:43:09,876 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:43:09,877 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:43:09,877 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:43:09,890 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:43:09,912 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:43:12,551 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:43:29,707 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:43:29,708 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:43:29,708 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:43:29,708 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:43:29,708 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:43:29,709 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:43:29,709 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:43:29,720 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:43:29,746 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:43:29,747 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:43:29,747 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:43:29,758 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:43:29,783 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:43:32,269 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:43:49,711 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:43:49,711 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:43:49,712 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:43:49,712 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:43:49,712 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:43:49,712 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:43:49,712 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:43:49,723 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:43:49,750 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:43:49,750 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:43:49,751 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:43:49,765 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:43:49,788 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:43:52,163 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:44:10,609 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:44:10,610 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:44:10,610 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:44:10,610 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:44:10,610 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:44:10,610 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:44:10,611 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:44:10,622 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:44:10,649 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:44:10,650 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:44:10,650 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:44:10,662 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:44:10,686 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:44:13,102 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:44:32,061 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:44:32,062 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:44:32,062 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:44:32,062 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:44:32,062 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:44:32,062 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:44:32,062 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:44:32,074 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:44:32,111 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:44:32,112 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:44:32,112 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:44:32,124 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:44:32,153 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:44:34,522 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:44:51,759 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:44:51,759 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:44:51,760 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:44:51,760 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:44:51,760 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:44:51,760 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:44:51,760 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:44:51,772 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:44:51,804 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:44:51,805 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:44:51,805 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:44:51,817 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:44:51,849 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:44:54,289 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:45:11,551 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:45:11,551 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:45:11,551 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:45:11,552 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:45:11,552 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:45:11,552 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:45:11,552 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:45:11,563 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:45:11,589 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:45:11,589 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:45:11,589 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:45:11,603 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:45:11,629 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:45:14,072 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:45:31,377 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:45:31,378 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:45:31,378 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:45:31,378 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:45:31,378 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:45:31,378 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:45:31,379 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:45:31,389 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:45:31,414 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:45:31,414 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:45:31,415 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:45:31,428 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:45:31,456 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:45:34,091 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:45:51,264 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:45:51,264 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:45:51,264 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:45:51,265 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:45:51,265 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:45:51,265 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:45:51,265 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:45:51,277 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:45:51,302 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:45:51,302 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:45:51,303 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:45:51,318 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:45:51,346 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:45:53,845 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:46:11,516 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:46:11,516 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:46:11,516 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:46:11,516 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:46:11,517 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:46:11,517 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:46:11,517 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:46:11,531 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:46:11,557 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:46:11,558 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:46:11,558 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:46:11,572 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:46:11,600 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:46:13,954 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:46:31,300 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:46:31,300 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:46:31,300 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:46:31,300 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:46:31,300 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:46:31,300 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:46:31,300 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:46:31,313 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:46:31,338 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:46:31,339 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:46:31,339 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:46:31,357 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:46:31,381 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:46:33,914 > code_update_check 함수에 들어왔습니다.
[DEBUG|open_api.py:303] 2021-02-03 16:46:54,621 > connected
[DEBUG|open_api.py:244] 2021-02-03 16:46:54,621 > account_info 함수에 들어왔습니다!
[DEBUG|open_api.py:251] 2021-02-03 16:46:54,622 > get_login_info 함수에 들어왔습니다!
[DEBUG|open_api.py:247] 2021-02-03 16:46:54,622 > 계좌번호 : 8152079011
[DEBUG|open_api.py:160] 2021-02-03 16:46:54,622 > variable_setting 함수에 들어왔다.
[DEBUG|open_api.py:174] 2021-02-03 16:46:54,622 > 모의투자 1!!
[DEBUG|open_api.py:207] 2021-02-03 16:46:54,622 > db name !!! : JackBot1_imi1
[DEBUG|open_api.py:198] 2021-02-03 16:46:54,634 > JackBot1_imi1 데이터 베이스가 존재한다! 
[DEBUG|open_api.py:76] 2021-02-03 16:46:54,660 > self.sf.simul_num(알고리즘 번호) : 1
[DEBUG|open_api.py:77] 2021-02-03 16:46:54,661 > self.sf.db_to_realtime_daily_buy_list_num : 1
[DEBUG|open_api.py:78] 2021-02-03 16:46:54,661 > self.sf.sell_list_num : 1
[DEBUG|open_api.py:84] 2021-02-03 16:46:54,674 > setting_data db 존재한다!!!
[DEBUG|open_api.py:99] 2021-02-03 16:46:54,701 > get_invest_unit 함수에 들어왔습니다!
[DEBUG|collector_api.py:38] 2021-02-03 16:46:57,243 > code_update_check 함수에 들어왔습니다.
